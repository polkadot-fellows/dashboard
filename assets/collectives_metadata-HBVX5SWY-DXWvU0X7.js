var A="bWV0YQ8dCAAMHHNwX2NvcmUYY3J5cHRvLEFjY291bnRJZDMyAAAEAAQBIFt1ODsgMzJdAAAEAAADIAAAAAgACAAABQMADAgwZnJhbWVfc3lzdGVtLEFjY291bnRJbmZvCBROb25jZQEQLEFjY291bnREYXRhARQAFAEUbm9uY2UQARROb25jZQABJGNvbnN1bWVycxABIFJlZkNvdW50AAEkcHJvdmlkZXJzEAEgUmVmQ291bnQAASxzdWZmaWNpZW50cxABIFJlZkNvdW50AAEQZGF0YRQBLEFjY291bnREYXRhAAAQAAAFBQAUDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMsQWNjb3VudERhdGEEHEJhbGFuY2UBGAAQARBmcmVlGAEcQmFsYW5jZQABIHJlc2VydmVkGAEcQmFsYW5jZQABGGZyb3plbhgBHEJhbGFuY2UAARRmbGFncxwBKEV4dHJhRmxhZ3MAABgAAAUHABwMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyhFeHRyYUZsYWdzAAAEABgBEHUxMjgAACAMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAEkAAwBGG5vcm1hbCQBBFQAASxvcGVyYXRpb25hbCQBBFQAASRtYW5kYXRvcnkkAQRUAAAkDChzcF93ZWlnaHRzJHdlaWdodF92MhhXZWlnaHQAAAgBIHJlZl90aW1lKAEMdTY0AAEocHJvb2Zfc2l6ZSgBDHU2NAAAKAAABiwALAAABQYAMAg8cHJpbWl0aXZlX3R5cGVzEEgyNTYAAAQABAEgW3U4OyAzMl0AADQAAAIIADgQKHNwX3J1bnRpbWUcZ2VuZXJpYxhkaWdlc3QYRGlnZXN0AAAEARBsb2dzPAE8VmVjPERpZ2VzdEl0ZW0+AAA8AAACQABAEChzcF9ydW50aW1lHGdlbmVyaWMYZGlnZXN0KERpZ2VzdEl0ZW0AARQoUHJlUnVudGltZQgARAFEQ29uc2Vuc3VzRW5naW5lSWQAADQBHFZlYzx1OD4ABgAkQ29uc2Vuc3VzCABEAURDb25zZW5zdXNFbmdpbmVJZAAANAEcVmVjPHU4PgAEABBTZWFsCABEAURDb25zZW5zdXNFbmdpbmVJZAAANAEcVmVjPHU4PgAFABRPdGhlcgQANAEcVmVjPHU4PgAAAGRSdW50aW1lRW52aXJvbm1lbnRVcGRhdGVkAAgAAEQAAAMEAAAACABIAAACTABMCDBmcmFtZV9zeXN0ZW0sRXZlbnRSZWNvcmQIBEUBUARUATAADAEUcGhhc2VFBAEUUGhhc2UAARRldmVudFABBEUAARh0b3BpY3O1AwEYVmVjPFQ+AABQCHBjb2xsZWN0aXZlc19wb2xrYWRvdF9ydW50aW1lMFJ1bnRpbWVFdmVudAABcBhTeXN0ZW0EAFQBcGZyYW1lX3N5c3RlbTo6RXZlbnQ8UnVudGltZT4AAAA8UGFyYWNoYWluU3lzdGVtBAB8AbxjdW11bHVzX3BhbGxldF9wYXJhY2hhaW5fc3lzdGVtOjpFdmVudDxSdW50aW1lPgABACBCYWxhbmNlcwQAhAF8cGFsbGV0X2JhbGFuY2VzOjpFdmVudDxSdW50aW1lPgAKAEhUcmFuc2FjdGlvblBheW1lbnQEAIwBqHBhbGxldF90cmFuc2FjdGlvbl9wYXltZW50OjpFdmVudDxSdW50aW1lPgALAERDb2xsYXRvclNlbGVjdGlvbgQAkAGkcGFsbGV0X2NvbGxhdG9yX3NlbGVjdGlvbjo6RXZlbnQ8UnVudGltZT4AFQAcU2Vzc2lvbgQAmAFUcGFsbGV0X3Nlc3Npb246OkV2ZW50ABYAJFhjbXBRdWV1ZQQAnAGkY3VtdWx1c19wYWxsZXRfeGNtcF9xdWV1ZTo6RXZlbnQ8UnVudGltZT4AHgAsUG9sa2Fkb3RYY20EAKABaHBhbGxldF94Y206OkV2ZW50PFJ1bnRpbWU+AB8AKEN1bXVsdXNYY20EAM0BAYhjdW11bHVzX3BhbGxldF94Y206OkV2ZW50PFJ1bnRpbWU+ACAAME1lc3NhZ2VRdWV1ZQQA0QEBkHBhbGxldF9tZXNzYWdlX3F1ZXVlOjpFdmVudDxSdW50aW1lPgAiABxVdGlsaXR5BADhAQFUcGFsbGV0X3V0aWxpdHk6OkV2ZW50ACgAIE11bHRpc2lnBADtAQF8cGFsbGV0X211bHRpc2lnOjpFdmVudDxSdW50aW1lPgApABRQcm94eQQA9QEBcHBhbGxldF9wcm94eTo6RXZlbnQ8UnVudGltZT4AKgAgUHJlaW1hZ2UEAAECAXxwYWxsZXRfcHJlaW1hZ2U6OkV2ZW50PFJ1bnRpbWU+ACsAJFNjaGVkdWxlcgQABQIBgHBhbGxldF9zY2hlZHVsZXI6OkV2ZW50PFJ1bnRpbWU+ACwAJEFzc2V0UmF0ZQQADQIBhHBhbGxldF9hc3NldF9yYXRlOjpFdmVudDxSdW50aW1lPgAtACBBbGxpYW5jZQQAGQIBfHBhbGxldF9hbGxpYW5jZTo6RXZlbnQ8UnVudGltZT4AMgA4QWxsaWFuY2VNb3Rpb24EAEECAfxwYWxsZXRfY29sbGVjdGl2ZTo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X2NvbGxlY3RpdmU6Okluc3RhbmNlMT4AMwBQRmVsbG93c2hpcENvbGxlY3RpdmUEAEUCATkBcGFsbGV0X3JhbmtlZF9jb2xsZWN0aXZlOjpFdmVudDxSdW50aW1lLCBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmU6OgpJbnN0YW5jZTE+ADwATEZlbGxvd3NoaXBSZWZlcmVuZGEEAFECAfRwYWxsZXRfcmVmZXJlbmRhOjpFdmVudDxSdW50aW1lLCBwYWxsZXRfcmVmZXJlbmRhOjpJbnN0YW5jZTE+AD0AOEZlbGxvd3NoaXBDb3JlBAAdBAEpAXBhbGxldF9jb3JlX2ZlbGxvd3NoaXA6OkV2ZW50PFJ1bnRpbWUsIHBhbGxldF9jb3JlX2ZlbGxvd3NoaXA6Okluc3RhbmNlMQo+AD8AQEZlbGxvd3NoaXBTYWxhcnkEACUEAdxwYWxsZXRfc2FsYXJ5OjpFdmVudDxSdW50aW1lLCBwYWxsZXRfc2FsYXJ5OjpJbnN0YW5jZTE+AEAASEZlbGxvd3NoaXBUcmVhc3VyeQQAKQQB7HBhbGxldF90cmVhc3VyeTo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X3RyZWFzdXJ5OjpJbnN0YW5jZTE+AEEAUEFtYmFzc2Fkb3JDb2xsZWN0aXZlBAAtBAE5AXBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZTo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X3JhbmtlZF9jb2xsZWN0aXZlOjoKSW5zdGFuY2UyPgBGAExBbWJhc3NhZG9yUmVmZXJlbmRhBAA1BAH0cGFsbGV0X3JlZmVyZW5kYTo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X3JlZmVyZW5kYTo6SW5zdGFuY2UyPgBHADhBbWJhc3NhZG9yQ29yZQQAOQQBKQFwYWxsZXRfY29yZV9mZWxsb3dzaGlwOjpFdmVudDxSdW50aW1lLCBwYWxsZXRfY29yZV9mZWxsb3dzaGlwOjpJbnN0YW5jZTIKPgBJAEBBbWJhc3NhZG9yU2FsYXJ5BAA9BAHccGFsbGV0X3NhbGFyeTo6RXZlbnQ8UnVudGltZSwgcGFsbGV0X3NhbGFyeTo6SW5zdGFuY2UyPgBKAEhBbWJhc3NhZG9yVHJlYXN1cnkEAEEEAexwYWxsZXRfdHJlYXN1cnk6OkV2ZW50PFJ1bnRpbWUsIHBhbGxldF90cmVhc3VyeTo6SW5zdGFuY2UyPgBLAABUDDBmcmFtZV9zeXN0ZW0YcGFsbGV0FEV2ZW50BARUAAEcQEV4dHJpbnNpY1N1Y2Nlc3MEATRkaXNwYXRjaF9pbmZvWAEwRGlzcGF0Y2hJbmZvAAAEkEFuIGV4dHJpbnNpYyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5LjxFeHRyaW5zaWNGYWlsZWQIAThkaXNwYXRjaF9lcnJvcmQBNERpc3BhdGNoRXJyb3IAATRkaXNwYXRjaF9pbmZvWAEwRGlzcGF0Y2hJbmZvAAEEUEFuIGV4dHJpbnNpYyBmYWlsZWQuLENvZGVVcGRhdGVkAAIEUGA6Y29kZWAgd2FzIHVwZGF0ZWQuKE5ld0FjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAMEaEEgbmV3IGFjY291bnQgd2FzIGNyZWF0ZWQuNEtpbGxlZEFjY291bnQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAQEWEFuIGFjY291bnQgd2FzIHJlYXBlZC4gUmVtYXJrZWQIARhzZW5kZXIAATBUOjpBY2NvdW50SWQAARBoYXNoMAEcVDo6SGFzaAAFBHBPbiBvbi1jaGFpbiByZW1hcmsgaGFwcGVuZWQuRFVwZ3JhZGVBdXRob3JpemVkCAEkY29kZV9oYXNoMAEcVDo6SGFzaAABNGNoZWNrX3ZlcnNpb254ARBib29sAAYEaEFuIHVwZ3JhZGUgd2FzIGF1dGhvcml6ZWQuBHBFdmVudCBmb3IgdGhlIFN5c3RlbSBwYWxsZXQuWAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaDBEaXNwYXRjaEluZm8AAAwBGHdlaWdodCQBGFdlaWdodAABFGNsYXNzXAE0RGlzcGF0Y2hDbGFzcwABIHBheXNfZmVlYAEQUGF5cwAAXAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaDREaXNwYXRjaENsYXNzAAEMGE5vcm1hbAAAACxPcGVyYXRpb25hbAABACRNYW5kYXRvcnkAAgAAYAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaBBQYXlzAAEIDFllcwAAAAhObwABAABkCChzcF9ydW50aW1lNERpc3BhdGNoRXJyb3IAATgUT3RoZXIAAAAwQ2Fubm90TG9va3VwAAEAJEJhZE9yaWdpbgACABhNb2R1bGUEAGgBLE1vZHVsZUVycm9yAAMARENvbnN1bWVyUmVtYWluaW5nAAQALE5vUHJvdmlkZXJzAAUAQFRvb01hbnlDb25zdW1lcnMABgAUVG9rZW4EAGwBKFRva2VuRXJyb3IABwAoQXJpdGhtZXRpYwQAcAE8QXJpdGhtZXRpY0Vycm9yAAgANFRyYW5zYWN0aW9uYWwEAHQBSFRyYW5zYWN0aW9uYWxFcnJvcgAJACRFeGhhdXN0ZWQACgAoQ29ycnVwdGlvbgALACxVbmF2YWlsYWJsZQAMADhSb290Tm90QWxsb3dlZAANAABoCChzcF9ydW50aW1lLE1vZHVsZUVycm9yAAAIARRpbmRleAgBCHU4AAEUZXJyb3JEAYxbdTg7IE1BWF9NT0RVTEVfRVJST1JfRU5DT0RFRF9TSVpFXQAAbAgoc3BfcnVudGltZShUb2tlbkVycm9yAAEoQEZ1bmRzVW5hdmFpbGFibGUAAAAwT25seVByb3ZpZGVyAAEAMEJlbG93TWluaW11bQACADBDYW5ub3RDcmVhdGUAAwAwVW5rbm93bkFzc2V0AAQAGEZyb3plbgAFACxVbnN1cHBvcnRlZAAGAEBDYW5ub3RDcmVhdGVIb2xkAAcANE5vdEV4cGVuZGFibGUACAAcQmxvY2tlZAAJAABwCDRzcF9hcml0aG1ldGljPEFyaXRobWV0aWNFcnJvcgABDCRVbmRlcmZsb3cAAAAgT3ZlcmZsb3cAAQA4RGl2aXNpb25CeVplcm8AAgAAdAgoc3BfcnVudGltZUhUcmFuc2FjdGlvbmFsRXJyb3IAAQgwTGltaXRSZWFjaGVkAAAAHE5vTGF5ZXIAAQAAeAAABQAAfAx8Y3VtdWx1c19wYWxsZXRfcGFyYWNoYWluX3N5c3RlbRhwYWxsZXQURXZlbnQEBFQAARhgVmFsaWRhdGlvbkZ1bmN0aW9uU3RvcmVkAAAE0FRoZSB2YWxpZGF0aW9uIGZ1bmN0aW9uIGhhcyBiZWVuIHNjaGVkdWxlZCB0byBhcHBseS5kVmFsaWRhdGlvbkZ1bmN0aW9uQXBwbGllZAQBVHJlbGF5X2NoYWluX2Jsb2NrX251bRABVFJlbGF5Q2hhaW5CbG9ja051bWJlcgABBEUBVGhlIHZhbGlkYXRpb24gZnVuY3Rpb24gd2FzIGFwcGxpZWQgYXMgb2YgdGhlIGNvbnRhaW5lZCByZWxheSBjaGFpbiBibG9jayBudW1iZXIubFZhbGlkYXRpb25GdW5jdGlvbkRpc2NhcmRlZAACBLBUaGUgcmVsYXktY2hhaW4gYWJvcnRlZCB0aGUgdXBncmFkZSBwcm9jZXNzLmBEb3dud2FyZE1lc3NhZ2VzUmVjZWl2ZWQEARRjb3VudBABDHUzMgADBAEBU29tZSBkb3dud2FyZCBtZXNzYWdlcyBoYXZlIGJlZW4gcmVjZWl2ZWQgYW5kIHdpbGwgYmUgcHJvY2Vzc2VkLmREb3dud2FyZE1lc3NhZ2VzUHJvY2Vzc2VkCAEsd2VpZ2h0X3VzZWQkARhXZWlnaHQAASBkbXFfaGVhZDABRHJlbGF5X2NoYWluOjpIYXNoAAQE4ERvd253YXJkIG1lc3NhZ2VzIHdlcmUgcHJvY2Vzc2VkIHVzaW5nIHRoZSBnaXZlbiB3ZWlnaHQuRFVwd2FyZE1lc3NhZ2VTZW50BAEwbWVzc2FnZV9oYXNogAE8T3B0aW9uPFhjbUhhc2g+AAUEuEFuIHVwd2FyZCBtZXNzYWdlIHdhcyBzZW50IHRvIHRoZSByZWxheSBjaGFpbi4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSABBhPcHRpb24EBFQBBAEIEE5vbmUAAAAQU29tZQQABAAAAQAAhAw8cGFsbGV0X2JhbGFuY2VzGHBhbGxldBRFdmVudAgEVAAESQABWBxFbmRvd2VkCAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAABMGZyZWVfYmFsYW5jZRgBKFQ6OkJhbGFuY2UAAAS4QW4gYWNjb3VudCB3YXMgY3JlYXRlZCB3aXRoIHNvbWUgZnJlZSBiYWxhbmNlLiBEdXN0TG9zdAgBHGFjY291bnQAATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAEIPQFBbiBhY2NvdW50IHdhcyByZW1vdmVkIHdob3NlIGJhbGFuY2Ugd2FzIG5vbi16ZXJvIGJ1dCBiZWxvdyBFeGlzdGVudGlhbERlcG9zaXQseHJlc3VsdGluZyBpbiBhbiBvdXRyaWdodCBsb3NzLiBUcmFuc2ZlcgwBEGZyb20AATBUOjpBY2NvdW50SWQAAQh0bwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAAgRMVHJhbnNmZXIgc3VjY2VlZGVkLihCYWxhbmNlU2V0CAEMd2hvAAEwVDo6QWNjb3VudElkAAEQZnJlZRgBKFQ6OkJhbGFuY2UAAwRoQSBiYWxhbmNlIHdhcyBzZXQgYnkgcm9vdC4gUmVzZXJ2ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAQE4FNvbWUgYmFsYW5jZSB3YXMgcmVzZXJ2ZWQgKG1vdmVkIGZyb20gZnJlZSB0byByZXNlcnZlZCkuKFVucmVzZXJ2ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAUE6FNvbWUgYmFsYW5jZSB3YXMgdW5yZXNlcnZlZCAobW92ZWQgZnJvbSByZXNlcnZlZCB0byBmcmVlKS5IUmVzZXJ2ZVJlcGF0cmlhdGVkEAEQZnJvbQABMFQ6OkFjY291bnRJZAABCHRvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQABSGRlc3RpbmF0aW9uX3N0YXR1c4gBGFN0YXR1cwAGCE0BU29tZSBiYWxhbmNlIHdhcyBtb3ZlZCBmcm9tIHRoZSByZXNlcnZlIG9mIHRoZSBmaXJzdCBhY2NvdW50IHRvIHRoZSBzZWNvbmQgYWNjb3VudC7YRmluYWwgYXJndW1lbnQgaW5kaWNhdGVzIHRoZSBkZXN0aW5hdGlvbiBiYWxhbmNlIHR5cGUuHERlcG9zaXQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAcE2FNvbWUgYW1vdW50IHdhcyBkZXBvc2l0ZWQgKGUuZy4gZm9yIHRyYW5zYWN0aW9uIGZlZXMpLiBXaXRoZHJhdwgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UACAQdAVNvbWUgYW1vdW50IHdhcyB3aXRoZHJhd24gZnJvbSB0aGUgYWNjb3VudCAoZS5nLiBmb3IgdHJhbnNhY3Rpb24gZmVlcykuHFNsYXNoZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAkEAQFTb21lIGFtb3VudCB3YXMgcmVtb3ZlZCBmcm9tIHRoZSBhY2NvdW50IChlLmcuIGZvciBtaXNiZWhhdmlvcikuGE1pbnRlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UACgScU29tZSBhbW91bnQgd2FzIG1pbnRlZCBpbnRvIGFuIGFjY291bnQuGEJ1cm5lZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UACwScU29tZSBhbW91bnQgd2FzIGJ1cm5lZCBmcm9tIGFuIGFjY291bnQuJFN1c3BlbmRlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UADAQVAVNvbWUgYW1vdW50IHdhcyBzdXNwZW5kZWQgZnJvbSBhbiBhY2NvdW50IChpdCBjYW4gYmUgcmVzdG9yZWQgbGF0ZXIpLiBSZXN0b3JlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UADQSkU29tZSBhbW91bnQgd2FzIHJlc3RvcmVkIGludG8gYW4gYWNjb3VudC4gVXBncmFkZWQEAQx3aG8AATBUOjpBY2NvdW50SWQADgRgQW4gYWNjb3VudCB3YXMgdXBncmFkZWQuGElzc3VlZAQBGGFtb3VudBgBKFQ6OkJhbGFuY2UADwQtAVRvdGFsIGlzc3VhbmNlIHdhcyBpbmNyZWFzZWQgYnkgYGFtb3VudGAsIGNyZWF0aW5nIGEgY3JlZGl0IHRvIGJlIGJhbGFuY2VkLiRSZXNjaW5kZWQEARhhbW91bnQYAShUOjpCYWxhbmNlABAEJQFUb3RhbCBpc3N1YW5jZSB3YXMgZGVjcmVhc2VkIGJ5IGBhbW91bnRgLCBjcmVhdGluZyBhIGRlYnQgdG8gYmUgYmFsYW5jZWQuGExvY2tlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAEQRgU29tZSBiYWxhbmNlIHdhcyBsb2NrZWQuIFVubG9ja2VkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQASBGhTb21lIGJhbGFuY2Ugd2FzIHVubG9ja2VkLhhGcm96ZW4IAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlABMEYFNvbWUgYmFsYW5jZSB3YXMgZnJvemVuLhhUaGF3ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlABQEYFNvbWUgYmFsYW5jZSB3YXMgdGhhd2VkLkxUb3RhbElzc3VhbmNlRm9yY2VkCAEMb2xkGAEoVDo6QmFsYW5jZQABDG5ldxgBKFQ6OkJhbGFuY2UAFQSsVGhlIGBUb3RhbElzc3VhbmNlYCB3YXMgZm9yY2VmdWxseSBjaGFuZ2VkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldIgUNGZyYW1lX3N1cHBvcnQYdHJhaXRzGHRva2VucxBtaXNjNEJhbGFuY2VTdGF0dXMAAQgQRnJlZQAAACBSZXNlcnZlZAABAACMDGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudBhwYWxsZXQURXZlbnQEBFQAAQRIVHJhbnNhY3Rpb25GZWVQYWlkDAEMd2hvAAEwVDo6QWNjb3VudElkAAEoYWN0dWFsX2ZlZRgBMEJhbGFuY2VPZjxUPgABDHRpcBgBMEJhbGFuY2VPZjxUPgAACFkBQSB0cmFuc2FjdGlvbiBmZWUgYGFjdHVhbF9mZWVgLCBvZiB3aGljaCBgdGlwYCB3YXMgYWRkZWQgdG8gdGhlIG1pbmltdW0gaW5jbHVzaW9uIGZlZSxcaGFzIGJlZW4gcGFpZCBieSBgd2hvYC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSQDGRwYWxsZXRfY29sbGF0b3Jfc2VsZWN0aW9uGHBhbGxldBRFdmVudAQEVAABKEBOZXdJbnZ1bG5lcmFibGVzBAE0aW52dWxuZXJhYmxlc5QBRFZlYzxUOjpBY2NvdW50SWQ+AAAEbE5ldyBJbnZ1bG5lcmFibGVzIHdlcmUgc2V0LkRJbnZ1bG5lcmFibGVBZGRlZAQBKGFjY291bnRfaWQAATBUOjpBY2NvdW50SWQAAQR0QSBuZXcgSW52dWxuZXJhYmxlIHdhcyBhZGRlZC5MSW52dWxuZXJhYmxlUmVtb3ZlZAQBKGFjY291bnRfaWQAATBUOjpBY2NvdW50SWQAAgRwQW4gSW52dWxuZXJhYmxlIHdhcyByZW1vdmVkLlBOZXdEZXNpcmVkQ2FuZGlkYXRlcwQBSGRlc2lyZWRfY2FuZGlkYXRlcxABDHUzMgADBKRUaGUgbnVtYmVyIG9mIGRlc2lyZWQgY2FuZGlkYXRlcyB3YXMgc2V0LkBOZXdDYW5kaWRhY3lCb25kBAEsYm9uZF9hbW91bnQYATBCYWxhbmNlT2Y8VD4ABARsVGhlIGNhbmRpZGFjeSBib25kIHdhcyBzZXQuOENhbmRpZGF0ZUFkZGVkCAEoYWNjb3VudF9pZAABMFQ6OkFjY291bnRJZAABHGRlcG9zaXQYATBCYWxhbmNlT2Y8VD4ABQRcQSBuZXcgY2FuZGlkYXRlIGpvaW5lZC5QQ2FuZGlkYXRlQm9uZFVwZGF0ZWQIAShhY2NvdW50X2lkAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgAGBHBCb25kIG9mIGEgY2FuZGlkYXRlIHVwZGF0ZWQuQENhbmRpZGF0ZVJlbW92ZWQEAShhY2NvdW50X2lkAAEwVDo6QWNjb3VudElkAAcEYEEgY2FuZGlkYXRlIHdhcyByZW1vdmVkLkRDYW5kaWRhdGVSZXBsYWNlZAwBDG9sZAABMFQ6OkFjY291bnRJZAABDG5ldwABMFQ6OkFjY291bnRJZAABHGRlcG9zaXQYATBCYWxhbmNlT2Y8VD4ACAT0QW4gYWNjb3VudCB3YXMgcmVwbGFjZWQgaW4gdGhlIGNhbmRpZGF0ZSBsaXN0IGJ5IGFub3RoZXIgb25lLmhJbnZhbGlkSW52dWxuZXJhYmxlU2tpcHBlZAQBKGFjY291bnRfaWQAATBUOjpBY2NvdW50SWQACQhVAUFuIGFjY291bnQgd2FzIHVuYWJsZSB0byBiZSBhZGRlZCB0byB0aGUgSW52dWxuZXJhYmxlcyBiZWNhdXNlIHRoZXkgZGlkIG5vdCBoYXZlIGtleXPIcmVnaXN0ZXJlZC4gT3RoZXIgSW52dWxuZXJhYmxlcyBtYXkgaGF2ZSBiZWVuIHNldC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSUAAACAACYDDhwYWxsZXRfc2Vzc2lvbhhwYWxsZXQURXZlbnQAAQQoTmV3U2Vzc2lvbgQBNHNlc3Npb25faW5kZXgQATBTZXNzaW9uSW5kZXgAAAg5AU5ldyBzZXNzaW9uIGhhcyBoYXBwZW5lZC4gTm90ZSB0aGF0IHRoZSBhcmd1bWVudCBpcyB0aGUgc2Vzc2lvbiBpbmRleCwgbm90IHRoZZxibG9jayBudW1iZXIgYXMgdGhlIHR5cGUgbWlnaHQgc3VnZ2VzdC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXScDGRjdW11bHVzX3BhbGxldF94Y21wX3F1ZXVlGHBhbGxldBRFdmVudAQEVAABBDxYY21wTWVzc2FnZVNlbnQEATBtZXNzYWdlX2hhc2gEARxYY21IYXNoAAAEwEFuIEhSTVAgbWVzc2FnZSB3YXMgc2VudCB0byBhIHNpYmxpbmcgcGFyYWNoYWluLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldKAMKHBhbGxldF94Y20YcGFsbGV0FEV2ZW50BARUAAFgJEF0dGVtcHRlZAQBHG91dGNvbWWkAVB4Y206OmxhdGVzdDo6T3V0Y29tZQAABKhFeGVjdXRpb24gb2YgYW4gWENNIG1lc3NhZ2Ugd2FzIGF0dGVtcHRlZC4QU2VudBABGG9yaWdpbqwBIExvY2F0aW9uAAEsZGVzdGluYXRpb26sASBMb2NhdGlvbgABHG1lc3NhZ2X0ARxYY208KCk+AAEobWVzc2FnZV9pZAQBHFhjbUhhc2gAAQRcQSBYQ00gbWVzc2FnZSB3YXMgc2VudC5IVW5leHBlY3RlZFJlc3BvbnNlCAEYb3JpZ2lurAEgTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQAAgxZAVF1ZXJ5IHJlc3BvbnNlIHJlY2VpdmVkIHdoaWNoIGRvZXMgbm90IG1hdGNoIGEgcmVnaXN0ZXJlZCBxdWVyeS4gVGhpcyBtYXkgYmUgYmVjYXVzZSBhVQFtYXRjaGluZyBxdWVyeSB3YXMgbmV2ZXIgcmVnaXN0ZXJlZCwgaXQgbWF5IGJlIGJlY2F1c2UgaXQgaXMgYSBkdXBsaWNhdGUgcmVzcG9uc2UsIG9ycGJlY2F1c2UgdGhlIHF1ZXJ5IHRpbWVkIG91dC40UmVzcG9uc2VSZWFkeQgBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABIHJlc3BvbnNlIQEBIFJlc3BvbnNlAAMIXQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgaXMgcmVhZHkgZm9yIHRha2luZyB3aXRoIGB0YWtlX3Jlc3BvbnNlYC4gVGhlcmUgaXOAbm8gcmVnaXN0ZXJlZCBub3RpZmljYXRpb24gY2FsbC4gTm90aWZpZWQMASBxdWVyeV9pZCwBHFF1ZXJ5SWQAATBwYWxsZXRfaW5kZXgIAQh1OAABKGNhbGxfaW5kZXgIAQh1OAAECFkBUXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYW5kIHF1ZXJ5IGlzIHJlbW92ZWQuIFRoZSByZWdpc3RlcmVkIG5vdGlmaWNhdGlvbiBoYXOoYmVlbiBkaXNwYXRjaGVkIGFuZCBleGVjdXRlZCBzdWNjZXNzZnVsbHkuQE5vdGlmeU92ZXJ3ZWlnaHQUASBxdWVyeV9pZCwBHFF1ZXJ5SWQAATBwYWxsZXRfaW5kZXgIAQh1OAABKGNhbGxfaW5kZXgIAQh1OAABNGFjdHVhbF93ZWlnaHQkARhXZWlnaHQAAUxtYXhfYnVkZ2V0ZWRfd2VpZ2h0JAEYV2VpZ2h0AAUMSQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgcXVlcnkgaXMgcmVtb3ZlZC4gVGhlIHJlZ2lzdGVyZWQgbm90aWZpY2F0aW9uWQFjb3VsZCBub3QgYmUgZGlzcGF0Y2hlZCBiZWNhdXNlIHRoZSBkaXNwYXRjaCB3ZWlnaHQgaXMgZ3JlYXRlciB0aGFuIHRoZSBtYXhpbXVtIHdlaWdodORvcmlnaW5hbGx5IGJ1ZGdldGVkIGJ5IHRoaXMgcnVudGltZSBmb3IgdGhlIHF1ZXJ5IHJlc3VsdC5MTm90aWZ5RGlzcGF0Y2hFcnJvcgwBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABMHBhbGxldF9pbmRleAgBCHU4AAEoY2FsbF9pbmRleAgBCHU4AAYIVQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgcXVlcnkgaXMgcmVtb3ZlZC4gVGhlcmUgd2FzIGEgZ2VuZXJhbCBlcnJvciB3aXRoiGRpc3BhdGNoaW5nIHRoZSBub3RpZmljYXRpb24gY2FsbC5ITm90aWZ5RGVjb2RlRmFpbGVkDAEgcXVlcnlfaWQsARxRdWVyeUlkAAEwcGFsbGV0X2luZGV4CAEIdTgAAShjYWxsX2luZGV4CAEIdTgABwxRAVF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGFuZCBxdWVyeSBpcyByZW1vdmVkLiBUaGUgZGlzcGF0Y2ggd2FzIHVuYWJsZSB0byBiZVkBZGVjb2RlZCBpbnRvIGEgYENhbGxgOyB0aGlzIG1pZ2h0IGJlIGR1ZSB0byBkaXNwYXRjaCBmdW5jdGlvbiBoYXZpbmcgYSBzaWduYXR1cmUgd2hpY2iUaXMgbm90IGAob3JpZ2luLCBRdWVyeUlkLCBSZXNwb25zZSlgLkBJbnZhbGlkUmVzcG9uZGVyDAEYb3JpZ2lurAEgTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQAAURleHBlY3RlZF9sb2NhdGlvbkUBAUBPcHRpb248TG9jYXRpb24+AAgMWQFFeHBlY3RlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBidXQgdGhlIG9yaWdpbiBsb2NhdGlvbiBvZiB0aGUgcmVzcG9uc2UgZG9lc1UBbm90IG1hdGNoIHRoYXQgZXhwZWN0ZWQuIFRoZSBxdWVyeSByZW1haW5zIHJlZ2lzdGVyZWQgZm9yIGEgbGF0ZXIsIHZhbGlkLCByZXNwb25zZSB0b2xiZSByZWNlaXZlZCBhbmQgYWN0ZWQgdXBvbi5cSW52YWxpZFJlc3BvbmRlclZlcnNpb24IARhvcmlnaW6sASBMb2NhdGlvbgABIHF1ZXJ5X2lkLAEcUXVlcnlJZAAJHFEBRXhwZWN0ZWQgcXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYnV0IHRoZSBleHBlY3RlZCBvcmlnaW4gbG9jYXRpb24gcGxhY2VkIGluTQFzdG9yYWdlIGJ5IHRoaXMgcnVudGltZSBwcmV2aW91c2x5IGNhbm5vdCBiZSBkZWNvZGVkLiBUaGUgcXVlcnkgcmVtYWlucyByZWdpc3RlcmVkLgBBAVRoaXMgaXMgdW5leHBlY3RlZCAoc2luY2UgYSBsb2NhdGlvbiBwbGFjZWQgaW4gc3RvcmFnZSBpbiBhIHByZXZpb3VzbHkgZXhlY3V0aW5nTQFydW50aW1lIHNob3VsZCBiZSByZWFkYWJsZSBwcmlvciB0byBxdWVyeSB0aW1lb3V0KSBhbmQgZGFuZ2Vyb3VzIHNpbmNlIHRoZSBwb3NzaWJseVkBdmFsaWQgcmVzcG9uc2Ugd2lsbCBiZSBkcm9wcGVkLiBNYW51YWwgZ292ZXJuYW5jZSBpbnRlcnZlbnRpb24gaXMgcHJvYmFibHkgZ29pbmcgdG8gYmUcbmVlZGVkLjRSZXNwb25zZVRha2VuBAEgcXVlcnlfaWQsARxRdWVyeUlkAAoEyFJlY2VpdmVkIHF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlYWQgYW5kIHJlbW92ZWQuNEFzc2V0c1RyYXBwZWQMARBoYXNoMAEQSDI1NgABGG9yaWdpbqwBIExvY2F0aW9uAAEYYXNzZXRzZQEBPFZlcnNpb25lZEFzc2V0cwALBLhTb21lIGFzc2V0cyBoYXZlIGJlZW4gcGxhY2VkIGluIGFuIGFzc2V0IHRyYXAuVFZlcnNpb25DaGFuZ2VOb3RpZmllZBABLGRlc3RpbmF0aW9urAEgTG9jYXRpb24AARhyZXN1bHQQAShYY21WZXJzaW9uAAEQY29zdAEBARhBc3NldHMAAShtZXNzYWdlX2lkBAEcWGNtSGFzaAAMDCUBQW4gWENNIHZlcnNpb24gY2hhbmdlIG5vdGlmaWNhdGlvbiBtZXNzYWdlIGhhcyBiZWVuIGF0dGVtcHRlZCB0byBiZSBzZW50LgDgVGhlIGNvc3Qgb2Ygc2VuZGluZyBpdCAoYm9ybmUgYnkgdGhlIGNoYWluKSBpcyBpbmNsdWRlZC5cU3VwcG9ydGVkVmVyc2lvbkNoYW5nZWQIASBsb2NhdGlvbqwBIExvY2F0aW9uAAEcdmVyc2lvbhABKFhjbVZlcnNpb24ADQg5AVRoZSBzdXBwb3J0ZWQgdmVyc2lvbiBvZiBhIGxvY2F0aW9uIGhhcyBiZWVuIGNoYW5nZWQuIFRoaXMgbWlnaHQgYmUgdGhyb3VnaCBhbsBhdXRvbWF0aWMgbm90aWZpY2F0aW9uIG9yIGEgbWFudWFsIGludGVydmVudGlvbi5QTm90aWZ5VGFyZ2V0U2VuZEZhaWwMASBsb2NhdGlvbqwBIExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkAAEUZXJyb3KoASBYY21FcnJvcgAOCFkBQSBnaXZlbiBsb2NhdGlvbiB3aGljaCBoYWQgYSB2ZXJzaW9uIGNoYW5nZSBzdWJzY3JpcHRpb24gd2FzIGRyb3BwZWQgb3dpbmcgdG8gYW4gZXJyb3J8c2VuZGluZyB0aGUgbm90aWZpY2F0aW9uIHRvIGl0LmROb3RpZnlUYXJnZXRNaWdyYXRpb25GYWlsCAEgbG9jYXRpb27JAQFEVmVyc2lvbmVkTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQADwhZAUEgZ2l2ZW4gbG9jYXRpb24gd2hpY2ggaGFkIGEgdmVyc2lvbiBjaGFuZ2Ugc3Vic2NyaXB0aW9uIHdhcyBkcm9wcGVkIG93aW5nIHRvIGFuIGVycm9ytG1pZ3JhdGluZyB0aGUgbG9jYXRpb24gdG8gb3VyIG5ldyBYQ00gZm9ybWF0LlRJbnZhbGlkUXVlcmllclZlcnNpb24IARhvcmlnaW6sASBMb2NhdGlvbgABIHF1ZXJ5X2lkLAEcUXVlcnlJZAAQHFUBRXhwZWN0ZWQgcXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYnV0IHRoZSBleHBlY3RlZCBxdWVyaWVyIGxvY2F0aW9uIHBsYWNlZCBpbk0Bc3RvcmFnZSBieSB0aGlzIHJ1bnRpbWUgcHJldmlvdXNseSBjYW5ub3QgYmUgZGVjb2RlZC4gVGhlIHF1ZXJ5IHJlbWFpbnMgcmVnaXN0ZXJlZC4AQQFUaGlzIGlzIHVuZXhwZWN0ZWQgKHNpbmNlIGEgbG9jYXRpb24gcGxhY2VkIGluIHN0b3JhZ2UgaW4gYSBwcmV2aW91c2x5IGV4ZWN1dGluZ00BcnVudGltZSBzaG91bGQgYmUgcmVhZGFibGUgcHJpb3IgdG8gcXVlcnkgdGltZW91dCkgYW5kIGRhbmdlcm91cyBzaW5jZSB0aGUgcG9zc2libHlZAXZhbGlkIHJlc3BvbnNlIHdpbGwgYmUgZHJvcHBlZC4gTWFudWFsIGdvdmVybmFuY2UgaW50ZXJ2ZW50aW9uIGlzIHByb2JhYmx5IGdvaW5nIHRvIGJlHG5lZWRlZC44SW52YWxpZFF1ZXJpZXIQARhvcmlnaW6sASBMb2NhdGlvbgABIHF1ZXJ5X2lkLAEcUXVlcnlJZAABQGV4cGVjdGVkX3F1ZXJpZXKsASBMb2NhdGlvbgABUG1heWJlX2FjdHVhbF9xdWVyaWVyRQEBQE9wdGlvbjxMb2NhdGlvbj4AEQxdAUV4cGVjdGVkIHF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGJ1dCB0aGUgcXVlcmllciBsb2NhdGlvbiBvZiB0aGUgcmVzcG9uc2UgZG9lc1EBbm90IG1hdGNoIHRoZSBleHBlY3RlZC4gVGhlIHF1ZXJ5IHJlbWFpbnMgcmVnaXN0ZXJlZCBmb3IgYSBsYXRlciwgdmFsaWQsIHJlc3BvbnNlIHRvbGJlIHJlY2VpdmVkIGFuZCBhY3RlZCB1cG9uLlBWZXJzaW9uTm90aWZ5U3RhcnRlZAwBLGRlc3RpbmF0aW9urAEgTG9jYXRpb24AARBjb3N0AQEBGEFzc2V0cwABKG1lc3NhZ2VfaWQEARxYY21IYXNoABIIWQFBIHJlbW90ZSBoYXMgcmVxdWVzdGVkIFhDTSB2ZXJzaW9uIGNoYW5nZSBub3RpZmljYXRpb24gZnJvbSB1cyBhbmQgd2UgaGF2ZSBob25vcmVkIGl0Lh0BQSB2ZXJzaW9uIGluZm9ybWF0aW9uIG1lc3NhZ2UgaXMgc2VudCB0byB0aGVtIGFuZCBpdHMgY29zdCBpcyBpbmNsdWRlZC5YVmVyc2lvbk5vdGlmeVJlcXVlc3RlZAwBLGRlc3RpbmF0aW9urAEgTG9jYXRpb24AARBjb3N0AQEBGEFzc2V0cwABKG1lc3NhZ2VfaWQEARxYY21IYXNoABMEPQFXZSBoYXZlIHJlcXVlc3RlZCB0aGF0IGEgcmVtb3RlIGNoYWluIHNlbmQgdXMgWENNIHZlcnNpb24gY2hhbmdlIG5vdGlmaWNhdGlvbnMuYFZlcnNpb25Ob3RpZnlVbnJlcXVlc3RlZAwBLGRlc3RpbmF0aW9urAEgTG9jYXRpb24AARBjb3N0AQEBGEFzc2V0cwABKG1lc3NhZ2VfaWQEARxYY21IYXNoABQIJQFXZSBoYXZlIHJlcXVlc3RlZCB0aGF0IGEgcmVtb3RlIGNoYWluIHN0b3BzIHNlbmRpbmcgdXMgWENNIHZlcnNpb24gY2hhbmdlOG5vdGlmaWNhdGlvbnMuIEZlZXNQYWlkCAEYcGF5aW5nrAEgTG9jYXRpb24AARBmZWVzAQEBGEFzc2V0cwAVBDEBRmVlcyB3ZXJlIHBhaWQgZnJvbSBhIGxvY2F0aW9uIGZvciBhbiBvcGVyYXRpb24gKG9mdGVuIGZvciB1c2luZyBgU2VuZFhjbWApLjRBc3NldHNDbGFpbWVkDAEQaGFzaDABEEgyNTYAARhvcmlnaW6sASBMb2NhdGlvbgABGGFzc2V0c2UBATxWZXJzaW9uZWRBc3NldHMAFgTAU29tZSBhc3NldHMgaGF2ZSBiZWVuIGNsYWltZWQgZnJvbSBhbiBhc3NldCB0cmFwYFZlcnNpb25NaWdyYXRpb25GaW5pc2hlZAQBHHZlcnNpb24QAShYY21WZXJzaW9uABcEhEEgWENNIHZlcnNpb24gbWlncmF0aW9uIGZpbmlzaGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldKQQLHN0YWdpbmdfeGNtCHY0GHRyYWl0cxxPdXRjb21lAAEMIENvbXBsZXRlBAEQdXNlZCQBGFdlaWdodAAAAChJbmNvbXBsZXRlCAEQdXNlZCQBGFdlaWdodAABFGVycm9yqAEURXJyb3IAAQAURXJyb3IEARRlcnJvcqgBFEVycm9yAAIAAKgQDHhjbQh2Mxh0cmFpdHMURXJyb3IAAaAgT3ZlcmZsb3cAAAA0VW5pbXBsZW1lbnRlZAABAGBVbnRydXN0ZWRSZXNlcnZlTG9jYXRpb24AAgBkVW50cnVzdGVkVGVsZXBvcnRMb2NhdGlvbgADADBMb2NhdGlvbkZ1bGwABABUTG9jYXRpb25Ob3RJbnZlcnRpYmxlAAUAJEJhZE9yaWdpbgAGADxJbnZhbGlkTG9jYXRpb24ABwA0QXNzZXROb3RGb3VuZAAIAFRGYWlsZWRUb1RyYW5zYWN0QXNzZXQACQA8Tm90V2l0aGRyYXdhYmxlAAoASExvY2F0aW9uQ2Fubm90SG9sZAALAFRFeGNlZWRzTWF4TWVzc2FnZVNpemUADABYRGVzdGluYXRpb25VbnN1cHBvcnRlZAANACRUcmFuc3BvcnQADgAoVW5yb3V0YWJsZQAPADBVbmtub3duQ2xhaW0AEAA4RmFpbGVkVG9EZWNvZGUAEQBATWF4V2VpZ2h0SW52YWxpZAASADhOb3RIb2xkaW5nRmVlcwATADBUb29FeHBlbnNpdmUAFAAQVHJhcAQALAEMdTY0ABUAQEV4cGVjdGF0aW9uRmFsc2UAFgA4UGFsbGV0Tm90Rm91bmQAFwAwTmFtZU1pc21hdGNoABgATFZlcnNpb25JbmNvbXBhdGlibGUAGQBQSG9sZGluZ1dvdWxkT3ZlcmZsb3cAGgAsRXhwb3J0RXJyb3IAGwA4UmVhbmNob3JGYWlsZWQAHAAYTm9EZWFsAB0AKEZlZXNOb3RNZXQAHgAkTG9ja0Vycm9yAB8AME5vUGVybWlzc2lvbgAgAChVbmFuY2hvcmVkACEAOE5vdERlcG9zaXRhYmxlACIATFVuaGFuZGxlZFhjbVZlcnNpb24AIwBIV2VpZ2h0TGltaXRSZWFjaGVkBAAkARhXZWlnaHQAJAAcQmFycmllcgAlAExXZWlnaHROb3RDb21wdXRhYmxlACYAREV4Y2VlZHNTdGFja0xpbWl0ACcAAKwQLHN0YWdpbmdfeGNtCHY0IGxvY2F0aW9uIExvY2F0aW9uAAAIARxwYXJlbnRzCAEIdTgAASBpbnRlcmlvcrABJEp1bmN0aW9ucwAAsBAsc3RhZ2luZ194Y20IdjQkanVuY3Rpb25zJEp1bmN0aW9ucwABJBBIZXJlAAAACFgxBAC0AUhBcmM8W0p1bmN0aW9uOyAxXT4AAQAIWDIEANgBSEFyYzxbSnVuY3Rpb247IDJdPgACAAhYMwQA3AFIQXJjPFtKdW5jdGlvbjsgM10+AAMACFg0BADgAUhBcmM8W0p1bmN0aW9uOyA0XT4ABAAIWDUEAOQBSEFyYzxbSnVuY3Rpb247IDVdPgAFAAhYNgQA6AFIQXJjPFtKdW5jdGlvbjsgNl0+AAYACFg3BADsAUhBcmM8W0p1bmN0aW9uOyA3XT4ABwAIWDgEAPABSEFyYzxbSnVuY3Rpb247IDhdPgAIAAC0AAADAQAAALgAuBAsc3RhZ2luZ194Y20IdjQganVuY3Rpb24gSnVuY3Rpb24AASgkUGFyYWNoYWluBAC8AQx1MzIAAAAsQWNjb3VudElkMzIIARxuZXR3b3JrwAFET3B0aW9uPE5ldHdvcmtJZD4AAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29ya8ABRE9wdGlvbjxOZXR3b3JrSWQ+AAEUaW5kZXgoAQx1NjQAAgAwQWNjb3VudEtleTIwCAEcbmV0d29ya8ABRE9wdGlvbjxOZXR3b3JrSWQ+AAEMa2V5yAEgW3U4OyAyMF0AAwA4UGFsbGV0SW5zdGFuY2UEAAgBCHU4AAQAMEdlbmVyYWxJbmRleAQAzAEQdTEyOAAFAChHZW5lcmFsS2V5CAEYbGVuZ3RoCAEIdTgAARBkYXRhBAEgW3U4OyAzMl0ABgAkT25seUNoaWxkAAcAJFBsdXJhbGl0eQgBCGlk0AEYQm9keUlkAAEQcGFydNQBIEJvZHlQYXJ0AAgAPEdsb2JhbENvbnNlbnN1cwQAxAEkTmV0d29ya0lkAAkAALwAAAYQAMAEGE9wdGlvbgQEVAHEAQgQTm9uZQAAABBTb21lBADEAAABAADEECxzdGFnaW5nX3hjbQh2NCBqdW5jdGlvbiROZXR3b3JrSWQAASwkQnlHZW5lc2lzBAAEASBbdTg7IDMyXQAAABhCeUZvcmsIATBibG9ja19udW1iZXIsAQx1NjQAAShibG9ja19oYXNoBAEgW3U4OyAzMl0AAQAgUG9sa2Fkb3QAAgAYS3VzYW1hAAMAHFdlc3RlbmQABAAYUm9jb2NvAAUAGFdvY29jbwAGACBFdGhlcmV1bQQBIGNoYWluX2lkKAEMdTY0AAcALEJpdGNvaW5Db3JlAAgALEJpdGNvaW5DYXNoAAkAQFBvbGthZG90QnVsbGV0aW4ACgAAyAAAAxQAAAAIAMwAAAYYANAQDHhjbQh2MyBqdW5jdGlvbhhCb2R5SWQAASgQVW5pdAAAABxNb25pa2VyBABEARxbdTg7IDRdAAEAFEluZGV4BAC8AQx1MzIAAgAkRXhlY3V0aXZlAAMAJFRlY2huaWNhbAAEACxMZWdpc2xhdGl2ZQAFACBKdWRpY2lhbAAGABxEZWZlbnNlAAcAOEFkbWluaXN0cmF0aW9uAAgAIFRyZWFzdXJ5AAkAANQQDHhjbQh2MyBqdW5jdGlvbiBCb2R5UGFydAABFBRWb2ljZQAAABxNZW1iZXJzBAEUY291bnS8AQx1MzIAAQAgRnJhY3Rpb24IAQxub228AQx1MzIAARRkZW5vbbwBDHUzMgACAERBdExlYXN0UHJvcG9ydGlvbggBDG5vbbwBDHUzMgABFGRlbm9tvAEMdTMyAAMASE1vcmVUaGFuUHJvcG9ydGlvbggBDG5vbbwBDHUzMgABFGRlbm9tvAEMdTMyAAQAANgAAAMCAAAAuADcAAADAwAAALgA4AAAAwQAAAC4AOQAAAMFAAAAuADoAAADBgAAALgA7AAAAwcAAAC4APAAAAMIAAAAuAD0DCxzdGFnaW5nX3hjbQh2NAxYY20EEENhbGwAAAQA+AFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAA+AAAAvwA/Awsc3RhZ2luZ194Y20IdjQsSW5zdHJ1Y3Rpb24EEENhbGwAAcA0V2l0aGRyYXdBc3NldAQAAQEBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAAEBARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAAQEBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQoARxRdWVyeUlkAAEgcmVzcG9uc2UhAQEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0JAEYV2VpZ2h0AAEccXVlcmllckUBAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHMBAQEYQXNzZXRzAAEsYmVuZWZpY2lhcnmsASBMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0cwEBARhBc3NldHMAARBkZXN0rAEgTG9jYXRpb24AAQx4Y230ARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmRJAQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QkARhXZWlnaHQAARBjYWxsTQEBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcrwBDHUzMgABQG1heF9tZXNzYWdlX3NpemW8AQx1MzIAATBtYXhfY2FwYWNpdHm8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudLwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3K8AQx1MzIAARhzZW5kZXK8AQx1MzIAASRyZWNpcGllbnS8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAsAFASW50ZXJpb3JMb2NhdGlvbgALACxSZXBvcnRFcnJvcgQAUQEBRFF1ZXJ5UmVzcG9uc2VJbmZvAAwAMERlcG9zaXRBc3NldAgBGGFzc2V0c1UBASxBc3NldEZpbHRlcgABLGJlbmVmaWNpYXJ5rAEgTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldAwBGGFzc2V0c1UBASxBc3NldEZpbHRlcgABEGRlc3SsASBMb2NhdGlvbgABDHhjbfQBHFhjbTwoKT4ADgA0RXhjaGFuZ2VBc3NldAwBEGdpdmVVAQEsQXNzZXRGaWx0ZXIAARB3YW50AQEBGEFzc2V0cwABHG1heGltYWx4ARBib29sAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRzVQEBLEFzc2V0RmlsdGVyAAEccmVzZXJ2ZawBIExvY2F0aW9uAAEMeGNt9AEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzVQEBLEFzc2V0RmlsdGVyAAEQZGVzdKwBIExvY2F0aW9uAAEMeGNt9AEcWGNtPCgpPgARADRSZXBvcnRIb2xkaW5nCAE0cmVzcG9uc2VfaW5mb1EBAURRdWVyeVJlc3BvbnNlSW5mbwABGGFzc2V0c1UBASxBc3NldEZpbHRlcgASADBCdXlFeGVjdXRpb24IARBmZWVzCQEBFEFzc2V0AAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0ABMANFJlZnVuZFN1cnBsdXMAFAA8U2V0RXJyb3JIYW5kbGVyBAD0ASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAPQBJFhjbTxDYWxsPgAWAChDbGVhckVycm9yABcAKENsYWltQXNzZXQIARhhc3NldHMBAQEYQXNzZXRzAAEYdGlja2V0rAEgTG9jYXRpb24AGAAQVHJhcAQAKAEMdTY0ABkAQFN1YnNjcmliZVZlcnNpb24IASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0JAEYV2VpZ2h0ABoASFVuc3Vic2NyaWJlVmVyc2lvbgAbACRCdXJuQXNzZXQEAAEBARhBc3NldHMAHAAsRXhwZWN0QXNzZXQEAAEBARhBc3NldHMAHQAwRXhwZWN0T3JpZ2luBABFAQFAT3B0aW9uPExvY2F0aW9uPgAeACxFeHBlY3RFcnJvcgQAJQEBUE9wdGlvbjwodTMyLCBFcnJvcik+AB8AUEV4cGVjdFRyYW5zYWN0U3RhdHVzBAA9AQE4TWF5YmVFcnJvckNvZGUAIAAsUXVlcnlQYWxsZXQIASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AATRyZXNwb25zZV9pbmZvUQEBRFF1ZXJ5UmVzcG9uc2VJbmZvACEAMEV4cGVjdFBhbGxldBQBFGluZGV4vAEMdTMyAAEQbmFtZTQBHFZlYzx1OD4AASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AASxjcmF0ZV9tYWpvcrwBDHUzMgABPG1pbl9jcmF0ZV9taW5vcrwBDHUzMgAiAFBSZXBvcnRUcmFuc2FjdFN0YXR1cwQAUQEBRFF1ZXJ5UmVzcG9uc2VJbmZvACMATENsZWFyVHJhbnNhY3RTdGF0dXMAJAA8VW5pdmVyc2FsT3JpZ2luBAC4ASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya8QBJE5ldHdvcmtJZAABLGRlc3RpbmF0aW9usAFASW50ZXJpb3JMb2NhdGlvbgABDHhjbfQBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXQJAQEUQXNzZXQAASB1bmxvY2tlcqwBIExvY2F0aW9uACcALFVubG9ja0Fzc2V0CAEUYXNzZXQJAQEUQXNzZXQAARh0YXJnZXSsASBMb2NhdGlvbgAoADhOb3RlVW5sb2NrYWJsZQgBFGFzc2V0CQEBFEFzc2V0AAEUb3duZXKsASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXQJAQEUQXNzZXQAARhsb2NrZXKsASBMb2NhdGlvbgAqACxTZXRGZWVzTW9kZQQBMGppdF93aXRoZHJhd3gBEGJvb2wAKwAgU2V0VG9waWMEAAQBIFt1ODsgMzJdACwAKENsZWFyVG9waWMALQAsQWxpYXNPcmlnaW4EAKwBIExvY2F0aW9uAC4APFVucGFpZEV4ZWN1dGlvbggBMHdlaWdodF9saW1pdGEBASxXZWlnaHRMaW1pdAABMGNoZWNrX29yaWdpbkUBAUBPcHRpb248TG9jYXRpb24+AC8AAAEBECxzdGFnaW5nX3hjbQh2NBRhc3NldBhBc3NldHMAAAQABQEBKFZlYzxBc3NldD4AAAUBAAACCQEACQEQLHN0YWdpbmdfeGNtCHY0FGFzc2V0FEFzc2V0AAAIAQhpZA0BARxBc3NldElkAAEMZnVuEQEBLEZ1bmdpYmlsaXR5AAANARAsc3RhZ2luZ194Y20IdjQUYXNzZXQcQXNzZXRJZAAABACsASBMb2NhdGlvbgAAEQEQLHN0YWdpbmdfeGNtCHY0FGFzc2V0LEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlBADMARB1MTI4AAAALE5vbkZ1bmdpYmxlBAAVAQE0QXNzZXRJbnN0YW5jZQABAAAVARAsc3RhZ2luZ194Y20IdjQUYXNzZXQ0QXNzZXRJbnN0YW5jZQABGCRVbmRlZmluZWQAAAAUSW5kZXgEAMwBEHUxMjgAAQAYQXJyYXk0BABEARxbdTg7IDRdAAIAGEFycmF5OAQAGQEBHFt1ODsgOF0AAwAcQXJyYXkxNgQAHQEBIFt1ODsgMTZdAAQAHEFycmF5MzIEAAQBIFt1ODsgMzJdAAUAABkBAAADCAAAAAgAHQEAAAMQAAAACAAhAQwsc3RhZ2luZ194Y20IdjQgUmVzcG9uc2UAARgQTnVsbAAAABhBc3NldHMEAAEBARhBc3NldHMAAQA8RXhlY3V0aW9uUmVzdWx0BAAlAQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AAgAcVmVyc2lvbgQAEAE4c3VwZXI6OlZlcnNpb24AAwAsUGFsbGV0c0luZm8EAC0BAZhCb3VuZGVkVmVjPFBhbGxldEluZm8sIE1heFBhbGxldHNJbmZvPgAEADhEaXNwYXRjaFJlc3VsdAQAPQEBOE1heWJlRXJyb3JDb2RlAAUAACUBBBhPcHRpb24EBFQBKQEBCBBOb25lAAAAEFNvbWUEACkBAAABAAApAQAABAgQqAAtAQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUATEBBFMAAAQAOQEBGFZlYzxUPgAAMQEMLHN0YWdpbmdfeGNtCHY0KFBhbGxldEluZm8AABgBFGluZGV4vAEMdTMyAAEQbmFtZTUBAYBCb3VuZGVkVmVjPHU4LCBNYXhQYWxsZXROYW1lTGVuPgABLG1vZHVsZV9uYW1lNQEBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEUbWFqb3K8AQx1MzIAARRtaW5vcrwBDHUzMgABFHBhdGNovAEMdTMyAAA1AQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AADkBAAACMQEAPQEMDHhjbQh2MzhNYXliZUVycm9yQ29kZQABDBxTdWNjZXNzAAAAFEVycm9yBABBAQGMQm91bmRlZFZlYzx1OCwgTWF4RGlzcGF0Y2hFcnJvckxlbj4AAQA4VHJ1bmNhdGVkRXJyb3IEAEEBAYxCb3VuZGVkVmVjPHU4LCBNYXhEaXNwYXRjaEVycm9yTGVuPgACAABBAQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAEUBBBhPcHRpb24EBFQBrAEIEE5vbmUAAAAQU29tZQQArAAAAQAASQEMDHhjbQh2MihPcmlnaW5LaW5kAAEQGE5hdGl2ZQAAAEBTb3ZlcmVpZ25BY2NvdW50AAEAJFN1cGVydXNlcgACAAxYY20AAwAATQEMDHhjbThkb3VibGVfZW5jb2RlZDREb3VibGVFbmNvZGVkBARUAAAEARxlbmNvZGVkNAEcVmVjPHU4PgAAUQEMLHN0YWdpbmdfeGNtCHY0RFF1ZXJ5UmVzcG9uc2VJbmZvAAAMASxkZXN0aW5hdGlvbqwBIExvY2F0aW9uAAEgcXVlcnlfaWQoARxRdWVyeUlkAAEobWF4X3dlaWdodCQBGFdlaWdodAAAVQEQLHN0YWdpbmdfeGNtCHY0FGFzc2V0LEFzc2V0RmlsdGVyAAEIIERlZmluaXRlBAABAQEYQXNzZXRzAAAAEFdpbGQEAFkBASRXaWxkQXNzZXQAAQAAWQEQLHN0YWdpbmdfeGNtCHY0FGFzc2V0JFdpbGRBc3NldAABEAxBbGwAAAAUQWxsT2YIAQhpZA0BARxBc3NldElkAAEMZnVuXQEBPFdpbGRGdW5naWJpbGl0eQABAChBbGxDb3VudGVkBAC8AQx1MzIAAgAwQWxsT2ZDb3VudGVkDAEIaWQNAQEcQXNzZXRJZAABDGZ1bl0BATxXaWxkRnVuZ2liaWxpdHkAARRjb3VudLwBDHUzMgADAABdARAsc3RhZ2luZ194Y20IdjQUYXNzZXQ8V2lsZEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlAAAALE5vbkZ1bmdpYmxlAAEAAGEBDAx4Y20IdjMsV2VpZ2h0TGltaXQAAQgkVW5saW1pdGVkAAAAHExpbWl0ZWQEACQBGFdlaWdodAABAABlAQgMeGNtPFZlcnNpb25lZEFzc2V0cwABDAhWMgQAaQEBPHYyOjpNdWx0aUFzc2V0cwABAAhWMwQAnQEBPHYzOjpNdWx0aUFzc2V0cwADAAhWNAQAAQEBKHY0OjpBc3NldHMABAAAaQEQDHhjbQh2MihtdWx0aWFzc2V0LE11bHRpQXNzZXRzAAAEAG0BATxWZWM8TXVsdGlBc3NldD4AAG0BAAACcQEAcQEQDHhjbQh2MihtdWx0aWFzc2V0KE11bHRpQXNzZXQAAAgBCGlkdQEBHEFzc2V0SWQAAQxmdW6VAQEsRnVuZ2liaWxpdHkAAHUBEAx4Y20IdjIobXVsdGlhc3NldBxBc3NldElkAAEIIENvbmNyZXRlBAB5AQE0TXVsdGlMb2NhdGlvbgAAACBBYnN0cmFjdAQANAEcVmVjPHU4PgABAAB5ARAMeGNtCHYyNG11bHRpbG9jYXRpb240TXVsdGlMb2NhdGlvbgAACAEccGFyZW50cwgBCHU4AAEgaW50ZXJpb3J9AQEkSnVuY3Rpb25zAAB9ARAMeGNtCHYyNG11bHRpbG9jYXRpb24kSnVuY3Rpb25zAAEkEEhlcmUAAAAIWDEEAIEBASBKdW5jdGlvbgABAAhYMggAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAgAIWDMMAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAwAIWDQQAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAEAAhYNRQAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24ABQAIWDYYAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24ABgAIWDccAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAHAAhYOCAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24AAIEBASBKdW5jdGlvbgAAgQEBIEp1bmN0aW9uAACBAQEgSnVuY3Rpb24ACAAAgQEQDHhjbQh2MiBqdW5jdGlvbiBKdW5jdGlvbgABJCRQYXJhY2hhaW4EALwBDHUzMgAAACxBY2NvdW50SWQzMggBHG5ldHdvcmuFAQEkTmV0d29ya0lkAAEIaWQEASBbdTg7IDMyXQABADhBY2NvdW50SW5kZXg2NAgBHG5ldHdvcmuFAQEkTmV0d29ya0lkAAEUaW5kZXgoAQx1NjQAAgAwQWNjb3VudEtleTIwCAEcbmV0d29ya4UBASROZXR3b3JrSWQAAQxrZXnIASBbdTg7IDIwXQADADhQYWxsZXRJbnN0YW5jZQQACAEIdTgABAAwR2VuZXJhbEluZGV4BADMARB1MTI4AAUAKEdlbmVyYWxLZXkEAIkBAYBXZWFrQm91bmRlZFZlYzx1OCwgQ29uc3RVMzI8MzI+PgAGACRPbmx5Q2hpbGQABwAkUGx1cmFsaXR5CAEIaWSNAQEYQm9keUlkAAEQcGFydJEBASBCb2R5UGFydAAIAACFAQwMeGNtCHYyJE5ldHdvcmtJZAABEAxBbnkAAAAUTmFtZWQEAIkBAYBXZWFrQm91bmRlZFZlYzx1OCwgQ29uc3RVMzI8MzI+PgABACBQb2xrYWRvdAACABhLdXNhbWEAAwAAiQEMTGJvdW5kZWRfY29sbGVjdGlvbnNAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAEIBFMAAAQANAEYVmVjPFQ+AACNAQwMeGNtCHYyGEJvZHlJZAABKBBVbml0AAAAFE5hbWVkBACJAQGAV2Vha0JvdW5kZWRWZWM8dTgsIENvbnN0VTMyPDMyPj4AAQAUSW5kZXgEALwBDHUzMgACACRFeGVjdXRpdmUAAwAkVGVjaG5pY2FsAAQALExlZ2lzbGF0aXZlAAUAIEp1ZGljaWFsAAYAHERlZmVuc2UABwA4QWRtaW5pc3RyYXRpb24ACAAgVHJlYXN1cnkACQAAkQEMDHhjbQh2MiBCb2R5UGFydAABFBRWb2ljZQAAABxNZW1iZXJzBAEUY291bnS8AQx1MzIAAQAgRnJhY3Rpb24IAQxub228AQx1MzIAARRkZW5vbbwBDHUzMgACAERBdExlYXN0UHJvcG9ydGlvbggBDG5vbbwBDHUzMgABFGRlbm9tvAEMdTMyAAMASE1vcmVUaGFuUHJvcG9ydGlvbggBDG5vbbwBDHUzMgABFGRlbm9tvAEMdTMyAAQAAJUBEAx4Y20IdjIobXVsdGlhc3NldCxGdW5naWJpbGl0eQABCCBGdW5naWJsZQQAzAEQdTEyOAAAACxOb25GdW5naWJsZQQAmQEBNEFzc2V0SW5zdGFuY2UAAQAAmQEQDHhjbQh2MihtdWx0aWFzc2V0NEFzc2V0SW5zdGFuY2UAARwkVW5kZWZpbmVkAAAAFEluZGV4BADMARB1MTI4AAEAGEFycmF5NAQARAEcW3U4OyA0XQACABhBcnJheTgEABkBARxbdTg7IDhdAAMAHEFycmF5MTYEAB0BASBbdTg7IDE2XQAEABxBcnJheTMyBAAEASBbdTg7IDMyXQAFABBCbG9iBAA0ARxWZWM8dTg+AAYAAJ0BEAx4Y20IdjMobXVsdGlhc3NldCxNdWx0aUFzc2V0cwAABAChAQE8VmVjPE11bHRpQXNzZXQ+AAChAQAAAqUBAKUBEAx4Y20IdjMobXVsdGlhc3NldChNdWx0aUFzc2V0AAAIAQhpZKkBARxBc3NldElkAAEMZnVuwQEBLEZ1bmdpYmlsaXR5AACpARAMeGNtCHYzKG11bHRpYXNzZXQcQXNzZXRJZAABCCBDb25jcmV0ZQQArQEBNE11bHRpTG9jYXRpb24AAAAgQWJzdHJhY3QEAAQBIFt1ODsgMzJdAAEAAK0BECxzdGFnaW5nX3hjbQh2MzRtdWx0aWxvY2F0aW9uNE11bHRpTG9jYXRpb24AAAgBHHBhcmVudHMIAQh1OAABIGludGVyaW9ysQEBJEp1bmN0aW9ucwAAsQEQDHhjbQh2MyRqdW5jdGlvbnMkSnVuY3Rpb25zAAEkEEhlcmUAAAAIWDEEALUBASBKdW5jdGlvbgABAAhYMggAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AAgAIWDMMALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AAwAIWDQQALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAEAAhYNRQAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24ABQAIWDYYALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24ABgAIWDccALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAHAAhYOCAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24AALUBASBKdW5jdGlvbgAAtQEBIEp1bmN0aW9uAAC1AQEgSnVuY3Rpb24ACAAAtQEQDHhjbQh2MyBqdW5jdGlvbiBKdW5jdGlvbgABKCRQYXJhY2hhaW4EALwBDHUzMgAAACxBY2NvdW50SWQzMggBHG5ldHdvcmu5AQFET3B0aW9uPE5ldHdvcmtJZD4AAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29ya7kBAURPcHRpb248TmV0d29ya0lkPgABFGluZGV4KAEMdTY0AAIAMEFjY291bnRLZXkyMAgBHG5ldHdvcmu5AQFET3B0aW9uPE5ldHdvcmtJZD4AAQxrZXnIASBbdTg7IDIwXQADADhQYWxsZXRJbnN0YW5jZQQACAEIdTgABAAwR2VuZXJhbEluZGV4BADMARB1MTI4AAUAKEdlbmVyYWxLZXkIARhsZW5ndGgIAQh1OAABEGRhdGEEASBbdTg7IDMyXQAGACRPbmx5Q2hpbGQABwAkUGx1cmFsaXR5CAEIaWTQARhCb2R5SWQAARBwYXJ01AEgQm9keVBhcnQACAA8R2xvYmFsQ29uc2Vuc3VzBAC9AQEkTmV0d29ya0lkAAkAALkBBBhPcHRpb24EBFQBvQEBCBBOb25lAAAAEFNvbWUEAL0BAAABAAC9ARAMeGNtCHYzIGp1bmN0aW9uJE5ldHdvcmtJZAABLCRCeUdlbmVzaXMEAAQBIFt1ODsgMzJdAAAAGEJ5Rm9yawgBMGJsb2NrX251bWJlciwBDHU2NAABKGJsb2NrX2hhc2gEASBbdTg7IDMyXQABACBQb2xrYWRvdAACABhLdXNhbWEAAwAcV2VzdGVuZAAEABhSb2NvY28ABQAYV29jb2NvAAYAIEV0aGVyZXVtBAEgY2hhaW5faWQoAQx1NjQABwAsQml0Y29pbkNvcmUACAAsQml0Y29pbkNhc2gACQBAUG9sa2Fkb3RCdWxsZXRpbgAKAADBARAMeGNtCHYzKG11bHRpYXNzZXQsRnVuZ2liaWxpdHkAAQggRnVuZ2libGUEAMwBEHUxMjgAAAAsTm9uRnVuZ2libGUEAMUBATRBc3NldEluc3RhbmNlAAEAAMUBEAx4Y20IdjMobXVsdGlhc3NldDRBc3NldEluc3RhbmNlAAEYJFVuZGVmaW5lZAAAABRJbmRleAQAzAEQdTEyOAABABhBcnJheTQEAEQBHFt1ODsgNF0AAgAYQXJyYXk4BAAZAQEcW3U4OyA4XQADABxBcnJheTE2BAAdAQEgW3U4OyAxNl0ABAAcQXJyYXkzMgQABAEgW3U4OyAzMl0ABQAAyQEIDHhjbURWZXJzaW9uZWRMb2NhdGlvbgABDAhWMgQAeQEBRHYyOjpNdWx0aUxvY2F0aW9uAAEACFYzBACtAQFEdjM6Ok11bHRpTG9jYXRpb24AAwAIVjQEAKwBMHY0OjpMb2NhdGlvbgAEAADNAQxIY3VtdWx1c19wYWxsZXRfeGNtGHBhbGxldBRFdmVudAQEVAABDDRJbnZhbGlkRm9ybWF0BAAEASBbdTg7IDMyXQAACIBEb3dud2FyZCBtZXNzYWdlIGlzIGludmFsaWQgWENNLiBcWyBpZCBcXUhVbnN1cHBvcnRlZFZlcnNpb24EAAQBIFt1ODsgMzJdAAEIvERvd253YXJkIG1lc3NhZ2UgaXMgdW5zdXBwb3J0ZWQgdmVyc2lvbiBvZiBYQ00uIFxbIGlkIFxdQEV4ZWN1dGVkRG93bndhcmQIAAQBIFt1ODsgMzJdAACkARxPdXRjb21lAAIIxERvd253YXJkIG1lc3NhZ2UgZXhlY3V0ZWQgd2l0aCB0aGUgZ2l2ZW4gb3V0Y29tZS5EXFsgaWQsIG91dGNvbWUgXF0EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTRAQxQcGFsbGV0X21lc3NhZ2VfcXVldWUYcGFsbGV0FEV2ZW50BARUAAEQQFByb2Nlc3NpbmdGYWlsZWQMAQhpZDABEEgyNTYElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbtUBAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BFGVycm9y3QEBTFByb2Nlc3NNZXNzYWdlRXJyb3IQYFRoZSBlcnJvciB0aGF0IG9jY3VycmVkLgBJAVRoaXMgZXJyb3IgaXMgcHJldHR5IG9wYXF1ZS4gTW9yZSBmaW5lLWdyYWluZWQgZXJyb3JzIG5lZWQgdG8gYmUgZW1pdHRlZCBhcyBldmVudHNoYnkgdGhlIGBNZXNzYWdlUHJvY2Vzc29yYC4ABFUBTWVzc2FnZSBkaXNjYXJkZWQgZHVlIHRvIGFuIGVycm9yIGluIHRoZSBgTWVzc2FnZVByb2Nlc3NvcmAgKHVzdWFsbHkgYSBmb3JtYXQgZXJyb3IpLiRQcm9jZXNzZWQQAQhpZDABEEgyNTYElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbtUBAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BLHdlaWdodF91c2VkJAEYV2VpZ2h0BMBIb3cgbXVjaCB3ZWlnaHQgd2FzIHVzZWQgdG8gcHJvY2VzcyB0aGUgbWVzc2FnZS4BHHN1Y2Nlc3N4ARBib29sGIhXaGV0aGVyIHRoZSBtZXNzYWdlIHdhcyBwcm9jZXNzZWQuAEkBTm90ZSB0aGF0IHRoaXMgZG9lcyBub3QgbWVhbiB0aGF0IHRoZSB1bmRlcmx5aW5nIGBNZXNzYWdlUHJvY2Vzc29yYCB3YXMgaW50ZXJuYWxseTUBc3VjY2Vzc2Z1bC4gSXQgKnNvbGVseSogbWVhbnMgdGhhdCB0aGUgTVEgcGFsbGV0IHdpbGwgdHJlYXQgdGhpcyBhcyBhIHN1Y2Nlc3NNAWNvbmRpdGlvbiBhbmQgZGlzY2FyZCB0aGUgbWVzc2FnZS4gQW55IGludGVybmFsIGVycm9yIG5lZWRzIHRvIGJlIGVtaXR0ZWQgYXMgZXZlbnRzaGJ5IHRoZSBgTWVzc2FnZVByb2Nlc3NvcmAuAQRUTWVzc2FnZSBpcyBwcm9jZXNzZWQuSE92ZXJ3ZWlnaHRFbnF1ZXVlZBABCGlkBAEgW3U4OyAzMl0ElFRoZSBgYmxha2UyXzI1NmAgaGFzaCBvZiB0aGUgbWVzc2FnZS4BGG9yaWdpbtUBAUhNZXNzYWdlT3JpZ2luT2Y8VD4EZFRoZSBxdWV1ZSBvZiB0aGUgbWVzc2FnZS4BKHBhZ2VfaW5kZXgQASRQYWdlSW5kZXgEYFRoZSBwYWdlIG9mIHRoZSBtZXNzYWdlLgE0bWVzc2FnZV9pbmRleBABHFQ6OlNpemUEpFRoZSBpbmRleCBvZiB0aGUgbWVzc2FnZSB3aXRoaW4gdGhlIHBhZ2UuAgSMTWVzc2FnZSBwbGFjZWQgaW4gb3ZlcndlaWdodCBxdWV1ZS4oUGFnZVJlYXBlZAgBGG9yaWdpbtUBAUhNZXNzYWdlT3JpZ2luT2Y8VD4EWFRoZSBxdWV1ZSBvZiB0aGUgcGFnZS4BFGluZGV4EAEkUGFnZUluZGV4BFhUaGUgaW5kZXggb2YgdGhlIHBhZ2UuAwRUVGhpcyBwYWdlIHdhcyByZWFwZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV01QEIXGN1bXVsdXNfcHJpbWl0aXZlc19jb3JlWEFnZ3JlZ2F0ZU1lc3NhZ2VPcmlnaW4AAQwQSGVyZQAAABhQYXJlbnQAAQAcU2libGluZwQA2QEBGFBhcmFJZAACAADZAQx0cG9sa2Fkb3RfcGFyYWNoYWluX3ByaW1pdGl2ZXMocHJpbWl0aXZlcwhJZAAABAAQAQx1MzIAAN0BEDRmcmFtZV9zdXBwb3J0GHRyYWl0cyBtZXNzYWdlc0xQcm9jZXNzTWVzc2FnZUVycm9yAAEUJEJhZEZvcm1hdAAAABxDb3JydXB0AAEALFVuc3VwcG9ydGVkAAIAKE92ZXJ3ZWlnaHQEACQBGFdlaWdodAADABRZaWVsZAAEAADhAQw4cGFsbGV0X3V0aWxpdHkYcGFsbGV0FEV2ZW50AAEYQEJhdGNoSW50ZXJydXB0ZWQIARRpbmRleBABDHUzMgABFGVycm9yZAE0RGlzcGF0Y2hFcnJvcgAACFUBQmF0Y2ggb2YgZGlzcGF0Y2hlcyBkaWQgbm90IGNvbXBsZXRlIGZ1bGx5LiBJbmRleCBvZiBmaXJzdCBmYWlsaW5nIGRpc3BhdGNoIGdpdmVuLCBhc0h3ZWxsIGFzIHRoZSBlcnJvci44QmF0Y2hDb21wbGV0ZWQAAQTIQmF0Y2ggb2YgZGlzcGF0Y2hlcyBjb21wbGV0ZWQgZnVsbHkgd2l0aCBubyBlcnJvci5gQmF0Y2hDb21wbGV0ZWRXaXRoRXJyb3JzAAIEtEJhdGNoIG9mIGRpc3BhdGNoZXMgY29tcGxldGVkIGJ1dCBoYXMgZXJyb3JzLjRJdGVtQ29tcGxldGVkAAMEHQFBIHNpbmdsZSBpdGVtIHdpdGhpbiBhIEJhdGNoIG9mIGRpc3BhdGNoZXMgaGFzIGNvbXBsZXRlZCB3aXRoIG5vIGVycm9yLihJdGVtRmFpbGVkBAEUZXJyb3JkATREaXNwYXRjaEVycm9yAAQEEQFBIHNpbmdsZSBpdGVtIHdpdGhpbiBhIEJhdGNoIG9mIGRpc3BhdGNoZXMgaGFzIGNvbXBsZXRlZCB3aXRoIGVycm9yLjBEaXNwYXRjaGVkQXMEARhyZXN1bHTlAQE4RGlzcGF0Y2hSZXN1bHQABQRYQSBjYWxsIHdhcyBkaXNwYXRjaGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldOUBBBhSZXN1bHQIBFQB6QEERQFkAQgIT2sEAOkBAAAAAAxFcnIEAGQAAAEAAOkBAAAEAADtAQw8cGFsbGV0X211bHRpc2lnGHBhbGxldBRFdmVudAQEVAABECxOZXdNdWx0aXNpZwwBJGFwcHJvdmluZwABMFQ6OkFjY291bnRJZAABIG11bHRpc2lnAAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoBAEgQ2FsbEhhc2gAAASMQSBuZXcgbXVsdGlzaWcgb3BlcmF0aW9uIGhhcyBiZWd1bi5ATXVsdGlzaWdBcHByb3ZhbBABJGFwcHJvdmluZwABMFQ6OkFjY291bnRJZAABJHRpbWVwb2ludPEBAXBUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+AAEgbXVsdGlzaWcAATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2gEASBDYWxsSGFzaAABBMhBIG11bHRpc2lnIG9wZXJhdGlvbiBoYXMgYmVlbiBhcHByb3ZlZCBieSBzb21lb25lLkBNdWx0aXNpZ0V4ZWN1dGVkFAEkYXBwcm92aW5nAAEwVDo6QWNjb3VudElkAAEkdGltZXBvaW508QEBcFRpbWVwb2ludDxCbG9ja051bWJlckZvcjxUPj4AASBtdWx0aXNpZwABMFQ6OkFjY291bnRJZAABJGNhbGxfaGFzaAQBIENhbGxIYXNoAAEYcmVzdWx05QEBOERpc3BhdGNoUmVzdWx0AAIEnEEgbXVsdGlzaWcgb3BlcmF0aW9uIGhhcyBiZWVuIGV4ZWN1dGVkLkRNdWx0aXNpZ0NhbmNlbGxlZBABKGNhbmNlbGxpbmcAATBUOjpBY2NvdW50SWQAASR0aW1lcG9pbnTxAQFwVGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+PgABIG11bHRpc2lnAAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoBAEgQ2FsbEhhc2gAAwSgQSBtdWx0aXNpZyBvcGVyYXRpb24gaGFzIGJlZW4gY2FuY2VsbGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldPEBCDxwYWxsZXRfbXVsdGlzaWckVGltZXBvaW50BCxCbG9ja051bWJlcgEQAAgBGGhlaWdodBABLEJsb2NrTnVtYmVyAAEUaW5kZXgQAQx1MzIAAPUBDDBwYWxsZXRfcHJveHkYcGFsbGV0FEV2ZW50BARUAAEUNFByb3h5RXhlY3V0ZWQEARhyZXN1bHTlAQE4RGlzcGF0Y2hSZXN1bHQAAAS8QSBwcm94eSB3YXMgZXhlY3V0ZWQgY29ycmVjdGx5LCB3aXRoIHRoZSBnaXZlbi4sUHVyZUNyZWF0ZWQQARBwdXJlAAEwVDo6QWNjb3VudElkAAEMd2hvAAEwVDo6QWNjb3VudElkAAEocHJveHlfdHlwZfkBATBUOjpQcm94eVR5cGUAAVBkaXNhbWJpZ3VhdGlvbl9pbmRleP0BAQx1MTYAAQjcQSBwdXJlIGFjY291bnQgaGFzIGJlZW4gY3JlYXRlZCBieSBuZXcgcHJveHkgd2l0aCBnaXZlbpBkaXNhbWJpZ3VhdGlvbiBpbmRleCBhbmQgcHJveHkgdHlwZS4kQW5ub3VuY2VkDAEQcmVhbAABMFQ6OkFjY291bnRJZAABFHByb3h5AAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoMAE0Q2FsbEhhc2hPZjxUPgACBOBBbiBhbm5vdW5jZW1lbnQgd2FzIHBsYWNlZCB0byBtYWtlIGEgY2FsbCBpbiB0aGUgZnV0dXJlLihQcm94eUFkZGVkEAEkZGVsZWdhdG9yAAEwVDo6QWNjb3VudElkAAEkZGVsZWdhdGVlAAEwVDo6QWNjb3VudElkAAEocHJveHlfdHlwZfkBATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAMESEEgcHJveHkgd2FzIGFkZGVkLjBQcm94eVJlbW92ZWQQASRkZWxlZ2F0b3IAATBUOjpBY2NvdW50SWQAASRkZWxlZ2F0ZWUAATBUOjpBY2NvdW50SWQAAShwcm94eV90eXBl+QEBMFQ6OlByb3h5VHlwZQABFGRlbGF5EAFEQmxvY2tOdW1iZXJGb3I8VD4ABARQQSBwcm94eSB3YXMgcmVtb3ZlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXT5AQhwY29sbGVjdGl2ZXNfcG9sa2Fkb3RfcnVudGltZSRQcm94eVR5cGUAARwMQW55AAAALE5vblRyYW5zZmVyAAEALENhbmNlbFByb3h5AAIAIENvbGxhdG9yAAMAIEFsbGlhbmNlAAQAKEZlbGxvd3NoaXAABQAoQW1iYXNzYWRvcgAGAAD9AQAABQQAAQIMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQURXZlbnQEBFQAAQwUTm90ZWQEARBoYXNoMAEcVDo6SGFzaAAABGhBIHByZWltYWdlIGhhcyBiZWVuIG5vdGVkLiRSZXF1ZXN0ZWQEARBoYXNoMAEcVDo6SGFzaAABBHhBIHByZWltYWdlIGhhcyBiZWVuIHJlcXVlc3RlZC4cQ2xlYXJlZAQBEGhhc2gwARxUOjpIYXNoAAIEbEEgcHJlaW1hZ2UgaGFzIGJlbiBjbGVhcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldAUCDEBwYWxsZXRfc2NoZWR1bGVyGHBhbGxldBRFdmVudAQEVAABGCRTY2hlZHVsZWQIARB3aGVuEAFEQmxvY2tOdW1iZXJGb3I8VD4AARRpbmRleBABDHUzMgAABFBTY2hlZHVsZWQgc29tZSB0YXNrLiBDYW5jZWxlZAgBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABFGluZGV4EAEMdTMyAAEETENhbmNlbGVkIHNvbWUgdGFzay4oRGlzcGF0Y2hlZAwBEHRhc2sJAgF4VGFza0FkZHJlc3M8QmxvY2tOdW1iZXJGb3I8VD4+AAEIaWSAAUBPcHRpb248VGFza05hbWU+AAEYcmVzdWx05QEBOERpc3BhdGNoUmVzdWx0AAIEVERpc3BhdGNoZWQgc29tZSB0YXNrLjxDYWxsVW5hdmFpbGFibGUIARB0YXNrCQIBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkgAFAT3B0aW9uPFRhc2tOYW1lPgADBCkBVGhlIGNhbGwgZm9yIHRoZSBwcm92aWRlZCBoYXNoIHdhcyBub3QgZm91bmQgc28gdGhlIHRhc2sgaGFzIGJlZW4gYWJvcnRlZC44UGVyaW9kaWNGYWlsZWQIARB0YXNrCQIBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkgAFAT3B0aW9uPFRhc2tOYW1lPgAEBD0BVGhlIGdpdmVuIHRhc2sgd2FzIHVuYWJsZSB0byBiZSByZW5ld2VkIHNpbmNlIHRoZSBhZ2VuZGEgaXMgZnVsbCBhdCB0aGF0IGJsb2NrLlRQZXJtYW5lbnRseU92ZXJ3ZWlnaHQIARB0YXNrCQIBeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkgAFAT3B0aW9uPFRhc2tOYW1lPgAFBPBUaGUgZ2l2ZW4gdGFzayBjYW4gbmV2ZXIgYmUgZXhlY3V0ZWQgc2luY2UgaXQgaXMgb3ZlcndlaWdodC4EMEV2ZW50cyB0eXBlLgkCAAAECBAQAA0CDERwYWxsZXRfYXNzZXRfcmF0ZRhwYWxsZXQURXZlbnQEBFQAAQxAQXNzZXRSYXRlQ3JlYXRlZAgBKGFzc2V0X2tpbmQRAgEwVDo6QXNzZXRLaW5kAAEQcmF0ZRUCASRGaXhlZFUxMjgAAABAQXNzZXRSYXRlUmVtb3ZlZAQBKGFzc2V0X2tpbmQRAgEwVDo6QXNzZXRLaW5kAAEAQEFzc2V0UmF0ZVVwZGF0ZWQMAShhc3NldF9raW5kEQIBMFQ6OkFzc2V0S2luZAABDG9sZBUCASRGaXhlZFUxMjgAAQxuZXcVAgEkRml4ZWRVMTI4AAIABHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0EQIMXHBvbGthZG90X3J1bnRpbWVfY29tbW9uFGltcGxzXFZlcnNpb25lZExvY2F0YWJsZUFzc2V0AAEICFYzCAEgbG9jYXRpb26tAQFYeGNtOjp2Mzo6TXVsdGlMb2NhdGlvbgABIGFzc2V0X2lkqQEBQHhjbTo6djM6OkFzc2V0SWQAAwAIVjQIASBsb2NhdGlvbqwBRHhjbTo6djQ6OkxvY2F0aW9uAAEgYXNzZXRfaWQNAQFAeGNtOjp2NDo6QXNzZXRJZAAEAAAVAgw0c3BfYXJpdGhtZXRpYyxmaXhlZF9wb2ludCRGaXhlZFUxMjgAAAQAGAEQdTEyOAAAGQIMPHBhbGxldF9hbGxpYW5jZRhwYWxsZXQURXZlbnQIBFQABEkAATQoTmV3UnVsZVNldAQBEHJ1bGUdAgEMQ2lkAAAEYEEgbmV3IHJ1bGUgaGFzIGJlZW4gc2V0LiRBbm5vdW5jZWQEATBhbm5vdW5jZW1lbnQdAgEMQ2lkAAEElEEgbmV3IGFubm91bmNlbWVudCBoYXMgYmVlbiBwcm9wb3NlZC5MQW5ub3VuY2VtZW50UmVtb3ZlZAQBMGFubm91bmNlbWVudB0CAQxDaWQAAgSoQW4gb24tY2hhaW4gYW5ub3VuY2VtZW50IGhhcyBiZWVuIHJlbW92ZWQuSE1lbWJlcnNJbml0aWFsaXplZAgBHGZlbGxvd3OUAURWZWM8VDo6QWNjb3VudElkPgABGGFsbGllc5QBRFZlYzxUOjpBY2NvdW50SWQ+AAMEAQFTb21lIGFjY291bnRzIGhhdmUgYmVlbiBpbml0aWFsaXplZCBhcyBtZW1iZXJzIChmZWxsb3dzL2FsbGllcykuNE5ld0FsbHlKb2luZWQMARBhbGx5AAEwVDo6QWNjb3VudElkAAEkbm9taW5hdG9yLQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEgcmVzZXJ2ZWQxAgFcT3B0aW9uPEJhbGFuY2VPZjxULCBJPj4ABAT4QW4gYWNjb3VudCBoYXMgYmVlbiBhZGRlZCBhcyBhbiBBbGx5IGFuZCByZXNlcnZlZCBpdHMgZGVwb3NpdC4wQWxseUVsZXZhdGVkBAEQYWxseQABMFQ6OkFjY291bnRJZAAFBJBBbiBhbGx5IGhhcyBiZWVuIGVsZXZhdGVkIHRvIEZlbGxvdy50TWVtYmVyUmV0aXJlbWVudFBlcmlvZFN0YXJ0ZWQEARhtZW1iZXIAATBUOjpBY2NvdW50SWQABgQRAUEgbWVtYmVyIGdhdmUgcmV0aXJlbWVudCBub3RpY2UgYW5kIHRoZWlyIHJldGlyZW1lbnQgcGVyaW9kIHN0YXJ0ZWQuNE1lbWJlclJldGlyZWQIARhtZW1iZXIAATBUOjpBY2NvdW50SWQAASh1bnJlc2VydmVkMQIBXE9wdGlvbjxCYWxhbmNlT2Y8VCwgST4+AAcExEEgbWVtYmVyIGhhcyByZXRpcmVkIHdpdGggaXRzIGRlcG9zaXQgdW5yZXNlcnZlZC4wTWVtYmVyS2lja2VkCAEYbWVtYmVyAAEwVDo6QWNjb3VudElkAAEcc2xhc2hlZDECAVxPcHRpb248QmFsYW5jZU9mPFQsIEk+PgAIBNhBIG1lbWJlciBoYXMgYmVlbiBraWNrZWQgb3V0IHdpdGggaXRzIGRlcG9zaXQgc2xhc2hlZC5UVW5zY3J1cHVsb3VzSXRlbUFkZGVkBAEUaXRlbXM1AgF0VmVjPFVuc2NydXB1bG91c0l0ZW1PZjxULCBJPj4ACQQlAUFjY291bnRzIG9yIHdlYnNpdGVzIGhhdmUgYmVlbiBhZGRlZCBpbnRvIHRoZSBsaXN0IG9mIHVuc2NydXB1bG91cyBpdGVtcy5cVW5zY3J1cHVsb3VzSXRlbVJlbW92ZWQEARRpdGVtczUCAXRWZWM8VW5zY3J1cHVsb3VzSXRlbU9mPFQsIEk+PgAKBC0BQWNjb3VudHMgb3Igd2Vic2l0ZXMgaGF2ZSBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgbGlzdCBvZiB1bnNjcnVwdWxvdXMgaXRlbXMuREFsbGlhbmNlRGlzYmFuZGVkDAE4ZmVsbG93X21lbWJlcnMQAQx1MzIAATBhbGx5X21lbWJlcnMQAQx1MzIAASh1bnJlc2VydmVkEAEMdTMyAAsEMQFBbGxpYW5jZSBkaXNiYW5kZWQuIEluY2x1ZGVzIG51bWJlciBkZWxldGVkIG1lbWJlcnMgYW5kIHVucmVzZXJ2ZWQgZGVwb3NpdHMuPEZlbGxvd0FiZGljYXRlZAQBGGZlbGxvdwABMFQ6OkFjY291bnRJZAAMBPRBIEZlbGxvdyBhYmRpY2F0ZWQgdGhlaXIgdm90aW5nIHJpZ2h0cy4gVGhleSBhcmUgbm93IGFuIEFsbHkuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0HQIMPHBhbGxldF9hbGxpYW5jZRR0eXBlcwxDaWQAAAwBHHZlcnNpb24hAgEcVmVyc2lvbgABFGNvZGVjLAEMdTY0AAEQaGFzaCUCASRNdWx0aWhhc2gAACECDDxwYWxsZXRfYWxsaWFuY2UUdHlwZXMcVmVyc2lvbgABCAhWMAAAAAhWMQABAAAlAgw8cGFsbGV0X2FsbGlhbmNlFHR5cGVzJE11bHRpaGFzaAAACAEQY29kZSwBDHU2NAABGGRpZ2VzdCkCAXBCb3VuZGVkVmVjPHU4LCBDb25zdFUzMjw2OD4+AAApAgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAC0CBBhPcHRpb24EBFQBAAEIEE5vbmUAAAAQU29tZQQAAAAAAQAAMQIEGE9wdGlvbgQEVAEYAQgQTm9uZQAAABBTb21lBAAYAAABAAA1AgAAAjkCADkCCDxwYWxsZXRfYWxsaWFuY2VAVW5zY3J1cHVsb3VzSXRlbQgkQWNjb3VudElkAQAMVXJsAT0CAQgkQWNjb3VudElkBAAAASRBY2NvdW50SWQAAAAcV2Vic2l0ZQQAPQIBDFVybAABAAA9AgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAEECDERwYWxsZXRfY29sbGVjdGl2ZRhwYWxsZXQURXZlbnQIBFQABEkAARwgUHJvcG9zZWQQARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAE0cHJvcG9zYWxfaGFzaDABHFQ6Okhhc2gAASR0aHJlc2hvbGQQASxNZW1iZXJDb3VudAAACEkBQSBtb3Rpb24gKGdpdmVuIGhhc2gpIGhhcyBiZWVuIHByb3Bvc2VkIChieSBnaXZlbiBhY2NvdW50KSB3aXRoIGEgdGhyZXNob2xkIChnaXZlbjxgTWVtYmVyQ291bnRgKS4UVm90ZWQUARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAE0cHJvcG9zYWxfaGFzaDABHFQ6Okhhc2gAARR2b3RlZHgBEGJvb2wAAQx5ZXMQASxNZW1iZXJDb3VudAABCG5vEAEsTWVtYmVyQ291bnQAAQgFAUEgbW90aW9uIChnaXZlbiBoYXNoKSBoYXMgYmVlbiB2b3RlZCBvbiBieSBnaXZlbiBhY2NvdW50LCBsZWF2aW5nFQFhIHRhbGx5ICh5ZXMgdm90ZXMgYW5kIG5vIHZvdGVzIGdpdmVuIHJlc3BlY3RpdmVseSBhcyBgTWVtYmVyQ291bnRgKS4gQXBwcm92ZWQEATRwcm9wb3NhbF9oYXNoMAEcVDo6SGFzaAACBMBBIG1vdGlvbiB3YXMgYXBwcm92ZWQgYnkgdGhlIHJlcXVpcmVkIHRocmVzaG9sZC4sRGlzYXBwcm92ZWQEATRwcm9wb3NhbF9oYXNoMAEcVDo6SGFzaAADBNBBIG1vdGlvbiB3YXMgbm90IGFwcHJvdmVkIGJ5IHRoZSByZXF1aXJlZCB0aHJlc2hvbGQuIEV4ZWN1dGVkCAE0cHJvcG9zYWxfaGFzaDABHFQ6Okhhc2gAARhyZXN1bHTlAQE4RGlzcGF0Y2hSZXN1bHQABAQhAUEgbW90aW9uIHdhcyBleGVjdXRlZDsgcmVzdWx0IHdpbGwgYmUgYE9rYCBpZiBpdCByZXR1cm5lZCB3aXRob3V0IGVycm9yLjhNZW1iZXJFeGVjdXRlZAgBNHByb3Bvc2FsX2hhc2gwARxUOjpIYXNoAAEYcmVzdWx05QEBOERpc3BhdGNoUmVzdWx0AAUESQFBIHNpbmdsZSBtZW1iZXIgZGlkIHNvbWUgYWN0aW9uOyByZXN1bHQgd2lsbCBiZSBgT2tgIGlmIGl0IHJldHVybmVkIHdpdGhvdXQgZXJyb3IuGENsb3NlZAwBNHByb3Bvc2FsX2hhc2gwARxUOjpIYXNoAAEMeWVzEAEsTWVtYmVyQ291bnQAAQhubxABLE1lbWJlckNvdW50AAYEVQFBIHByb3Bvc2FsIHdhcyBjbG9zZWQgYmVjYXVzZSBpdHMgdGhyZXNob2xkIHdhcyByZWFjaGVkIG9yIGFmdGVyIGl0cyBkdXJhdGlvbiB3YXMgdXAuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0RQIMYHBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZRhwYWxsZXQURXZlbnQIBFQABEkAARQsTWVtYmVyQWRkZWQEAQx3aG8AATBUOjpBY2NvdW50SWQAAAR4QSBtZW1iZXIgYHdob2AgaGFzIGJlZW4gYWRkZWQuLFJhbmtDaGFuZ2VkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQcmFua/0BARBSYW5rAAEE9FRoZSBtZW1iZXIgYHdob2BzZSByYW5rIGhhcyBiZWVuIGNoYW5nZWQgdG8gdGhlIGdpdmVuIGByYW5rYC40TWVtYmVyUmVtb3ZlZAgBDHdobwABMFQ6OkFjY291bnRJZAABEHJhbmv9AQEQUmFuawACBBkBVGhlIG1lbWJlciBgd2hvYCBvZiBnaXZlbiBgcmFua2AgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBjb2xsZWN0aXZlLhRWb3RlZBABDHdobwABMFQ6OkFjY291bnRJZAABEHBvbGwQAURQb2xsSW5kZXhPZjxULCBJPgABEHZvdGVJAgEoVm90ZVJlY29yZAABFHRhbGx5TQIBNFRhbGx5T2Y8VCwgST4AAwhVAVRoZSBtZW1iZXIgYHdob2AgaGFzIHZvdGVkIGZvciB0aGUgYHBvbGxgIHdpdGggdGhlIGdpdmVuIGB2b3RlYCBsZWFkaW5nIHRvIGFuIHVwZGF0ZWQgYHRhbGx5YC48TWVtYmVyRXhjaGFuZ2VkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcbmV3X3dobwABMFQ6OkFjY291bnRJZAAEBPBUaGUgbWVtYmVyIGB3aG9gIGhhZCB0aGVpciBgQWNjb3VudElkYCBjaGFuZ2VkIHRvIGBuZXdfd2hvYC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXRJAghgcGFsbGV0X3JhbmtlZF9jb2xsZWN0aXZlKFZvdGVSZWNvcmQAAQgMQXllBAAQARRWb3RlcwAAAAxOYXkEABABFFZvdGVzAAEAAE0CCGBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmUUVGFsbHkMBFQABEkABE0AAAwBJGJhcmVfYXllcxABLE1lbWJlckluZGV4AAEQYXllcxABFFZvdGVzAAEQbmF5cxABFFZvdGVzAABRAgxAcGFsbGV0X3JlZmVyZW5kYRhwYWxsZXQURXZlbnQIBFQABEkAAUAkU3VibWl0dGVkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdHJhY2v9AQE8VHJhY2tJZE9mPFQsIEk+BCUBVGhlIHRyYWNrIChhbmQgYnkgZXh0ZW5zaW9uIHByb3Bvc2FsIGRpc3BhdGNoIG9yaWdpbikgb2YgdGhpcyByZWZlcmVuZHVtLgEgcHJvcG9zYWxVAgFMQm91bmRlZENhbGxPZjxULCBJPgSAVGhlIHByb3Bvc2FsIGZvciB0aGUgcmVmZXJlbmR1bS4ABIBBIHJlZmVyZW5kdW0gaGFzIGJlZW4gc3VibWl0dGVkLlREZWNpc2lvbkRlcG9zaXRQbGFjZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgEElFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHBsYWNlZC5cRGVjaXNpb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgIEnFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHJlZnVuZGVkLjhEZXBvc2l0U2xhc2hlZAgBDHdobwABMFQ6OkFjY291bnRJZASMVGhlIGFjY291bnQgd2hvIHBsYWNlZCB0aGUgZGVwb3NpdC4BGGFtb3VudBgBPEJhbGFuY2VPZjxULCBJPgSEVGhlIGFtb3VudCBwbGFjZWQgYnkgdGhlIGFjY291bnQuAwRsQSBkZXBvc2l0IGhhcyBiZWVuIHNsYXNoZWQuPERlY2lzaW9uU3RhcnRlZBABFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRyYWNr/QEBPFRyYWNrSWRPZjxULCBJPgQlAVRoZSB0cmFjayAoYW5kIGJ5IGV4dGVuc2lvbiBwcm9wb3NhbCBkaXNwYXRjaCBvcmlnaW4pIG9mIHRoaXMgcmVmZXJlbmR1bS4BIHByb3Bvc2FsVQIBTEJvdW5kZWRDYWxsT2Y8VCwgST4EgFRoZSBwcm9wb3NhbCBmb3IgdGhlIHJlZmVyZW5kdW0uARR0YWxseU0CASBUOjpUYWxseQS4VGhlIGN1cnJlbnQgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgQEvEEgcmVmZXJlbmR1bSBoYXMgbW92ZWQgaW50byB0aGUgZGVjaWRpbmcgcGhhc2UuOENvbmZpcm1TdGFydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgUAOENvbmZpcm1BYm9ydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgYAJENvbmZpcm1lZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5TQIBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgcEIQFBIHJlZmVyZW5kdW0gaGFzIGVuZGVkIGl0cyBjb25maXJtYXRpb24gcGhhc2UgYW5kIGlzIHJlYWR5IGZvciBhcHByb3ZhbC4gQXBwcm92ZWQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uCAQNAUEgcmVmZXJlbmR1bSBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXRzIHByb3Bvc2FsIGhhcyBiZWVuIHNjaGVkdWxlZC4gUmVqZWN0ZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseU0CASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4JBKxBIHByb3Bvc2FsIGhhcyBiZWVuIHJlamVjdGVkIGJ5IHJlZmVyZW5kdW0uIFRpbWVkT3V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdGFsbHlNAgEgVDo6VGFsbHkEsFRoZSBmaW5hbCB0YWxseSBvZiB2b3RlcyBpbiB0aGlzIHJlZmVyZW5kdW0uCgTYQSByZWZlcmVuZHVtIGhhcyBiZWVuIHRpbWVkIG91dCB3aXRob3V0IGJlaW5nIGRlY2lkZWQuJENhbmNlbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5TQIBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgsEgEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBjYW5jZWxsZWQuGEtpbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5TQIBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgwEdEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBraWxsZWQuZFN1Ym1pc3Npb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50Lg0EpFRoZSBzdWJtaXNzaW9uIGRlcG9zaXQgaGFzIGJlZW4gcmVmdW5kZWQuLE1ldGFkYXRhU2V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEQaGFzaDABHFQ6Okhhc2gEOFByZWltYWdlIGhhc2guDgScTWV0YWRhdGEgZm9yIGEgcmVmZXJlbmR1bSBoYXMgYmVlbiBzZXQuPE1ldGFkYXRhQ2xlYXJlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BEGhhc2gwARxUOjpIYXNoBDhQcmVpbWFnZSBoYXNoLg8ErE1ldGFkYXRhIGZvciBhIHJlZmVyZW5kdW0gaGFzIGJlZW4gY2xlYXJlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXRVAhA0ZnJhbWVfc3VwcG9ydBh0cmFpdHMkcHJlaW1hZ2VzHEJvdW5kZWQIBFQBWQIESAEVBAEMGExlZ2FjeQQBEGhhc2gwASRIOjpPdXRwdXQAAAAYSW5saW5lBAAZBAE0Qm91bmRlZElubGluZQABABhMb29rdXAIARBoYXNoMAEkSDo6T3V0cHV0AAEMbGVuEAEMdTMyAAIAAFkCCHBjb2xsZWN0aXZlc19wb2xrYWRvdF9ydW50aW1lLFJ1bnRpbWVDYWxsAAF0GFN5c3RlbQQAXQIBrQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U3lzdGVtLCBSdW50aW1lPgAAADxQYXJhY2hhaW5TeXN0ZW0EAG0CAdEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFBhcmFjaGFpblN5c3RlbSwgUnVudGltZT4AAQAkVGltZXN0YW1wBAChAgG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxUaW1lc3RhbXAsIFJ1bnRpbWU+AAIANFBhcmFjaGFpbkluZm8EAKUCAckBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFBhcmFjaGFpbkluZm8sIFJ1bnRpbWU+AAMAIEJhbGFuY2VzBACpAgG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxCYWxhbmNlcywgUnVudGltZT4ACgBEQ29sbGF0b3JTZWxlY3Rpb24EALkCAdkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPENvbGxhdG9yU2VsZWN0aW9uLCBSdW50aW1lPgAVABxTZXNzaW9uBAC9AgGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTZXNzaW9uLCBSdW50aW1lPgAWACRYY21wUXVldWUEAM0CAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFhjbXBRdWV1ZSwgUnVudGltZT4AHgAsUG9sa2Fkb3RYY20EANECAcEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFBvbGthZG90WGNtLCBSdW50aW1lPgAfAChDdW11bHVzWGNtBABxAwG9AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxDdW11bHVzWGNtLCBSdW50aW1lPgAgADBNZXNzYWdlUXVldWUEAHUDAcUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE1lc3NhZ2VRdWV1ZSwgUnVudGltZT4AIgAcVXRpbGl0eQQAeQMBsQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8VXRpbGl0eSwgUnVudGltZT4AKAAgTXVsdGlzaWcEAKEDAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE11bHRpc2lnLCBSdW50aW1lPgApABRQcm94eQQAqQMBqQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UHJveHksIFJ1bnRpbWU+ACoAIFByZWltYWdlBACxAwG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxQcmVpbWFnZSwgUnVudGltZT4AKwAkU2NoZWR1bGVyBAC5AwG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTY2hlZHVsZXIsIFJ1bnRpbWU+ACwAJEFzc2V0UmF0ZQQAwQMBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QXNzZXRSYXRlLCBSdW50aW1lPgAtACBBbGxpYW5jZQQAxQMBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QWxsaWFuY2UsIFJ1bnRpbWU+ADIAOEFsbGlhbmNlTW90aW9uBADNAwHNAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxBbGxpYW5jZU1vdGlvbiwgUnVudGltZT4AMwBQRmVsbG93c2hpcENvbGxlY3RpdmUEANEDAeUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEZlbGxvd3NoaXBDb2xsZWN0aXZlLCBSdW50aW1lPgA8AExGZWxsb3dzaGlwUmVmZXJlbmRhBADVAwHhAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxGZWxsb3dzaGlwUmVmZXJlbmRhLCBSdW50aW1lPgA9ADhGZWxsb3dzaGlwQ29yZQQA4QMBzQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8RmVsbG93c2hpcENvcmUsIFJ1bnRpbWU+AD8AQEZlbGxvd3NoaXBTYWxhcnkEAPkDAdUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEZlbGxvd3NoaXBTYWxhcnksIFJ1bnRpbWU+AEAASEZlbGxvd3NoaXBUcmVhc3VyeQQA/QMB3QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8RmVsbG93c2hpcFRyZWFzdXJ5LCBSdW50aW1lPgBBAFBBbWJhc3NhZG9yQ29sbGVjdGl2ZQQAAQQB5QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QW1iYXNzYWRvckNvbGxlY3RpdmUsIFJ1bnRpbWU+AEYATEFtYmFzc2Fkb3JSZWZlcmVuZGEEAAUEAeEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEFtYmFzc2Fkb3JSZWZlcmVuZGEsIFJ1bnRpbWU+AEcAOEFtYmFzc2Fkb3JDb3JlBAAJBAHNAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxBbWJhc3NhZG9yQ29yZSwgUnVudGltZT4ASQBAQW1iYXNzYWRvclNhbGFyeQQADQQB1QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QW1iYXNzYWRvclNhbGFyeSwgUnVudGltZT4ASgBIQW1iYXNzYWRvclRyZWFzdXJ5BAARBAHdAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxBbWJhc3NhZG9yVHJlYXN1cnksIFJ1bnRpbWU+AEsAAF0CDDBmcmFtZV9zeXN0ZW0YcGFsbGV0EENhbGwEBFQAASwYcmVtYXJrBAEYcmVtYXJrNAEcVmVjPHU4PgAABFxTZWUgW2BQYWxsZXQ6OnJlbWFya2BdLjhzZXRfaGVhcF9wYWdlcwQBFHBhZ2VzLAEMdTY0AAEEfFNlZSBbYFBhbGxldDo6c2V0X2hlYXBfcGFnZXNgXS4gc2V0X2NvZGUEARBjb2RlNAEcVmVjPHU4PgACBGRTZWUgW2BQYWxsZXQ6OnNldF9jb2RlYF0uXHNldF9jb2RlX3dpdGhvdXRfY2hlY2tzBAEQY29kZTQBHFZlYzx1OD4AAwSgU2VlIFtgUGFsbGV0OjpzZXRfY29kZV93aXRob3V0X2NoZWNrc2BdLixzZXRfc3RvcmFnZQQBFGl0ZW1zYQIBNFZlYzxLZXlWYWx1ZT4ABARwU2VlIFtgUGFsbGV0OjpzZXRfc3RvcmFnZWBdLjBraWxsX3N0b3JhZ2UEARBrZXlzaQIBIFZlYzxLZXk+AAUEdFNlZSBbYFBhbGxldDo6a2lsbF9zdG9yYWdlYF0uLGtpbGxfcHJlZml4CAEYcHJlZml4NAEMS2V5AAEcc3Via2V5cxABDHUzMgAGBHBTZWUgW2BQYWxsZXQ6OmtpbGxfcHJlZml4YF0uRHJlbWFya193aXRoX2V2ZW50BAEYcmVtYXJrNAEcVmVjPHU4PgAHBIhTZWUgW2BQYWxsZXQ6OnJlbWFya193aXRoX2V2ZW50YF0uRGF1dGhvcml6ZV91cGdyYWRlBAEkY29kZV9oYXNoMAEcVDo6SGFzaAAJBIhTZWUgW2BQYWxsZXQ6OmF1dGhvcml6ZV91cGdyYWRlYF0ugGF1dGhvcml6ZV91cGdyYWRlX3dpdGhvdXRfY2hlY2tzBAEkY29kZV9oYXNoMAEcVDo6SGFzaAAKBMRTZWUgW2BQYWxsZXQ6OmF1dGhvcml6ZV91cGdyYWRlX3dpdGhvdXRfY2hlY2tzYF0uYGFwcGx5X2F1dGhvcml6ZWRfdXBncmFkZQQBEGNvZGU0ARxWZWM8dTg+AAsEpFNlZSBbYFBhbGxldDo6YXBwbHlfYXV0aG9yaXplZF91cGdyYWRlYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLmECAAACZQIAZQIAAAQINDQAaQIAAAI0AG0CDHxjdW11bHVzX3BhbGxldF9wYXJhY2hhaW5fc3lzdGVtGHBhbGxldBBDYWxsBARUAAEQTHNldF92YWxpZGF0aW9uX2RhdGEEARBkYXRhcQIBVFBhcmFjaGFpbkluaGVyZW50RGF0YQAABJBTZWUgW2BQYWxsZXQ6OnNldF92YWxpZGF0aW9uX2RhdGFgXS5gc3Vkb19zZW5kX3Vwd2FyZF9tZXNzYWdlBAEcbWVzc2FnZTQBNFVwd2FyZE1lc3NhZ2UAAQSkU2VlIFtgUGFsbGV0OjpzdWRvX3NlbmRfdXB3YXJkX21lc3NhZ2VgXS5EYXV0aG9yaXplX3VwZ3JhZGUIASRjb2RlX2hhc2gwARxUOjpIYXNoAAE0Y2hlY2tfdmVyc2lvbngBEGJvb2wAAgSIU2VlIFtgUGFsbGV0OjphdXRob3JpemVfdXBncmFkZWBdLmBlbmFjdF9hdXRob3JpemVkX3VwZ3JhZGUEARBjb2RlNAEcVmVjPHU4PgADBKRTZWUgW2BQYWxsZXQ6OmVuYWN0X2F1dGhvcml6ZWRfdXBncmFkZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy5xAgiUY3VtdWx1c19wcmltaXRpdmVzX3BhcmFjaGFpbl9pbmhlcmVudFRQYXJhY2hhaW5JbmhlcmVudERhdGEAABABPHZhbGlkYXRpb25fZGF0YXUCAVxQZXJzaXN0ZWRWYWxpZGF0aW9uRGF0YQABRHJlbGF5X2NoYWluX3N0YXRlfQIBVHNwX3RyaWU6OlN0b3JhZ2VQcm9vZgABRGRvd253YXJkX21lc3NhZ2VzhQIBbFZlYzxJbmJvdW5kRG93bndhcmRNZXNzYWdlPgABTGhvcml6b250YWxfbWVzc2FnZXONAgGkQlRyZWVNYXA8UGFyYUlkLCBWZWM8SW5ib3VuZEhybXBNZXNzYWdlPj4AAHUCDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2XFBlcnNpc3RlZFZhbGlkYXRpb25EYXRhCARIATAETgEQABABLHBhcmVudF9oZWFkeQIBIEhlYWREYXRhAAFMcmVsYXlfcGFyZW50X251bWJlchABBE4AAWRyZWxheV9wYXJlbnRfc3RvcmFnZV9yb290MAEESAABMG1heF9wb3Zfc2l6ZRABDHUzMgAAeQIMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXMgSGVhZERhdGEAAAQANAEcVmVjPHU4PgAAfQIMHHNwX3RyaWU0c3RvcmFnZV9wcm9vZjBTdG9yYWdlUHJvb2YAAAQBKHRyaWVfbm9kZXOBAgFEQlRyZWVTZXQ8VmVjPHU4Pj4AAIECBCBCVHJlZVNldAQEVAE0AAQAaQIAAACFAgAAAokCAIkCCGBwb2xrYWRvdF9jb3JlX3ByaW1pdGl2ZXNYSW5ib3VuZERvd253YXJkTWVzc2FnZQQsQmxvY2tOdW1iZXIBEAAIARxzZW50X2F0EAEsQmxvY2tOdW1iZXIAAQxtc2c0ATxEb3dud2FyZE1lc3NhZ2UAAI0CBCBCVHJlZU1hcAgESwHZAQRWAZECAAQAmQIAAACRAgAAApUCAJUCCGBwb2xrYWRvdF9jb3JlX3ByaW1pdGl2ZXNISW5ib3VuZEhybXBNZXNzYWdlBCxCbG9ja051bWJlcgEQAAgBHHNlbnRfYXQQASxCbG9ja051bWJlcgABEGRhdGE0AVBzcF9zdGQ6OnZlYzo6VmVjPHU4PgAAmQIAAAKdAgCdAgAABAjZAZECAKECDEBwYWxsZXRfdGltZXN0YW1wGHBhbGxldBBDYWxsBARUAAEEDHNldAQBDG5vdygBJFQ6Ok1vbWVudAAABFBTZWUgW2BQYWxsZXQ6OnNldGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6lAgxYc3RhZ2luZ19wYXJhY2hhaW5faW5mbxhwYWxsZXQQQ2FsbAQEVAABAAQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6pAgw8cGFsbGV0X2JhbGFuY2VzGHBhbGxldBBDYWxsCARUAARJAAEgUHRyYW5zZmVyX2FsbG93X2RlYXRoCAEQZGVzdK0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFHZhbHVlzAEoVDo6QmFsYW5jZQAABJRTZWUgW2BQYWxsZXQ6OnRyYW5zZmVyX2FsbG93X2RlYXRoYF0uOGZvcmNlX3RyYW5zZmVyDAEYc291cmNlrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEQZGVzdK0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFHZhbHVlzAEoVDo6QmFsYW5jZQACBHxTZWUgW2BQYWxsZXQ6OmZvcmNlX3RyYW5zZmVyYF0uTHRyYW5zZmVyX2tlZXBfYWxpdmUIARBkZXN0rQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEUdmFsdWXMAShUOjpCYWxhbmNlAAMEkFNlZSBbYFBhbGxldDo6dHJhbnNmZXJfa2VlcF9hbGl2ZWBdLjB0cmFuc2Zlcl9hbGwIARBkZXN0rQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEoa2VlcF9hbGl2ZXgBEGJvb2wABAR0U2VlIFtgUGFsbGV0Ojp0cmFuc2Zlcl9hbGxgXS48Zm9yY2VfdW5yZXNlcnZlCAEMd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEYYW1vdW50GAEoVDo6QmFsYW5jZQAFBIBTZWUgW2BQYWxsZXQ6OmZvcmNlX3VucmVzZXJ2ZWBdLkB1cGdyYWRlX2FjY291bnRzBAEMd2hvlAFEVmVjPFQ6OkFjY291bnRJZD4ABgSEU2VlIFtgUGFsbGV0Ojp1cGdyYWRlX2FjY291bnRzYF0uRGZvcmNlX3NldF9iYWxhbmNlCAEMd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEgbmV3X2ZyZWXMAShUOjpCYWxhbmNlAAgEiFNlZSBbYFBhbGxldDo6Zm9yY2Vfc2V0X2JhbGFuY2VgXS5sZm9yY2VfYWRqdXN0X3RvdGFsX2lzc3VhbmNlCAEkZGlyZWN0aW9utQIBTEFkanVzdG1lbnREaXJlY3Rpb24AARRkZWx0YcwBKFQ6OkJhbGFuY2UACQSwU2VlIFtgUGFsbGV0Ojpmb3JjZV9hZGp1c3RfdG90YWxfaXNzdWFuY2VgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMurQIMKHNwX3J1bnRpbWUwbXVsdGlhZGRyZXNzME11bHRpQWRkcmVzcwgkQWNjb3VudElkAQAwQWNjb3VudEluZGV4AekBARQISWQEAAABJEFjY291bnRJZAAAABRJbmRleAQAsQIBMEFjY291bnRJbmRleAABAAxSYXcEADQBHFZlYzx1OD4AAgAkQWRkcmVzczMyBAAEASBbdTg7IDMyXQADACRBZGRyZXNzMjAEAMgBIFt1ODsgMjBdAAQAALECAAAG6QEAtQIMPHBhbGxldF9iYWxhbmNlcxR0eXBlc0xBZGp1c3RtZW50RGlyZWN0aW9uAAEIIEluY3JlYXNlAAAAIERlY3JlYXNlAAEAALkCDGRwYWxsZXRfY29sbGF0b3Jfc2VsZWN0aW9uGHBhbGxldBBDYWxsBARUAAEkRHNldF9pbnZ1bG5lcmFibGVzBAEMbmV3lAFEVmVjPFQ6OkFjY291bnRJZD4AAASIU2VlIFtgUGFsbGV0OjpzZXRfaW52dWxuZXJhYmxlc2BdLlhzZXRfZGVzaXJlZF9jYW5kaWRhdGVzBAEMbWF4EAEMdTMyAAEEnFNlZSBbYFBhbGxldDo6c2V0X2Rlc2lyZWRfY2FuZGlkYXRlc2BdLkhzZXRfY2FuZGlkYWN5X2JvbmQEARBib25kGAEwQmFsYW5jZU9mPFQ+AAIEjFNlZSBbYFBhbGxldDo6c2V0X2NhbmRpZGFjeV9ib25kYF0uVHJlZ2lzdGVyX2FzX2NhbmRpZGF0ZQADBJhTZWUgW2BQYWxsZXQ6OnJlZ2lzdGVyX2FzX2NhbmRpZGF0ZWBdLjBsZWF2ZV9pbnRlbnQABAR0U2VlIFtgUGFsbGV0OjpsZWF2ZV9pbnRlbnRgXS5AYWRkX2ludnVsbmVyYWJsZQQBDHdobwABMFQ6OkFjY291bnRJZAAFBIRTZWUgW2BQYWxsZXQ6OmFkZF9pbnZ1bG5lcmFibGVgXS5McmVtb3ZlX2ludnVsbmVyYWJsZQQBDHdobwABMFQ6OkFjY291bnRJZAAGBJBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9pbnZ1bG5lcmFibGVgXS4sdXBkYXRlX2JvbmQEASxuZXdfZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgAHBHBTZWUgW2BQYWxsZXQ6OnVwZGF0ZV9ib25kYF0uTHRha2VfY2FuZGlkYXRlX3Nsb3QIARxkZXBvc2l0GAEwQmFsYW5jZU9mPFQ+AAEYdGFyZ2V0AAEwVDo6QWNjb3VudElkAAgEkFNlZSBbYFBhbGxldDo6dGFrZV9jYW5kaWRhdGVfc2xvdGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy69Agw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0EENhbGwEBFQAAQggc2V0X2tleXMIARBrZXlzwQIBHFQ6OktleXMAARRwcm9vZjQBHFZlYzx1OD4AAARkU2VlIFtgUGFsbGV0OjpzZXRfa2V5c2BdLihwdXJnZV9rZXlzAAEEbFNlZSBbYFBhbGxldDo6cHVyZ2Vfa2V5c2BdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7BAghwY29sbGVjdGl2ZXNfcG9sa2Fkb3RfcnVudGltZSxTZXNzaW9uS2V5cwAABAEQYXVyYcUCAcQ8QXVyYSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAADFAhBEc3BfY29uc2Vuc3VzX2F1cmEcc3IyNTUxOSxhcHBfc3IyNTUxORhQdWJsaWMAAAQAyQIBPHNyMjU1MTk6OlB1YmxpYwAAyQIMHHNwX2NvcmUcc3IyNTUxORhQdWJsaWMAAAQABAEgW3U4OyAzMl0AAM0CDGRjdW11bHVzX3BhbGxldF94Y21wX3F1ZXVlGHBhbGxldBBDYWxsBARUAAEUVHN1c3BlbmRfeGNtX2V4ZWN1dGlvbgABBJhTZWUgW2BQYWxsZXQ6OnN1c3BlbmRfeGNtX2V4ZWN1dGlvbmBdLlByZXN1bWVfeGNtX2V4ZWN1dGlvbgACBJRTZWUgW2BQYWxsZXQ6OnJlc3VtZV94Y21fZXhlY3V0aW9uYF0uYHVwZGF0ZV9zdXNwZW5kX3RocmVzaG9sZAQBDG5ldxABDHUzMgADBKRTZWUgW2BQYWxsZXQ6OnVwZGF0ZV9zdXNwZW5kX3RocmVzaG9sZGBdLlR1cGRhdGVfZHJvcF90aHJlc2hvbGQEAQxuZXcQAQx1MzIABASYU2VlIFtgUGFsbGV0Ojp1cGRhdGVfZHJvcF90aHJlc2hvbGRgXS5cdXBkYXRlX3Jlc3VtZV90aHJlc2hvbGQEAQxuZXcQAQx1MzIABQSgU2VlIFtgUGFsbGV0Ojp1cGRhdGVfcmVzdW1lX3RocmVzaG9sZGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7RAgwocGFsbGV0X3hjbRhwYWxsZXQQQ2FsbAQEVAABOBBzZW5kCAEQZGVzdMkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEcbWVzc2FnZdUCAVRCb3g8VmVyc2lvbmVkWGNtPCgpPj4AAARUU2VlIFtgUGFsbGV0OjpzZW5kYF0uPHRlbGVwb3J0X2Fzc2V0cxABEGRlc3TJAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5yQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHNlAQFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgABBIBTZWUgW2BQYWxsZXQ6OnRlbGVwb3J0X2Fzc2V0c2BdLlxyZXNlcnZlX3RyYW5zZmVyX2Fzc2V0cxABEGRlc3TJAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5yQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHNlAQFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgACBKBTZWUgW2BQYWxsZXQ6OnJlc2VydmVfdHJhbnNmZXJfYXNzZXRzYF0uHGV4ZWN1dGUIARxtZXNzYWdlOQMBtEJveDxWZXJzaW9uZWRYY208PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+PgABKG1heF93ZWlnaHQkARhXZWlnaHQAAwRgU2VlIFtgUGFsbGV0OjpleGVjdXRlYF0uRGZvcmNlX3hjbV92ZXJzaW9uCAEgbG9jYXRpb26sATRCb3g8TG9jYXRpb24+AAEcdmVyc2lvbhABKFhjbVZlcnNpb24ABASIU2VlIFtgUGFsbGV0Ojpmb3JjZV94Y21fdmVyc2lvbmBdLmRmb3JjZV9kZWZhdWx0X3hjbV92ZXJzaW9uBAFEbWF5YmVfeGNtX3ZlcnNpb25lAwFIT3B0aW9uPFhjbVZlcnNpb24+AAUEqFNlZSBbYFBhbGxldDo6Zm9yY2VfZGVmYXVsdF94Y21fdmVyc2lvbmBdLnhmb3JjZV9zdWJzY3JpYmVfdmVyc2lvbl9ub3RpZnkEASBsb2NhdGlvbskBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAYEvFNlZSBbYFBhbGxldDo6Zm9yY2Vfc3Vic2NyaWJlX3ZlcnNpb25fbm90aWZ5YF0ugGZvcmNlX3Vuc3Vic2NyaWJlX3ZlcnNpb25fbm90aWZ5BAEgbG9jYXRpb27JAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgAHBMRTZWUgW2BQYWxsZXQ6OmZvcmNlX3Vuc3Vic2NyaWJlX3ZlcnNpb25fbm90aWZ5YF0ufGxpbWl0ZWRfcmVzZXJ2ZV90cmFuc2Zlcl9hc3NldHMUARBkZXN0yQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AASxiZW5lZmljaWFyeckBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEYYXNzZXRzZQEBUEJveDxWZXJzaW9uZWRBc3NldHM+AAE4ZmVlX2Fzc2V0X2l0ZW0QAQx1MzIAATB3ZWlnaHRfbGltaXRhAQEsV2VpZ2h0TGltaXQACATAU2VlIFtgUGFsbGV0OjpsaW1pdGVkX3Jlc2VydmVfdHJhbnNmZXJfYXNzZXRzYF0uXGxpbWl0ZWRfdGVsZXBvcnRfYXNzZXRzFAEQZGVzdMkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEsYmVuZWZpY2lhcnnJAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0c2UBAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABOGZlZV9hc3NldF9pdGVtEAEMdTMyAAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0AAkEoFNlZSBbYFBhbGxldDo6bGltaXRlZF90ZWxlcG9ydF9hc3NldHNgXS5AZm9yY2Vfc3VzcGVuc2lvbgQBJHN1c3BlbmRlZHgBEGJvb2wACgSEU2VlIFtgUGFsbGV0Ojpmb3JjZV9zdXNwZW5zaW9uYF0uPHRyYW5zZmVyX2Fzc2V0cxQBEGRlc3TJAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5yQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHNlAQFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgABMHdlaWdodF9saW1pdGEBASxXZWlnaHRMaW1pdAALBIBTZWUgW2BQYWxsZXQ6OnRyYW5zZmVyX2Fzc2V0c2BdLjBjbGFpbV9hc3NldHMIARhhc3NldHNlAQFQQm94PFZlcnNpb25lZEFzc2V0cz4AASxiZW5lZmljaWFyeckBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAwEdFNlZSBbYFBhbGxldDo6Y2xhaW1fYXNzZXRzYF0ujHRyYW5zZmVyX2Fzc2V0c191c2luZ190eXBlX2FuZF90aGVuHAEQZGVzdMkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEYYXNzZXRzZQEBUEJveDxWZXJzaW9uZWRBc3NldHM+AAFQYXNzZXRzX3RyYW5zZmVyX3R5cGVpAwFEQm94PFRyYW5zZmVyVHlwZT4AAThyZW1vdGVfZmVlc19pZG0DAVRCb3g8VmVyc2lvbmVkQXNzZXRJZD4AAUhmZWVzX3RyYW5zZmVyX3R5cGVpAwFEQm94PFRyYW5zZmVyVHlwZT4AAUhjdXN0b21feGNtX29uX2Rlc3TVAgFUQm94PFZlcnNpb25lZFhjbTwoKT4+AAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0AA0E0FNlZSBbYFBhbGxldDo6dHJhbnNmZXJfYXNzZXRzX3VzaW5nX3R5cGVfYW5kX3RoZW5gXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu1QIIDHhjbTBWZXJzaW9uZWRYY20ELFJ1bnRpbWVDYWxsAAEMCFYyBADZAgFQdjI6OlhjbTxSdW50aW1lQ2FsbD4AAgAIVjMEAAUDAVB2Mzo6WGNtPFJ1bnRpbWVDYWxsPgADAAhWNAQA9AFQdjQ6OlhjbTxSdW50aW1lQ2FsbD4ABAAA2QIMDHhjbQh2MgxYY20ELFJ1bnRpbWVDYWxsAAAEAN0CAXRWZWM8SW5zdHJ1Y3Rpb248UnVudGltZUNhbGw+PgAA3QIAAALhAgDhAgwMeGNtCHYyLEluc3RydWN0aW9uBCxSdW50aW1lQ2FsbAABcDRXaXRoZHJhd0Fzc2V0BABpAQEsTXVsdGlBc3NldHMAAABUUmVzZXJ2ZUFzc2V0RGVwb3NpdGVkBABpAQEsTXVsdGlBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAaQEBLE11bHRpQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UMASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZeUCASBSZXNwb25zZQABKG1heF93ZWlnaHQoAQx1NjQAAwA0VHJhbnNmZXJBc3NldAgBGGFzc2V0c2kBASxNdWx0aUFzc2V0cwABLGJlbmVmaWNpYXJ5eQEBNE11bHRpTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHNpAQEsTXVsdGlBc3NldHMAARBkZXN0eQEBNE11bHRpTG9jYXRpb24AAQx4Y23ZAgEcWGNtPCgpPgAFACBUcmFuc2FjdAwBLG9yaWdpbl90eXBlSQEBKE9yaWdpbktpbmQAAVhyZXF1aXJlX3dlaWdodF9hdF9tb3N0KAEMdTY0AAEQY2FsbE0BAWhEb3VibGVFbmNvZGVkPFJ1bnRpbWVDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVyvAEMdTMyAAFAbWF4X21lc3NhZ2Vfc2l6ZbwBDHUzMgABMG1heF9jYXBhY2l0ebwBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50vAEMdTMyAAgASEhybXBDaGFubmVsQ2xvc2luZwwBJGluaXRpYXRvcrwBDHUzMgABGHNlbmRlcrwBDHUzMgABJHJlY2lwaWVudLwBDHUzMgAJACxDbGVhck9yaWdpbgAKADREZXNjZW5kT3JpZ2luBAB9AQFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAsALFJlcG9ydEVycm9yDAEgcXVlcnlfaWQoARxRdWVyeUlkAAEQZGVzdHkBATRNdWx0aUxvY2F0aW9uAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCgBDHU2NAAMADBEZXBvc2l0QXNzZXQMARhhc3NldHP1AgFATXVsdGlBc3NldEZpbHRlcgABKG1heF9hc3NldHO8AQx1MzIAASxiZW5lZmljaWFyeXkBATRNdWx0aUxvY2F0aW9uAA0ATERlcG9zaXRSZXNlcnZlQXNzZXQQARhhc3NldHP1AgFATXVsdGlBc3NldEZpbHRlcgABKG1heF9hc3NldHO8AQx1MzIAARBkZXN0eQEBNE11bHRpTG9jYXRpb24AAQx4Y23ZAgEcWGNtPCgpPgAOADRFeGNoYW5nZUFzc2V0CAEQZ2l2ZfUCAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVjZWl2ZWkBASxNdWx0aUFzc2V0cwAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c/UCAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVzZXJ2ZXkBATRNdWx0aUxvY2F0aW9uAAEMeGNt2QIBHFhjbTwoKT4AEABASW5pdGlhdGVUZWxlcG9ydAwBGGFzc2V0c/UCAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdHkBATRNdWx0aUxvY2F0aW9uAAEMeGNt2QIBHFhjbTwoKT4AEQAwUXVlcnlIb2xkaW5nEAEgcXVlcnlfaWQoARxRdWVyeUlkAAEQZGVzdHkBATRNdWx0aUxvY2F0aW9uAAEYYXNzZXRz9QIBQE11bHRpQXNzZXRGaWx0ZXIAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0KAEMdTY0ABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXNxAQEoTXVsdGlBc3NldAABMHdlaWdodF9saW1pdAEDASxXZWlnaHRMaW1pdAATADRSZWZ1bmRTdXJwbHVzABQAPFNldEVycm9ySGFuZGxlcgQA2QIBQFhjbTxSdW50aW1lQ2FsbD4AFQAsU2V0QXBwZW5kaXgEANkCAUBYY208UnVudGltZUNhbGw+ABYAKENsZWFyRXJyb3IAFwAoQ2xhaW1Bc3NldAgBGGFzc2V0c2kBASxNdWx0aUFzc2V0cwABGHRpY2tldHkBATRNdWx0aUxvY2F0aW9uABgAEFRyYXAEACgBDHU2NAAZAEBTdWJzY3JpYmVWZXJzaW9uCAEgcXVlcnlfaWQoARxRdWVyeUlkAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCgBDHU2NAAaAEhVbnN1YnNjcmliZVZlcnNpb24AGwAA5QIMDHhjbQh2MiBSZXNwb25zZQABEBBOdWxsAAAAGEFzc2V0cwQAaQEBLE11bHRpQXNzZXRzAAEAPEV4ZWN1dGlvblJlc3VsdAQA6QIBUE9wdGlvbjwodTMyLCBFcnJvcik+AAIAHFZlcnNpb24EABABOHN1cGVyOjpWZXJzaW9uAAMAAOkCBBhPcHRpb24EBFQB7QIBCBBOb25lAAAAEFNvbWUEAO0CAAABAADtAgAABAgQ8QIA8QIQDHhjbQh2Mhh0cmFpdHMURXJyb3IAAWggT3ZlcmZsb3cAAAA0VW5pbXBsZW1lbnRlZAABAGBVbnRydXN0ZWRSZXNlcnZlTG9jYXRpb24AAgBkVW50cnVzdGVkVGVsZXBvcnRMb2NhdGlvbgADAERNdWx0aUxvY2F0aW9uRnVsbAAEAGhNdWx0aUxvY2F0aW9uTm90SW52ZXJ0aWJsZQAFACRCYWRPcmlnaW4ABgA8SW52YWxpZExvY2F0aW9uAAcANEFzc2V0Tm90Rm91bmQACABURmFpbGVkVG9UcmFuc2FjdEFzc2V0AAkAPE5vdFdpdGhkcmF3YWJsZQAKAEhMb2NhdGlvbkNhbm5vdEhvbGQACwBURXhjZWVkc01heE1lc3NhZ2VTaXplAAwAWERlc3RpbmF0aW9uVW5zdXBwb3J0ZWQADQAkVHJhbnNwb3J0AA4AKFVucm91dGFibGUADwAwVW5rbm93bkNsYWltABAAOEZhaWxlZFRvRGVjb2RlABEAQE1heFdlaWdodEludmFsaWQAEgA4Tm90SG9sZGluZ0ZlZXMAEwAwVG9vRXhwZW5zaXZlABQAEFRyYXAEACwBDHU2NAAVAExVbmhhbmRsZWRYY21WZXJzaW9uABYASFdlaWdodExpbWl0UmVhY2hlZAQALAEYV2VpZ2h0ABcAHEJhcnJpZXIAGABMV2VpZ2h0Tm90Q29tcHV0YWJsZQAZAAD1AhAMeGNtCHYyKG11bHRpYXNzZXRATXVsdGlBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQAaQEBLE11bHRpQXNzZXRzAAAAEFdpbGQEAPkCAThXaWxkTXVsdGlBc3NldAABAAD5AhAMeGNtCHYyKG11bHRpYXNzZXQ4V2lsZE11bHRpQXNzZXQAAQgMQWxsAAAAFEFsbE9mCAEIaWR1AQEcQXNzZXRJZAABDGZ1bv0CATxXaWxkRnVuZ2liaWxpdHkAAQAA/QIQDHhjbQh2MihtdWx0aWFzc2V0PFdpbGRGdW5naWJpbGl0eQABCCBGdW5naWJsZQAAACxOb25GdW5naWJsZQABAAABAwwMeGNtCHYyLFdlaWdodExpbWl0AAEIJFVubGltaXRlZAAAABxMaW1pdGVkBAAoAQx1NjQAAQAABQMMDHhjbQh2MwxYY20EEENhbGwAAAQACQMBWFZlYzxJbnN0cnVjdGlvbjxDYWxsPj4AAAkDAAACDQMADQMMDHhjbQh2MyxJbnN0cnVjdGlvbgQQQ2FsbAABwDRXaXRoZHJhd0Fzc2V0BACdAQEsTXVsdGlBc3NldHMAAABUUmVzZXJ2ZUFzc2V0RGVwb3NpdGVkBACdAQEsTXVsdGlBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAnQEBLE11bHRpQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZREDASBSZXNwb25zZQABKG1heF93ZWlnaHQkARhXZWlnaHQAARxxdWVyaWVyJQMBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgADADRUcmFuc2ZlckFzc2V0CAEYYXNzZXRznQEBLE11bHRpQXNzZXRzAAEsYmVuZWZpY2lhcnmtAQE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c50BASxNdWx0aUFzc2V0cwABEGRlc3StAQE0TXVsdGlMb2NhdGlvbgABDHhjbQUDARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmRJAQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QkARhXZWlnaHQAARBjYWxsTQEBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcrwBDHUzMgABQG1heF9tZXNzYWdlX3NpemW8AQx1MzIAATBtYXhfY2FwYWNpdHm8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudLwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3K8AQx1MzIAARhzZW5kZXK8AQx1MzIAASRyZWNpcGllbnS8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAsQEBVEludGVyaW9yTXVsdGlMb2NhdGlvbgALACxSZXBvcnRFcnJvcgQAKQMBRFF1ZXJ5UmVzcG9uc2VJbmZvAAwAMERlcG9zaXRBc3NldAgBGGFzc2V0cy0DAUBNdWx0aUFzc2V0RmlsdGVyAAEsYmVuZWZpY2lhcnmtAQE0TXVsdGlMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzLQMBQE11bHRpQXNzZXRGaWx0ZXIAARBkZXN0rQEBNE11bHRpTG9jYXRpb24AAQx4Y20FAwEcWGNtPCgpPgAOADRFeGNoYW5nZUFzc2V0DAEQZ2l2ZS0DAUBNdWx0aUFzc2V0RmlsdGVyAAEQd2FudJ0BASxNdWx0aUFzc2V0cwABHG1heGltYWx4ARBib29sAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRzLQMBQE11bHRpQXNzZXRGaWx0ZXIAARxyZXNlcnZlrQEBNE11bHRpTG9jYXRpb24AAQx4Y20FAwEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzLQMBQE11bHRpQXNzZXRGaWx0ZXIAARBkZXN0rQEBNE11bHRpTG9jYXRpb24AAQx4Y20FAwEcWGNtPCgpPgARADRSZXBvcnRIb2xkaW5nCAE0cmVzcG9uc2VfaW5mbykDAURRdWVyeVJlc3BvbnNlSW5mbwABGGFzc2V0cy0DAUBNdWx0aUFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXOlAQEoTXVsdGlBc3NldAABMHdlaWdodF9saW1pdGEBASxXZWlnaHRMaW1pdAATADRSZWZ1bmRTdXJwbHVzABQAPFNldEVycm9ySGFuZGxlcgQABQMBJFhjbTxDYWxsPgAVACxTZXRBcHBlbmRpeAQABQMBJFhjbTxDYWxsPgAWAChDbGVhckVycm9yABcAKENsYWltQXNzZXQIARhhc3NldHOdAQEsTXVsdGlBc3NldHMAARh0aWNrZXStAQE0TXVsdGlMb2NhdGlvbgAYABBUcmFwBAAoAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQkARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQAnQEBLE11bHRpQXNzZXRzABwALEV4cGVjdEFzc2V0BACdAQEsTXVsdGlBc3NldHMAHQAwRXhwZWN0T3JpZ2luBAAlAwFUT3B0aW9uPE11bHRpTG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBAAlAQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEAD0BAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm8pAwFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXi8AQx1MzIAARBuYW1lNAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABLGNyYXRlX21ham9yvAEMdTMyAAE8bWluX2NyYXRlX21pbm9yvAEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBAApAwFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EALUBASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya70BASROZXR3b3JrSWQAASxkZXN0aW5hdGlvbrEBAVRJbnRlcmlvck11bHRpTG9jYXRpb24AAQx4Y20FAwEcWGNtPCgpPgAmACRMb2NrQXNzZXQIARRhc3NldKUBAShNdWx0aUFzc2V0AAEgdW5sb2NrZXKtAQE0TXVsdGlMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V0pQEBKE11bHRpQXNzZXQAARh0YXJnZXStAQE0TXVsdGlMb2NhdGlvbgAoADhOb3RlVW5sb2NrYWJsZQgBFGFzc2V0pQEBKE11bHRpQXNzZXQAARRvd25lcq0BATRNdWx0aUxvY2F0aW9uACkANFJlcXVlc3RVbmxvY2sIARRhc3NldKUBAShNdWx0aUFzc2V0AAEYbG9ja2VyrQEBNE11bHRpTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXd4ARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBACtAQE0TXVsdGlMb2NhdGlvbgAuADxVbnBhaWRFeGVjdXRpb24IATB3ZWlnaHRfbGltaXRhAQEsV2VpZ2h0TGltaXQAATBjaGVja19vcmlnaW4lAwFUT3B0aW9uPE11bHRpTG9jYXRpb24+AC8AABEDDAx4Y20IdjMgUmVzcG9uc2UAARgQTnVsbAAAABhBc3NldHMEAJ0BASxNdWx0aUFzc2V0cwABADxFeGVjdXRpb25SZXN1bHQEACUBAVBPcHRpb248KHUzMiwgRXJyb3IpPgACABxWZXJzaW9uBAAQAThzdXBlcjo6VmVyc2lvbgADACxQYWxsZXRzSW5mbwQAFQMBmEJvdW5kZWRWZWM8UGFsbGV0SW5mbywgTWF4UGFsbGV0c0luZm8+AAQAOERpc3BhdGNoUmVzdWx0BAA9AQE4TWF5YmVFcnJvckNvZGUABQAAFQMMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEZAwRTAAAEACEDARhWZWM8VD4AABkDDAx4Y20IdjMoUGFsbGV0SW5mbwAAGAEUaW5kZXi8AQx1MzIAARBuYW1lHQMBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEsbW9kdWxlX25hbWUdAwGAQm91bmRlZFZlYzx1OCwgTWF4UGFsbGV0TmFtZUxlbj4AARRtYWpvcrwBDHUzMgABFG1pbm9yvAEMdTMyAAEUcGF0Y2i8AQx1MzIAAB0DDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAAIQMAAAIZAwAlAwQYT3B0aW9uBARUAa0BAQgQTm9uZQAAABBTb21lBACtAQAAAQAAKQMMDHhjbQh2M0RRdWVyeVJlc3BvbnNlSW5mbwAADAEsZGVzdGluYXRpb26tAQE0TXVsdGlMb2NhdGlvbgABIHF1ZXJ5X2lkKAEcUXVlcnlJZAABKG1heF93ZWlnaHQkARhXZWlnaHQAAC0DEAx4Y20IdjMobXVsdGlhc3NldEBNdWx0aUFzc2V0RmlsdGVyAAEIIERlZmluaXRlBACdAQEsTXVsdGlBc3NldHMAAAAQV2lsZAQAMQMBOFdpbGRNdWx0aUFzc2V0AAEAADEDEAx4Y20IdjMobXVsdGlhc3NldDhXaWxkTXVsdGlBc3NldAABEAxBbGwAAAAUQWxsT2YIAQhpZKkBARxBc3NldElkAAEMZnVuNQMBPFdpbGRGdW5naWJpbGl0eQABAChBbGxDb3VudGVkBAC8AQx1MzIAAgAwQWxsT2ZDb3VudGVkDAEIaWSpAQEcQXNzZXRJZAABDGZ1bjUDATxXaWxkRnVuZ2liaWxpdHkAARRjb3VudLwBDHUzMgADAAA1AxAMeGNtCHYzKG11bHRpYXNzZXQ8V2lsZEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlAAAALE5vbkZ1bmdpYmxlAAEAADkDCAx4Y20wVmVyc2lvbmVkWGNtBCxSdW50aW1lQ2FsbAABDAhWMgQAPQMBUHYyOjpYY208UnVudGltZUNhbGw+AAIACFYzBABNAwFQdjM6OlhjbTxSdW50aW1lQ2FsbD4AAwAIVjQEAFkDAVB2NDo6WGNtPFJ1bnRpbWVDYWxsPgAEAAA9AwwMeGNtCHYyDFhjbQQsUnVudGltZUNhbGwAAAQAQQMBdFZlYzxJbnN0cnVjdGlvbjxSdW50aW1lQ2FsbD4+AABBAwAAAkUDAEUDDAx4Y20IdjIsSW5zdHJ1Y3Rpb24ELFJ1bnRpbWVDYWxsAAFwNFdpdGhkcmF3QXNzZXQEAGkBASxNdWx0aUFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAGkBASxNdWx0aUFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BABpAQEsTXVsdGlBc3NldHMAAgA0UXVlcnlSZXNwb25zZQwBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABIHJlc3BvbnNl5QIBIFJlc3BvbnNlAAEobWF4X3dlaWdodCgBDHU2NAADADRUcmFuc2ZlckFzc2V0CAEYYXNzZXRzaQEBLE11bHRpQXNzZXRzAAEsYmVuZWZpY2lhcnl5AQE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c2kBASxNdWx0aUFzc2V0cwABEGRlc3R5AQE0TXVsdGlMb2NhdGlvbgABDHhjbdkCARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX3R5cGVJAQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QoAQx1NjQAARBjYWxsSQMBaERvdWJsZUVuY29kZWQ8UnVudGltZUNhbGw+AAYAZEhybXBOZXdDaGFubmVsT3BlblJlcXVlc3QMARhzZW5kZXK8AQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplvAEMdTMyAAEwbWF4X2NhcGFjaXR5vAEMdTMyAAcATEhybXBDaGFubmVsQWNjZXB0ZWQEASRyZWNpcGllbnS8AQx1MzIACABISHJtcENoYW5uZWxDbG9zaW5nDAEkaW5pdGlhdG9yvAEMdTMyAAEYc2VuZGVyvAEMdTMyAAEkcmVjaXBpZW50vAEMdTMyAAkALENsZWFyT3JpZ2luAAoANERlc2NlbmRPcmlnaW4EAH0BAVRJbnRlcmlvck11bHRpTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IMASBxdWVyeV9pZCgBHFF1ZXJ5SWQAARBkZXN0eQEBNE11bHRpTG9jYXRpb24AAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0KAEMdTY0AAwAMERlcG9zaXRBc3NldAwBGGFzc2V0c/UCAUBNdWx0aUFzc2V0RmlsdGVyAAEobWF4X2Fzc2V0c7wBDHUzMgABLGJlbmVmaWNpYXJ5eQEBNE11bHRpTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldBABGGFzc2V0c/UCAUBNdWx0aUFzc2V0RmlsdGVyAAEobWF4X2Fzc2V0c7wBDHUzMgABEGRlc3R5AQE0TXVsdGlMb2NhdGlvbgABDHhjbdkCARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQIARBnaXZl9QIBQE11bHRpQXNzZXRGaWx0ZXIAARxyZWNlaXZlaQEBLE11bHRpQXNzZXRzAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRz9QIBQE11bHRpQXNzZXRGaWx0ZXIAARxyZXNlcnZleQEBNE11bHRpTG9jYXRpb24AAQx4Y23ZAgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRz9QIBQE11bHRpQXNzZXRGaWx0ZXIAARBkZXN0eQEBNE11bHRpTG9jYXRpb24AAQx4Y23ZAgEcWGNtPCgpPgARADBRdWVyeUhvbGRpbmcQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAARBkZXN0eQEBNE11bHRpTG9jYXRpb24AARhhc3NldHP1AgFATXVsdGlBc3NldEZpbHRlcgABTG1heF9yZXNwb25zZV93ZWlnaHQoAQx1NjQAEgAwQnV5RXhlY3V0aW9uCAEQZmVlc3EBAShNdWx0aUFzc2V0AAEwd2VpZ2h0X2xpbWl0AQMBLFdlaWdodExpbWl0ABMANFJlZnVuZFN1cnBsdXMAFAA8U2V0RXJyb3JIYW5kbGVyBAA9AwFAWGNtPFJ1bnRpbWVDYWxsPgAVACxTZXRBcHBlbmRpeAQAPQMBQFhjbTxSdW50aW1lQ2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzaQEBLE11bHRpQXNzZXRzAAEYdGlja2V0eQEBNE11bHRpTG9jYXRpb24AGAAQVHJhcAQAKAEMdTY0ABkAQFN1YnNjcmliZVZlcnNpb24IASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0KAEMdTY0ABoASFVuc3Vic2NyaWJlVmVyc2lvbgAbAABJAwwMeGNtOGRvdWJsZV9lbmNvZGVkNERvdWJsZUVuY29kZWQEBFQAAAQBHGVuY29kZWQ0ARxWZWM8dTg+AABNAwwMeGNtCHYzDFhjbQQQQ2FsbAAABABRAwFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAAUQMAAAJVAwBVAwwMeGNtCHYzLEluc3RydWN0aW9uBBBDYWxsAAHANFdpdGhkcmF3QXNzZXQEAJ0BASxNdWx0aUFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAJ0BASxNdWx0aUFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BACdAQEsTXVsdGlBc3NldHMAAgA0UXVlcnlSZXNwb25zZRABIHF1ZXJ5X2lkKAEcUXVlcnlJZAABIHJlc3BvbnNlEQMBIFJlc3BvbnNlAAEobWF4X3dlaWdodCQBGFdlaWdodAABHHF1ZXJpZXIlAwFUT3B0aW9uPE11bHRpTG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHOdAQEsTXVsdGlBc3NldHMAASxiZW5lZmljaWFyea0BATRNdWx0aUxvY2F0aW9uAAQAUFRyYW5zZmVyUmVzZXJ2ZUFzc2V0DAEYYXNzZXRznQEBLE11bHRpQXNzZXRzAAEQZGVzdK0BATRNdWx0aUxvY2F0aW9uAAEMeGNtBQMBHFhjbTwoKT4ABQAgVHJhbnNhY3QMASxvcmlnaW5fa2luZEkBAShPcmlnaW5LaW5kAAFYcmVxdWlyZV93ZWlnaHRfYXRfbW9zdCQBGFdlaWdodAABEGNhbGxJAwFMRG91YmxlRW5jb2RlZDxDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVyvAEMdTMyAAFAbWF4X21lc3NhZ2Vfc2l6ZbwBDHUzMgABMG1heF9jYXBhY2l0ebwBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50vAEMdTMyAAgASEhybXBDaGFubmVsQ2xvc2luZwwBJGluaXRpYXRvcrwBDHUzMgABGHNlbmRlcrwBDHUzMgABJHJlY2lwaWVudLwBDHUzMgAJACxDbGVhck9yaWdpbgAKADREZXNjZW5kT3JpZ2luBACxAQFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAsALFJlcG9ydEVycm9yBAApAwFEUXVlcnlSZXNwb25zZUluZm8ADAAwRGVwb3NpdEFzc2V0CAEYYXNzZXRzLQMBQE11bHRpQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyea0BATRNdWx0aUxvY2F0aW9uAA0ATERlcG9zaXRSZXNlcnZlQXNzZXQMARhhc3NldHMtAwFATXVsdGlBc3NldEZpbHRlcgABEGRlc3StAQE0TXVsdGlMb2NhdGlvbgABDHhjbQUDARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlLQMBQE11bHRpQXNzZXRGaWx0ZXIAARB3YW50nQEBLE11bHRpQXNzZXRzAAEcbWF4aW1hbHgBEGJvb2wADwBcSW5pdGlhdGVSZXNlcnZlV2l0aGRyYXcMARhhc3NldHMtAwFATXVsdGlBc3NldEZpbHRlcgABHHJlc2VydmWtAQE0TXVsdGlMb2NhdGlvbgABDHhjbQUDARxYY208KCk+ABAAQEluaXRpYXRlVGVsZXBvcnQMARhhc3NldHMtAwFATXVsdGlBc3NldEZpbHRlcgABEGRlc3StAQE0TXVsdGlMb2NhdGlvbgABDHhjbQUDARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZvKQMBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzLQMBQE11bHRpQXNzZXRGaWx0ZXIAEgAwQnV5RXhlY3V0aW9uCAEQZmVlc6UBAShNdWx0aUFzc2V0AAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0ABMANFJlZnVuZFN1cnBsdXMAFAA8U2V0RXJyb3JIYW5kbGVyBABNAwEkWGNtPENhbGw+ABUALFNldEFwcGVuZGl4BABNAwEkWGNtPENhbGw+ABYAKENsZWFyRXJyb3IAFwAoQ2xhaW1Bc3NldAgBGGFzc2V0c50BASxNdWx0aUFzc2V0cwABGHRpY2tldK0BATRNdWx0aUxvY2F0aW9uABgAEFRyYXAEACgBDHU2NAAZAEBTdWJzY3JpYmVWZXJzaW9uCAEgcXVlcnlfaWQoARxRdWVyeUlkAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCQBGFdlaWdodAAaAEhVbnN1YnNjcmliZVZlcnNpb24AGwAkQnVybkFzc2V0BACdAQEsTXVsdGlBc3NldHMAHAAsRXhwZWN0QXNzZXQEAJ0BASxNdWx0aUFzc2V0cwAdADBFeHBlY3RPcmlnaW4EACUDAVRPcHRpb248TXVsdGlMb2NhdGlvbj4AHgAsRXhwZWN0RXJyb3IEACUBAVBPcHRpb248KHUzMiwgRXJyb3IpPgAfAFBFeHBlY3RUcmFuc2FjdFN0YXR1cwQAPQEBOE1heWJlRXJyb3JDb2RlACAALFF1ZXJ5UGFsbGV0CAEsbW9kdWxlX25hbWU0ARxWZWM8dTg+AAE0cmVzcG9uc2VfaW5mbykDAURRdWVyeVJlc3BvbnNlSW5mbwAhADBFeHBlY3RQYWxsZXQUARRpbmRleLwBDHUzMgABEG5hbWU0ARxWZWM8dTg+AAEsbW9kdWxlX25hbWU0ARxWZWM8dTg+AAEsY3JhdGVfbWFqb3K8AQx1MzIAATxtaW5fY3JhdGVfbWlub3K8AQx1MzIAIgBQUmVwb3J0VHJhbnNhY3RTdGF0dXMEACkDAURRdWVyeVJlc3BvbnNlSW5mbwAjAExDbGVhclRyYW5zYWN0U3RhdHVzACQAPFVuaXZlcnNhbE9yaWdpbgQAtQEBIEp1bmN0aW9uACUANEV4cG9ydE1lc3NhZ2UMARxuZXR3b3JrvQEBJE5ldHdvcmtJZAABLGRlc3RpbmF0aW9usQEBVEludGVyaW9yTXVsdGlMb2NhdGlvbgABDHhjbQUDARxYY208KCk+ACYAJExvY2tBc3NldAgBFGFzc2V0pQEBKE11bHRpQXNzZXQAASB1bmxvY2tlcq0BATRNdWx0aUxvY2F0aW9uACcALFVubG9ja0Fzc2V0CAEUYXNzZXSlAQEoTXVsdGlBc3NldAABGHRhcmdldK0BATRNdWx0aUxvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXSlAQEoTXVsdGlBc3NldAABFG93bmVyrQEBNE11bHRpTG9jYXRpb24AKQA0UmVxdWVzdFVubG9jawgBFGFzc2V0pQEBKE11bHRpQXNzZXQAARhsb2NrZXKtAQE0TXVsdGlMb2NhdGlvbgAqACxTZXRGZWVzTW9kZQQBMGppdF93aXRoZHJhd3gBEGJvb2wAKwAgU2V0VG9waWMEAAQBIFt1ODsgMzJdACwAKENsZWFyVG9waWMALQAsQWxpYXNPcmlnaW4EAK0BATRNdWx0aUxvY2F0aW9uAC4APFVucGFpZEV4ZWN1dGlvbggBMHdlaWdodF9saW1pdGEBASxXZWlnaHRMaW1pdAABMGNoZWNrX29yaWdpbiUDAVRPcHRpb248TXVsdGlMb2NhdGlvbj4ALwAAWQMMLHN0YWdpbmdfeGNtCHY0DFhjbQQQQ2FsbAAABABdAwFYVmVjPEluc3RydWN0aW9uPENhbGw+PgAAXQMAAAJhAwBhAwwsc3RhZ2luZ194Y20IdjQsSW5zdHJ1Y3Rpb24EEENhbGwAAcA0V2l0aGRyYXdBc3NldAQAAQEBGEFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEAAEBARhBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAAQEBGEFzc2V0cwACADRRdWVyeVJlc3BvbnNlEAEgcXVlcnlfaWQoARxRdWVyeUlkAAEgcmVzcG9uc2UhAQEgUmVzcG9uc2UAAShtYXhfd2VpZ2h0JAEYV2VpZ2h0AAEccXVlcmllckUBAUBPcHRpb248TG9jYXRpb24+AAMANFRyYW5zZmVyQXNzZXQIARhhc3NldHMBAQEYQXNzZXRzAAEsYmVuZWZpY2lhcnmsASBMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0cwEBARhBc3NldHMAARBkZXN0rAEgTG9jYXRpb24AAQx4Y230ARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmRJAQEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QkARhXZWlnaHQAARBjYWxsSQMBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlcrwBDHUzMgABQG1heF9tZXNzYWdlX3NpemW8AQx1MzIAATBtYXhfY2FwYWNpdHm8AQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudLwBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3K8AQx1MzIAARhzZW5kZXK8AQx1MzIAASRyZWNpcGllbnS8AQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAsAFASW50ZXJpb3JMb2NhdGlvbgALACxSZXBvcnRFcnJvcgQAUQEBRFF1ZXJ5UmVzcG9uc2VJbmZvAAwAMERlcG9zaXRBc3NldAgBGGFzc2V0c1UBASxBc3NldEZpbHRlcgABLGJlbmVmaWNpYXJ5rAEgTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldAwBGGFzc2V0c1UBASxBc3NldEZpbHRlcgABEGRlc3SsASBMb2NhdGlvbgABDHhjbfQBHFhjbTwoKT4ADgA0RXhjaGFuZ2VBc3NldAwBEGdpdmVVAQEsQXNzZXRGaWx0ZXIAARB3YW50AQEBGEFzc2V0cwABHG1heGltYWx4ARBib29sAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRzVQEBLEFzc2V0RmlsdGVyAAEccmVzZXJ2ZawBIExvY2F0aW9uAAEMeGNt9AEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzVQEBLEFzc2V0RmlsdGVyAAEQZGVzdKwBIExvY2F0aW9uAAEMeGNt9AEcWGNtPCgpPgARADRSZXBvcnRIb2xkaW5nCAE0cmVzcG9uc2VfaW5mb1EBAURRdWVyeVJlc3BvbnNlSW5mbwABGGFzc2V0c1UBASxBc3NldEZpbHRlcgASADBCdXlFeGVjdXRpb24IARBmZWVzCQEBFEFzc2V0AAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0ABMANFJlZnVuZFN1cnBsdXMAFAA8U2V0RXJyb3JIYW5kbGVyBABZAwEkWGNtPENhbGw+ABUALFNldEFwcGVuZGl4BABZAwEkWGNtPENhbGw+ABYAKENsZWFyRXJyb3IAFwAoQ2xhaW1Bc3NldAgBGGFzc2V0cwEBARhBc3NldHMAARh0aWNrZXSsASBMb2NhdGlvbgAYABBUcmFwBAAoAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQkARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQAAQEBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQAAQEBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAEUBAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBAAlAQFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEAD0BAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm9RAQFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXi8AQx1MzIAARBuYW1lNAEcVmVjPHU4PgABLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABLGNyYXRlX21ham9yvAEMdTMyAAE8bWluX2NyYXRlX21pbm9yvAEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBABRAQFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EALgBIEp1bmN0aW9uACUANEV4cG9ydE1lc3NhZ2UMARxuZXR3b3JrxAEkTmV0d29ya0lkAAEsZGVzdGluYXRpb26wAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNt9AEcWGNtPCgpPgAmACRMb2NrQXNzZXQIARRhc3NldAkBARRBc3NldAABIHVubG9ja2VyrAEgTG9jYXRpb24AJwAsVW5sb2NrQXNzZXQIARRhc3NldAkBARRBc3NldAABGHRhcmdldKwBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXQJAQEUQXNzZXQAARRvd25lcqwBIExvY2F0aW9uACkANFJlcXVlc3RVbmxvY2sIARRhc3NldAkBARRBc3NldAABGGxvY2tlcqwBIExvY2F0aW9uACoALFNldEZlZXNNb2RlBAEwaml0X3dpdGhkcmF3eAEQYm9vbAArACBTZXRUb3BpYwQABAEgW3U4OyAzMl0ALAAoQ2xlYXJUb3BpYwAtACxBbGlhc09yaWdpbgQArAEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0YQEBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2luRQEBQE9wdGlvbjxMb2NhdGlvbj4ALwAAZQMEGE9wdGlvbgQEVAEQAQgQTm9uZQAAABBTb21lBAAQAAABAABpAxBQc3RhZ2luZ194Y21fZXhlY3V0b3IYdHJhaXRzOGFzc2V0X3RyYW5zZmVyMFRyYW5zZmVyVHlwZQABECBUZWxlcG9ydAAAADBMb2NhbFJlc2VydmUAAQBIRGVzdGluYXRpb25SZXNlcnZlAAIANFJlbW90ZVJlc2VydmUEAMkBAURWZXJzaW9uZWRMb2NhdGlvbgADAABtAwgMeGNtQFZlcnNpb25lZEFzc2V0SWQAAQgIVjMEAKkBASx2Mzo6QXNzZXRJZAADAAhWNAQADQEBLHY0OjpBc3NldElkAAQAAHEDDEhjdW11bHVzX3BhbGxldF94Y20YcGFsbGV0EENhbGwEBFQAAQAEDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMudQMMUHBhbGxldF9tZXNzYWdlX3F1ZXVlGHBhbGxldBBDYWxsBARUAAEIJHJlYXBfcGFnZQgBOG1lc3NhZ2Vfb3JpZ2lu1QEBSE1lc3NhZ2VPcmlnaW5PZjxUPgABKHBhZ2VfaW5kZXgQASRQYWdlSW5kZXgAAARoU2VlIFtgUGFsbGV0OjpyZWFwX3BhZ2VgXS5IZXhlY3V0ZV9vdmVyd2VpZ2h0EAE4bWVzc2FnZV9vcmlnaW7VAQFITWVzc2FnZU9yaWdpbk9mPFQ+AAEQcGFnZRABJFBhZ2VJbmRleAABFGluZGV4EAEcVDo6U2l6ZQABMHdlaWdodF9saW1pdCQBGFdlaWdodAABBIxTZWUgW2BQYWxsZXQ6OmV4ZWN1dGVfb3ZlcndlaWdodGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy55Aww4cGFsbGV0X3V0aWxpdHkYcGFsbGV0EENhbGwEBFQAARgUYmF0Y2gEARRjYWxsc30DAXxWZWM8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAEWFNlZSBbYFBhbGxldDo6YmF0Y2hgXS40YXNfZGVyaXZhdGl2ZQgBFGluZGV4/QEBDHUxNgABEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgABBHhTZWUgW2BQYWxsZXQ6OmFzX2Rlcml2YXRpdmVgXS4kYmF0Y2hfYWxsBAEUY2FsbHN9AwF8VmVjPDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgACBGhTZWUgW2BQYWxsZXQ6OmJhdGNoX2FsbGBdLixkaXNwYXRjaF9hcwgBJGFzX29yaWdpboEDAVRCb3g8VDo6UGFsbGV0c09yaWdpbj4AARBjYWxsWQIBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAwRwU2VlIFtgUGFsbGV0OjpkaXNwYXRjaF9hc2BdLixmb3JjZV9iYXRjaAQBFGNhbGxzfQMBfFZlYzw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABARwU2VlIFtgUGFsbGV0Ojpmb3JjZV9iYXRjaGBdLix3aXRoX3dlaWdodAgBEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgABGHdlaWdodCQBGFdlaWdodAAFBHBTZWUgW2BQYWxsZXQ6OndpdGhfd2VpZ2h0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLn0DAAACWQIAgQMIcGNvbGxlY3RpdmVzX3BvbGthZG90X3J1bnRpbWUwT3JpZ2luQ2FsbGVyAAEcGHN5c3RlbQQAhQMBdGZyYW1lX3N5c3RlbTo6T3JpZ2luPFJ1bnRpbWU+AAAALFBvbGthZG90WGNtBACJAwFIcGFsbGV0X3hjbTo6T3JpZ2luAB8AKEN1bXVsdXNYY20EAI0DAWhjdW11bHVzX3BhbGxldF94Y206Ok9yaWdpbgAgADhBbGxpYW5jZU1vdGlvbgQAkQMBAQFwYWxsZXRfY29sbGVjdGl2ZTo6T3JpZ2luPFJ1bnRpbWUsIHBhbGxldF9jb2xsZWN0aXZlOjpJbnN0YW5jZTE+ADMAREZlbGxvd3NoaXBPcmlnaW5zBACVAwGEcGFsbGV0X2ZlbGxvd3NoaXBfb3JpZ2luczo6T3JpZ2luAD4AREFtYmFzc2Fkb3JPcmlnaW5zBACZAwGEcGFsbGV0X2FtYmFzc2Fkb3Jfb3JpZ2luczo6T3JpZ2luAEgAEFZvaWQEAJ0DAUEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OgpfX3ByaXZhdGU6OlZvaWQABgAAhQMMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2gkUmF3T3JpZ2luBCRBY2NvdW50SWQBAAEMEFJvb3QAAAAYU2lnbmVkBAAAASRBY2NvdW50SWQAAQAQTm9uZQACAACJAwwocGFsbGV0X3hjbRhwYWxsZXQYT3JpZ2luAAEIDFhjbQQArAEgTG9jYXRpb24AAAAgUmVzcG9uc2UEAKwBIExvY2F0aW9uAAEAAI0DDEhjdW11bHVzX3BhbGxldF94Y20YcGFsbGV0GE9yaWdpbgABCBRSZWxheQAAAEBTaWJsaW5nUGFyYWNoYWluBADZAQEYUGFyYUlkAAEAAJEDCERwYWxsZXRfY29sbGVjdGl2ZSRSYXdPcmlnaW4IJEFjY291bnRJZAEABEkAAQwcTWVtYmVycwgAEAEsTWVtYmVyQ291bnQAABABLE1lbWJlckNvdW50AAAAGE1lbWJlcgQAAAEkQWNjb3VudElkAAEAIF9QaGFudG9tAAIAAJUDFHBjb2xsZWN0aXZlc19wb2xrYWRvdF9ydW50aW1lKGZlbGxvd3NoaXAcb3JpZ2luczhwYWxsZXRfb3JpZ2lucxhPcmlnaW4AAVQcTWVtYmVycwAAADhGZWxsb3dzaGlwMkRhbgABABxGZWxsb3dzAAIAKEFyY2hpdGVjdHMAAwA4RmVsbG93c2hpcDVEYW4ABAA4RmVsbG93c2hpcDZEYW4ABQAcTWFzdGVycwAGADhGZWxsb3dzaGlwOERhbgAHADhGZWxsb3dzaGlwOURhbgAIADBSZXRhaW5BdDFEYW4ACQAwUmV0YWluQXQyRGFuAAoAMFJldGFpbkF0M0RhbgALADBSZXRhaW5BdDREYW4ADAAwUmV0YWluQXQ1RGFuAA0AMFJldGFpbkF0NkRhbgAOADRQcm9tb3RlVG8xRGFuAA8ANFByb21vdGVUbzJEYW4AEAA0UHJvbW90ZVRvM0RhbgARADRQcm9tb3RlVG80RGFuABIANFByb21vdGVUbzVEYW4AEwA0UHJvbW90ZVRvNkRhbgAUAACZAxRwY29sbGVjdGl2ZXNfcG9sa2Fkb3RfcnVudGltZShhbWJhc3NhZG9yHG9yaWdpbnM4cGFsbGV0X29yaWdpbnMYT3JpZ2luAAEMLEFtYmFzc2Fkb3JzAAAARFNlbmlvckFtYmFzc2Fkb3JzAAEAPEhlYWRBbWJhc3NhZG9ycwACAACdAwgcc3BfY29yZRBWb2lkAAEAAKEDDDxwYWxsZXRfbXVsdGlzaWcYcGFsbGV0EENhbGwEBFQAARBQYXNfbXVsdGlfdGhyZXNob2xkXzEIAURvdGhlcl9zaWduYXRvcmllc5QBRFZlYzxUOjpBY2NvdW50SWQ+AAEQY2FsbFkCAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAElFNlZSBbYFBhbGxldDo6YXNfbXVsdGlfdGhyZXNob2xkXzFgXS4gYXNfbXVsdGkUASR0aHJlc2hvbGT9AQEMdTE2AAFEb3RoZXJfc2lnbmF0b3JpZXOUAURWZWM8VDo6QWNjb3VudElkPgABPG1heWJlX3RpbWVwb2ludKUDAZBPcHRpb248VGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+Pj4AARBjYWxsWQIBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAShtYXhfd2VpZ2h0JAEYV2VpZ2h0AAEEZFNlZSBbYFBhbGxldDo6YXNfbXVsdGlgXS5AYXBwcm92ZV9hc19tdWx0aRQBJHRocmVzaG9sZP0BAQx1MTYAAURvdGhlcl9zaWduYXRvcmllc5QBRFZlYzxUOjpBY2NvdW50SWQ+AAE8bWF5YmVfdGltZXBvaW50pQMBkE9wdGlvbjxUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+PgABJGNhbGxfaGFzaAQBIFt1ODsgMzJdAAEobWF4X3dlaWdodCQBGFdlaWdodAACBIRTZWUgW2BQYWxsZXQ6OmFwcHJvdmVfYXNfbXVsdGlgXS48Y2FuY2VsX2FzX211bHRpEAEkdGhyZXNob2xk/QEBDHUxNgABRG90aGVyX3NpZ25hdG9yaWVzlAFEVmVjPFQ6OkFjY291bnRJZD4AASR0aW1lcG9pbnTxAQFwVGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+PgABJGNhbGxfaGFzaAQBIFt1ODsgMzJdAAMEgFNlZSBbYFBhbGxldDo6Y2FuY2VsX2FzX211bHRpYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLqUDBBhPcHRpb24EBFQB8QEBCBBOb25lAAAAEFNvbWUEAPEBAAABAACpAwwwcGFsbGV0X3Byb3h5GHBhbGxldBBDYWxsBARUAAEoFHByb3h5DAEQcmVhbK0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABQGZvcmNlX3Byb3h5X3R5cGWtAwFQT3B0aW9uPFQ6OlByb3h5VHlwZT4AARBjYWxsWQIBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAARYU2VlIFtgUGFsbGV0Ojpwcm94eWBdLiRhZGRfcHJveHkMASBkZWxlZ2F0Za0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGX5AQEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgABBGhTZWUgW2BQYWxsZXQ6OmFkZF9wcm94eWBdLjByZW1vdmVfcHJveHkMASBkZWxlZ2F0Za0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGX5AQEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgACBHRTZWUgW2BQYWxsZXQ6OnJlbW92ZV9wcm94eWBdLjhyZW1vdmVfcHJveGllcwADBHxTZWUgW2BQYWxsZXQ6OnJlbW92ZV9wcm94aWVzYF0uLGNyZWF0ZV9wdXJlDAEocHJveHlfdHlwZfkBATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXj9AQEMdTE2AAQEcFNlZSBbYFBhbGxldDo6Y3JlYXRlX3B1cmVgXS4ka2lsbF9wdXJlFAEcc3Bhd25lcq0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGX5AQEwVDo6UHJveHlUeXBlAAEUaW5kZXj9AQEMdTE2AAEYaGVpZ2h0vAFEQmxvY2tOdW1iZXJGb3I8VD4AASRleHRfaW5kZXi8AQx1MzIABQRoU2VlIFtgUGFsbGV0OjpraWxsX3B1cmVgXS4gYW5ub3VuY2UIARByZWFsrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkY2FsbF9oYXNoMAE0Q2FsbEhhc2hPZjxUPgAGBGRTZWUgW2BQYWxsZXQ6OmFubm91bmNlYF0uTHJlbW92ZV9hbm5vdW5jZW1lbnQIARByZWFsrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkY2FsbF9oYXNoMAE0Q2FsbEhhc2hPZjxUPgAHBJBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9hbm5vdW5jZW1lbnRgXS5McmVqZWN0X2Fubm91bmNlbWVudAgBIGRlbGVnYXRlrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkY2FsbF9oYXNoMAE0Q2FsbEhhc2hPZjxUPgAIBJBTZWUgW2BQYWxsZXQ6OnJlamVjdF9hbm5vdW5jZW1lbnRgXS48cHJveHlfYW5ub3VuY2VkEAEgZGVsZWdhdGWtAgFQQWNjb3VudElkTG9va3VwT2Y8VD4AARByZWFsrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAFAZm9yY2VfcHJveHlfdHlwZa0DAVBPcHRpb248VDo6UHJveHlUeXBlPgABEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAJBIBTZWUgW2BQYWxsZXQ6OnByb3h5X2Fubm91bmNlZGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6tAwQYT3B0aW9uBARUAfkBAQgQTm9uZQAAABBTb21lBAD5AQAAAQAAsQMMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQQQ2FsbAQEVAABFDRub3RlX3ByZWltYWdlBAEUYnl0ZXM0ARxWZWM8dTg+AAAEeFNlZSBbYFBhbGxldDo6bm90ZV9wcmVpbWFnZWBdLjx1bm5vdGVfcHJlaW1hZ2UEARBoYXNoMAEcVDo6SGFzaAABBIBTZWUgW2BQYWxsZXQ6OnVubm90ZV9wcmVpbWFnZWBdLkByZXF1ZXN0X3ByZWltYWdlBAEQaGFzaDABHFQ6Okhhc2gAAgSEU2VlIFtgUGFsbGV0OjpyZXF1ZXN0X3ByZWltYWdlYF0uSHVucmVxdWVzdF9wcmVpbWFnZQQBEGhhc2gwARxUOjpIYXNoAAMEjFNlZSBbYFBhbGxldDo6dW5yZXF1ZXN0X3ByZWltYWdlYF0uOGVuc3VyZV91cGRhdGVkBAEYaGFzaGVztQMBMFZlYzxUOjpIYXNoPgAEBHxTZWUgW2BQYWxsZXQ6OmVuc3VyZV91cGRhdGVkYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLrUDAAACMAC5AwxAcGFsbGV0X3NjaGVkdWxlchhwYWxsZXQQQ2FsbAQEVAABGCBzY2hlZHVsZRABEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABOG1heWJlX3BlcmlvZGljvQMBrE9wdGlvbjxzY2hlZHVsZTo6UGVyaW9kPEJsb2NrTnVtYmVyRm9yPFQ+Pj4AASBwcmlvcml0eQgBSHNjaGVkdWxlOjpQcmlvcml0eQABEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAABGRTZWUgW2BQYWxsZXQ6OnNjaGVkdWxlYF0uGGNhbmNlbAgBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABFGluZGV4EAEMdTMyAAEEXFNlZSBbYFBhbGxldDo6Y2FuY2VsYF0uOHNjaGVkdWxlX25hbWVkFAEIaWQEASBUYXNrTmFtZQABEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABOG1heWJlX3BlcmlvZGljvQMBrE9wdGlvbjxzY2hlZHVsZTo6UGVyaW9kPEJsb2NrTnVtYmVyRm9yPFQ+Pj4AASBwcmlvcml0eQgBSHNjaGVkdWxlOjpQcmlvcml0eQABEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgACBHxTZWUgW2BQYWxsZXQ6OnNjaGVkdWxlX25hbWVkYF0uMGNhbmNlbF9uYW1lZAQBCGlkBAEgVGFza05hbWUAAwR0U2VlIFtgUGFsbGV0OjpjYW5jZWxfbmFtZWRgXS44c2NoZWR1bGVfYWZ0ZXIQARRhZnRlchABREJsb2NrTnVtYmVyRm9yPFQ+AAE4bWF5YmVfcGVyaW9kaWO9AwGsT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8QmxvY2tOdW1iZXJGb3I8VD4+PgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbFkCAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAQEfFNlZSBbYFBhbGxldDo6c2NoZWR1bGVfYWZ0ZXJgXS5Qc2NoZWR1bGVfbmFtZWRfYWZ0ZXIUAQhpZAQBIFRhc2tOYW1lAAEUYWZ0ZXIQAURCbG9ja051bWJlckZvcjxUPgABOG1heWJlX3BlcmlvZGljvQMBrE9wdGlvbjxzY2hlZHVsZTo6UGVyaW9kPEJsb2NrTnVtYmVyRm9yPFQ+Pj4AASBwcmlvcml0eQgBSHNjaGVkdWxlOjpQcmlvcml0eQABEGNhbGxZAgF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAFBJRTZWUgW2BQYWxsZXQ6OnNjaGVkdWxlX25hbWVkX2FmdGVyYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLr0DBBhPcHRpb24EBFQBCQIBCBBOb25lAAAAEFNvbWUEAAkCAAABAADBAwxEcGFsbGV0X2Fzc2V0X3JhdGUYcGFsbGV0EENhbGwEBFQAAQwYY3JlYXRlCAEoYXNzZXRfa2luZBECAURCb3g8VDo6QXNzZXRLaW5kPgABEHJhdGUVAgEkRml4ZWRVMTI4AAAEXFNlZSBbYFBhbGxldDo6Y3JlYXRlYF0uGHVwZGF0ZQgBKGFzc2V0X2tpbmQRAgFEQm94PFQ6OkFzc2V0S2luZD4AARByYXRlFQIBJEZpeGVkVTEyOAABBFxTZWUgW2BQYWxsZXQ6OnVwZGF0ZWBdLhhyZW1vdmUEAShhc3NldF9raW5kEQIBREJveDxUOjpBc3NldEtpbmQ+AAIEXFNlZSBbYFBhbGxldDo6cmVtb3ZlYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLsUDDDxwYWxsZXRfYWxsaWFuY2UYcGFsbGV0EENhbGwIBFQABEkAAUQccHJvcG9zZQwBJHRocmVzaG9sZLwBDHUzMgABIHByb3Bvc2FsWQIBfEJveDw8VCBhcyBDb25maWc8ST4+OjpQcm9wb3NhbD4AATBsZW5ndGhfYm91bmS8AQx1MzIAAARgU2VlIFtgUGFsbGV0Ojpwcm9wb3NlYF0uEHZvdGUMASBwcm9wb3NhbDABHFQ6Okhhc2gAARRpbmRleLwBNFByb3Bvc2FsSW5kZXgAARxhcHByb3ZleAEQYm9vbAABBFRTZWUgW2BQYWxsZXQ6OnZvdGVgXS4waW5pdF9tZW1iZXJzCAEcZmVsbG93c5QBRFZlYzxUOjpBY2NvdW50SWQ+AAEYYWxsaWVzlAFEVmVjPFQ6OkFjY291bnRJZD4AAwR0U2VlIFtgUGFsbGV0Ojppbml0X21lbWJlcnNgXS4cZGlzYmFuZAQBHHdpdG5lc3PJAwE4RGlzYmFuZFdpdG5lc3MABARgU2VlIFtgUGFsbGV0OjpkaXNiYW5kYF0uIHNldF9ydWxlBAEQcnVsZR0CAQxDaWQABQRkU2VlIFtgUGFsbGV0OjpzZXRfcnVsZWBdLiBhbm5vdW5jZQQBMGFubm91bmNlbWVudB0CAQxDaWQABgRkU2VlIFtgUGFsbGV0Ojphbm5vdW5jZWBdLkxyZW1vdmVfYW5ub3VuY2VtZW50BAEwYW5ub3VuY2VtZW50HQIBDENpZAAHBJBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9hbm5vdW5jZW1lbnRgXS40am9pbl9hbGxpYW5jZQAIBHhTZWUgW2BQYWxsZXQ6OmpvaW5fYWxsaWFuY2VgXS40bm9taW5hdGVfYWxseQQBDHdob60CAVBBY2NvdW50SWRMb29rdXBPZjxUPgAJBHhTZWUgW2BQYWxsZXQ6Om5vbWluYXRlX2FsbHlgXS4wZWxldmF0ZV9hbGx5BAEQYWxsea0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgAKBHRTZWUgW2BQYWxsZXQ6OmVsZXZhdGVfYWxseWBdLlhnaXZlX3JldGlyZW1lbnRfbm90aWNlAAsEnFNlZSBbYFBhbGxldDo6Z2l2ZV9yZXRpcmVtZW50X25vdGljZWBdLhhyZXRpcmUADARcU2VlIFtgUGFsbGV0OjpyZXRpcmVgXS4sa2lja19tZW1iZXIEAQx3aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4ADQRwU2VlIFtgUGFsbGV0OjpraWNrX21lbWJlcmBdLlhhZGRfdW5zY3J1cHVsb3VzX2l0ZW1zBAEUaXRlbXM1AgF0VmVjPFVuc2NydXB1bG91c0l0ZW1PZjxULCBJPj4ADgScU2VlIFtgUGFsbGV0OjphZGRfdW5zY3J1cHVsb3VzX2l0ZW1zYF0uZHJlbW92ZV91bnNjcnVwdWxvdXNfaXRlbXMEARRpdGVtczUCAXRWZWM8VW5zY3J1cHVsb3VzSXRlbU9mPFQsIEk+PgAPBKhTZWUgW2BQYWxsZXQ6OnJlbW92ZV91bnNjcnVwdWxvdXNfaXRlbXNgXS4UY2xvc2UQATRwcm9wb3NhbF9oYXNoMAEcVDo6SGFzaAABFGluZGV4vAE0UHJvcG9zYWxJbmRleAABVHByb3Bvc2FsX3dlaWdodF9ib3VuZCQBGFdlaWdodAABMGxlbmd0aF9ib3VuZLwBDHUzMgAQBFhTZWUgW2BQYWxsZXQ6OmNsb3NlYF0uWGFiZGljYXRlX2ZlbGxvd19zdGF0dXMAEQScU2VlIFtgUGFsbGV0OjphYmRpY2F0ZV9mZWxsb3dfc3RhdHVzYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLskDDDxwYWxsZXRfYWxsaWFuY2UUdHlwZXM4RGlzYmFuZFdpdG5lc3MAAAgBOGZlbGxvd19tZW1iZXJzvAEMdTMyAAEwYWxseV9tZW1iZXJzvAEMdTMyAADNAwxEcGFsbGV0X2NvbGxlY3RpdmUYcGFsbGV0EENhbGwIBFQABEkAARgsc2V0X21lbWJlcnMMASxuZXdfbWVtYmVyc5QBRFZlYzxUOjpBY2NvdW50SWQ+AAEUcHJpbWUtAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4AASRvbGRfY291bnQQASxNZW1iZXJDb3VudAAABHBTZWUgW2BQYWxsZXQ6OnNldF9tZW1iZXJzYF0uHGV4ZWN1dGUIASBwcm9wb3NhbFkCAXxCb3g8PFQgYXMgQ29uZmlnPEk+Pjo6UHJvcG9zYWw+AAEwbGVuZ3RoX2JvdW5kvAEMdTMyAAEEYFNlZSBbYFBhbGxldDo6ZXhlY3V0ZWBdLhxwcm9wb3NlDAEkdGhyZXNob2xkvAEsTWVtYmVyQ291bnQAASBwcm9wb3NhbFkCAXxCb3g8PFQgYXMgQ29uZmlnPEk+Pjo6UHJvcG9zYWw+AAEwbGVuZ3RoX2JvdW5kvAEMdTMyAAIEYFNlZSBbYFBhbGxldDo6cHJvcG9zZWBdLhB2b3RlDAEgcHJvcG9zYWwwARxUOjpIYXNoAAEUaW5kZXi8ATRQcm9wb3NhbEluZGV4AAEcYXBwcm92ZXgBEGJvb2wAAwRUU2VlIFtgUGFsbGV0Ojp2b3RlYF0uTGRpc2FwcHJvdmVfcHJvcG9zYWwEATRwcm9wb3NhbF9oYXNoMAEcVDo6SGFzaAAFBJBTZWUgW2BQYWxsZXQ6OmRpc2FwcHJvdmVfcHJvcG9zYWxgXS4UY2xvc2UQATRwcm9wb3NhbF9oYXNoMAEcVDo6SGFzaAABFGluZGV4vAE0UHJvcG9zYWxJbmRleAABVHByb3Bvc2FsX3dlaWdodF9ib3VuZCQBGFdlaWdodAABMGxlbmd0aF9ib3VuZLwBDHUzMgAGBFhTZWUgW2BQYWxsZXQ6OmNsb3NlYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLtEDDGBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmUYcGFsbGV0EENhbGwIBFQABEkAARwoYWRkX21lbWJlcgQBDHdob60CAVBBY2NvdW50SWRMb29rdXBPZjxUPgAABGxTZWUgW2BQYWxsZXQ6OmFkZF9tZW1iZXJgXS44cHJvbW90ZV9tZW1iZXIEAQx3aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4AAQR8U2VlIFtgUGFsbGV0Ojpwcm9tb3RlX21lbWJlcmBdLjRkZW1vdGVfbWVtYmVyBAEMd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAIEeFNlZSBbYFBhbGxldDo6ZGVtb3RlX21lbWJlcmBdLjRyZW1vdmVfbWVtYmVyCAEMd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEgbWluX3Jhbmv9AQEQUmFuawADBHhTZWUgW2BQYWxsZXQ6OnJlbW92ZV9tZW1iZXJgXS4Qdm90ZQgBEHBvbGwQAURQb2xsSW5kZXhPZjxULCBJPgABDGF5ZXgBEGJvb2wABARUU2VlIFtgUGFsbGV0Ojp2b3RlYF0uMGNsZWFudXBfcG9sbAgBKHBvbGxfaW5kZXgQAURQb2xsSW5kZXhPZjxULCBJPgABDG1heBABDHUzMgAFBHRTZWUgW2BQYWxsZXQ6OmNsZWFudXBfcG9sbGBdLjxleGNoYW5nZV9tZW1iZXIIAQx3aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4AARxuZXdfd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAYEgFNlZSBbYFBhbGxldDo6ZXhjaGFuZ2VfbWVtYmVyYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLtUDDEBwYWxsZXRfcmVmZXJlbmRhGHBhbGxldBBDYWxsCARUAARJAAEkGHN1Ym1pdAwBPHByb3Bvc2FsX29yaWdpboEDAVxCb3g8UGFsbGV0c09yaWdpbk9mPFQ+PgABIHByb3Bvc2FsVQIBTEJvdW5kZWRDYWxsT2Y8VCwgST4AAUBlbmFjdG1lbnRfbW9tZW502QMBfERpc3BhdGNoVGltZTxCbG9ja051bWJlckZvcjxUPj4AAARcU2VlIFtgUGFsbGV0OjpzdWJtaXRgXS5YcGxhY2VfZGVjaXNpb25fZGVwb3NpdAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAEEnFNlZSBbYFBhbGxldDo6cGxhY2VfZGVjaXNpb25fZGVwb3NpdGBdLlxyZWZ1bmRfZGVjaXNpb25fZGVwb3NpdAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAIEoFNlZSBbYFBhbGxldDo6cmVmdW5kX2RlY2lzaW9uX2RlcG9zaXRgXS4YY2FuY2VsBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgAAwRcU2VlIFtgUGFsbGV0OjpjYW5jZWxgXS4Qa2lsbAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAQEVFNlZSBbYFBhbGxldDo6a2lsbGBdLkBudWRnZV9yZWZlcmVuZHVtBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgABQSEU2VlIFtgUGFsbGV0OjpudWRnZV9yZWZlcmVuZHVtYF0uSG9uZV9mZXdlcl9kZWNpZGluZwQBFHRyYWNr/QEBPFRyYWNrSWRPZjxULCBJPgAGBIxTZWUgW2BQYWxsZXQ6Om9uZV9mZXdlcl9kZWNpZGluZ2BdLmRyZWZ1bmRfc3VibWlzc2lvbl9kZXBvc2l0BAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgABwSoU2VlIFtgUGFsbGV0OjpyZWZ1bmRfc3VibWlzc2lvbl9kZXBvc2l0YF0uMHNldF9tZXRhZGF0YQgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAEobWF5YmVfaGFzaN0DATxPcHRpb248VDo6SGFzaD4ACAR0U2VlIFtgUGFsbGV0OjpzZXRfbWV0YWRhdGFgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu2QMQNGZyYW1lX3N1cHBvcnQYdHJhaXRzIHNjaGVkdWxlMERpc3BhdGNoVGltZQQsQmxvY2tOdW1iZXIBEAEICEF0BAAQASxCbG9ja051bWJlcgAAABRBZnRlcgQAEAEsQmxvY2tOdW1iZXIAAQAA3QMEGE9wdGlvbgQEVAEwAQgQTm9uZQAAABBTb21lBAAwAAABAADhAwxYcGFsbGV0X2NvcmVfZmVsbG93c2hpcBhwYWxsZXQQQ2FsbAgEVAAESQABJBBidW1wBAEMd2hvAAEwVDo6QWNjb3VudElkAAAEVFNlZSBbYFBhbGxldDo6YnVtcGBdLihzZXRfcGFyYW1zBAEYcGFyYW1z5QMBTEJveDxQYXJhbXNPZjxULCBJPj4AAQRsU2VlIFtgUGFsbGV0OjpzZXRfcGFyYW1zYF0uKHNldF9hY3RpdmUEASRpc19hY3RpdmV4ARBib29sAAIEbFNlZSBbYFBhbGxldDo6c2V0X2FjdGl2ZWBdLhxhcHByb3ZlCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcYXRfcmFua/0BATBSYW5rT2Y8VCwgST4AAwRgU2VlIFtgUGFsbGV0OjphcHByb3ZlYF0uGGluZHVjdAQBDHdobwABMFQ6OkFjY291bnRJZAAEBFxTZWUgW2BQYWxsZXQ6OmluZHVjdGBdLhxwcm9tb3RlCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcdG9fcmFua/0BATBSYW5rT2Y8VCwgST4ABQRgU2VlIFtgUGFsbGV0Ojpwcm9tb3RlYF0uIG9mZmJvYXJkBAEMd2hvAAEwVDo6QWNjb3VudElkAAYEZFNlZSBbYFBhbGxldDo6b2ZmYm9hcmRgXS48c3VibWl0X2V2aWRlbmNlCAEQd2lzaPEDARBXaXNoAAEgZXZpZGVuY2X1AwE4RXZpZGVuY2U8VCwgST4ABwSAU2VlIFtgUGFsbGV0OjpzdWJtaXRfZXZpZGVuY2VgXS4YaW1wb3J0AAgEXFNlZSBbYFBhbGxldDo6aW1wb3J0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLuUDCFhwYWxsZXRfY29yZV9mZWxsb3dzaGlwKFBhcmFtc1R5cGUIHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQABQBNGFjdGl2ZV9zYWxhcnnpAwFAW0JhbGFuY2U7IFJBTktTXQABOHBhc3NpdmVfc2FsYXJ56QMBQFtCYWxhbmNlOyBSQU5LU10AATxkZW1vdGlvbl9wZXJpb2TtAwFQW0Jsb2NrTnVtYmVyOyBSQU5LU10AAVBtaW5fcHJvbW90aW9uX3BlcmlvZO0DAVBbQmxvY2tOdW1iZXI7IFJBTktTXQABQG9mZmJvYXJkX3RpbWVvdXQQASxCbG9ja051bWJlcgAA6QMAAAMJAAAAGADtAwAAAwkAAAAQAPEDCFhwYWxsZXRfY29yZV9mZWxsb3dzaGlwEFdpc2gAAQgkUmV0ZW50aW9uAAAAJFByb21vdGlvbgABAAD1AwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAPkDDDRwYWxsZXRfc2FsYXJ5GHBhbGxldBBDYWxsCARUAARJAAEcEGluaXQAAARUU2VlIFtgUGFsbGV0Ojppbml0YF0uEGJ1bXAAAQRUU2VlIFtgUGFsbGV0OjpidW1wYF0uGGluZHVjdAACBFxTZWUgW2BQYWxsZXQ6OmluZHVjdGBdLiByZWdpc3RlcgADBGRTZWUgW2BQYWxsZXQ6OnJlZ2lzdGVyYF0uGHBheW91dAAEBFxTZWUgW2BQYWxsZXQ6OnBheW91dGBdLjBwYXlvdXRfb3RoZXIEASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAAFBHRTZWUgW2BQYWxsZXQ6OnBheW91dF9vdGhlcmBdLjRjaGVja19wYXltZW50AAYEeFNlZSBbYFBhbGxldDo6Y2hlY2tfcGF5bWVudGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy79Aww8cGFsbGV0X3RyZWFzdXJ5GHBhbGxldBBDYWxsCARUAARJAAEkNHByb3Bvc2Vfc3BlbmQIARR2YWx1ZcwBPEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5rQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAAEeFNlZSBbYFBhbGxldDo6cHJvcG9zZV9zcGVuZGBdLjxyZWplY3RfcHJvcG9zYWwEASxwcm9wb3NhbF9pZLwBNFByb3Bvc2FsSW5kZXgAAQSAU2VlIFtgUGFsbGV0OjpyZWplY3RfcHJvcG9zYWxgXS5AYXBwcm92ZV9wcm9wb3NhbAQBLHByb3Bvc2FsX2lkvAE0UHJvcG9zYWxJbmRleAACBIRTZWUgW2BQYWxsZXQ6OmFwcHJvdmVfcHJvcG9zYWxgXS4sc3BlbmRfbG9jYWwIARhhbW91bnTMATxCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyea0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgADBHBTZWUgW2BQYWxsZXQ6OnNwZW5kX2xvY2FsYF0uPHJlbW92ZV9hcHByb3ZhbAQBLHByb3Bvc2FsX2lkvAE0UHJvcG9zYWxJbmRleAAEBIBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9hcHByb3ZhbGBdLhRzcGVuZBABKGFzc2V0X2tpbmQRAgFEQm94PFQ6OkFzc2V0S2luZD4AARhhbW91bnTMAVBBc3NldEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5yQEBeEJveDxCZW5lZmljaWFyeUxvb2t1cE9mPFQsIEk+PgABKHZhbGlkX2Zyb21lAwFkT3B0aW9uPEJsb2NrTnVtYmVyRm9yPFQ+PgAFBFhTZWUgW2BQYWxsZXQ6OnNwZW5kYF0uGHBheW91dAQBFGluZGV4EAEoU3BlbmRJbmRleAAGBFxTZWUgW2BQYWxsZXQ6OnBheW91dGBdLjBjaGVja19zdGF0dXMEARRpbmRleBABKFNwZW5kSW5kZXgABwR0U2VlIFtgUGFsbGV0OjpjaGVja19zdGF0dXNgXS4odm9pZF9zcGVuZAQBFGluZGV4EAEoU3BlbmRJbmRleAAIBGxTZWUgW2BQYWxsZXQ6OnZvaWRfc3BlbmRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuAQQMYHBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZRhwYWxsZXQQQ2FsbAgEVAAESQABHChhZGRfbWVtYmVyBAEMd2hvrQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAAEbFNlZSBbYFBhbGxldDo6YWRkX21lbWJlcmBdLjhwcm9tb3RlX21lbWJlcgQBDHdob60CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABBHxTZWUgW2BQYWxsZXQ6OnByb21vdGVfbWVtYmVyYF0uNGRlbW90ZV9tZW1iZXIEAQx3aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4AAgR4U2VlIFtgUGFsbGV0OjpkZW1vdGVfbWVtYmVyYF0uNHJlbW92ZV9tZW1iZXIIAQx3aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4AASBtaW5fcmFua/0BARBSYW5rAAMEeFNlZSBbYFBhbGxldDo6cmVtb3ZlX21lbWJlcmBdLhB2b3RlCAEQcG9sbBABRFBvbGxJbmRleE9mPFQsIEk+AAEMYXlleAEQYm9vbAAEBFRTZWUgW2BQYWxsZXQ6OnZvdGVgXS4wY2xlYW51cF9wb2xsCAEocG9sbF9pbmRleBABRFBvbGxJbmRleE9mPFQsIEk+AAEMbWF4EAEMdTMyAAUEdFNlZSBbYFBhbGxldDo6Y2xlYW51cF9wb2xsYF0uPGV4Y2hhbmdlX21lbWJlcggBDHdob60CAVBBY2NvdW50SWRMb29rdXBPZjxUPgABHG5ld193aG+tAgFQQWNjb3VudElkTG9va3VwT2Y8VD4ABgSAU2VlIFtgUGFsbGV0OjpleGNoYW5nZV9tZW1iZXJgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuBQQMQHBhbGxldF9yZWZlcmVuZGEYcGFsbGV0EENhbGwIBFQABEkAASQYc3VibWl0DAE8cHJvcG9zYWxfb3JpZ2lugQMBXEJveDxQYWxsZXRzT3JpZ2luT2Y8VD4+AAEgcHJvcG9zYWxVAgFMQm91bmRlZENhbGxPZjxULCBJPgABQGVuYWN0bWVudF9tb21lbnTZAwF8RGlzcGF0Y2hUaW1lPEJsb2NrTnVtYmVyRm9yPFQ+PgAABFxTZWUgW2BQYWxsZXQ6OnN1Ym1pdGBdLlhwbGFjZV9kZWNpc2lvbl9kZXBvc2l0BAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgAAQScU2VlIFtgUGFsbGV0OjpwbGFjZV9kZWNpc2lvbl9kZXBvc2l0YF0uXHJlZnVuZF9kZWNpc2lvbl9kZXBvc2l0BAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgAAgSgU2VlIFtgUGFsbGV0OjpyZWZ1bmRfZGVjaXNpb25fZGVwb3NpdGBdLhhjYW5jZWwEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAADBFxTZWUgW2BQYWxsZXQ6OmNhbmNlbGBdLhBraWxsBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgABARUU2VlIFtgUGFsbGV0OjpraWxsYF0uQG51ZGdlX3JlZmVyZW5kdW0EARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAAFBIRTZWUgW2BQYWxsZXQ6Om51ZGdlX3JlZmVyZW5kdW1gXS5Ib25lX2Zld2VyX2RlY2lkaW5nBAEUdHJhY2v9AQE8VHJhY2tJZE9mPFQsIEk+AAYEjFNlZSBbYFBhbGxldDo6b25lX2Zld2VyX2RlY2lkaW5nYF0uZHJlZnVuZF9zdWJtaXNzaW9uX2RlcG9zaXQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAAHBKhTZWUgW2BQYWxsZXQ6OnJlZnVuZF9zdWJtaXNzaW9uX2RlcG9zaXRgXS4wc2V0X21ldGFkYXRhCAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgAAShtYXliZV9oYXNo3QMBPE9wdGlvbjxUOjpIYXNoPgAIBHRTZWUgW2BQYWxsZXQ6OnNldF9tZXRhZGF0YWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4JBAxYcGFsbGV0X2NvcmVfZmVsbG93c2hpcBhwYWxsZXQQQ2FsbAgEVAAESQABJBBidW1wBAEMd2hvAAEwVDo6QWNjb3VudElkAAAEVFNlZSBbYFBhbGxldDo6YnVtcGBdLihzZXRfcGFyYW1zBAEYcGFyYW1z5QMBTEJveDxQYXJhbXNPZjxULCBJPj4AAQRsU2VlIFtgUGFsbGV0OjpzZXRfcGFyYW1zYF0uKHNldF9hY3RpdmUEASRpc19hY3RpdmV4ARBib29sAAIEbFNlZSBbYFBhbGxldDo6c2V0X2FjdGl2ZWBdLhxhcHByb3ZlCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcYXRfcmFua/0BATBSYW5rT2Y8VCwgST4AAwRgU2VlIFtgUGFsbGV0OjphcHByb3ZlYF0uGGluZHVjdAQBDHdobwABMFQ6OkFjY291bnRJZAAEBFxTZWUgW2BQYWxsZXQ6OmluZHVjdGBdLhxwcm9tb3RlCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcdG9fcmFua/0BATBSYW5rT2Y8VCwgST4ABQRgU2VlIFtgUGFsbGV0Ojpwcm9tb3RlYF0uIG9mZmJvYXJkBAEMd2hvAAEwVDo6QWNjb3VudElkAAYEZFNlZSBbYFBhbGxldDo6b2ZmYm9hcmRgXS48c3VibWl0X2V2aWRlbmNlCAEQd2lzaPEDARBXaXNoAAEgZXZpZGVuY2X1AwE4RXZpZGVuY2U8VCwgST4ABwSAU2VlIFtgUGFsbGV0OjpzdWJtaXRfZXZpZGVuY2VgXS4YaW1wb3J0AAgEXFNlZSBbYFBhbGxldDo6aW1wb3J0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLg0EDDRwYWxsZXRfc2FsYXJ5GHBhbGxldBBDYWxsCARUAARJAAEcEGluaXQAAARUU2VlIFtgUGFsbGV0Ojppbml0YF0uEGJ1bXAAAQRUU2VlIFtgUGFsbGV0OjpidW1wYF0uGGluZHVjdAACBFxTZWUgW2BQYWxsZXQ6OmluZHVjdGBdLiByZWdpc3RlcgADBGRTZWUgW2BQYWxsZXQ6OnJlZ2lzdGVyYF0uGHBheW91dAAEBFxTZWUgW2BQYWxsZXQ6OnBheW91dGBdLjBwYXlvdXRfb3RoZXIEASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAAFBHRTZWUgW2BQYWxsZXQ6OnBheW91dF9vdGhlcmBdLjRjaGVja19wYXltZW50AAYEeFNlZSBbYFBhbGxldDo6Y2hlY2tfcGF5bWVudGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4RBAw8cGFsbGV0X3RyZWFzdXJ5GHBhbGxldBBDYWxsCARUAARJAAEkNHByb3Bvc2Vfc3BlbmQIARR2YWx1ZcwBPEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5rQIBUEFjY291bnRJZExvb2t1cE9mPFQ+AAAEeFNlZSBbYFBhbGxldDo6cHJvcG9zZV9zcGVuZGBdLjxyZWplY3RfcHJvcG9zYWwEASxwcm9wb3NhbF9pZLwBNFByb3Bvc2FsSW5kZXgAAQSAU2VlIFtgUGFsbGV0OjpyZWplY3RfcHJvcG9zYWxgXS5AYXBwcm92ZV9wcm9wb3NhbAQBLHByb3Bvc2FsX2lkvAE0UHJvcG9zYWxJbmRleAACBIRTZWUgW2BQYWxsZXQ6OmFwcHJvdmVfcHJvcG9zYWxgXS4sc3BlbmRfbG9jYWwIARhhbW91bnTMATxCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyea0CAVBBY2NvdW50SWRMb29rdXBPZjxUPgADBHBTZWUgW2BQYWxsZXQ6OnNwZW5kX2xvY2FsYF0uPHJlbW92ZV9hcHByb3ZhbAQBLHByb3Bvc2FsX2lkvAE0UHJvcG9zYWxJbmRleAAEBIBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9hcHByb3ZhbGBdLhRzcGVuZBABKGFzc2V0X2tpbmQRAgFEQm94PFQ6OkFzc2V0S2luZD4AARhhbW91bnTMAVBBc3NldEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5yQEBeEJveDxCZW5lZmljaWFyeUxvb2t1cE9mPFQsIEk+PgABKHZhbGlkX2Zyb21lAwFkT3B0aW9uPEJsb2NrTnVtYmVyRm9yPFQ+PgAFBFhTZWUgW2BQYWxsZXQ6OnNwZW5kYF0uGHBheW91dAQBFGluZGV4EAEoU3BlbmRJbmRleAAGBFxTZWUgW2BQYWxsZXQ6OnBheW91dGBdLjBjaGVja19zdGF0dXMEARRpbmRleBABKFNwZW5kSW5kZXgABwR0U2VlIFtgUGFsbGV0OjpjaGVja19zdGF0dXNgXS4odm9pZF9zcGVuZAQBFGluZGV4EAEoU3BlbmRJbmRleAAIBGxTZWUgW2BQYWxsZXQ6OnZvaWRfc3BlbmRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuFQQMKHNwX3J1bnRpbWUYdHJhaXRzLEJsYWtlVHdvMjU2AAAAABkEDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAAHQQMWHBhbGxldF9jb3JlX2ZlbGxvd3NoaXAYcGFsbGV0FEV2ZW50CARUAARJAAEsNFBhcmFtc0NoYW5nZWQEARhwYXJhbXPlAwE4UGFyYW1zT2Y8VCwgST4AAAScUGFyYW1ldGVycyBmb3IgdGhlIHBhbGxldCBoYXZlIGNoYW5nZWQuNEFjdGl2ZUNoYW5nZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAASRpc19hY3RpdmV4ARBib29sAAEEiE1lbWJlciBhY3Rpdml0eSBmbGFnIGhhcyBiZWVuIHNldC4gSW5kdWN0ZWQEAQx3aG8AATBUOjpBY2NvdW50SWQAAgS4TWVtYmVyIGhhcyBiZWd1biBiZWluZyB0cmFja2VkIGluIHRoaXMgcGFsbGV0LihPZmZib2FyZGVkBAEMd2hvAAEwVDo6QWNjb3VudElkAAMITQFNZW1iZXIgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIGJlaW5nIHRyYWNrZWQgaW4gdGhpcyBwYWxsZXQgKGkuZS4gYmVjYXVzZSByYW5rIGlzIG5vdxh6ZXJvKS4gUHJvbW90ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARx0b19yYW5r/QEBMFJhbmtPZjxULCBJPgAEBKxNZW1iZXIgaGFzIGJlZW4gcHJvbW90ZWQgdG8gdGhlIGdpdmVuIHJhbmsuHERlbW90ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARx0b19yYW5r/QEBMFJhbmtPZjxULCBJPgAFBNRNZW1iZXIgaGFzIGJlZW4gZGVtb3RlZCB0byB0aGUgZ2l2ZW4gKG5vbi16ZXJvKSByYW5rLhhQcm92ZW4IAQx3aG8AATBUOjpBY2NvdW50SWQAARxhdF9yYW5r/QEBMFJhbmtPZjxULCBJPgAGBB0BTWVtYmVyIGhhcyBiZWVuIHByb3ZlbiBhdCB0aGVpciBjdXJyZW50IHJhbmssIHBvc3Rwb25pbmcgYXV0by1kZW1vdGlvbi4kUmVxdWVzdGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQd2lzaPEDARBXaXNoAAcEDQFNZW1iZXIgaGFzIHN0YXRlZCBldmlkZW5jZSBvZiB0aGVpciBlZmZvcnRzIHRoZWlyIHJlcXVlc3QgZm9yIHJhbmsuOEV2aWRlbmNlSnVkZ2VkFAEMd2hvAAEwVDo6QWNjb3VudElkBFRUaGUgbWVtYmVyL2NhbmRpZGF0ZS4BEHdpc2jxAwEQV2lzaATkVGhlIGRlc2lyZWQgb3V0Y29tZSBmb3Igd2hpY2ggdGhlIGV2aWRlbmNlIHdhcyBwcmVzZW50ZWQuASBldmlkZW5jZfUDAThFdmlkZW5jZTxULCBJPgRgVGhlIGV2aWRlbmNlIG9mIGVmZm9ydHMuASBvbGRfcmFua/0BAQx1MTYEjFRoZSBvbGQgcmFuaywgcHJpb3IgdG8gdGhpcyBjaGFuZ2UuASBuZXdfcmFuayEEASxPcHRpb248dTE2PgT8TmV3IHJhbmsuIElmIGBOb25lYCB0aGVuIGNhbmRpZGF0ZSByZWNvcmQgd2FzIHJlbW92ZWQgZW50aXJlbHkuCAhdAVNvbWUgc3VibWl0dGVkIGV2aWRlbmNlIHdhcyBqdWRnZWQgYW5kIHJlbW92ZWQuIFRoZXJlIG1heSBvciBtYXkgbm90IGhhdmUgYmVlbiBhIGNoYW5nZdB0byB0aGUgcmFuaywgYnV0IGluIGFueSBjYXNlLCBgbGFzdF9wcm9vZmAgaXMgcmVzZXQuIEltcG9ydGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQcmFua/0BATBSYW5rT2Y8VCwgST4ACQTsUHJlLXJhbmtlZCBhY2NvdW50IGhhcyBiZWVuIGluZHVjdGVkIGF0IHRoZWlyIGN1cnJlbnQgcmFuay4cU3dhcHBlZAgBDHdobwABMFQ6OkFjY291bnRJZAABHG5ld193aG8AATBUOjpBY2NvdW50SWQACgSMQSBtZW1iZXIgaGFkIGl0cyBBY2NvdW50SWQgc3dhcHBlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQhBAQYT3B0aW9uBARUAf0BAQgQTm9uZQAAABBTb21lBAD9AQAAAQAAJQQMNHBhbGxldF9zYWxhcnkYcGFsbGV0FEV2ZW50CARUAARJAAEUIEluZHVjdGVkBAEMd2hvAAEwVDo6QWNjb3VudElkAAAEmEEgbWVtYmVyIGlzIGluZHVjdGVkIGludG8gdGhlIHBheXJvbGwuKFJlZ2lzdGVyZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4AAQSEQSBtZW1iZXIgcmVnaXN0ZXJlZCBmb3IgYSBwYXlvdXQuEFBhaWQQAQx3aG8AATBUOjpBY2NvdW50SWQAASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBPEJhbGFuY2VPZjxULCBJPgABCGlkLAFkPFQ6OlBheW1hc3RlciBhcyBQYXk+OjpJZAACBExBIHBheW1lbnQgaGFwcGVuZWQuMEN5Y2xlU3RhcnRlZAQBFGluZGV4EAE8Q3ljbGVJbmRleE9mPFQ+AAMEWFRoZSBuZXh0IGN5Y2xlIGJlZ2lucy4cU3dhcHBlZAgBDHdobwABMFQ6OkFjY291bnRJZAABHG5ld193aG8AATBUOjpBY2NvdW50SWQABAR8QSBtZW1iZXIgc3dhcHBlZCB0aGVpciBhY2NvdW50LgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldCkEDDxwYWxsZXRfdHJlYXN1cnkYcGFsbGV0FEV2ZW50CARUAARJAAE4IFByb3Bvc2VkBAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAAENE5ldyBwcm9wb3NhbC4gU3BlbmRpbmcEAUBidWRnZXRfcmVtYWluaW5nGAE8QmFsYW5jZU9mPFQsIEk+AAEE5FdlIGhhdmUgZW5kZWQgYSBzcGVuZCBwZXJpb2QgYW5kIHdpbGwgbm93IGFsbG9jYXRlIGZ1bmRzLhxBd2FyZGVkDAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAEUYXdhcmQYATxCYWxhbmNlT2Y8VCwgST4AARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAIEfFNvbWUgZnVuZHMgaGF2ZSBiZWVuIGFsbG9jYXRlZC4gUmVqZWN0ZWQIAThwcm9wb3NhbF9pbmRleBABNFByb3Bvc2FsSW5kZXgAARxzbGFzaGVkGAE8QmFsYW5jZU9mPFQsIEk+AAMEsEEgcHJvcG9zYWwgd2FzIHJlamVjdGVkOyBmdW5kcyB3ZXJlIHNsYXNoZWQuFEJ1cm50BAEsYnVybnRfZnVuZHMYATxCYWxhbmNlT2Y8VCwgST4ABASIU29tZSBvZiBvdXIgZnVuZHMgaGF2ZSBiZWVuIGJ1cm50LiBSb2xsb3ZlcgQBQHJvbGxvdmVyX2JhbGFuY2UYATxCYWxhbmNlT2Y8VCwgST4ABQQtAVNwZW5kaW5nIGhhcyBmaW5pc2hlZDsgdGhpcyBpcyB0aGUgYW1vdW50IHRoYXQgcm9sbHMgb3ZlciB1bnRpbCBuZXh0IHNwZW5kLhxEZXBvc2l0BAEUdmFsdWUYATxCYWxhbmNlT2Y8VCwgST4ABgR8U29tZSBmdW5kcyBoYXZlIGJlZW4gZGVwb3NpdGVkLjRTcGVuZEFwcHJvdmVkDAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnkAATBUOjpBY2NvdW50SWQABwScQSBuZXcgc3BlbmQgcHJvcG9zYWwgaGFzIGJlZW4gYXBwcm92ZWQuPFVwZGF0ZWRJbmFjdGl2ZQgBLHJlYWN0aXZhdGVkGAE8QmFsYW5jZU9mPFQsIEk+AAEsZGVhY3RpdmF0ZWQYATxCYWxhbmNlT2Y8VCwgST4ACATMVGhlIGluYWN0aXZlIGZ1bmRzIG9mIHRoZSBwYWxsZXQgaGF2ZSBiZWVuIHVwZGF0ZWQuSEFzc2V0U3BlbmRBcHByb3ZlZBgBFGluZGV4EAEoU3BlbmRJbmRleAABKGFzc2V0X2tpbmQRAgEwVDo6QXNzZXRLaW5kAAEYYW1vdW50GAFQQXNzZXRCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyeckBAThUOjpCZW5lZmljaWFyeQABKHZhbGlkX2Zyb20QAURCbG9ja051bWJlckZvcjxUPgABJGV4cGlyZV9hdBABREJsb2NrTnVtYmVyRm9yPFQ+AAkEtEEgbmV3IGFzc2V0IHNwZW5kIHByb3Bvc2FsIGhhcyBiZWVuIGFwcHJvdmVkLkBBc3NldFNwZW5kVm9pZGVkBAEUaW5kZXgQAShTcGVuZEluZGV4AAoEdEFuIGFwcHJvdmVkIHNwZW5kIHdhcyB2b2lkZWQuEFBhaWQIARRpbmRleBABKFNwZW5kSW5kZXgAAShwYXltZW50X2lkLAFkPFQ6OlBheW1hc3RlciBhcyBQYXk+OjpJZAALBExBIHBheW1lbnQgaGFwcGVuZWQuNFBheW1lbnRGYWlsZWQIARRpbmRleBABKFNwZW5kSW5kZXgAAShwYXltZW50X2lkLAFkPFQ6OlBheW1hc3RlciBhcyBQYXk+OjpJZAAMBJBBIHBheW1lbnQgZmFpbGVkIGFuZCBjYW4gYmUgcmV0cmllZC44U3BlbmRQcm9jZXNzZWQEARRpbmRleBABKFNwZW5kSW5kZXgADQhNAUEgc3BlbmQgd2FzIHByb2Nlc3NlZCBhbmQgcmVtb3ZlZCBmcm9tIHRoZSBzdG9yYWdlLiBJdCBtaWdodCBoYXZlIGJlZW4gc3VjY2Vzc2Z1bGx5cHBhaWQgb3IgaXQgbWF5IGhhdmUgZXhwaXJlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQtBAxgcGFsbGV0X3JhbmtlZF9jb2xsZWN0aXZlGHBhbGxldBRFdmVudAgEVAAESQABFCxNZW1iZXJBZGRlZAQBDHdobwABMFQ6OkFjY291bnRJZAAABHhBIG1lbWJlciBgd2hvYCBoYXMgYmVlbiBhZGRlZC4sUmFua0NoYW5nZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARByYW5r/QEBEFJhbmsAAQT0VGhlIG1lbWJlciBgd2hvYHNlIHJhbmsgaGFzIGJlZW4gY2hhbmdlZCB0byB0aGUgZ2l2ZW4gYHJhbmtgLjRNZW1iZXJSZW1vdmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEQcmFua/0BARBSYW5rAAIEGQFUaGUgbWVtYmVyIGB3aG9gIG9mIGdpdmVuIGByYW5rYCBoYXMgYmVlbiByZW1vdmVkIGZyb20gdGhlIGNvbGxlY3RpdmUuFFZvdGVkEAEMd2hvAAEwVDo6QWNjb3VudElkAAEQcG9sbBABRFBvbGxJbmRleE9mPFQsIEk+AAEQdm90ZUkCAShWb3RlUmVjb3JkAAEUdGFsbHkxBAE0VGFsbHlPZjxULCBJPgADCFUBVGhlIG1lbWJlciBgd2hvYCBoYXMgdm90ZWQgZm9yIHRoZSBgcG9sbGAgd2l0aCB0aGUgZ2l2ZW4gYHZvdGVgIGxlYWRpbmcgdG8gYW4gdXBkYXRlZCBgdGFsbHlgLjxNZW1iZXJFeGNoYW5nZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARxuZXdfd2hvAAEwVDo6QWNjb3VudElkAAQE8FRoZSBtZW1iZXIgYHdob2AgaGFkIHRoZWlyIGBBY2NvdW50SWRgIGNoYW5nZWQgdG8gYG5ld193aG9gLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldDEECGBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmUUVGFsbHkMBFQABEkABE0AAAwBJGJhcmVfYXllcxABLE1lbWJlckluZGV4AAEQYXllcxABFFZvdGVzAAEQbmF5cxABFFZvdGVzAAA1BAxAcGFsbGV0X3JlZmVyZW5kYRhwYWxsZXQURXZlbnQIBFQABEkAAUAkU3VibWl0dGVkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdHJhY2v9AQE8VHJhY2tJZE9mPFQsIEk+BCUBVGhlIHRyYWNrIChhbmQgYnkgZXh0ZW5zaW9uIHByb3Bvc2FsIGRpc3BhdGNoIG9yaWdpbikgb2YgdGhpcyByZWZlcmVuZHVtLgEgcHJvcG9zYWxVAgFMQm91bmRlZENhbGxPZjxULCBJPgSAVGhlIHByb3Bvc2FsIGZvciB0aGUgcmVmZXJlbmR1bS4ABIBBIHJlZmVyZW5kdW0gaGFzIGJlZW4gc3VibWl0dGVkLlREZWNpc2lvbkRlcG9zaXRQbGFjZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgEElFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHBsYWNlZC5cRGVjaXNpb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgIEnFRoZSBkZWNpc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHJlZnVuZGVkLjhEZXBvc2l0U2xhc2hlZAgBDHdobwABMFQ6OkFjY291bnRJZASMVGhlIGFjY291bnQgd2hvIHBsYWNlZCB0aGUgZGVwb3NpdC4BGGFtb3VudBgBPEJhbGFuY2VPZjxULCBJPgSEVGhlIGFtb3VudCBwbGFjZWQgYnkgdGhlIGFjY291bnQuAwRsQSBkZXBvc2l0IGhhcyBiZWVuIHNsYXNoZWQuPERlY2lzaW9uU3RhcnRlZBABFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRyYWNr/QEBPFRyYWNrSWRPZjxULCBJPgQlAVRoZSB0cmFjayAoYW5kIGJ5IGV4dGVuc2lvbiBwcm9wb3NhbCBkaXNwYXRjaCBvcmlnaW4pIG9mIHRoaXMgcmVmZXJlbmR1bS4BIHByb3Bvc2FsVQIBTEJvdW5kZWRDYWxsT2Y8VCwgST4EgFRoZSBwcm9wb3NhbCBmb3IgdGhlIHJlZmVyZW5kdW0uARR0YWxseTEEASBUOjpUYWxseQS4VGhlIGN1cnJlbnQgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgQEvEEgcmVmZXJlbmR1bSBoYXMgbW92ZWQgaW50byB0aGUgZGVjaWRpbmcgcGhhc2UuOENvbmZpcm1TdGFydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgUAOENvbmZpcm1BYm9ydGVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgYAJENvbmZpcm1lZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5MQQBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgcEIQFBIHJlZmVyZW5kdW0gaGFzIGVuZGVkIGl0cyBjb25maXJtYXRpb24gcGhhc2UgYW5kIGlzIHJlYWR5IGZvciBhcHByb3ZhbC4gQXBwcm92ZWQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uCAQNAUEgcmVmZXJlbmR1bSBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXRzIHByb3Bvc2FsIGhhcyBiZWVuIHNjaGVkdWxlZC4gUmVqZWN0ZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseTEEASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4JBKxBIHByb3Bvc2FsIGhhcyBiZWVuIHJlamVjdGVkIGJ5IHJlZmVyZW5kdW0uIFRpbWVkT3V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdGFsbHkxBAEgVDo6VGFsbHkEsFRoZSBmaW5hbCB0YWxseSBvZiB2b3RlcyBpbiB0aGlzIHJlZmVyZW5kdW0uCgTYQSByZWZlcmVuZHVtIGhhcyBiZWVuIHRpbWVkIG91dCB3aXRob3V0IGJlaW5nIGRlY2lkZWQuJENhbmNlbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5MQQBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgsEgEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBjYW5jZWxsZWQuGEtpbGxlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5MQQBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgwEdEEgcmVmZXJlbmR1bSBoYXMgYmVlbiBraWxsZWQuZFN1Ym1pc3Npb25EZXBvc2l0UmVmdW5kZWQMARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50Lg0EpFRoZSBzdWJtaXNzaW9uIGRlcG9zaXQgaGFzIGJlZW4gcmVmdW5kZWQuLE1ldGFkYXRhU2V0CAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEQaGFzaDABHFQ6Okhhc2gEOFByZWltYWdlIGhhc2guDgScTWV0YWRhdGEgZm9yIGEgcmVmZXJlbmR1bSBoYXMgYmVlbiBzZXQuPE1ldGFkYXRhQ2xlYXJlZAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BEGhhc2gwARxUOjpIYXNoBDhQcmVpbWFnZSBoYXNoLg8ErE1ldGFkYXRhIGZvciBhIHJlZmVyZW5kdW0gaGFzIGJlZW4gY2xlYXJlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQ5BAxYcGFsbGV0X2NvcmVfZmVsbG93c2hpcBhwYWxsZXQURXZlbnQIBFQABEkAASw0UGFyYW1zQ2hhbmdlZAQBGHBhcmFtc+UDAThQYXJhbXNPZjxULCBJPgAABJxQYXJhbWV0ZXJzIGZvciB0aGUgcGFsbGV0IGhhdmUgY2hhbmdlZC40QWN0aXZlQ2hhbmdlZAgBDHdobwABMFQ6OkFjY291bnRJZAABJGlzX2FjdGl2ZXgBEGJvb2wAAQSITWVtYmVyIGFjdGl2aXR5IGZsYWcgaGFzIGJlZW4gc2V0LiBJbmR1Y3RlZAQBDHdobwABMFQ6OkFjY291bnRJZAACBLhNZW1iZXIgaGFzIGJlZ3VuIGJlaW5nIHRyYWNrZWQgaW4gdGhpcyBwYWxsZXQuKE9mZmJvYXJkZWQEAQx3aG8AATBUOjpBY2NvdW50SWQAAwhNAU1lbWJlciBoYXMgYmVlbiByZW1vdmVkIGZyb20gYmVpbmcgdHJhY2tlZCBpbiB0aGlzIHBhbGxldCAoaS5lLiBiZWNhdXNlIHJhbmsgaXMgbm93GHplcm8pLiBQcm9tb3RlZAgBDHdobwABMFQ6OkFjY291bnRJZAABHHRvX3Jhbmv9AQEwUmFua09mPFQsIEk+AAQErE1lbWJlciBoYXMgYmVlbiBwcm9tb3RlZCB0byB0aGUgZ2l2ZW4gcmFuay4cRGVtb3RlZAgBDHdobwABMFQ6OkFjY291bnRJZAABHHRvX3Jhbmv9AQEwUmFua09mPFQsIEk+AAUE1E1lbWJlciBoYXMgYmVlbiBkZW1vdGVkIHRvIHRoZSBnaXZlbiAobm9uLXplcm8pIHJhbmsuGFByb3ZlbggBDHdobwABMFQ6OkFjY291bnRJZAABHGF0X3Jhbmv9AQEwUmFua09mPFQsIEk+AAYEHQFNZW1iZXIgaGFzIGJlZW4gcHJvdmVuIGF0IHRoZWlyIGN1cnJlbnQgcmFuaywgcG9zdHBvbmluZyBhdXRvLWRlbW90aW9uLiRSZXF1ZXN0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARB3aXNo8QMBEFdpc2gABwQNAU1lbWJlciBoYXMgc3RhdGVkIGV2aWRlbmNlIG9mIHRoZWlyIGVmZm9ydHMgdGhlaXIgcmVxdWVzdCBmb3IgcmFuay44RXZpZGVuY2VKdWRnZWQUAQx3aG8AATBUOjpBY2NvdW50SWQEVFRoZSBtZW1iZXIvY2FuZGlkYXRlLgEQd2lzaPEDARBXaXNoBORUaGUgZGVzaXJlZCBvdXRjb21lIGZvciB3aGljaCB0aGUgZXZpZGVuY2Ugd2FzIHByZXNlbnRlZC4BIGV2aWRlbmNl9QMBOEV2aWRlbmNlPFQsIEk+BGBUaGUgZXZpZGVuY2Ugb2YgZWZmb3J0cy4BIG9sZF9yYW5r/QEBDHUxNgSMVGhlIG9sZCByYW5rLCBwcmlvciB0byB0aGlzIGNoYW5nZS4BIG5ld19yYW5rIQQBLE9wdGlvbjx1MTY+BPxOZXcgcmFuay4gSWYgYE5vbmVgIHRoZW4gY2FuZGlkYXRlIHJlY29yZCB3YXMgcmVtb3ZlZCBlbnRpcmVseS4ICF0BU29tZSBzdWJtaXR0ZWQgZXZpZGVuY2Ugd2FzIGp1ZGdlZCBhbmQgcmVtb3ZlZC4gVGhlcmUgbWF5IG9yIG1heSBub3QgaGF2ZSBiZWVuIGEgY2hhbmdl0HRvIHRoZSByYW5rLCBidXQgaW4gYW55IGNhc2UsIGBsYXN0X3Byb29mYCBpcyByZXNldC4gSW1wb3J0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARByYW5r/QEBMFJhbmtPZjxULCBJPgAJBOxQcmUtcmFua2VkIGFjY291bnQgaGFzIGJlZW4gaW5kdWN0ZWQgYXQgdGhlaXIgY3VycmVudCByYW5rLhxTd2FwcGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEcbmV3X3dobwABMFQ6OkFjY291bnRJZAAKBIxBIG1lbWJlciBoYWQgaXRzIEFjY291bnRJZCBzd2FwcGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldD0EDDRwYWxsZXRfc2FsYXJ5GHBhbGxldBRFdmVudAgEVAAESQABFCBJbmR1Y3RlZAQBDHdobwABMFQ6OkFjY291bnRJZAAABJhBIG1lbWJlciBpcyBpbmR1Y3RlZCBpbnRvIHRoZSBwYXlyb2xsLihSZWdpc3RlcmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+AAEEhEEgbWVtYmVyIHJlZ2lzdGVyZWQgZm9yIGEgcGF5b3V0LhBQYWlkEAEMd2hvAAEwVDo6QWNjb3VudElkAAEsYmVuZWZpY2lhcnkAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4AAQhpZCwBZDxUOjpQYXltYXN0ZXIgYXMgUGF5Pjo6SWQAAgRMQSBwYXltZW50IGhhcHBlbmVkLjBDeWNsZVN0YXJ0ZWQEARRpbmRleBABPEN5Y2xlSW5kZXhPZjxUPgADBFhUaGUgbmV4dCBjeWNsZSBiZWdpbnMuHFN3YXBwZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARxuZXdfd2hvAAEwVDo6QWNjb3VudElkAAQEfEEgbWVtYmVyIHN3YXBwZWQgdGhlaXIgYWNjb3VudC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXRBBAw8cGFsbGV0X3RyZWFzdXJ5GHBhbGxldBRFdmVudAgEVAAESQABOCBQcm9wb3NlZAQBOHByb3Bvc2FsX2luZGV4EAE0UHJvcG9zYWxJbmRleAAABDROZXcgcHJvcG9zYWwuIFNwZW5kaW5nBAFAYnVkZ2V0X3JlbWFpbmluZxgBPEJhbGFuY2VPZjxULCBJPgABBORXZSBoYXZlIGVuZGVkIGEgc3BlbmQgcGVyaW9kIGFuZCB3aWxsIG5vdyBhbGxvY2F0ZSBmdW5kcy4cQXdhcmRlZAwBOHByb3Bvc2FsX2luZGV4EAE0UHJvcG9zYWxJbmRleAABFGF3YXJkGAE8QmFsYW5jZU9mPFQsIEk+AAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAACBHxTb21lIGZ1bmRzIGhhdmUgYmVlbiBhbGxvY2F0ZWQuIFJlamVjdGVkCAE4cHJvcG9zYWxfaW5kZXgQATRQcm9wb3NhbEluZGV4AAEcc2xhc2hlZBgBPEJhbGFuY2VPZjxULCBJPgADBLBBIHByb3Bvc2FsIHdhcyByZWplY3RlZDsgZnVuZHMgd2VyZSBzbGFzaGVkLhRCdXJudAQBLGJ1cm50X2Z1bmRzGAE8QmFsYW5jZU9mPFQsIEk+AAQEiFNvbWUgb2Ygb3VyIGZ1bmRzIGhhdmUgYmVlbiBidXJudC4gUm9sbG92ZXIEAUByb2xsb3Zlcl9iYWxhbmNlGAE8QmFsYW5jZU9mPFQsIEk+AAUELQFTcGVuZGluZyBoYXMgZmluaXNoZWQ7IHRoaXMgaXMgdGhlIGFtb3VudCB0aGF0IHJvbGxzIG92ZXIgdW50aWwgbmV4dCBzcGVuZC4cRGVwb3NpdAQBFHZhbHVlGAE8QmFsYW5jZU9mPFQsIEk+AAYEfFNvbWUgZnVuZHMgaGF2ZSBiZWVuIGRlcG9zaXRlZC40U3BlbmRBcHByb3ZlZAwBOHByb3Bvc2FsX2luZGV4EAE0UHJvcG9zYWxJbmRleAABGGFtb3VudBgBPEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5AAEwVDo6QWNjb3VudElkAAcEnEEgbmV3IHNwZW5kIHByb3Bvc2FsIGhhcyBiZWVuIGFwcHJvdmVkLjxVcGRhdGVkSW5hY3RpdmUIASxyZWFjdGl2YXRlZBgBPEJhbGFuY2VPZjxULCBJPgABLGRlYWN0aXZhdGVkGAE8QmFsYW5jZU9mPFQsIEk+AAgEzFRoZSBpbmFjdGl2ZSBmdW5kcyBvZiB0aGUgcGFsbGV0IGhhdmUgYmVlbiB1cGRhdGVkLkhBc3NldFNwZW5kQXBwcm92ZWQYARRpbmRleBABKFNwZW5kSW5kZXgAAShhc3NldF9raW5kEQIBMFQ6OkFzc2V0S2luZAABGGFtb3VudBgBUEFzc2V0QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnnJAQE4VDo6QmVuZWZpY2lhcnkAASh2YWxpZF9mcm9tEAFEQmxvY2tOdW1iZXJGb3I8VD4AASRleHBpcmVfYXQQAURCbG9ja051bWJlckZvcjxUPgAJBLRBIG5ldyBhc3NldCBzcGVuZCBwcm9wb3NhbCBoYXMgYmVlbiBhcHByb3ZlZC5AQXNzZXRTcGVuZFZvaWRlZAQBFGluZGV4EAEoU3BlbmRJbmRleAAKBHRBbiBhcHByb3ZlZCBzcGVuZCB3YXMgdm9pZGVkLhBQYWlkCAEUaW5kZXgQAShTcGVuZEluZGV4AAEocGF5bWVudF9pZCwBZDxUOjpQYXltYXN0ZXIgYXMgUGF5Pjo6SWQACwRMQSBwYXltZW50IGhhcHBlbmVkLjRQYXltZW50RmFpbGVkCAEUaW5kZXgQAShTcGVuZEluZGV4AAEocGF5bWVudF9pZCwBZDxUOjpQYXltYXN0ZXIgYXMgUGF5Pjo6SWQADASQQSBwYXltZW50IGZhaWxlZCBhbmQgY2FuIGJlIHJldHJpZWQuOFNwZW5kUHJvY2Vzc2VkBAEUaW5kZXgQAShTcGVuZEluZGV4AA0ITQFBIHNwZW5kIHdhcyBwcm9jZXNzZWQgYW5kIHJlbW92ZWQgZnJvbSB0aGUgc3RvcmFnZS4gSXQgbWlnaHQgaGF2ZSBiZWVuIHN1Y2Nlc3NmdWxseXBwYWlkIG9yIGl0IG1heSBoYXZlIGV4cGlyZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0RQQIMGZyYW1lX3N5c3RlbRRQaGFzZQABDDhBcHBseUV4dHJpbnNpYwQAEAEMdTMyAAAAMEZpbmFsaXphdGlvbgABADhJbml0aWFsaXphdGlvbgACAABJBAAAAgkCAE0ECDBmcmFtZV9zeXN0ZW1YTGFzdFJ1bnRpbWVVcGdyYWRlSW5mbwAACAEwc3BlY192ZXJzaW9uvAFMY29kZWM6OkNvbXBhY3Q8dTMyPgABJHNwZWNfbmFtZVEEAWRzcF9ydW50aW1lOjpSdW50aW1lU3RyaW5nAABRBAAABQIAVQQIMGZyYW1lX3N5c3RlbWBDb2RlVXBncmFkZUF1dGhvcml6YXRpb24EBFQAAAgBJGNvZGVfaGFzaDABHFQ6Okhhc2gAATRjaGVja192ZXJzaW9ueAEQYm9vbAAAWQQMMGZyYW1lX3N5c3RlbRhsaW1pdHMwQmxvY2tXZWlnaHRzAAAMAShiYXNlX2Jsb2NrJAEYV2VpZ2h0AAEkbWF4X2Jsb2NrJAEYV2VpZ2h0AAEkcGVyX2NsYXNzXQQBhFBlckRpc3BhdGNoQ2xhc3M8V2VpZ2h0c1BlckNsYXNzPgAAXQQMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAFhBAAMARhub3JtYWxhBAEEVAABLG9wZXJhdGlvbmFsYQQBBFQAASRtYW5kYXRvcnlhBAEEVAAAYQQMMGZyYW1lX3N5c3RlbRhsaW1pdHM8V2VpZ2h0c1BlckNsYXNzAAAQAThiYXNlX2V4dHJpbnNpYyQBGFdlaWdodAABNG1heF9leHRyaW5zaWNlBAE4T3B0aW9uPFdlaWdodD4AASRtYXhfdG90YWxlBAE4T3B0aW9uPFdlaWdodD4AASByZXNlcnZlZGUEAThPcHRpb248V2VpZ2h0PgAAZQQEGE9wdGlvbgQEVAEkAQgQTm9uZQAAABBTb21lBAAkAAABAABpBAwwZnJhbWVfc3lzdGVtGGxpbWl0cyxCbG9ja0xlbmd0aAAABAEMbWF4bQQBVFBlckRpc3BhdGNoQ2xhc3M8dTMyPgAAbQQMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAEQAAwBGG5vcm1hbBABBFQAASxvcGVyYXRpb25hbBABBFQAASRtYW5kYXRvcnkQAQRUAABxBAgoc3Bfd2VpZ2h0czxSdW50aW1lRGJXZWlnaHQAAAgBEHJlYWQsAQx1NjQAARR3cml0ZSwBDHU2NAAAdQQIKHNwX3ZlcnNpb244UnVudGltZVZlcnNpb24AACABJHNwZWNfbmFtZVEEATRSdW50aW1lU3RyaW5nAAEkaW1wbF9uYW1lUQQBNFJ1bnRpbWVTdHJpbmcAAURhdXRob3JpbmdfdmVyc2lvbhABDHUzMgABMHNwZWNfdmVyc2lvbhABDHUzMgABMGltcGxfdmVyc2lvbhABDHUzMgABEGFwaXN5BAEcQXBpc1ZlYwABTHRyYW5zYWN0aW9uX3ZlcnNpb24QAQx1MzIAATRzdGF0ZV92ZXJzaW9uCAEIdTgAAHkEBAxDb3cEBFQBfQQABAB9BAAAAH0EAAACgQQAgQQAAAQIGQEQAIUEDDBmcmFtZV9zeXN0ZW0YcGFsbGV0FEVycm9yBARUAAEgPEludmFsaWRTcGVjTmFtZQAACBEBVGhlIG5hbWUgb2Ygc3BlY2lmaWNhdGlvbiBkb2VzIG5vdCBtYXRjaCBiZXR3ZWVuIHRoZSBjdXJyZW50IHJ1bnRpbWVQYW5kIHRoZSBuZXcgcnVudGltZS5oU3BlY1ZlcnNpb25OZWVkc1RvSW5jcmVhc2UAAQhBAVRoZSBzcGVjaWZpY2F0aW9uIHZlcnNpb24gaXMgbm90IGFsbG93ZWQgdG8gZGVjcmVhc2UgYmV0d2VlbiB0aGUgY3VycmVudCBydW50aW1lUGFuZCB0aGUgbmV3IHJ1bnRpbWUudEZhaWxlZFRvRXh0cmFjdFJ1bnRpbWVWZXJzaW9uAAIM7EZhaWxlZCB0byBleHRyYWN0IHRoZSBydW50aW1lIHZlcnNpb24gZnJvbSB0aGUgbmV3IHJ1bnRpbWUuAAkBRWl0aGVyIGNhbGxpbmcgYENvcmVfdmVyc2lvbmAgb3IgZGVjb2RpbmcgYFJ1bnRpbWVWZXJzaW9uYCBmYWlsZWQuTE5vbkRlZmF1bHRDb21wb3NpdGUAAwT8U3VpY2lkZSBjYWxsZWQgd2hlbiB0aGUgYWNjb3VudCBoYXMgbm9uLWRlZmF1bHQgY29tcG9zaXRlIGRhdGEuPE5vblplcm9SZWZDb3VudAAEBDUBVGhlcmUgaXMgYSBub24temVybyByZWZlcmVuY2UgY291bnQgcHJldmVudGluZyB0aGUgYWNjb3VudCBmcm9tIGJlaW5nIHB1cmdlZC4wQ2FsbEZpbHRlcmVkAAUE0FRoZSBvcmlnaW4gZmlsdGVyIHByZXZlbnQgdGhlIGNhbGwgdG8gYmUgZGlzcGF0Y2hlZC5ETm90aGluZ0F1dGhvcml6ZWQABgRYTm8gdXBncmFkZSBhdXRob3JpemVkLjBVbmF1dGhvcml6ZWQABwSUVGhlIHN1Ym1pdHRlZCBjb2RlIGlzIG5vdCBhdXRob3JpemVkLgRsRXJyb3IgZm9yIHRoZSBTeXN0ZW0gcGFsbGV0iQQAAAKNBACNBAx8Y3VtdWx1c19wYWxsZXRfcGFyYWNoYWluX3N5c3RlbUh1bmluY2x1ZGVkX3NlZ21lbnQgQW5jZXN0b3IEBEgBMAAMATh1c2VkX2JhbmR3aWR0aJEEATRVc2VkQmFuZHdpZHRoAAE4cGFyYV9oZWFkX2hhc2jdAwEkT3B0aW9uPEg+AAFgY29uc3VtZWRfZ29fYWhlYWRfc2lnbmFspQQBjE9wdGlvbjxyZWxheV9jaGFpbjo6VXBncmFkZUdvQWhlYWQ+AACRBAx8Y3VtdWx1c19wYWxsZXRfcGFyYWNoYWluX3N5c3RlbUh1bmluY2x1ZGVkX3NlZ21lbnQ0VXNlZEJhbmR3aWR0aAAADAE0dW1wX21zZ19jb3VudBABDHUzMgABPHVtcF90b3RhbF9ieXRlcxABDHUzMgABNGhybXBfb3V0Z29pbmeVBAGMQlRyZWVNYXA8UGFyYUlkLCBIcm1wQ2hhbm5lbFVwZGF0ZT4AAJUEBCBCVHJlZU1hcAgESwHZAQRWAZkEAAQAnQQAAACZBAx8Y3VtdWx1c19wYWxsZXRfcGFyYWNoYWluX3N5c3RlbUh1bmluY2x1ZGVkX3NlZ21lbnRESHJtcENoYW5uZWxVcGRhdGUAAAgBJG1zZ19jb3VudBABDHUzMgABLHRvdGFsX2J5dGVzEAEMdTMyAACdBAAAAqEEAKEEAAAECNkBmQQApQQEGE9wdGlvbgQEVAGpBAEIEE5vbmUAAAAQU29tZQQAqQQAAAEAAKkEDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2OFVwZ3JhZGVHb0FoZWFkAAEIFEFib3J0AAAAHEdvQWhlYWQAAQAArQQMfGN1bXVsdXNfcGFsbGV0X3BhcmFjaGFpbl9zeXN0ZW1IdW5pbmNsdWRlZF9zZWdtZW50OFNlZ21lbnRUcmFja2VyBARIATAADAE4dXNlZF9iYW5kd2lkdGiRBAE0VXNlZEJhbmR3aWR0aAABOGhybXBfd2F0ZXJtYXJrZQMBgE9wdGlvbjxyZWxheV9jaGFpbjo6QmxvY2tOdW1iZXI+AAFgY29uc3VtZWRfZ29fYWhlYWRfc2lnbmFspQQBjE9wdGlvbjxyZWxheV9jaGFpbjo6VXBncmFkZUdvQWhlYWQ+AACxBAQYT3B0aW9uBARUAbUEAQgQTm9uZQAAABBTb21lBAC1BAAAAQAAtQQMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZIVXBncmFkZVJlc3RyaWN0aW9uAAEEHFByZXNlbnQAAAAAuQQMfGN1bXVsdXNfcGFsbGV0X3BhcmFjaGFpbl9zeXN0ZW1QcmVsYXlfc3RhdGVfc25hcHNob3RYTWVzc2FnaW5nU3RhdGVTbmFwc2hvdAAAEAEwZG1xX21xY19oZWFkMAFEcmVsYXlfY2hhaW46Okhhc2gAAZxyZWxheV9kaXNwYXRjaF9xdWV1ZV9yZW1haW5pbmdfY2FwYWNpdHm9BAGMUmVsYXlEaXNwYXRjaFF1ZXVlUmVtYWluaW5nQ2FwYWNpdHkAAUBpbmdyZXNzX2NoYW5uZWxzwQQBiFZlYzwoUGFyYUlkLCBBYnJpZGdlZEhybXBDaGFubmVsKT4AATxlZ3Jlc3NfY2hhbm5lbHPBBAGIVmVjPChQYXJhSWQsIEFicmlkZ2VkSHJtcENoYW5uZWwpPgAAvQQMfGN1bXVsdXNfcGFsbGV0X3BhcmFjaGFpbl9zeXN0ZW1QcmVsYXlfc3RhdGVfc25hcHNob3SMUmVsYXlEaXNwYXRjaFF1ZXVlUmVtYWluaW5nQ2FwYWNpdHkAAAgBPHJlbWFpbmluZ19jb3VudBABDHUzMgABOHJlbWFpbmluZ19zaXplEAEMdTMyAADBBAAAAsUEAMUEAAAECNkByQQAyQQMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZMQWJyaWRnZWRIcm1wQ2hhbm5lbAAAGAEwbWF4X2NhcGFjaXR5EAEMdTMyAAE4bWF4X3RvdGFsX3NpemUQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAEkbXNnX2NvdW50EAEMdTMyAAEodG90YWxfc2l6ZRABDHUzMgABIG1xY19oZWFk3QMBME9wdGlvbjxIYXNoPgAAzQQMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZkQWJyaWRnZWRIb3N0Q29uZmlndXJhdGlvbgAAKAE0bWF4X2NvZGVfc2l6ZRABDHUzMgABSG1heF9oZWFkX2RhdGFfc2l6ZRABDHUzMgABWG1heF91cHdhcmRfcXVldWVfY291bnQQAQx1MzIAAVRtYXhfdXB3YXJkX3F1ZXVlX3NpemUQAQx1MzIAAVxtYXhfdXB3YXJkX21lc3NhZ2Vfc2l6ZRABDHUzMgABkG1heF91cHdhcmRfbWVzc2FnZV9udW1fcGVyX2NhbmRpZGF0ZRABDHUzMgABiGhybXBfbWF4X21lc3NhZ2VfbnVtX3Blcl9jYW5kaWRhdGUQAQx1MzIAAWx2YWxpZGF0aW9uX3VwZ3JhZGVfY29vbGRvd24QASxCbG9ja051bWJlcgABYHZhbGlkYXRpb25fdXBncmFkZV9kZWxheRABLEJsb2NrTnVtYmVyAAFQYXN5bmNfYmFja2luZ19wYXJhbXPRBAFIQXN5bmNCYWNraW5nUGFyYW1zAADRBBBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NjRhc3luY19iYWNraW5nSEFzeW5jQmFja2luZ1BhcmFtcwAACAFMbWF4X2NhbmRpZGF0ZV9kZXB0aBABDHUzMgABUGFsbG93ZWRfYW5jZXN0cnlfbGVuEAEMdTMyAADVBAiUY3VtdWx1c19wcmltaXRpdmVzX3BhcmFjaGFpbl9pbmhlcmVudERNZXNzYWdlUXVldWVDaGFpbgAABAAwASRSZWxheUhhc2gAANkEBCBCVHJlZU1hcAgESwHZAQRWAdUEAAQA3QQAAADdBAAAAuEEAOEEAAAECNkB1QQA5QQAAALpBADpBAhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzTE91dGJvdW5kSHJtcE1lc3NhZ2UECElkAdkBAAgBJHJlY2lwaWVudNkBAQhJZAABEGRhdGE0AVBzcF9zdGQ6OnZlYzo6VmVjPHU4PgAA7QQMfGN1bXVsdXNfcGFsbGV0X3BhcmFjaGFpbl9zeXN0ZW0YcGFsbGV0FEVycm9yBARUAAEgTE92ZXJsYXBwaW5nVXBncmFkZXMAAAQZAUF0dGVtcHQgdG8gdXBncmFkZSB2YWxpZGF0aW9uIGZ1bmN0aW9uIHdoaWxlIGV4aXN0aW5nIHVwZ3JhZGUgcGVuZGluZy5QUHJvaGliaXRlZEJ5UG9sa2Fkb3QAAQRNAVBvbGthZG90IGN1cnJlbnRseSBwcm9oaWJpdHMgdGhpcyBwYXJhY2hhaW4gZnJvbSB1cGdyYWRpbmcgaXRzIHZhbGlkYXRpb24gZnVuY3Rpb24uGFRvb0JpZwACCEUBVGhlIHN1cHBsaWVkIHZhbGlkYXRpb24gZnVuY3Rpb24gaGFzIGNvbXBpbGVkIGludG8gYSBibG9iIGxhcmdlciB0aGFuIFBvbGthZG90IGlzPHdpbGxpbmcgdG8gcnVuLmhWYWxpZGF0aW9uRGF0YU5vdEF2YWlsYWJsZQADBB0BVGhlIGluaGVyZW50IHdoaWNoIHN1cHBsaWVzIHRoZSB2YWxpZGF0aW9uIGRhdGEgZGlkIG5vdCBydW4gdGhpcyBibG9jay50SG9zdENvbmZpZ3VyYXRpb25Ob3RBdmFpbGFibGUABAQpAVRoZSBpbmhlcmVudCB3aGljaCBzdXBwbGllcyB0aGUgaG9zdCBjb25maWd1cmF0aW9uIGRpZCBub3QgcnVuIHRoaXMgYmxvY2suME5vdFNjaGVkdWxlZAAFBNhObyB2YWxpZGF0aW9uIGZ1bmN0aW9uIHVwZ3JhZGUgaXMgY3VycmVudGx5IHNjaGVkdWxlZC5ETm90aGluZ0F1dGhvcml6ZWQABgSQTm8gY29kZSB1cGdyYWRlIGhhcyBiZWVuIGF1dGhvcml6ZWQuMFVuYXV0aG9yaXplZAAHBLxUaGUgZ2l2ZW4gY29kZSB1cGdyYWRlIGhhcyBub3QgYmVlbiBhdXRob3JpemVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7xBAxMYm91bmRlZF9jb2xsZWN0aW9uc0B3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAfUEBFMAAAQA/QQBGFZlYzxUPgAA9QQMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyxCYWxhbmNlTG9jawQcQmFsYW5jZQEYAAwBCGlkGQEBOExvY2tJZGVudGlmaWVyAAEYYW1vdW50GAEcQmFsYW5jZQABHHJlYXNvbnP5BAEcUmVhc29ucwAA+QQMPHBhbGxldF9iYWxhbmNlcxR0eXBlcxxSZWFzb25zAAEMDEZlZQAAABBNaXNjAAEADEFsbAACAAD9BAAAAvUEAAEFDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBBQUEUwAABAAJBQEYVmVjPFQ+AAAFBQw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzLFJlc2VydmVEYXRhCERSZXNlcnZlSWRlbnRpZmllcgEZARxCYWxhbmNlARgACAEIaWQZAQFEUmVzZXJ2ZUlkZW50aWZpZXIAARhhbW91bnQYARxCYWxhbmNlAAAJBQAAAgUFAA0FDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEQUEUwAABAAdBQEYVmVjPFQ+AAARBQw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzIElkQW1vdW50CAhJZAEVBRxCYWxhbmNlARgACAEIaWQVBQEISWQAARhhbW91bnQYARxCYWxhbmNlAAAVBQhwY29sbGVjdGl2ZXNfcG9sa2Fkb3RfcnVudGltZURSdW50aW1lSG9sZFJlYXNvbgABBCBQcmVpbWFnZQQAGQUBbHBhbGxldF9wcmVpbWFnZTo6SG9sZFJlYXNvbgArAAAZBQw8cGFsbGV0X3ByZWltYWdlGHBhbGxldChIb2xkUmVhc29uAAEEIFByZWltYWdlAAAAAB0FAAACEQUAIQUMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAElBQRTAAAEACkFARhWZWM8VD4AACUFDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMgSWRBbW91bnQICElkAekBHEJhbGFuY2UBGAAIAQhpZOkBAQhJZAABGGFtb3VudBgBHEJhbGFuY2UAACkFAAACJQUALQUMPHBhbGxldF9iYWxhbmNlcxhwYWxsZXQURXJyb3IIBFQABEkAATA4VmVzdGluZ0JhbGFuY2UAAAScVmVzdGluZyBiYWxhbmNlIHRvbyBoaWdoIHRvIHNlbmQgdmFsdWUuVExpcXVpZGl0eVJlc3RyaWN0aW9ucwABBMhBY2NvdW50IGxpcXVpZGl0eSByZXN0cmljdGlvbnMgcHJldmVudCB3aXRoZHJhd2FsLkxJbnN1ZmZpY2llbnRCYWxhbmNlAAIEeEJhbGFuY2UgdG9vIGxvdyB0byBzZW5kIHZhbHVlLkhFeGlzdGVudGlhbERlcG9zaXQAAwTsVmFsdWUgdG9vIGxvdyB0byBjcmVhdGUgYWNjb3VudCBkdWUgdG8gZXhpc3RlbnRpYWwgZGVwb3NpdC40RXhwZW5kYWJpbGl0eQAEBJBUcmFuc2Zlci9wYXltZW50IHdvdWxkIGtpbGwgYWNjb3VudC5cRXhpc3RpbmdWZXN0aW5nU2NoZWR1bGUABQTMQSB2ZXN0aW5nIHNjaGVkdWxlIGFscmVhZHkgZXhpc3RzIGZvciB0aGlzIGFjY291bnQuLERlYWRBY2NvdW50AAYEjEJlbmVmaWNpYXJ5IGFjY291bnQgbXVzdCBwcmUtZXhpc3QuPFRvb01hbnlSZXNlcnZlcwAHBLhOdW1iZXIgb2YgbmFtZWQgcmVzZXJ2ZXMgZXhjZWVkIGBNYXhSZXNlcnZlc2AuMFRvb01hbnlIb2xkcwAIBPhOdW1iZXIgb2YgaG9sZHMgZXhjZWVkIGBWYXJpYW50Q291bnRPZjxUOjpSdW50aW1lSG9sZFJlYXNvbj5gLjhUb29NYW55RnJlZXplcwAJBJhOdW1iZXIgb2YgZnJlZXplcyBleGNlZWQgYE1heEZyZWV6ZXNgLkxJc3N1YW5jZURlYWN0aXZhdGVkAAoEAQFUaGUgaXNzdWFuY2UgY2Fubm90IGJlIG1vZGlmaWVkIHNpbmNlIGl0IGlzIGFscmVhZHkgZGVhY3RpdmF0ZWQuJERlbHRhWmVybwALBGRUaGUgZGVsdGEgY2Fubm90IGJlIHplcm8uBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LjEFCGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudCBSZWxlYXNlcwABCCRWMUFuY2llbnQAAAAIVjIAAQAANQUMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEABFMAAAQAlAEYVmVjPFQ+AAA5BQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAT0FBFMAAAQAQQUBGFZlYzxUPgAAPQUMZHBhbGxldF9jb2xsYXRvcl9zZWxlY3Rpb24YcGFsbGV0NENhbmRpZGF0ZUluZm8IJEFjY291bnRJZAEAHEJhbGFuY2UBGAAIAQx3aG8AASRBY2NvdW50SWQAARxkZXBvc2l0GAEcQmFsYW5jZQAAQQUAAAI9BQBFBQxkcGFsbGV0X2NvbGxhdG9yX3NlbGVjdGlvbhhwYWxsZXQURXJyb3IEBFQAAUREVG9vTWFueUNhbmRpZGF0ZXMAAASMVGhlIHBhbGxldCBoYXMgdG9vIG1hbnkgY2FuZGlkYXRlcy5cVG9vRmV3RWxpZ2libGVDb2xsYXRvcnMAAQSsTGVhdmluZyB3b3VsZCByZXN1bHQgaW4gdG9vIGZldyBjYW5kaWRhdGVzLkBBbHJlYWR5Q2FuZGlkYXRlAAIEfEFjY291bnQgaXMgYWxyZWFkeSBhIGNhbmRpZGF0ZS4wTm90Q2FuZGlkYXRlAAMEbEFjY291bnQgaXMgbm90IGEgY2FuZGlkYXRlLlBUb29NYW55SW52dWxuZXJhYmxlcwAEBIRUaGVyZSBhcmUgdG9vIG1hbnkgSW52dWxuZXJhYmxlcy5MQWxyZWFkeUludnVsbmVyYWJsZQAFBIxBY2NvdW50IGlzIGFscmVhZHkgYW4gSW52dWxuZXJhYmxlLjxOb3RJbnZ1bG5lcmFibGUABgR8QWNjb3VudCBpcyBub3QgYW4gSW52dWxuZXJhYmxlLlxOb0Fzc29jaWF0ZWRWYWxpZGF0b3JJZAAHBJxBY2NvdW50IGhhcyBubyBhc3NvY2lhdGVkIHZhbGlkYXRvciBJRC5YVmFsaWRhdG9yTm90UmVnaXN0ZXJlZAAIBIxWYWxpZGF0b3IgSUQgaXMgbm90IHlldCByZWdpc3RlcmVkLmxJbnNlcnRUb0NhbmRpZGF0ZUxpc3RGYWlsZWQACQScQ291bGQgbm90IGluc2VydCBpbiB0aGUgY2FuZGlkYXRlIGxpc3QudFJlbW92ZUZyb21DYW5kaWRhdGVMaXN0RmFpbGVkAAoEpENvdWxkIG5vdCByZW1vdmUgZnJvbSB0aGUgY2FuZGlkYXRlIGxpc3QuNERlcG9zaXRUb29Mb3cACwT0TmV3IGRlcG9zaXQgYW1vdW50IHdvdWxkIGJlIGJlbG93IHRoZSBtaW5pbXVtIGNhbmRpZGFjeSBib25kLmRVcGRhdGVDYW5kaWRhdGVMaXN0RmFpbGVkAAwEkENvdWxkIG5vdCB1cGRhdGUgdGhlIGNhbmRpZGF0ZSBsaXN0LkBJbnN1ZmZpY2llbnRCb25kAA0EKQFEZXBvc2l0IGFtb3VudCBpcyB0b28gbG93IHRvIHRha2UgdGhlIHRhcmdldCdzIHNsb3QgaW4gdGhlIGNhbmRpZGF0ZSBsaXN0LlBUYXJnZXRJc05vdENhbmRpZGF0ZQAOBC0BVGhlIHRhcmdldCBhY2NvdW50IHRvIGJlIHJlcGxhY2VkIGluIHRoZSBjYW5kaWRhdGUgbGlzdCBpcyBub3QgYSBjYW5kaWRhdGUuQElkZW50aWNhbERlcG9zaXQADwQNAVRoZSB1cGRhdGVkIGRlcG9zaXQgYW1vdW50IGlzIGVxdWFsIHRvIHRoZSBhbW91bnQgYWxyZWFkeSByZXNlcnZlZC5ASW52YWxpZFVucmVzZXJ2ZQAQBD0BQ2Fubm90IGxvd2VyIGNhbmRpZGFjeSBib25kIHdoaWxlIG9jY3VweWluZyBhIGZ1dHVyZSBjb2xsYXRvciBzbG90IGluIHRoZSBsaXN0LgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5JBQAAAk0FAE0FAAAECADBAgBRBQAAAhAAVQUAAAQIWQU0AFkFDBxzcF9jb3JlGGNyeXB0byRLZXlUeXBlSWQAAAQARAEcW3U4OyA0XQAAXQUMOHBhbGxldF9zZXNzaW9uGHBhbGxldBRFcnJvcgQEVAABFDBJbnZhbGlkUHJvb2YAAARgSW52YWxpZCBvd25lcnNoaXAgcHJvb2YuXE5vQXNzb2NpYXRlZFZhbGlkYXRvcklkAAEEnE5vIGFzc29jaWF0ZWQgdmFsaWRhdG9yIElEIGZvciBhY2NvdW50LjREdXBsaWNhdGVkS2V5AAIEZFJlZ2lzdGVyZWQgZHVwbGljYXRlIGtleS4YTm9LZXlzAAMEpE5vIGtleXMgYXJlIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGFjY291bnQuJE5vQWNjb3VudAAEBBkBS2V5IHNldHRpbmcgYWNjb3VudCBpcyBub3QgbGl2ZSwgc28gaXQncyBpbXBvc3NpYmxlIHRvIGFzc29jaWF0ZSBrZXlzLgR0RXJyb3IgZm9yIHRoZSBzZXNzaW9uIHBhbGxldC5hBQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAcUCBFMAAAQAZQUBGFZlYzxUPgAAZQUAAALFAgBpBQhIc3BfY29uc2Vuc3VzX3Nsb3RzEFNsb3QAAAQALAEMdTY0AABtBQAABAhpBRAAcQUMTGJvdW5kZWRfY29sbGVjdGlvbnNEYm91bmRlZF9idHJlZV9zZXQ8Qm91bmRlZEJUcmVlU2V0CARUAdkBBFMAAAQAdQUBLEJUcmVlU2V0PFQ+AAB1BQQgQlRyZWVTZXQEBFQB2QEABAB5BQAAAHkFAAAC2QEAfQUAAAKBBQCBBQhkY3VtdWx1c19wYWxsZXRfeGNtcF9xdWV1ZVhPdXRib3VuZENoYW5uZWxEZXRhaWxzAAAUASRyZWNpcGllbnTZAQEYUGFyYUlkAAEUc3RhdGWFBQE0T3V0Ym91bmRTdGF0ZQABNHNpZ25hbHNfZXhpc3R4ARBib29sAAEsZmlyc3RfaW5kZXj9AQEMdTE2AAEobGFzdF9pbmRleP0BAQx1MTYAAIUFCGRjdW11bHVzX3BhbGxldF94Y21wX3F1ZXVlNE91dGJvdW5kU3RhdGUAAQgIT2sAAAAkU3VzcGVuZGVkAAEAAIkFAAAECNkB/QEAjQUIZGN1bXVsdXNfcGFsbGV0X3hjbXBfcXVldWU8UXVldWVDb25maWdEYXRhAAAMAURzdXNwZW5kX3RocmVzaG9sZBABDHUzMgABOGRyb3BfdGhyZXNob2xkEAEMdTMyAAFAcmVzdW1lX3RocmVzaG9sZBABDHUzMgAAkQUMZGN1bXVsdXNfcGFsbGV0X3hjbXBfcXVldWUYcGFsbGV0FEVycm9yBARUAAEMOEJhZFF1ZXVlQ29uZmlnAAAEEQFTZXR0aW5nIHRoZSBxdWV1ZSBjb25maWcgZmFpbGVkIHNpbmNlIG9uZSBvZiBpdHMgdmFsdWVzIHdhcyBpbnZhbGlkLkBBbHJlYWR5U3VzcGVuZGVkAAEEjFRoZSBleGVjdXRpb24gaXMgYWxyZWFkeSBzdXNwZW5kZWQuOEFscmVhZHlSZXN1bWVkAAIEhFRoZSBleGVjdXRpb24gaXMgYWxyZWFkeSByZXN1bWVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6VBQwocGFsbGV0X3hjbRhwYWxsZXQsUXVlcnlTdGF0dXMELEJsb2NrTnVtYmVyARABDBxQZW5kaW5nEAEkcmVzcG9uZGVyyQEBRFZlcnNpb25lZExvY2F0aW9uAAFMbWF5YmVfbWF0Y2hfcXVlcmllcpkFAWRPcHRpb248VmVyc2lvbmVkTG9jYXRpb24+AAEwbWF5YmVfbm90aWZ5nQUBQE9wdGlvbjwodTgsIHU4KT4AARx0aW1lb3V0EAEsQmxvY2tOdW1iZXIAAAA8VmVyc2lvbk5vdGlmaWVyCAEYb3JpZ2luyQEBRFZlcnNpb25lZExvY2F0aW9uAAEkaXNfYWN0aXZleAEQYm9vbAABABRSZWFkeQgBIHJlc3BvbnNlpQUBRFZlcnNpb25lZFJlc3BvbnNlAAEIYXQQASxCbG9ja051bWJlcgACAACZBQQYT3B0aW9uBARUAckBAQgQTm9uZQAAABBTb21lBADJAQAAAQAAnQUEGE9wdGlvbgQEVAGhBQEIEE5vbmUAAAAQU29tZQQAoQUAAAEAAKEFAAAECAgIAKUFCAx4Y21EVmVyc2lvbmVkUmVzcG9uc2UAAQwIVjIEAOUCATB2Mjo6UmVzcG9uc2UAAgAIVjMEABEDATB2Mzo6UmVzcG9uc2UAAwAIVjQEACEBATB2NDo6UmVzcG9uc2UABAAAqQUAAAQIEMkBAK0FAAAEDCwkEACxBQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAbUFBFMAAAQAuQUBGFZlYzxUPgAAtQUAAAQIyQEQALkFAAACtQUAvQUMKHBhbGxldF94Y20YcGFsbGV0VFZlcnNpb25NaWdyYXRpb25TdGFnZQABEFxNaWdyYXRlU3VwcG9ydGVkVmVyc2lvbgAAAFxNaWdyYXRlVmVyc2lvbk5vdGlmaWVycwABAFBOb3RpZnlDdXJyZW50VGFyZ2V0cwQAwQUBPE9wdGlvbjxWZWM8dTg+PgACAGhNaWdyYXRlQW5kTm90aWZ5T2xkVGFyZ2V0cwADAADBBQQYT3B0aW9uBARUATQBCBBOb25lAAAAEFNvbWUEADQAAAEAAMUFAAAEDBAAbQMAyQUMKHBhbGxldF94Y20YcGFsbGV0aFJlbW90ZUxvY2tlZEZ1bmdpYmxlUmVjb3JkCEhDb25zdW1lcklkZW50aWZpZXIB6QEwTWF4Q29uc3VtZXJzAAAQARhhbW91bnQYARB1MTI4AAEUb3duZXLJAQFEVmVyc2lvbmVkTG9jYXRpb24AARhsb2NrZXLJAQFEVmVyc2lvbmVkTG9jYXRpb24AASRjb25zdW1lcnPNBQHQQm91bmRlZFZlYzwoQ29uc3VtZXJJZGVudGlmaWVyLCB1MTI4KSwgTWF4Q29uc3VtZXJzPgAAzQUMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHRBQRTAAAEANUFARhWZWM8VD4AANEFAAAECOkBGADVBQAAAtEFANkFDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQB3QUEUwAABADhBQEYVmVjPFQ+AADdBQAABAgYyQEA4QUAAALdBQDlBQwocGFsbGV0X3hjbRhwYWxsZXQURXJyb3IEBFQAAWQsVW5yZWFjaGFibGUAAAhdAVRoZSBkZXNpcmVkIGRlc3RpbmF0aW9uIHdhcyB1bnJlYWNoYWJsZSwgZ2VuZXJhbGx5IGJlY2F1c2UgdGhlcmUgaXMgYSBubyB3YXkgb2Ygcm91dGluZxh0byBpdC4sU2VuZEZhaWx1cmUAAQhBAVRoZXJlIHdhcyBzb21lIG90aGVyIGlzc3VlIChpLmUuIG5vdCB0byBkbyB3aXRoIHJvdXRpbmcpIGluIHNlbmRpbmcgdGhlIG1lc3NhZ2UuyFBlcmhhcHMgYSBsYWNrIG9mIHNwYWNlIGZvciBidWZmZXJpbmcgdGhlIG1lc3NhZ2UuIEZpbHRlcmVkAAIEnFRoZSBtZXNzYWdlIGV4ZWN1dGlvbiBmYWlscyB0aGUgZmlsdGVyLkhVbndlaWdoYWJsZU1lc3NhZ2UAAwS0VGhlIG1lc3NhZ2UncyB3ZWlnaHQgY291bGQgbm90IGJlIGRldGVybWluZWQuYERlc3RpbmF0aW9uTm90SW52ZXJ0aWJsZQAEBNxUaGUgZGVzdGluYXRpb24gYExvY2F0aW9uYCBwcm92aWRlZCBjYW5ub3QgYmUgaW52ZXJ0ZWQuFEVtcHR5AAUEgFRoZSBhc3NldHMgdG8gYmUgc2VudCBhcmUgZW1wdHkuOENhbm5vdFJlYW5jaG9yAAYENQFDb3VsZCBub3QgcmUtYW5jaG9yIHRoZSBhc3NldHMgdG8gZGVjbGFyZSB0aGUgZmVlcyBmb3IgdGhlIGRlc3RpbmF0aW9uIGNoYWluLjRUb29NYW55QXNzZXRzAAcExFRvbyBtYW55IGFzc2V0cyBoYXZlIGJlZW4gYXR0ZW1wdGVkIGZvciB0cmFuc2Zlci40SW52YWxpZE9yaWdpbgAIBHhPcmlnaW4gaXMgaW52YWxpZCBmb3Igc2VuZGluZy4oQmFkVmVyc2lvbgAJBCEBVGhlIHZlcnNpb24gb2YgdGhlIGBWZXJzaW9uZWRgIHZhbHVlIHVzZWQgaXMgbm90IGFibGUgdG8gYmUgaW50ZXJwcmV0ZWQuLEJhZExvY2F0aW9uAAoIQQFUaGUgZ2l2ZW4gbG9jYXRpb24gY291bGQgbm90IGJlIHVzZWQgKGUuZy4gYmVjYXVzZSBpdCBjYW5ub3QgYmUgZXhwcmVzc2VkIGluIHRoZWBkZXNpcmVkIHZlcnNpb24gb2YgWENNKS44Tm9TdWJzY3JpcHRpb24ACwS8VGhlIHJlZmVyZW5jZWQgc3Vic2NyaXB0aW9uIGNvdWxkIG5vdCBiZSBmb3VuZC5EQWxyZWFkeVN1YnNjcmliZWQADAQRAVRoZSBsb2NhdGlvbiBpcyBpbnZhbGlkIHNpbmNlIGl0IGFscmVhZHkgaGFzIGEgc3Vic2NyaXB0aW9uIGZyb20gdXMuWENhbm5vdENoZWNrT3V0VGVsZXBvcnQADQQpAUNvdWxkIG5vdCBjaGVjay1vdXQgdGhlIGFzc2V0cyBmb3IgdGVsZXBvcnRhdGlvbiB0byB0aGUgZGVzdGluYXRpb24gY2hhaW4uKExvd0JhbGFuY2UADgRBAVRoZSBvd25lciBkb2VzIG5vdCBvd24gKGFsbCkgb2YgdGhlIGFzc2V0IHRoYXQgdGhleSB3aXNoIHRvIGRvIHRoZSBvcGVyYXRpb24gb24uMFRvb01hbnlMb2NrcwAPBMBUaGUgYXNzZXQgb3duZXIgaGFzIHRvbyBtYW55IGxvY2tzIG9uIHRoZSBhc3NldC5MQWNjb3VudE5vdFNvdmVyZWlnbgAQBDEBVGhlIGdpdmVuIGFjY291bnQgaXMgbm90IGFuIGlkZW50aWZpYWJsZSBzb3ZlcmVpZ24gYWNjb3VudCBmb3IgYW55IGxvY2F0aW9uLihGZWVzTm90TWV0ABEEKQFUaGUgb3BlcmF0aW9uIHJlcXVpcmVkIGZlZXMgdG8gYmUgcGFpZCB3aGljaCB0aGUgaW5pdGlhdG9yIGNvdWxkIG5vdCBtZWV0LjBMb2NrTm90Rm91bmQAEgT0QSByZW1vdGUgbG9jayB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIGRhdGEgY291bGQgbm90IGJlIGZvdW5kLhRJblVzZQATBEkBVGhlIHVubG9jayBvcGVyYXRpb24gY2Fubm90IHN1Y2NlZWQgYmVjYXVzZSB0aGVyZSBhcmUgc3RpbGwgY29uc3VtZXJzIG9mIHRoZSBsb2NrLlxJbnZhbGlkQXNzZXROb3RDb25jcmV0ZQAUBGxJbnZhbGlkIG5vbi1jb25jcmV0ZSBhc3NldC5oSW52YWxpZEFzc2V0VW5rbm93blJlc2VydmUAFQTwSW52YWxpZCBhc3NldCwgcmVzZXJ2ZSBjaGFpbiBjb3VsZCBub3QgYmUgZGV0ZXJtaW5lZCBmb3IgaXQueEludmFsaWRBc3NldFVuc3VwcG9ydGVkUmVzZXJ2ZQAWBEUBSW52YWxpZCBhc3NldCwgZG8gbm90IHN1cHBvcnQgcmVtb3RlIGFzc2V0IHJlc2VydmVzIHdpdGggZGlmZmVyZW50IGZlZXMgcmVzZXJ2ZXMuPFRvb01hbnlSZXNlcnZlcwAXBEkBVG9vIG1hbnkgYXNzZXRzIHdpdGggZGlmZmVyZW50IHJlc2VydmUgbG9jYXRpb25zIGhhdmUgYmVlbiBhdHRlbXB0ZWQgZm9yIHRyYW5zZmVyLmBMb2NhbEV4ZWN1dGlvbkluY29tcGxldGUAGAR8TG9jYWwgWENNIGV4ZWN1dGlvbiBpbmNvbXBsZXRlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7pBQhQcGFsbGV0X21lc3NhZ2VfcXVldWUkQm9va1N0YXRlBDRNZXNzYWdlT3JpZ2luAdUBABgBFGJlZ2luEAEkUGFnZUluZGV4AAEMZW5kEAEkUGFnZUluZGV4AAEUY291bnQQASRQYWdlSW5kZXgAAUByZWFkeV9uZWlnaGJvdXJz7QUBhE9wdGlvbjxOZWlnaGJvdXJzPE1lc3NhZ2VPcmlnaW4+PgABNG1lc3NhZ2VfY291bnQsAQx1NjQAARBzaXplLAEMdTY0AADtBQQYT3B0aW9uBARUAfEFAQgQTm9uZQAAABBTb21lBADxBQAAAQAA8QUIUHBhbGxldF9tZXNzYWdlX3F1ZXVlKE5laWdoYm91cnMENE1lc3NhZ2VPcmlnaW4B1QEACAEQcHJldtUBATRNZXNzYWdlT3JpZ2luAAEQbmV4dNUBATRNZXNzYWdlT3JpZ2luAAD1BQAABAjVARAA+QUIUHBhbGxldF9tZXNzYWdlX3F1ZXVlEFBhZ2UIEFNpemUBECBIZWFwU2l6ZQAAGAEkcmVtYWluaW5nEAEQU2l6ZQABOHJlbWFpbmluZ19zaXplEAEQU2l6ZQABLGZpcnN0X2luZGV4EAEQU2l6ZQABFGZpcnN0EAEQU2l6ZQABEGxhc3QQARBTaXplAAEQaGVhcP0FAZxCb3VuZGVkVmVjPHU4LCBJbnRvVTMyPEhlYXBTaXplLCBTaXplPj4AAP0FDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAAAQYMUHBhbGxldF9tZXNzYWdlX3F1ZXVlGHBhbGxldBRFcnJvcgQEVAABJCxOb3RSZWFwYWJsZQAACEkBUGFnZSBpcyBub3QgcmVhcGFibGUgYmVjYXVzZSBpdCBoYXMgaXRlbXMgcmVtYWluaW5nIHRvIGJlIHByb2Nlc3NlZCBhbmQgaXMgbm90IG9sZBxlbm91Z2guGE5vUGFnZQABBIRQYWdlIHRvIGJlIHJlYXBlZCBkb2VzIG5vdCBleGlzdC4kTm9NZXNzYWdlAAIEqFRoZSByZWZlcmVuY2VkIG1lc3NhZ2UgY291bGQgbm90IGJlIGZvdW5kLkBBbHJlYWR5UHJvY2Vzc2VkAAMEAQFUaGUgbWVzc2FnZSB3YXMgYWxyZWFkeSBwcm9jZXNzZWQgYW5kIGNhbm5vdCBiZSBwcm9jZXNzZWQgYWdhaW4uGFF1ZXVlZAAEBKxUaGUgbWVzc2FnZSBpcyBxdWV1ZWQgZm9yIGZ1dHVyZSBleGVjdXRpb24uSEluc3VmZmljaWVudFdlaWdodAAFBBkBVGhlcmUgaXMgdGVtcG9yYXJpbHkgbm90IGVub3VnaCB3ZWlnaHQgdG8gY29udGludWUgc2VydmljaW5nIG1lc3NhZ2VzLmBUZW1wb3JhcmlseVVucHJvY2Vzc2FibGUABhCoVGhpcyBtZXNzYWdlIGlzIHRlbXBvcmFyaWx5IHVucHJvY2Vzc2FibGUuAFkBU3VjaCBlcnJvcnMgYXJlIGV4cGVjdGVkLCBidXQgbm90IGd1YXJhbnRlZWQsIHRvIHJlc29sdmUgdGhlbXNlbHZlcyBldmVudHVhbGx5IHRocm91Z2gkcmV0cnlpbmcuLFF1ZXVlUGF1c2VkAAcM7FRoZSBxdWV1ZSBpcyBwYXVzZWQgYW5kIG5vIG1lc3NhZ2UgY2FuIGJlIGV4ZWN1dGVkIGZyb20gaXQuAB0BVGhpcyBjYW4gY2hhbmdlIGF0IGFueSB0aW1lIGFuZCBtYXkgcmVzb2x2ZSBpbiB0aGUgZnV0dXJlIGJ5IHJlLXRyeWluZy5MUmVjdXJzaXZlRGlzYWxsb3dlZAAIBDEBQW5vdGhlciBjYWxsIGlzIGluIHByb2dyZXNzIGFuZCBuZWVkcyB0byBmaW5pc2ggYmVmb3JlIHRoaXMgY2FsbCBjYW4gaGFwcGVuLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4FBgw4cGFsbGV0X3V0aWxpdHkYcGFsbGV0FEVycm9yBARUAAEEMFRvb01hbnlDYWxscwAABFxUb28gbWFueSBjYWxscyBiYXRjaGVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4JBgAABAgABAANBgg8cGFsbGV0X211bHRpc2lnIE11bHRpc2lnECxCbG9ja051bWJlcgEQHEJhbGFuY2UBGCRBY2NvdW50SWQBADBNYXhBcHByb3ZhbHMAABABEHdoZW7xAQFYVGltZXBvaW50PEJsb2NrTnVtYmVyPgABHGRlcG9zaXQYARxCYWxhbmNlAAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEkYXBwcm92YWxzEQYBjEJvdW5kZWRWZWM8QWNjb3VudElkLCBNYXhBcHByb3ZhbHM+AAARBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABACUARhWZWM8VD4AABUGDDxwYWxsZXRfbXVsdGlzaWcYcGFsbGV0FEVycm9yBARUAAE4QE1pbmltdW1UaHJlc2hvbGQAAAR8VGhyZXNob2xkIG11c3QgYmUgMiBvciBncmVhdGVyLjxBbHJlYWR5QXBwcm92ZWQAAQSsQ2FsbCBpcyBhbHJlYWR5IGFwcHJvdmVkIGJ5IHRoaXMgc2lnbmF0b3J5LkROb0FwcHJvdmFsc05lZWRlZAACBJxDYWxsIGRvZXNuJ3QgbmVlZCBhbnkgKG1vcmUpIGFwcHJvdmFscy5EVG9vRmV3U2lnbmF0b3JpZXMAAwSoVGhlcmUgYXJlIHRvbyBmZXcgc2lnbmF0b3JpZXMgaW4gdGhlIGxpc3QuSFRvb01hbnlTaWduYXRvcmllcwAEBKxUaGVyZSBhcmUgdG9vIG1hbnkgc2lnbmF0b3JpZXMgaW4gdGhlIGxpc3QuVFNpZ25hdG9yaWVzT3V0T2ZPcmRlcgAFBA0BVGhlIHNpZ25hdG9yaWVzIHdlcmUgcHJvdmlkZWQgb3V0IG9mIG9yZGVyOyB0aGV5IHNob3VsZCBiZSBvcmRlcmVkLkxTZW5kZXJJblNpZ25hdG9yaWVzAAYEDQFUaGUgc2VuZGVyIHdhcyBjb250YWluZWQgaW4gdGhlIG90aGVyIHNpZ25hdG9yaWVzOyBpdCBzaG91bGRuJ3QgYmUuIE5vdEZvdW5kAAcE3E11bHRpc2lnIG9wZXJhdGlvbiBub3QgZm91bmQgd2hlbiBhdHRlbXB0aW5nIHRvIGNhbmNlbC4gTm90T3duZXIACAQtAU9ubHkgdGhlIGFjY291bnQgdGhhdCBvcmlnaW5hbGx5IGNyZWF0ZWQgdGhlIG11bHRpc2lnIGlzIGFibGUgdG8gY2FuY2VsIGl0LixOb1RpbWVwb2ludAAJBB0BTm8gdGltZXBvaW50IHdhcyBnaXZlbiwgeWV0IHRoZSBtdWx0aXNpZyBvcGVyYXRpb24gaXMgYWxyZWFkeSB1bmRlcndheS44V3JvbmdUaW1lcG9pbnQACgQtAUEgZGlmZmVyZW50IHRpbWVwb2ludCB3YXMgZ2l2ZW4gdG8gdGhlIG11bHRpc2lnIG9wZXJhdGlvbiB0aGF0IGlzIHVuZGVyd2F5LkxVbmV4cGVjdGVkVGltZXBvaW50AAsE9EEgdGltZXBvaW50IHdhcyBnaXZlbiwgeWV0IG5vIG11bHRpc2lnIG9wZXJhdGlvbiBpcyB1bmRlcndheS48TWF4V2VpZ2h0VG9vTG93AAwE0FRoZSBtYXhpbXVtIHdlaWdodCBpbmZvcm1hdGlvbiBwcm92aWRlZCB3YXMgdG9vIGxvdy40QWxyZWFkeVN0b3JlZAANBKBUaGUgZGF0YSB0byBiZSBzdG9yZWQgaXMgYWxyZWFkeSBzdG9yZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LhkGAAAECB0GGAAdBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUASEGBFMAAAQAJQYBGFZlYzxUPgAAIQYIMHBhbGxldF9wcm94eTxQcm94eURlZmluaXRpb24MJEFjY291bnRJZAEAJFByb3h5VHlwZQH5ASxCbG9ja051bWJlcgEQAAwBIGRlbGVnYXRlAAEkQWNjb3VudElkAAEocHJveHlfdHlwZfkBASRQcm94eVR5cGUAARRkZWxheRABLEJsb2NrTnVtYmVyAAAlBgAAAiEGACkGAAAECC0GGAAtBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUATEGBFMAAAQANQYBGFZlYzxUPgAAMQYIMHBhbGxldF9wcm94eTBBbm5vdW5jZW1lbnQMJEFjY291bnRJZAEAEEhhc2gBMCxCbG9ja051bWJlcgEQAAwBEHJlYWwAASRBY2NvdW50SWQAASRjYWxsX2hhc2gwARBIYXNoAAEYaGVpZ2h0EAEsQmxvY2tOdW1iZXIAADUGAAACMQYAOQYMMHBhbGxldF9wcm94eRhwYWxsZXQURXJyb3IEBFQAASAcVG9vTWFueQAABCEBVGhlcmUgYXJlIHRvbyBtYW55IHByb3hpZXMgcmVnaXN0ZXJlZCBvciB0b28gbWFueSBhbm5vdW5jZW1lbnRzIHBlbmRpbmcuIE5vdEZvdW5kAAEEdFByb3h5IHJlZ2lzdHJhdGlvbiBub3QgZm91bmQuIE5vdFByb3h5AAIEzFNlbmRlciBpcyBub3QgYSBwcm94eSBvZiB0aGUgYWNjb3VudCB0byBiZSBwcm94aWVkLixVbnByb3h5YWJsZQADBCEBQSBjYWxsIHdoaWNoIGlzIGluY29tcGF0aWJsZSB3aXRoIHRoZSBwcm94eSB0eXBlJ3MgZmlsdGVyIHdhcyBhdHRlbXB0ZWQuJER1cGxpY2F0ZQAEBGxBY2NvdW50IGlzIGFscmVhZHkgYSBwcm94eS4wTm9QZXJtaXNzaW9uAAUEFQFDYWxsIG1heSBub3QgYmUgbWFkZSBieSBwcm94eSBiZWNhdXNlIGl0IG1heSBlc2NhbGF0ZSBpdHMgcHJpdmlsZWdlcy4sVW5hbm5vdW5jZWQABgTQQW5ub3VuY2VtZW50LCBpZiBtYWRlIGF0IGFsbCwgd2FzIG1hZGUgdG9vIHJlY2VudGx5LixOb1NlbGZQcm94eQAHBGRDYW5ub3QgYWRkIHNlbGYgYXMgcHJveHkuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lj0GCDxwYWxsZXRfcHJlaW1hZ2VAT2xkUmVxdWVzdFN0YXR1cwgkQWNjb3VudElkAQAcQmFsYW5jZQEYAQgsVW5yZXF1ZXN0ZWQIARxkZXBvc2l0QQYBUChBY2NvdW50SWQsIEJhbGFuY2UpAAEMbGVuEAEMdTMyAAAAJFJlcXVlc3RlZAwBHGRlcG9zaXRFBgFwT3B0aW9uPChBY2NvdW50SWQsIEJhbGFuY2UpPgABFGNvdW50EAEMdTMyAAEMbGVuZQMBLE9wdGlvbjx1MzI+AAEAAEEGAAAECAAYAEUGBBhPcHRpb24EBFQBQQYBCBBOb25lAAAAEFNvbWUEAEEGAAABAABJBgg8cGFsbGV0X3ByZWltYWdlNFJlcXVlc3RTdGF0dXMIJEFjY291bnRJZAEAGFRpY2tldAFNBgEILFVucmVxdWVzdGVkCAEYdGlja2V0UQYBTChBY2NvdW50SWQsIFRpY2tldCkAAQxsZW4QAQx1MzIAAAAkUmVxdWVzdGVkDAEwbWF5YmVfdGlja2V0VQYBbE9wdGlvbjwoQWNjb3VudElkLCBUaWNrZXQpPgABFGNvdW50EAEMdTMyAAEkbWF5YmVfbGVuZQMBLE9wdGlvbjx1MzI+AAEAAE0GFDRmcmFtZV9zdXBwb3J0GHRyYWl0cxh0b2tlbnMgZnVuZ2libGVESG9sZENvbnNpZGVyYXRpb24QBEEABEYABFIABEQAAAQAGAEoRjo6QmFsYW5jZQAAUQYAAAQIAE0GAFUGBBhPcHRpb24EBFQBUQYBCBBOb25lAAAAEFNvbWUEAFEGAAABAABZBgAABAgwEABdBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAGEGDDxwYWxsZXRfcHJlaW1hZ2UYcGFsbGV0FEVycm9yBARUAAEgGFRvb0JpZwAABKBQcmVpbWFnZSBpcyB0b28gbGFyZ2UgdG8gc3RvcmUgb24tY2hhaW4uMEFscmVhZHlOb3RlZAABBKRQcmVpbWFnZSBoYXMgYWxyZWFkeSBiZWVuIG5vdGVkIG9uLWNoYWluLjROb3RBdXRob3JpemVkAAIEyFRoZSB1c2VyIGlzIG5vdCBhdXRob3JpemVkIHRvIHBlcmZvcm0gdGhpcyBhY3Rpb24uIE5vdE5vdGVkAAME/FRoZSBwcmVpbWFnZSBjYW5ub3QgYmUgcmVtb3ZlZCBzaW5jZSBpdCBoYXMgbm90IHlldCBiZWVuIG5vdGVkLiRSZXF1ZXN0ZWQABAQJAUEgcHJlaW1hZ2UgbWF5IG5vdCBiZSByZW1vdmVkIHdoZW4gdGhlcmUgYXJlIG91dHN0YW5kaW5nIHJlcXVlc3RzLjBOb3RSZXF1ZXN0ZWQABQQtAVRoZSBwcmVpbWFnZSByZXF1ZXN0IGNhbm5vdCBiZSByZW1vdmVkIHNpbmNlIG5vIG91dHN0YW5kaW5nIHJlcXVlc3RzIGV4aXN0LhxUb29NYW55AAYEVQFNb3JlIHRoYW4gYE1BWF9IQVNIX1VQR1JBREVfQlVMS19DT1VOVGAgaGFzaGVzIHdlcmUgcmVxdWVzdGVkIHRvIGJlIHVwZ3JhZGVkIGF0IG9uY2UuGFRvb0ZldwAHBORUb28gZmV3IGhhc2hlcyB3ZXJlIHJlcXVlc3RlZCB0byBiZSB1cGdyYWRlZCAoaS5lLiB6ZXJvKS4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuZQYMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAFpBgRTAAAEAHEGARhWZWM8VD4AAGkGBBhPcHRpb24EBFQBbQYBCBBOb25lAAAAEFNvbWUEAG0GAAABAABtBghAcGFsbGV0X3NjaGVkdWxlciRTY2hlZHVsZWQUEE5hbWUBBBBDYWxsAVUCLEJsb2NrTnVtYmVyARA0UGFsbGV0c09yaWdpbgGBAyRBY2NvdW50SWQBAAAUASBtYXliZV9pZIABME9wdGlvbjxOYW1lPgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbFUCARBDYWxsAAE4bWF5YmVfcGVyaW9kaWO9AwGUT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8QmxvY2tOdW1iZXI+PgABGG9yaWdpboEDATRQYWxsZXRzT3JpZ2luAABxBgAAAmkGAHUGDEBwYWxsZXRfc2NoZWR1bGVyGHBhbGxldBRFcnJvcgQEVAABFEBGYWlsZWRUb1NjaGVkdWxlAAAEZEZhaWxlZCB0byBzY2hlZHVsZSBhIGNhbGwgTm90Rm91bmQAAQR8Q2Fubm90IGZpbmQgdGhlIHNjaGVkdWxlZCBjYWxsLlxUYXJnZXRCbG9ja051bWJlckluUGFzdAACBKRHaXZlbiB0YXJnZXQgYmxvY2sgbnVtYmVyIGlzIGluIHRoZSBwYXN0LkhSZXNjaGVkdWxlTm9DaGFuZ2UAAwTwUmVzY2hlZHVsZSBmYWlsZWQgYmVjYXVzZSBpdCBkb2VzIG5vdCBjaGFuZ2Ugc2NoZWR1bGVkIHRpbWUuFE5hbWVkAAQE0EF0dGVtcHQgdG8gdXNlIGEgbm9uLW5hbWVkIGZ1bmN0aW9uIG9uIGEgbmFtZWQgdGFzay4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQueQYMRHBhbGxldF9hc3NldF9yYXRlGHBhbGxldBRFcnJvcgQEVAABCEBVbmtub3duQXNzZXRLaW5kAAAEeFRoZSBnaXZlbiBhc3NldCBJRCBpcyB1bmtub3duLjRBbHJlYWR5RXhpc3RzAAEEUQFUaGUgZ2l2ZW4gYXNzZXQgSUQgYWxyZWFkeSBoYXMgYW4gYXNzaWduZWQgY29udmVyc2lvbiByYXRlIGFuZCBjYW5ub3QgYmUgcmUtY3JlYXRlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQufQYMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEdAgRTAAAEAIEGARhWZWM8VD4AAIEGAAACHQIAhQYIPHBhbGxldF9hbGxpYW5jZShNZW1iZXJSb2xlAAEMGEZlbGxvdwAAABBBbGx5AAEAIFJldGlyaW5nAAIAAIkGDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBPQIEUwAABACNBgEYVmVjPFQ+AACNBgAAAj0CAJEGDDxwYWxsZXRfYWxsaWFuY2UYcGFsbGV0FEVycm9yCARUAARJAAFgZEFsbGlhbmNlTm90WWV0SW5pdGlhbGl6ZWQAAAQ1AVRoZSBBbGxpYW5jZSBoYXMgbm90IGJlZW4gaW5pdGlhbGl6ZWQgeWV0LCB0aGVyZWZvcmUgYWNjb3VudHMgY2Fubm90IGpvaW4gaXQuaEFsbGlhbmNlQWxyZWFkeUluaXRpYWxpemVkAAEEJQFUaGUgQWxsaWFuY2UgaGFzIGJlZW4gaW5pdGlhbGl6ZWQsIHRoZXJlZm9yZSBjYW5ub3QgYmUgaW5pdGlhbGl6ZWQgYWdhaW4uNEFscmVhZHlNZW1iZXIAAgRwQWNjb3VudCBpcyBhbHJlYWR5IGEgbWVtYmVyLiROb3RNZW1iZXIAAwRgQWNjb3VudCBpcyBub3QgYSBtZW1iZXIuHE5vdEFsbHkABARcQWNjb3VudCBpcyBub3QgYW4gYWxseS44Tm9Wb3RpbmdSaWdodHMABQSQQWNjb3VudCBkb2VzIG5vdCBoYXZlIHZvdGluZyByaWdodHMuPEFscmVhZHlFbGV2YXRlZAAGBLxBY2NvdW50IGlzIGFscmVhZHkgYW4gZWxldmF0ZWQgKGZlbGxvdykgbWVtYmVyLkxBbHJlYWR5VW5zY3J1cHVsb3VzAAcEnEl0ZW0gaXMgYWxyZWFkeSBsaXN0ZWQgYXMgdW5zY3J1cHVsb3VzLjxBY2NvdW50Tm9uR3JhdGEACAhVAUFjY291bnQgaGFzIGJlZW4gZGVlbWVkIHVuc2NydXB1bG91cyBieSB0aGUgQWxsaWFuY2UgYW5kIGlzIG5vdCB3ZWxjb21lIHRvIGpvaW4gb3IgYmUobm9taW5hdGVkLlxOb3RMaXN0ZWRBc1Vuc2NydXB1bG91cwAJBJhJdGVtIGhhcyBub3QgYmVlbiBkZWVtZWQgdW5zY3J1cHVsb3VzLmBUb29NYW55VW5zY3J1cHVsb3VzSXRlbXMACgQBAVRoZSBudW1iZXIgb2YgdW5zY3J1cHVsb3VzIGl0ZW1zIGV4Y2VlZHMgYE1heFVuc2NydXB1bG91c0l0ZW1zYC5EVG9vTG9uZ1dlYnNpdGVVcmwACwTQTGVuZ3RoIG9mIHdlYnNpdGUgVVJMIGV4Y2VlZHMgYE1heFdlYnNpdGVVcmxMZW5ndGhgLkRJbnN1ZmZpY2llbnRGdW5kcwAMBMRCYWxhbmNlIGlzIGluc3VmZmljaWVudCBmb3IgdGhlIHJlcXVpcmVkIGRlcG9zaXQudFdpdGhvdXRSZXF1aXJlZElkZW50aXR5RmllbGRzAA0EFQFUaGUgYWNjb3VudCdzIGlkZW50aXR5IGRvZXMgbm90IGhhdmUgZGlzcGxheSBmaWVsZCBhbmQgd2Vic2l0ZSBmaWVsZC5wV2l0aG91dEdvb2RJZGVudGl0eUp1ZGdlbWVudAAOBLRUaGUgYWNjb3VudCdzIGlkZW50aXR5IGhhcyBubyBnb29kIGp1ZGdlbWVudC5MTWlzc2luZ1Byb3Bvc2FsSGFzaAAPBHxUaGUgcHJvcG9zYWwgaGFzaCBpcyBub3QgZm91bmQuTE1pc3NpbmdBbm5vdW5jZW1lbnQAEAR4VGhlIGFubm91bmNlbWVudCBpcyBub3QgZm91bmQuOFRvb01hbnlNZW1iZXJzABEEsE51bWJlciBvZiBtZW1iZXJzIGV4Y2VlZHMgYE1heE1lbWJlcnNDb3VudGAuUFRvb01hbnlBbm5vdW5jZW1lbnRzABIE4E51bWJlciBvZiBhbm5vdW5jZW1lbnRzIGV4Y2VlZHMgYE1heEFubm91bmNlbWVudHNDb3VudGAuKEJhZFdpdG5lc3MAEwRsSW52YWxpZCB3aXRuZXNzIGRhdGEgZ2l2ZW4uPEFscmVhZHlSZXRpcmluZwAUBJhBY2NvdW50IGFscmVhZHkgZ2F2ZSByZXRpcmVtZW50IG5vdGljZWBSZXRpcmVtZW50Tm90aWNlTm90R2l2ZW4AFQTwQWNjb3VudCBkaWQgbm90IGdpdmUgYSByZXRpcmVtZW50IG5vdGljZSByZXF1aXJlZCB0byByZXRpcmUuZFJldGlyZW1lbnRQZXJpb2ROb3RQYXNzZWQAFgSEUmV0aXJlbWVudCBwZXJpb2QgaGFzIG5vdCBwYXNzZWQuOEZlbGxvd3NNaXNzaW5nABcE0EZlbGxvd3MgbXVzdCBiZSBwcm92aWRlZCB0byBpbml0aWFsaXplIHRoZSBBbGxpYW5jZS4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQulQYMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEwBFMAAAQAtQMBGFZlYzxUPgAAmQYIRHBhbGxldF9jb2xsZWN0aXZlFFZvdGVzCCRBY2NvdW50SWQBACxCbG9ja051bWJlcgEQABQBFGluZGV4EAE0UHJvcG9zYWxJbmRleAABJHRocmVzaG9sZBABLE1lbWJlckNvdW50AAEQYXllc5QBOFZlYzxBY2NvdW50SWQ+AAEQbmF5c5QBOFZlYzxBY2NvdW50SWQ+AAEMZW5kEAEsQmxvY2tOdW1iZXIAAJ0GDERwYWxsZXRfY29sbGVjdGl2ZRhwYWxsZXQURXJyb3IIBFQABEkAASwkTm90TWVtYmVyAAAEXEFjY291bnQgaXMgbm90IGEgbWVtYmVyRER1cGxpY2F0ZVByb3Bvc2FsAAEEfER1cGxpY2F0ZSBwcm9wb3NhbHMgbm90IGFsbG93ZWQ8UHJvcG9zYWxNaXNzaW5nAAIETFByb3Bvc2FsIG11c3QgZXhpc3QoV3JvbmdJbmRleAADBEBNaXNtYXRjaGVkIGluZGV4NER1cGxpY2F0ZVZvdGUABARYRHVwbGljYXRlIHZvdGUgaWdub3JlZEhBbHJlYWR5SW5pdGlhbGl6ZWQABQSATWVtYmVycyBhcmUgYWxyZWFkeSBpbml0aWFsaXplZCEgVG9vRWFybHkABgQBAVRoZSBjbG9zZSBjYWxsIHdhcyBtYWRlIHRvbyBlYXJseSwgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIHZvdGluZy5AVG9vTWFueVByb3Bvc2FscwAHBPxUaGVyZSBjYW4gb25seSBiZSBhIG1heGltdW0gb2YgYE1heFByb3Bvc2Fsc2AgYWN0aXZlIHByb3Bvc2Fscy5MV3JvbmdQcm9wb3NhbFdlaWdodAAIBNBUaGUgZ2l2ZW4gd2VpZ2h0IGJvdW5kIGZvciB0aGUgcHJvcG9zYWwgd2FzIHRvbyBsb3cuTFdyb25nUHJvcG9zYWxMZW5ndGgACQTQVGhlIGdpdmVuIGxlbmd0aCBib3VuZCBmb3IgdGhlIHByb3Bvc2FsIHdhcyB0b28gbG93LlRQcmltZUFjY291bnROb3RNZW1iZXIACgR0UHJpbWUgYWNjb3VudCBpcyBub3QgYSBtZW1iZXIEgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuoQYIYHBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZTBNZW1iZXJSZWNvcmQAAAQBEHJhbmv9AQEQUmFuawAApQYAAAQI/QEAAKkGAAAECP0BEACtBgAABAgQAACxBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AALUGDGBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmUYcGFsbGV0FEVycm9yCARUAARJAAEoNEFscmVhZHlNZW1iZXIAAARwQWNjb3VudCBpcyBhbHJlYWR5IGEgbWVtYmVyLiROb3RNZW1iZXIAAQRgQWNjb3VudCBpcyBub3QgYSBtZW1iZXIuKE5vdFBvbGxpbmcAAgS4VGhlIGdpdmVuIHBvbGwgaW5kZXggaXMgdW5rbm93biBvciBoYXMgY2xvc2VkLhxPbmdvaW5nAAMEgFRoZSBnaXZlbiBwb2xsIGlzIHN0aWxsIG9uZ29pbmcuNE5vbmVSZW1haW5pbmcABASsVGhlcmUgYXJlIG5vIGZ1cnRoZXIgcmVjb3JkcyB0byBiZSByZW1vdmVkLihDb3JydXB0aW9uAAUEaFVuZXhwZWN0ZWQgZXJyb3IgaW4gc3RhdGUuKFJhbmtUb29Mb3cABgSUVGhlIG1lbWJlcidzIHJhbmsgaXMgdG9vIGxvdyB0byB2b3RlLjhJbnZhbGlkV2l0bmVzcwAHBJhUaGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgaXMgaW5jb3JyZWN0LjBOb1Blcm1pc3Npb24ACAT4VGhlIG9yaWdpbiBpcyBub3Qgc3VmZmljaWVudGx5IHByaXZpbGVnZWQgdG8gZG8gdGhlIG9wZXJhdGlvbi4oU2FtZU1lbWJlcgAJBOBUaGUgbmV3IG1lbWJlciB0byBleGNoYW5nZSBpcyB0aGUgc2FtZSBhcyB0aGUgb2xkIG1lbWJlcgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC65BgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlczhSZWZlcmVuZHVtSW5mbyAcVHJhY2tJZAH9ATRSdW50aW1lT3JpZ2luAYEDGE1vbWVudAEQEENhbGwBVQIcQmFsYW5jZQEYFFRhbGx5AU0CJEFjY291bnRJZAEAPFNjaGVkdWxlQWRkcmVzcwEJAgEYHE9uZ29pbmcEAL0GAY0BUmVmZXJlbmR1bVN0YXR1czxUcmFja0lkLCBSdW50aW1lT3JpZ2luLCBNb21lbnQsIENhbGwsIEJhbGFuY2UsIFRhbGx5LApBY2NvdW50SWQsIFNjaGVkdWxlQWRkcmVzcyw+AAAAIEFwcHJvdmVkDAAQARhNb21lbnQAAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAxQYBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAEAIFJlamVjdGVkDAAQARhNb21lbnQAAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAxQYBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAIAJENhbmNlbGxlZAwAEAEYTW9tZW50AADFBgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgADACBUaW1lZE91dAwAEAEYTW9tZW50AADFBgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAEABhLaWxsZWQEABABGE1vbWVudAAFAAC9BgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlc0BSZWZlcmVuZHVtU3RhdHVzIBxUcmFja0lkAf0BNFJ1bnRpbWVPcmlnaW4BgQMYTW9tZW50ARAQQ2FsbAFVAhxCYWxhbmNlARgUVGFsbHkBTQIkQWNjb3VudElkAQA8U2NoZWR1bGVBZGRyZXNzAQkCACwBFHRyYWNr/QEBHFRyYWNrSWQAARhvcmlnaW6BAwE0UnVudGltZU9yaWdpbgABIHByb3Bvc2FsVQIBEENhbGwAASRlbmFjdG1lbnTZAwFQRGlzcGF0Y2hUaW1lPE1vbWVudD4AASRzdWJtaXR0ZWQQARhNb21lbnQAAUhzdWJtaXNzaW9uX2RlcG9zaXTBBgFsRGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+AAFAZGVjaXNpb25fZGVwb3NpdMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgABIGRlY2lkaW5nyQYBeE9wdGlvbjxEZWNpZGluZ1N0YXR1czxNb21lbnQ+PgABFHRhbGx5TQIBFFRhbGx5AAEgaW5fcXVldWV4ARBib29sAAEUYWxhcm3RBgGET3B0aW9uPChNb21lbnQsIFNjaGVkdWxlQWRkcmVzcyk+AADBBgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlcxxEZXBvc2l0CCRBY2NvdW50SWQBABxCYWxhbmNlARgACAEMd2hvAAEkQWNjb3VudElkAAEYYW1vdW50GAEcQmFsYW5jZQAAxQYEGE9wdGlvbgQEVAHBBgEIEE5vbmUAAAAQU29tZQQAwQYAAAEAAMkGBBhPcHRpb24EBFQBzQYBCBBOb25lAAAAEFNvbWUEAM0GAAABAADNBgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlczhEZWNpZGluZ1N0YXR1cwQsQmxvY2tOdW1iZXIBEAAIARRzaW5jZRABLEJsb2NrTnVtYmVyAAEoY29uZmlybWluZ2UDAUxPcHRpb248QmxvY2tOdW1iZXI+AADRBgQYT3B0aW9uBARUAdUGAQgQTm9uZQAAABBTb21lBADVBgAAAQAA1QYAAAQIEAkCANkGDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCQIEUwAABABJBAEYVmVjPFQ+AADdBgAAAuEGAOEGAAAECP0B5QYA5QYMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXMkVHJhY2tJbmZvCBxCYWxhbmNlARgYTW9tZW50ARAAJAEQbmFtZVEEATAmJ3N0YXRpYyBzdHIAATBtYXhfZGVjaWRpbmcQAQx1MzIAAUBkZWNpc2lvbl9kZXBvc2l0GAEcQmFsYW5jZQABOHByZXBhcmVfcGVyaW9kEAEYTW9tZW50AAE8ZGVjaXNpb25fcGVyaW9kEAEYTW9tZW50AAE4Y29uZmlybV9wZXJpb2QQARhNb21lbnQAAVBtaW5fZW5hY3RtZW50X3BlcmlvZBABGE1vbWVudAABMG1pbl9hcHByb3ZhbOkGARRDdXJ2ZQABLG1pbl9zdXBwb3J06QYBFEN1cnZlAADpBgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlcxRDdXJ2ZQABDEBMaW5lYXJEZWNyZWFzaW5nDAEYbGVuZ3Ro7QYBHFBlcmJpbGwAARRmbG9vcu0GARxQZXJiaWxsAAEQY2VpbO0GARxQZXJiaWxsAAAARFN0ZXBwZWREZWNyZWFzaW5nEAEUYmVnaW7tBgEcUGVyYmlsbAABDGVuZO0GARxQZXJiaWxsAAEQc3RlcO0GARxQZXJiaWxsAAEYcGVyaW9k7QYBHFBlcmJpbGwAAQAoUmVjaXByb2NhbAwBGGZhY3RvcvEGASBGaXhlZEk2NAABIHhfb2Zmc2V08QYBIEZpeGVkSTY0AAEgeV9vZmZzZXTxBgEgRml4ZWRJNjQAAgAA7QYMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxxQZXJiaWxsAAAEABABDHUzMgAA8QYMNHNwX2FyaXRobWV0aWMsZml4ZWRfcG9pbnQgRml4ZWRJNjQAAAQA9QYBDGk2NAAA9QYAAAUMAPkGDEBwYWxsZXRfcmVmZXJlbmRhGHBhbGxldBRFcnJvcggEVAAESQABNChOb3RPbmdvaW5nAAAEaFJlZmVyZW5kdW0gaXMgbm90IG9uZ29pbmcuKEhhc0RlcG9zaXQAAQS4UmVmZXJlbmR1bSdzIGRlY2lzaW9uIGRlcG9zaXQgaXMgYWxyZWFkeSBwYWlkLiBCYWRUcmFjawACBJxUaGUgdHJhY2sgaWRlbnRpZmllciBnaXZlbiB3YXMgaW52YWxpZC4QRnVsbAADBDEBVGhlcmUgYXJlIGFscmVhZHkgYSBmdWxsIGNvbXBsZW1lbnQgb2YgcmVmZXJlbmRhIGluIHByb2dyZXNzIGZvciB0aGlzIHRyYWNrLihRdWV1ZUVtcHR5AAQEgFRoZSBxdWV1ZSBvZiB0aGUgdHJhY2sgaXMgZW1wdHkuNEJhZFJlZmVyZW5kdW0ABQTkVGhlIHJlZmVyZW5kdW0gaW5kZXggcHJvdmlkZWQgaXMgaW52YWxpZCBpbiB0aGlzIGNvbnRleHQuLE5vdGhpbmdUb0RvAAYErFRoZXJlIHdhcyBub3RoaW5nIHRvIGRvIGluIHRoZSBhZHZhbmNlbWVudC4cTm9UcmFjawAHBKBObyB0cmFjayBleGlzdHMgZm9yIHRoZSBwcm9wb3NhbCBvcmlnaW4uKFVuZmluaXNoZWQACAQBAUFueSBkZXBvc2l0IGNhbm5vdCBiZSByZWZ1bmRlZCB1bnRpbCBhZnRlciB0aGUgZGVjaXNpb24gaXMgb3Zlci4wTm9QZXJtaXNzaW9uAAkEqFRoZSBkZXBvc2l0IHJlZnVuZGVyIGlzIG5vdCB0aGUgZGVwb3NpdG9yLiROb0RlcG9zaXQACgTMVGhlIGRlcG9zaXQgY2Fubm90IGJlIHJlZnVuZGVkIHNpbmNlIG5vbmUgd2FzIG1hZGUuJEJhZFN0YXR1cwALBNBUaGUgcmVmZXJlbmR1bSBzdGF0dXMgaXMgaW52YWxpZCBmb3IgdGhpcyBvcGVyYXRpb24uQFByZWltYWdlTm90RXhpc3QADARwVGhlIHByZWltYWdlIGRvZXMgbm90IGV4aXN0LgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC79BghYcGFsbGV0X2NvcmVfZmVsbG93c2hpcDBNZW1iZXJTdGF0dXMELEJsb2NrTnVtYmVyARAADAEkaXNfYWN0aXZleAEQYm9vbAABOGxhc3RfcHJvbW90aW9uEAEsQmxvY2tOdW1iZXIAAShsYXN0X3Byb29mEAEsQmxvY2tOdW1iZXIAAAEHAAAECPED9QMABQcMWHBhbGxldF9jb3JlX2ZlbGxvd3NoaXAYcGFsbGV0FEVycm9yCARUAARJAAEkIFVucmFua2VkAAAEZE1lbWJlcidzIHJhbmsgaXMgdG9vIGxvdy4YUmFua2VkAAEEaE1lbWJlcidzIHJhbmsgaXMgbm90IHplcm8uOFVuZXhwZWN0ZWRSYW5rAAIIVQFNZW1iZXIncyByYW5rIGlzIG5vdCBhcyBleHBlY3RlZCAtIGdlbmVyYWxseSBtZWFucyB0aGF0IHRoZSByYW5rIHByb3ZpZGVkIHRvIHRoZSBjYWxssGRvZXMgbm90IGFncmVlIHdpdGggdGhlIHN0YXRlIG9mIHRoZSBzeXN0ZW0uLEludmFsaWRSYW5rAAMEVQFUaGUgZ2l2ZW4gcmFuayBpcyBpbnZhbGlkIC0gdGhpcyBnZW5lcmFsbHkgbWVhbnMgaXQncyBub3QgYmV0d2VlbiAxIGFuZCBgUkFOS19DT1VOVGAuME5vUGVybWlzc2lvbgAEBAEBVGhlIG9yaWdpbiBkb2VzIG5vdCBoYXZlIGVub3VnaCBwZXJtaXNzaW9uIHRvIGRvIHRoaXMgb3BlcmF0aW9uLjBOb3RoaW5nRG9pbmcABQTQTm8gd29yayBuZWVkcyB0byBiZSBkb25lIGF0IHByZXNlbnQgZm9yIHRoaXMgbWVtYmVyLjxBbHJlYWR5SW5kdWN0ZWQABghBAVRoZSBjYW5kaWRhdGUgaGFzIGFscmVhZHkgYmVlbiBpbmR1Y3RlZC4gVGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuIHNpbmNlIGl0IHdvdWxkBQFyZXF1aXJlIGEgY2FuZGlkYXRlIChyYW5rIDApIHRvIGFscmVhZHkgYmUgdHJhY2tlZCBpbiB0aGUgcGFsbGV0LihOb3RUcmFja2VkAAcEOQFUaGUgY2FuZGlkYXRlIGhhcyBub3QgYmVlbiBpbmR1Y3RlZCwgc28gY2Fubm90IGJlIG9mZmJvYXJkZWQgZnJvbSB0aGlzIHBhbGxldC4cVG9vU29vbgAIBPhPcGVyYXRpb24gY2Fubm90IGJlIGRvbmUgeWV0IHNpbmNlIG5vdCBlbm91Z2ggdGltZSBoYXMgcGFzc2VkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4JBwg0cGFsbGV0X3NhbGFyeShTdGF0dXNUeXBlDChDeWNsZUluZGV4ARAsQmxvY2tOdW1iZXIBEBxCYWxhbmNlARgAFAEsY3ljbGVfaW5kZXgQAShDeWNsZUluZGV4AAEsY3ljbGVfc3RhcnQQASxCbG9ja051bWJlcgABGGJ1ZGdldBgBHEJhbGFuY2UAAUx0b3RhbF9yZWdpc3RyYXRpb25zGAEcQmFsYW5jZQABXHRvdGFsX3VucmVnaXN0ZXJlZF9wYWlkGAEcQmFsYW5jZQAADQcINHBhbGxldF9zYWxhcnk4Q2xhaW1hbnRTdGF0dXMMKEN5Y2xlSW5kZXgBEBxCYWxhbmNlARgISWQBLAAIASxsYXN0X2FjdGl2ZRABKEN5Y2xlSW5kZXgAARhzdGF0dXMRBwFcQ2xhaW1TdGF0ZTxCYWxhbmNlLCBJZD4AABEHCDRwYWxsZXRfc2FsYXJ5KENsYWltU3RhdGUIHEJhbGFuY2UBGAhJZAEsAQwcTm90aGluZwAAAChSZWdpc3RlcmVkBAAYARxCYWxhbmNlAAEAJEF0dGVtcHRlZAwBKHJlZ2lzdGVyZWQxAgE8T3B0aW9uPEJhbGFuY2U+AAEIaWQsAQhJZAABGGFtb3VudBgBHEJhbGFuY2UAAgAAFQcMNHBhbGxldF9zYWxhcnkYcGFsbGV0FEVycm9yCARUAARJAAE4OEFscmVhZHlTdGFydGVkAAAErFRoZSBzYWxhcnkgc3lzdGVtIGhhcyBhbHJlYWR5IGJlZW4gc3RhcnRlZC4kTm90TWVtYmVyAAEEjFRoZSBhY2NvdW50IGlzIG5vdCBhIHJhbmtlZCBtZW1iZXIuPEFscmVhZHlJbmR1Y3RlZAACBIBUaGUgYWNjb3VudCBpcyBhbHJlYWR5IGluZHVjdGVkLixOb3RJbmR1Y3RlZAADABxOb0NsYWltAAQEvFRoZSBtZW1iZXIgZG9lcyBub3QgaGF2ZSBhIGN1cnJlbnQgdmFsaWQgY2xhaW0uJENsYWltWmVybwAFBGxUaGUgbWVtYmVyJ3MgY2xhaW0gaXMgemVyby4cVG9vTGF0ZQAGBLBDdXJyZW50IGN5Y2xlJ3MgcmVnaXN0cmF0aW9uIHBlcmlvZCBpcyBvdmVyLiBUb29FYXJseQAHBMBDdXJyZW50IGN5Y2xlJ3MgcGF5bWVudCBwZXJpb2QgaXMgbm90IHlldCBiZWd1bi4YTm90WWV0AAgEWEN5Y2xlIGlzIG5vdCB5ZXQgb3Zlci4oTm90U3RhcnRlZAAJBJxUaGUgcGF5b3V0IGN5Y2xlcyBoYXZlIG5vdCB5ZXQgc3RhcnRlZC4gQmFua3J1cHQACgScVGhlcmUgaXMgbm8gYnVkZ2V0IGxlZnQgZm9yIHRoZSBwYXlvdXQuIFBheUVycm9yAAsEzFRoZXJlIHdhcyBzb21lIGlzc3VlIHdpdGggdGhlIG1lY2hhbmlzbSBvZiBwYXltZW50LjBJbmNvbmNsdXNpdmUADATEVGhlIHBheW1lbnQgaGFzIG5laXRoZXIgZmFpbGVkIG5vciBzdWNjZWVkZWQgeWV0LihOb3RDdXJyZW50AA0E2FRoZSBjeWNsZSBpcyBhZnRlciB0aGF0IGluIHdoaWNoIHRoZSBwYXltZW50IHdhcyBtYWRlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC4ZBwg8cGFsbGV0X3RyZWFzdXJ5IFByb3Bvc2FsCCRBY2NvdW50SWQBABxCYWxhbmNlARgAEAEgcHJvcG9zZXIAASRBY2NvdW50SWQAARR2YWx1ZRgBHEJhbGFuY2UAASxiZW5lZmljaWFyeQABJEFjY291bnRJZAABEGJvbmQYARxCYWxhbmNlAAAdBwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUARAEUwAABABRBQEYVmVjPFQ+AAAhBwg8cGFsbGV0X3RyZWFzdXJ5LFNwZW5kU3RhdHVzFCRBc3NldEtpbmQBEQIwQXNzZXRCYWxhbmNlARgsQmVuZWZpY2lhcnkByQEsQmxvY2tOdW1iZXIBECRQYXltZW50SWQBLAAYAShhc3NldF9raW5kEQIBJEFzc2V0S2luZAABGGFtb3VudBgBMEFzc2V0QmFsYW5jZQABLGJlbmVmaWNpYXJ5yQEBLEJlbmVmaWNpYXJ5AAEodmFsaWRfZnJvbRABLEJsb2NrTnVtYmVyAAEkZXhwaXJlX2F0EAEsQmxvY2tOdW1iZXIAARhzdGF0dXMlBwFcUGF5bWVudFN0YXRlPFBheW1lbnRJZD4AACUHCDxwYWxsZXRfdHJlYXN1cnkwUGF5bWVudFN0YXRlBAhJZAEsAQwcUGVuZGluZwAAACRBdHRlbXB0ZWQEAQhpZCwBCElkAAEAGEZhaWxlZAACAAApBww0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzHFBlcm1pbGwAAAQAEAEMdTMyAAAtBwg0ZnJhbWVfc3VwcG9ydCBQYWxsZXRJZAAABAAZAQEcW3U4OyA4XQAAMQcMPHBhbGxldF90cmVhc3VyeRhwYWxsZXQURXJyb3IIBFQABEkAATBwSW5zdWZmaWNpZW50UHJvcG9zZXJzQmFsYW5jZQAABHhQcm9wb3NlcidzIGJhbGFuY2UgaXMgdG9vIGxvdy4wSW52YWxpZEluZGV4AAEErE5vIHByb3Bvc2FsLCBib3VudHkgb3Igc3BlbmQgYXQgdGhhdCBpbmRleC5AVG9vTWFueUFwcHJvdmFscwACBIBUb28gbWFueSBhcHByb3ZhbHMgaW4gdGhlIHF1ZXVlLlhJbnN1ZmZpY2llbnRQZXJtaXNzaW9uAAMIRQFUaGUgc3BlbmQgb3JpZ2luIGlzIHZhbGlkIGJ1dCB0aGUgYW1vdW50IGl0IGlzIGFsbG93ZWQgdG8gc3BlbmQgaXMgbG93ZXIgdGhhbiB0aGVMYW1vdW50IHRvIGJlIHNwZW50LkxQcm9wb3NhbE5vdEFwcHJvdmVkAAQEfFByb3Bvc2FsIGhhcyBub3QgYmVlbiBhcHByb3ZlZC5YRmFpbGVkVG9Db252ZXJ0QmFsYW5jZQAFBFEBVGhlIGJhbGFuY2Ugb2YgdGhlIGFzc2V0IGtpbmQgaXMgbm90IGNvbnZlcnRpYmxlIHRvIHRoZSBiYWxhbmNlIG9mIHRoZSBuYXRpdmUgYXNzZXQuMFNwZW5kRXhwaXJlZAAGBLBUaGUgc3BlbmQgaGFzIGV4cGlyZWQgYW5kIGNhbm5vdCBiZSBjbGFpbWVkLixFYXJseVBheW91dAAHBKRUaGUgc3BlbmQgaXMgbm90IHlldCBlbGlnaWJsZSBmb3IgcGF5b3V0LkBBbHJlYWR5QXR0ZW1wdGVkAAgEnFRoZSBwYXltZW50IGhhcyBhbHJlYWR5IGJlZW4gYXR0ZW1wdGVkLixQYXlvdXRFcnJvcgAJBMxUaGVyZSB3YXMgc29tZSBpc3N1ZSB3aXRoIHRoZSBtZWNoYW5pc20gb2YgcGF5bWVudC4wTm90QXR0ZW1wdGVkAAoEpFRoZSBwYXlvdXQgd2FzIG5vdCB5ZXQgYXR0ZW1wdGVkL2NsYWltZWQuMEluY29uY2x1c2l2ZQALBMRUaGUgcGF5bWVudCBoYXMgbmVpdGhlciBmYWlsZWQgbm9yIHN1Y2NlZWRlZCB5ZXQuBHhFcnJvciBmb3IgdGhlIHRyZWFzdXJ5IHBhbGxldC41BwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AADkHDGBwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmUYcGFsbGV0FEVycm9yCARUAARJAAEoNEFscmVhZHlNZW1iZXIAAARwQWNjb3VudCBpcyBhbHJlYWR5IGEgbWVtYmVyLiROb3RNZW1iZXIAAQRgQWNjb3VudCBpcyBub3QgYSBtZW1iZXIuKE5vdFBvbGxpbmcAAgS4VGhlIGdpdmVuIHBvbGwgaW5kZXggaXMgdW5rbm93biBvciBoYXMgY2xvc2VkLhxPbmdvaW5nAAMEgFRoZSBnaXZlbiBwb2xsIGlzIHN0aWxsIG9uZ29pbmcuNE5vbmVSZW1haW5pbmcABASsVGhlcmUgYXJlIG5vIGZ1cnRoZXIgcmVjb3JkcyB0byBiZSByZW1vdmVkLihDb3JydXB0aW9uAAUEaFVuZXhwZWN0ZWQgZXJyb3IgaW4gc3RhdGUuKFJhbmtUb29Mb3cABgSUVGhlIG1lbWJlcidzIHJhbmsgaXMgdG9vIGxvdyB0byB2b3RlLjhJbnZhbGlkV2l0bmVzcwAHBJhUaGUgaW5mb3JtYXRpb24gcHJvdmlkZWQgaXMgaW5jb3JyZWN0LjBOb1Blcm1pc3Npb24ACAT4VGhlIG9yaWdpbiBpcyBub3Qgc3VmZmljaWVudGx5IHByaXZpbGVnZWQgdG8gZG8gdGhlIG9wZXJhdGlvbi4oU2FtZU1lbWJlcgAJBOBUaGUgbmV3IG1lbWJlciB0byBleGNoYW5nZSBpcyB0aGUgc2FtZSBhcyB0aGUgb2xkIG1lbWJlcgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC49BwxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlczhSZWZlcmVuZHVtSW5mbyAcVHJhY2tJZAH9ATRSdW50aW1lT3JpZ2luAYEDGE1vbWVudAEQEENhbGwBVQIcQmFsYW5jZQEYFFRhbGx5ATEEJEFjY291bnRJZAEAPFNjaGVkdWxlQWRkcmVzcwEJAgEYHE9uZ29pbmcEAEEHAY0BUmVmZXJlbmR1bVN0YXR1czxUcmFja0lkLCBSdW50aW1lT3JpZ2luLCBNb21lbnQsIENhbGwsIEJhbGFuY2UsIFRhbGx5LApBY2NvdW50SWQsIFNjaGVkdWxlQWRkcmVzcyw+AAAAIEFwcHJvdmVkDAAQARhNb21lbnQAAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAxQYBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAEAIFJlamVjdGVkDAAQARhNb21lbnQAAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAxQYBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAIAJENhbmNlbGxlZAwAEAEYTW9tZW50AADFBgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgADACBUaW1lZE91dAwAEAEYTW9tZW50AADFBgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AAMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAEABhLaWxsZWQEABABGE1vbWVudAAFAABBBwxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlc0BSZWZlcmVuZHVtU3RhdHVzIBxUcmFja0lkAf0BNFJ1bnRpbWVPcmlnaW4BgQMYTW9tZW50ARAQQ2FsbAFVAhxCYWxhbmNlARgUVGFsbHkBMQQkQWNjb3VudElkAQA8U2NoZWR1bGVBZGRyZXNzAQkCACwBFHRyYWNr/QEBHFRyYWNrSWQAARhvcmlnaW6BAwE0UnVudGltZU9yaWdpbgABIHByb3Bvc2FsVQIBEENhbGwAASRlbmFjdG1lbnTZAwFQRGlzcGF0Y2hUaW1lPE1vbWVudD4AASRzdWJtaXR0ZWQQARhNb21lbnQAAUhzdWJtaXNzaW9uX2RlcG9zaXTBBgFsRGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+AAFAZGVjaXNpb25fZGVwb3NpdMUGAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgABIGRlY2lkaW5nyQYBeE9wdGlvbjxEZWNpZGluZ1N0YXR1czxNb21lbnQ+PgABFHRhbGx5MQQBFFRhbGx5AAEgaW5fcXVldWV4ARBib29sAAEUYWxhcm3RBgGET3B0aW9uPChNb21lbnQsIFNjaGVkdWxlQWRkcmVzcyk+AABFBwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQkCBFMAAAQASQQBGFZlYzxUPgAASQcMQHBhbGxldF9yZWZlcmVuZGEYcGFsbGV0FEVycm9yCARUAARJAAE0KE5vdE9uZ29pbmcAAARoUmVmZXJlbmR1bSBpcyBub3Qgb25nb2luZy4oSGFzRGVwb3NpdAABBLhSZWZlcmVuZHVtJ3MgZGVjaXNpb24gZGVwb3NpdCBpcyBhbHJlYWR5IHBhaWQuIEJhZFRyYWNrAAIEnFRoZSB0cmFjayBpZGVudGlmaWVyIGdpdmVuIHdhcyBpbnZhbGlkLhBGdWxsAAMEMQFUaGVyZSBhcmUgYWxyZWFkeSBhIGZ1bGwgY29tcGxlbWVudCBvZiByZWZlcmVuZGEgaW4gcHJvZ3Jlc3MgZm9yIHRoaXMgdHJhY2suKFF1ZXVlRW1wdHkABASAVGhlIHF1ZXVlIG9mIHRoZSB0cmFjayBpcyBlbXB0eS40QmFkUmVmZXJlbmR1bQAFBORUaGUgcmVmZXJlbmR1bSBpbmRleCBwcm92aWRlZCBpcyBpbnZhbGlkIGluIHRoaXMgY29udGV4dC4sTm90aGluZ1RvRG8ABgSsVGhlcmUgd2FzIG5vdGhpbmcgdG8gZG8gaW4gdGhlIGFkdmFuY2VtZW50LhxOb1RyYWNrAAcEoE5vIHRyYWNrIGV4aXN0cyBmb3IgdGhlIHByb3Bvc2FsIG9yaWdpbi4oVW5maW5pc2hlZAAIBAEBQW55IGRlcG9zaXQgY2Fubm90IGJlIHJlZnVuZGVkIHVudGlsIGFmdGVyIHRoZSBkZWNpc2lvbiBpcyBvdmVyLjBOb1Blcm1pc3Npb24ACQSoVGhlIGRlcG9zaXQgcmVmdW5kZXIgaXMgbm90IHRoZSBkZXBvc2l0b3IuJE5vRGVwb3NpdAAKBMxUaGUgZGVwb3NpdCBjYW5ub3QgYmUgcmVmdW5kZWQgc2luY2Ugbm9uZSB3YXMgbWFkZS4kQmFkU3RhdHVzAAsE0FRoZSByZWZlcmVuZHVtIHN0YXR1cyBpcyBpbnZhbGlkIGZvciB0aGlzIG9wZXJhdGlvbi5AUHJlaW1hZ2VOb3RFeGlzdAAMBHBUaGUgcHJlaW1hZ2UgZG9lcyBub3QgZXhpc3QuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lk0HDFhwYWxsZXRfY29yZV9mZWxsb3dzaGlwGHBhbGxldBRFcnJvcggEVAAESQABJCBVbnJhbmtlZAAABGRNZW1iZXIncyByYW5rIGlzIHRvbyBsb3cuGFJhbmtlZAABBGhNZW1iZXIncyByYW5rIGlzIG5vdCB6ZXJvLjhVbmV4cGVjdGVkUmFuawACCFUBTWVtYmVyJ3MgcmFuayBpcyBub3QgYXMgZXhwZWN0ZWQgLSBnZW5lcmFsbHkgbWVhbnMgdGhhdCB0aGUgcmFuayBwcm92aWRlZCB0byB0aGUgY2FsbLBkb2VzIG5vdCBhZ3JlZSB3aXRoIHRoZSBzdGF0ZSBvZiB0aGUgc3lzdGVtLixJbnZhbGlkUmFuawADBFUBVGhlIGdpdmVuIHJhbmsgaXMgaW52YWxpZCAtIHRoaXMgZ2VuZXJhbGx5IG1lYW5zIGl0J3Mgbm90IGJldHdlZW4gMSBhbmQgYFJBTktfQ09VTlRgLjBOb1Blcm1pc3Npb24ABAQBAVRoZSBvcmlnaW4gZG9lcyBub3QgaGF2ZSBlbm91Z2ggcGVybWlzc2lvbiB0byBkbyB0aGlzIG9wZXJhdGlvbi4wTm90aGluZ0RvaW5nAAUE0E5vIHdvcmsgbmVlZHMgdG8gYmUgZG9uZSBhdCBwcmVzZW50IGZvciB0aGlzIG1lbWJlci48QWxyZWFkeUluZHVjdGVkAAYIQQFUaGUgY2FuZGlkYXRlIGhhcyBhbHJlYWR5IGJlZW4gaW5kdWN0ZWQuIFRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbiBzaW5jZSBpdCB3b3VsZAUBcmVxdWlyZSBhIGNhbmRpZGF0ZSAocmFuayAwKSB0byBhbHJlYWR5IGJlIHRyYWNrZWQgaW4gdGhlIHBhbGxldC4oTm90VHJhY2tlZAAHBDkBVGhlIGNhbmRpZGF0ZSBoYXMgbm90IGJlZW4gaW5kdWN0ZWQsIHNvIGNhbm5vdCBiZSBvZmZib2FyZGVkIGZyb20gdGhpcyBwYWxsZXQuHFRvb1Nvb24ACAT4T3BlcmF0aW9uIGNhbm5vdCBiZSBkb25lIHlldCBzaW5jZSBub3QgZW5vdWdoIHRpbWUgaGFzIHBhc3NlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuUQcMNHBhbGxldF9zYWxhcnkYcGFsbGV0FEVycm9yCARUAARJAAE4OEFscmVhZHlTdGFydGVkAAAErFRoZSBzYWxhcnkgc3lzdGVtIGhhcyBhbHJlYWR5IGJlZW4gc3RhcnRlZC4kTm90TWVtYmVyAAEEjFRoZSBhY2NvdW50IGlzIG5vdCBhIHJhbmtlZCBtZW1iZXIuPEFscmVhZHlJbmR1Y3RlZAACBIBUaGUgYWNjb3VudCBpcyBhbHJlYWR5IGluZHVjdGVkLixOb3RJbmR1Y3RlZAADABxOb0NsYWltAAQEvFRoZSBtZW1iZXIgZG9lcyBub3QgaGF2ZSBhIGN1cnJlbnQgdmFsaWQgY2xhaW0uJENsYWltWmVybwAFBGxUaGUgbWVtYmVyJ3MgY2xhaW0gaXMgemVyby4cVG9vTGF0ZQAGBLBDdXJyZW50IGN5Y2xlJ3MgcmVnaXN0cmF0aW9uIHBlcmlvZCBpcyBvdmVyLiBUb29FYXJseQAHBMBDdXJyZW50IGN5Y2xlJ3MgcGF5bWVudCBwZXJpb2QgaXMgbm90IHlldCBiZWd1bi4YTm90WWV0AAgEWEN5Y2xlIGlzIG5vdCB5ZXQgb3Zlci4oTm90U3RhcnRlZAAJBJxUaGUgcGF5b3V0IGN5Y2xlcyBoYXZlIG5vdCB5ZXQgc3RhcnRlZC4gQmFua3J1cHQACgScVGhlcmUgaXMgbm8gYnVkZ2V0IGxlZnQgZm9yIHRoZSBwYXlvdXQuIFBheUVycm9yAAsEzFRoZXJlIHdhcyBzb21lIGlzc3VlIHdpdGggdGhlIG1lY2hhbmlzbSBvZiBwYXltZW50LjBJbmNvbmNsdXNpdmUADATEVGhlIHBheW1lbnQgaGFzIG5laXRoZXIgZmFpbGVkIG5vciBzdWNjZWVkZWQgeWV0LihOb3RDdXJyZW50AA0E2FRoZSBjeWNsZSBpcyBhZnRlciB0aGF0IGluIHdoaWNoIHRoZSBwYXltZW50IHdhcyBtYWRlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5VBww8cGFsbGV0X3RyZWFzdXJ5GHBhbGxldBRFcnJvcggEVAAESQABMHBJbnN1ZmZpY2llbnRQcm9wb3NlcnNCYWxhbmNlAAAEeFByb3Bvc2VyJ3MgYmFsYW5jZSBpcyB0b28gbG93LjBJbnZhbGlkSW5kZXgAAQSsTm8gcHJvcG9zYWwsIGJvdW50eSBvciBzcGVuZCBhdCB0aGF0IGluZGV4LkBUb29NYW55QXBwcm92YWxzAAIEgFRvbyBtYW55IGFwcHJvdmFscyBpbiB0aGUgcXVldWUuWEluc3VmZmljaWVudFBlcm1pc3Npb24AAwhFAVRoZSBzcGVuZCBvcmlnaW4gaXMgdmFsaWQgYnV0IHRoZSBhbW91bnQgaXQgaXMgYWxsb3dlZCB0byBzcGVuZCBpcyBsb3dlciB0aGFuIHRoZUxhbW91bnQgdG8gYmUgc3BlbnQuTFByb3Bvc2FsTm90QXBwcm92ZWQABAR8UHJvcG9zYWwgaGFzIG5vdCBiZWVuIGFwcHJvdmVkLlhGYWlsZWRUb0NvbnZlcnRCYWxhbmNlAAUEUQFUaGUgYmFsYW5jZSBvZiB0aGUgYXNzZXQga2luZCBpcyBub3QgY29udmVydGlibGUgdG8gdGhlIGJhbGFuY2Ugb2YgdGhlIG5hdGl2ZSBhc3NldC4wU3BlbmRFeHBpcmVkAAYEsFRoZSBzcGVuZCBoYXMgZXhwaXJlZCBhbmQgY2Fubm90IGJlIGNsYWltZWQuLEVhcmx5UGF5b3V0AAcEpFRoZSBzcGVuZCBpcyBub3QgeWV0IGVsaWdpYmxlIGZvciBwYXlvdXQuQEFscmVhZHlBdHRlbXB0ZWQACAScVGhlIHBheW1lbnQgaGFzIGFscmVhZHkgYmVlbiBhdHRlbXB0ZWQuLFBheW91dEVycm9yAAkEzFRoZXJlIHdhcyBzb21lIGlzc3VlIHdpdGggdGhlIG1lY2hhbmlzbSBvZiBwYXltZW50LjBOb3RBdHRlbXB0ZWQACgSkVGhlIHBheW91dCB3YXMgbm90IHlldCBhdHRlbXB0ZWQvY2xhaW1lZC4wSW5jb25jbHVzaXZlAAsExFRoZSBwYXltZW50IGhhcyBuZWl0aGVyIGZhaWxlZCBub3Igc3VjY2VlZGVkIHlldC4EeEVycm9yIGZvciB0aGUgdHJlYXN1cnkgcGFsbGV0LlkHCChzcF9ydW50aW1lOE11bHRpU2lnbmF0dXJlAAEMHEVkMjU1MTkEAF0HAUhlZDI1NTE5OjpTaWduYXR1cmUAAAAcU3IyNTUxOQQAZQcBSHNyMjU1MTk6OlNpZ25hdHVyZQABABRFY2RzYQQAaQcBQGVjZHNhOjpTaWduYXR1cmUAAgAAXQcMHHNwX2NvcmUcZWQyNTUxOSRTaWduYXR1cmUAAAQAYQcBIFt1ODsgNjRdAABhBwAAA0AAAAAIAGUHDBxzcF9jb3JlHHNyMjU1MTkkU2lnbmF0dXJlAAAEAGEHASBbdTg7IDY0XQAAaQcMHHNwX2NvcmUUZWNkc2EkU2lnbmF0dXJlAAAEAG0HAXxbdTg7IFNJR05BVFVSRV9TRVJJQUxJWkVEX1NJWkVdAABtBwAAA0EAAAAIAHEHAAAEIHUHeQd9B4EHhQeNB5EHlQcAdQcQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zVGNoZWNrX25vbl96ZXJvX3NlbmRlckhDaGVja05vblplcm9TZW5kZXIEBFQAAAAAeQcQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zSGNoZWNrX3NwZWNfdmVyc2lvbkBDaGVja1NwZWNWZXJzaW9uBARUAAAAAH0HEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uc0BjaGVja190eF92ZXJzaW9uOENoZWNrVHhWZXJzaW9uBARUAAAAAIEHEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczRjaGVja19nZW5lc2lzMENoZWNrR2VuZXNpcwQEVAAAAACFBxAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnM8Y2hlY2tfbW9ydGFsaXR5OENoZWNrTW9ydGFsaXR5BARUAAAEAIkHAQxFcmEAAIkHEChzcF9ydW50aW1lHGdlbmVyaWMMZXJhDEVyYQABAQQgSW1tb3J0YWwAAAAcTW9ydGFsMQQACAAAAQAcTW9ydGFsMgQACAAAAgAcTW9ydGFsMwQACAAAAwAcTW9ydGFsNAQACAAABAAcTW9ydGFsNQQACAAABQAcTW9ydGFsNgQACAAABgAcTW9ydGFsNwQACAAABwAcTW9ydGFsOAQACAAACAAcTW9ydGFsOQQACAAACQAgTW9ydGFsMTAEAAgAAAoAIE1vcnRhbDExBAAIAAALACBNb3J0YWwxMgQACAAADAAgTW9ydGFsMTMEAAgAAA0AIE1vcnRhbDE0BAAIAAAOACBNb3J0YWwxNQQACAAADwAgTW9ydGFsMTYEAAgAABAAIE1vcnRhbDE3BAAIAAARACBNb3J0YWwxOAQACAAAEgAgTW9ydGFsMTkEAAgAABMAIE1vcnRhbDIwBAAIAAAUACBNb3J0YWwyMQQACAAAFQAgTW9ydGFsMjIEAAgAABYAIE1vcnRhbDIzBAAIAAAXACBNb3J0YWwyNAQACAAAGAAgTW9ydGFsMjUEAAgAABkAIE1vcnRhbDI2BAAIAAAaACBNb3J0YWwyNwQACAAAGwAgTW9ydGFsMjgEAAgAABwAIE1vcnRhbDI5BAAIAAAdACBNb3J0YWwzMAQACAAAHgAgTW9ydGFsMzEEAAgAAB8AIE1vcnRhbDMyBAAIAAAgACBNb3J0YWwzMwQACAAAIQAgTW9ydGFsMzQEAAgAACIAIE1vcnRhbDM1BAAIAAAjACBNb3J0YWwzNgQACAAAJAAgTW9ydGFsMzcEAAgAACUAIE1vcnRhbDM4BAAIAAAmACBNb3J0YWwzOQQACAAAJwAgTW9ydGFsNDAEAAgAACgAIE1vcnRhbDQxBAAIAAApACBNb3J0YWw0MgQACAAAKgAgTW9ydGFsNDMEAAgAACsAIE1vcnRhbDQ0BAAIAAAsACBNb3J0YWw0NQQACAAALQAgTW9ydGFsNDYEAAgAAC4AIE1vcnRhbDQ3BAAIAAAvACBNb3J0YWw0OAQACAAAMAAgTW9ydGFsNDkEAAgAADEAIE1vcnRhbDUwBAAIAAAyACBNb3J0YWw1MQQACAAAMwAgTW9ydGFsNTIEAAgAADQAIE1vcnRhbDUzBAAIAAA1ACBNb3J0YWw1NAQACAAANgAgTW9ydGFsNTUEAAgAADcAIE1vcnRhbDU2BAAIAAA4ACBNb3J0YWw1NwQACAAAOQAgTW9ydGFsNTgEAAgAADoAIE1vcnRhbDU5BAAIAAA7ACBNb3J0YWw2MAQACAAAPAAgTW9ydGFsNjEEAAgAAD0AIE1vcnRhbDYyBAAIAAA+ACBNb3J0YWw2MwQACAAAPwAgTW9ydGFsNjQEAAgAAEAAIE1vcnRhbDY1BAAIAABBACBNb3J0YWw2NgQACAAAQgAgTW9ydGFsNjcEAAgAAEMAIE1vcnRhbDY4BAAIAABEACBNb3J0YWw2OQQACAAARQAgTW9ydGFsNzAEAAgAAEYAIE1vcnRhbDcxBAAIAABHACBNb3J0YWw3MgQACAAASAAgTW9ydGFsNzMEAAgAAEkAIE1vcnRhbDc0BAAIAABKACBNb3J0YWw3NQQACAAASwAgTW9ydGFsNzYEAAgAAEwAIE1vcnRhbDc3BAAIAABNACBNb3J0YWw3OAQACAAATgAgTW9ydGFsNzkEAAgAAE8AIE1vcnRhbDgwBAAIAABQACBNb3J0YWw4MQQACAAAUQAgTW9ydGFsODIEAAgAAFIAIE1vcnRhbDgzBAAIAABTACBNb3J0YWw4NAQACAAAVAAgTW9ydGFsODUEAAgAAFUAIE1vcnRhbDg2BAAIAABWACBNb3J0YWw4NwQACAAAVwAgTW9ydGFsODgEAAgAAFgAIE1vcnRhbDg5BAAIAABZACBNb3J0YWw5MAQACAAAWgAgTW9ydGFsOTEEAAgAAFsAIE1vcnRhbDkyBAAIAABcACBNb3J0YWw5MwQACAAAXQAgTW9ydGFsOTQEAAgAAF4AIE1vcnRhbDk1BAAIAABfACBNb3J0YWw5NgQACAAAYAAgTW9ydGFsOTcEAAgAAGEAIE1vcnRhbDk4BAAIAABiACBNb3J0YWw5OQQACAAAYwAkTW9ydGFsMTAwBAAIAABkACRNb3J0YWwxMDEEAAgAAGUAJE1vcnRhbDEwMgQACAAAZgAkTW9ydGFsMTAzBAAIAABnACRNb3J0YWwxMDQEAAgAAGgAJE1vcnRhbDEwNQQACAAAaQAkTW9ydGFsMTA2BAAIAABqACRNb3J0YWwxMDcEAAgAAGsAJE1vcnRhbDEwOAQACAAAbAAkTW9ydGFsMTA5BAAIAABtACRNb3J0YWwxMTAEAAgAAG4AJE1vcnRhbDExMQQACAAAbwAkTW9ydGFsMTEyBAAIAABwACRNb3J0YWwxMTMEAAgAAHEAJE1vcnRhbDExNAQACAAAcgAkTW9ydGFsMTE1BAAIAABzACRNb3J0YWwxMTYEAAgAAHQAJE1vcnRhbDExNwQACAAAdQAkTW9ydGFsMTE4BAAIAAB2ACRNb3J0YWwxMTkEAAgAAHcAJE1vcnRhbDEyMAQACAAAeAAkTW9ydGFsMTIxBAAIAAB5ACRNb3J0YWwxMjIEAAgAAHoAJE1vcnRhbDEyMwQACAAAewAkTW9ydGFsMTI0BAAIAAB8ACRNb3J0YWwxMjUEAAgAAH0AJE1vcnRhbDEyNgQACAAAfgAkTW9ydGFsMTI3BAAIAAB/ACRNb3J0YWwxMjgEAAgAAIAAJE1vcnRhbDEyOQQACAAAgQAkTW9ydGFsMTMwBAAIAACCACRNb3J0YWwxMzEEAAgAAIMAJE1vcnRhbDEzMgQACAAAhAAkTW9ydGFsMTMzBAAIAACFACRNb3J0YWwxMzQEAAgAAIYAJE1vcnRhbDEzNQQACAAAhwAkTW9ydGFsMTM2BAAIAACIACRNb3J0YWwxMzcEAAgAAIkAJE1vcnRhbDEzOAQACAAAigAkTW9ydGFsMTM5BAAIAACLACRNb3J0YWwxNDAEAAgAAIwAJE1vcnRhbDE0MQQACAAAjQAkTW9ydGFsMTQyBAAIAACOACRNb3J0YWwxNDMEAAgAAI8AJE1vcnRhbDE0NAQACAAAkAAkTW9ydGFsMTQ1BAAIAACRACRNb3J0YWwxNDYEAAgAAJIAJE1vcnRhbDE0NwQACAAAkwAkTW9ydGFsMTQ4BAAIAACUACRNb3J0YWwxNDkEAAgAAJUAJE1vcnRhbDE1MAQACAAAlgAkTW9ydGFsMTUxBAAIAACXACRNb3J0YWwxNTIEAAgAAJgAJE1vcnRhbDE1MwQACAAAmQAkTW9ydGFsMTU0BAAIAACaACRNb3J0YWwxNTUEAAgAAJsAJE1vcnRhbDE1NgQACAAAnAAkTW9ydGFsMTU3BAAIAACdACRNb3J0YWwxNTgEAAgAAJ4AJE1vcnRhbDE1OQQACAAAnwAkTW9ydGFsMTYwBAAIAACgACRNb3J0YWwxNjEEAAgAAKEAJE1vcnRhbDE2MgQACAAAogAkTW9ydGFsMTYzBAAIAACjACRNb3J0YWwxNjQEAAgAAKQAJE1vcnRhbDE2NQQACAAApQAkTW9ydGFsMTY2BAAIAACmACRNb3J0YWwxNjcEAAgAAKcAJE1vcnRhbDE2OAQACAAAqAAkTW9ydGFsMTY5BAAIAACpACRNb3J0YWwxNzAEAAgAAKoAJE1vcnRhbDE3MQQACAAAqwAkTW9ydGFsMTcyBAAIAACsACRNb3J0YWwxNzMEAAgAAK0AJE1vcnRhbDE3NAQACAAArgAkTW9ydGFsMTc1BAAIAACvACRNb3J0YWwxNzYEAAgAALAAJE1vcnRhbDE3NwQACAAAsQAkTW9ydGFsMTc4BAAIAACyACRNb3J0YWwxNzkEAAgAALMAJE1vcnRhbDE4MAQACAAAtAAkTW9ydGFsMTgxBAAIAAC1ACRNb3J0YWwxODIEAAgAALYAJE1vcnRhbDE4MwQACAAAtwAkTW9ydGFsMTg0BAAIAAC4ACRNb3J0YWwxODUEAAgAALkAJE1vcnRhbDE4NgQACAAAugAkTW9ydGFsMTg3BAAIAAC7ACRNb3J0YWwxODgEAAgAALwAJE1vcnRhbDE4OQQACAAAvQAkTW9ydGFsMTkwBAAIAAC+ACRNb3J0YWwxOTEEAAgAAL8AJE1vcnRhbDE5MgQACAAAwAAkTW9ydGFsMTkzBAAIAADBACRNb3J0YWwxOTQEAAgAAMIAJE1vcnRhbDE5NQQACAAAwwAkTW9ydGFsMTk2BAAIAADEACRNb3J0YWwxOTcEAAgAAMUAJE1vcnRhbDE5OAQACAAAxgAkTW9ydGFsMTk5BAAIAADHACRNb3J0YWwyMDAEAAgAAMgAJE1vcnRhbDIwMQQACAAAyQAkTW9ydGFsMjAyBAAIAADKACRNb3J0YWwyMDMEAAgAAMsAJE1vcnRhbDIwNAQACAAAzAAkTW9ydGFsMjA1BAAIAADNACRNb3J0YWwyMDYEAAgAAM4AJE1vcnRhbDIwNwQACAAAzwAkTW9ydGFsMjA4BAAIAADQACRNb3J0YWwyMDkEAAgAANEAJE1vcnRhbDIxMAQACAAA0gAkTW9ydGFsMjExBAAIAADTACRNb3J0YWwyMTIEAAgAANQAJE1vcnRhbDIxMwQACAAA1QAkTW9ydGFsMjE0BAAIAADWACRNb3J0YWwyMTUEAAgAANcAJE1vcnRhbDIxNgQACAAA2AAkTW9ydGFsMjE3BAAIAADZACRNb3J0YWwyMTgEAAgAANoAJE1vcnRhbDIxOQQACAAA2wAkTW9ydGFsMjIwBAAIAADcACRNb3J0YWwyMjEEAAgAAN0AJE1vcnRhbDIyMgQACAAA3gAkTW9ydGFsMjIzBAAIAADfACRNb3J0YWwyMjQEAAgAAOAAJE1vcnRhbDIyNQQACAAA4QAkTW9ydGFsMjI2BAAIAADiACRNb3J0YWwyMjcEAAgAAOMAJE1vcnRhbDIyOAQACAAA5AAkTW9ydGFsMjI5BAAIAADlACRNb3J0YWwyMzAEAAgAAOYAJE1vcnRhbDIzMQQACAAA5wAkTW9ydGFsMjMyBAAIAADoACRNb3J0YWwyMzMEAAgAAOkAJE1vcnRhbDIzNAQACAAA6gAkTW9ydGFsMjM1BAAIAADrACRNb3J0YWwyMzYEAAgAAOwAJE1vcnRhbDIzNwQACAAA7QAkTW9ydGFsMjM4BAAIAADuACRNb3J0YWwyMzkEAAgAAO8AJE1vcnRhbDI0MAQACAAA8AAkTW9ydGFsMjQxBAAIAADxACRNb3J0YWwyNDIEAAgAAPIAJE1vcnRhbDI0MwQACAAA8wAkTW9ydGFsMjQ0BAAIAAD0ACRNb3J0YWwyNDUEAAgAAPUAJE1vcnRhbDI0NgQACAAA9gAkTW9ydGFsMjQ3BAAIAAD3ACRNb3J0YWwyNDgEAAgAAPgAJE1vcnRhbDI0OQQACAAA+QAkTW9ydGFsMjUwBAAIAAD6ACRNb3J0YWwyNTEEAAgAAPsAJE1vcnRhbDI1MgQACAAA/AAkTW9ydGFsMjUzBAAIAAD9ACRNb3J0YWwyNTQEAAgAAP4AJE1vcnRhbDI1NQQACAAA/wAAjQcQMGZyYW1lX3N5c3RlbShleHRlbnNpb25zLGNoZWNrX25vbmNlKENoZWNrTm9uY2UEBFQAAAQAvAEgVDo6Tm9uY2UAAJEHEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczBjaGVja193ZWlnaHQsQ2hlY2tXZWlnaHQEBFQAAAAAlQcIdGZyYW1lX21ldGFkYXRhX2hhc2hfZXh0ZW5zaW9uRENoZWNrTWV0YWRhdGFIYXNoBARUAAAEARBtb2RlmQcBEE1vZGUAAJkHCHRmcmFtZV9tZXRhZGF0YV9oYXNoX2V4dGVuc2lvbhBNb2RlAAEIIERpc2FibGVkAAAAHEVuYWJsZWQAAQAAnQcIcGNvbGxlY3RpdmVzX3BvbGthZG90X3J1bnRpbWUcUnVudGltZQAAAAChBwhIc3BfY29uc2Vuc3VzX3Nsb3RzMFNsb3REdXJhdGlvbgAABAAsAQx1NjQAAKUHEChzcF9ydW50aW1lHGdlbmVyaWMUYmxvY2sUQmxvY2sIGEhlYWRlcgGpByRFeHRyaW5zaWMBrQcACAEYaGVhZGVyqQcBGEhlYWRlcgABKGV4dHJpbnNpY3OxBwE4VmVjPEV4dHJpbnNpYz4AAKkHEChzcF9ydW50aW1lHGdlbmVyaWMYaGVhZGVyGEhlYWRlcggYTnVtYmVyARAQSGFzaAAAFAEscGFyZW50X2hhc2gwATBIYXNoOjpPdXRwdXQAARhudW1iZXK8ARhOdW1iZXIAAShzdGF0ZV9yb290MAEwSGFzaDo6T3V0cHV0AAE8ZXh0cmluc2ljc19yb290MAEwSGFzaDo6T3V0cHV0AAEYZGlnZXN0OAEYRGlnZXN0AACtBxAoc3BfcnVudGltZRxnZW5lcmljTHVuY2hlY2tlZF9leHRyaW5zaWNIVW5jaGVja2VkRXh0cmluc2ljEBxBZGRyZXNzAa0CEENhbGwBWQIkU2lnbmF0dXJlAVkHFEV4dHJhAXEHAAQANAAAALEHAAACrQcAtQcIHHNwX2NvcmU4T3BhcXVlTWV0YWRhdGEAAAQANAEcVmVjPHU4PgAAuQcEGE9wdGlvbgQEVAG1BwEIEE5vbmUAAAAQU29tZQQAtQcAAAEAAL0HBBhSZXN1bHQIBFQB5QEERQHBBwEICE9rBADlAQAAAAAMRXJyBADBBwAAAQAAwQcMKHNwX3J1bnRpbWVQdHJhbnNhY3Rpb25fdmFsaWRpdHlgVHJhbnNhY3Rpb25WYWxpZGl0eUVycm9yAAEIHEludmFsaWQEAMUHAUhJbnZhbGlkVHJhbnNhY3Rpb24AAAAcVW5rbm93bgQAyQcBSFVua25vd25UcmFuc2FjdGlvbgABAADFBwwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUhJbnZhbGlkVHJhbnNhY3Rpb24AASwQQ2FsbAAAABxQYXltZW50AAEAGEZ1dHVyZQACABRTdGFsZQADACBCYWRQcm9vZgAEAERBbmNpZW50QmlydGhCbG9jawAFAERFeGhhdXN0c1Jlc291cmNlcwAGABhDdXN0b20EAAgBCHU4AAcAMEJhZE1hbmRhdG9yeQAIAExNYW5kYXRvcnlWYWxpZGF0aW9uAAkAJEJhZFNpZ25lcgAKAADJBwwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUhVbmtub3duVHJhbnNhY3Rpb24AAQwwQ2Fubm90TG9va3VwAAAATE5vVW5zaWduZWRWYWxpZGF0b3IAAQAYQ3VzdG9tBAAIAQh1OAACAADNBwgwc3BfaW5oZXJlbnRzMEluaGVyZW50RGF0YQAABAEQZGF0YdEHAZRCVHJlZU1hcDxJbmhlcmVudElkZW50aWZpZXIsIFZlYzx1OD4+AADRBwQgQlRyZWVNYXAIBEsBGQEEVgE0AAQA1QcAAADVBwAAAtkHANkHAAAECBkBNADdBwgwc3BfaW5oZXJlbnRzUENoZWNrSW5oZXJlbnRzUmVzdWx0AAAMARBva2F5eAEQYm9vbAABLGZhdGFsX2Vycm9yeAEQYm9vbAABGGVycm9yc80HATBJbmhlcmVudERhdGEAAOEHDChzcF9ydW50aW1lUHRyYW5zYWN0aW9uX3ZhbGlkaXR5RFRyYW5zYWN0aW9uU291cmNlAAEMHEluQmxvY2sAAAAUTG9jYWwAAQAgRXh0ZXJuYWwAAgAA5QcEGFJlc3VsdAgEVAHpBwRFAcEHAQgIT2sEAOkHAAAAAAxFcnIEAMEHAAABAADpBwwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUBWYWxpZFRyYW5zYWN0aW9uAAAUASBwcmlvcml0eSwBTFRyYW5zYWN0aW9uUHJpb3JpdHkAASByZXF1aXJlc2kCAUxWZWM8VHJhbnNhY3Rpb25UYWc+AAEgcHJvdmlkZXNpAgFMVmVjPFRyYW5zYWN0aW9uVGFnPgABJGxvbmdldml0eSwBUFRyYW5zYWN0aW9uTG9uZ2V2aXR5AAEkcHJvcGFnYXRleAEQYm9vbAAA7QcEGE9wdGlvbgQEVAHxBwEIEE5vbmUAAAAQU29tZQQA8QcAAAEAAPEHAAAC9QcA9QcAAAQINFkFAPkHDGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudBR0eXBlc0xSdW50aW1lRGlzcGF0Y2hJbmZvCBxCYWxhbmNlARgYV2VpZ2h0ASQADAEYd2VpZ2h0JAEYV2VpZ2h0AAEUY2xhc3NcATREaXNwYXRjaENsYXNzAAEscGFydGlhbF9mZWUYARxCYWxhbmNlAAD9BwxocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQUdHlwZXMoRmVlRGV0YWlscwQcQmFsYW5jZQEYAAgBNGluY2x1c2lvbl9mZWUBCAF0T3B0aW9uPEluY2x1c2lvbkZlZTxCYWxhbmNlPj4AAQx0aXAYARxCYWxhbmNlAAABCAQYT3B0aW9uBARUAQUIAQgQTm9uZQAAABBTb21lBAAFCAAAAQAABQgMaHBhbGxldF90cmFuc2FjdGlvbl9wYXltZW50FHR5cGVzMEluY2x1c2lvbkZlZQQcQmFsYW5jZQEYAAwBIGJhc2VfZmVlGAEcQmFsYW5jZQABHGxlbl9mZWUYARxCYWxhbmNlAAFMYWRqdXN0ZWRfd2VpZ2h0X2ZlZRgBHEJhbGFuY2UAAAkICFxjdW11bHVzX3ByaW1pdGl2ZXNfY29yZTRDb2xsYXRpb25JbmZvAAAYATx1cHdhcmRfbWVzc2FnZXNpAgFIVmVjPFVwd2FyZE1lc3NhZ2U+AAFMaG9yaXpvbnRhbF9tZXNzYWdlc+UEAWBWZWM8T3V0Ym91bmRIcm1wTWVzc2FnZT4AAUxuZXdfdmFsaWRhdGlvbl9jb2RlDQgBjE9wdGlvbjxyZWxheV9jaGFpbjo6VmFsaWRhdGlvbkNvZGU+AAFscHJvY2Vzc2VkX2Rvd253YXJkX21lc3NhZ2VzEAEMdTMyAAE4aHJtcF93YXRlcm1hcmsQAWByZWxheV9jaGFpbjo6QmxvY2tOdW1iZXIAASRoZWFkX2RhdGF5AgEgSGVhZERhdGEAAA0IBBhPcHRpb24EBFQBEQgBCBBOb25lAAAAEFNvbWUEABEIAAABAAARCAx0cG9sa2Fkb3RfcGFyYWNoYWluX3ByaW1pdGl2ZXMocHJpbWl0aXZlczhWYWxpZGF0aW9uQ29kZQAABAA0ARxWZWM8dTg+AAAVCAQYUmVzdWx0CARUAekBBEUBUQQBCAhPawQA6QEAAAAADEVycgQAUQQAAAEAABkICHBjb2xsZWN0aXZlc19wb2xrYWRvdF9ydW50aW1lMFJ1bnRpbWVFcnJvcgABaBhTeXN0ZW0EAIUEAXBmcmFtZV9zeXN0ZW06OkVycm9yPFJ1bnRpbWU+AAAAPFBhcmFjaGFpblN5c3RlbQQA7QQBvGN1bXVsdXNfcGFsbGV0X3BhcmFjaGFpbl9zeXN0ZW06OkVycm9yPFJ1bnRpbWU+AAEAIEJhbGFuY2VzBAAtBQF8cGFsbGV0X2JhbGFuY2VzOjpFcnJvcjxSdW50aW1lPgAKAERDb2xsYXRvclNlbGVjdGlvbgQARQUBpHBhbGxldF9jb2xsYXRvcl9zZWxlY3Rpb246OkVycm9yPFJ1bnRpbWU+ABUAHFNlc3Npb24EAF0FAXhwYWxsZXRfc2Vzc2lvbjo6RXJyb3I8UnVudGltZT4AFgAkWGNtcFF1ZXVlBACRBQGkY3VtdWx1c19wYWxsZXRfeGNtcF9xdWV1ZTo6RXJyb3I8UnVudGltZT4AHgAsUG9sa2Fkb3RYY20EAOUFAWhwYWxsZXRfeGNtOjpFcnJvcjxSdW50aW1lPgAfADBNZXNzYWdlUXVldWUEAAEGAZBwYWxsZXRfbWVzc2FnZV9xdWV1ZTo6RXJyb3I8UnVudGltZT4AIgAcVXRpbGl0eQQABQYBeHBhbGxldF91dGlsaXR5OjpFcnJvcjxSdW50aW1lPgAoACBNdWx0aXNpZwQAFQYBfHBhbGxldF9tdWx0aXNpZzo6RXJyb3I8UnVudGltZT4AKQAUUHJveHkEADkGAXBwYWxsZXRfcHJveHk6OkVycm9yPFJ1bnRpbWU+ACoAIFByZWltYWdlBABhBgF8cGFsbGV0X3ByZWltYWdlOjpFcnJvcjxSdW50aW1lPgArACRTY2hlZHVsZXIEAHUGAYBwYWxsZXRfc2NoZWR1bGVyOjpFcnJvcjxSdW50aW1lPgAsACRBc3NldFJhdGUEAHkGAYRwYWxsZXRfYXNzZXRfcmF0ZTo6RXJyb3I8UnVudGltZT4ALQAgQWxsaWFuY2UEAJEGAXxwYWxsZXRfYWxsaWFuY2U6OkVycm9yPFJ1bnRpbWU+ADIAOEFsbGlhbmNlTW90aW9uBACdBgH8cGFsbGV0X2NvbGxlY3RpdmU6OkVycm9yPFJ1bnRpbWUsIHBhbGxldF9jb2xsZWN0aXZlOjpJbnN0YW5jZTE+ADMAUEZlbGxvd3NoaXBDb2xsZWN0aXZlBAC1BgE5AXBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZTo6RXJyb3I8UnVudGltZSwgcGFsbGV0X3JhbmtlZF9jb2xsZWN0aXZlOjoKSW5zdGFuY2UxPgA8AExGZWxsb3dzaGlwUmVmZXJlbmRhBAD5BgH0cGFsbGV0X3JlZmVyZW5kYTo6RXJyb3I8UnVudGltZSwgcGFsbGV0X3JlZmVyZW5kYTo6SW5zdGFuY2UxPgA9ADhGZWxsb3dzaGlwQ29yZQQABQcBKQFwYWxsZXRfY29yZV9mZWxsb3dzaGlwOjpFcnJvcjxSdW50aW1lLCBwYWxsZXRfY29yZV9mZWxsb3dzaGlwOjpJbnN0YW5jZTEKPgA/AEBGZWxsb3dzaGlwU2FsYXJ5BAAVBwHccGFsbGV0X3NhbGFyeTo6RXJyb3I8UnVudGltZSwgcGFsbGV0X3NhbGFyeTo6SW5zdGFuY2UxPgBAAEhGZWxsb3dzaGlwVHJlYXN1cnkEADEHAexwYWxsZXRfdHJlYXN1cnk6OkVycm9yPFJ1bnRpbWUsIHBhbGxldF90cmVhc3VyeTo6SW5zdGFuY2UxPgBBAFBBbWJhc3NhZG9yQ29sbGVjdGl2ZQQAOQcBOQFwYWxsZXRfcmFua2VkX2NvbGxlY3RpdmU6OkVycm9yPFJ1bnRpbWUsIHBhbGxldF9yYW5rZWRfY29sbGVjdGl2ZTo6Ckluc3RhbmNlMj4ARgBMQW1iYXNzYWRvclJlZmVyZW5kYQQASQcB9HBhbGxldF9yZWZlcmVuZGE6OkVycm9yPFJ1bnRpbWUsIHBhbGxldF9yZWZlcmVuZGE6Okluc3RhbmNlMj4ARwA4QW1iYXNzYWRvckNvcmUEAE0HASkBcGFsbGV0X2NvcmVfZmVsbG93c2hpcDo6RXJyb3I8UnVudGltZSwgcGFsbGV0X2NvcmVfZmVsbG93c2hpcDo6SW5zdGFuY2UyCj4ASQBAQW1iYXNzYWRvclNhbGFyeQQAUQcB3HBhbGxldF9zYWxhcnk6OkVycm9yPFJ1bnRpbWUsIHBhbGxldF9zYWxhcnk6Okluc3RhbmNlMj4ASgBIQW1iYXNzYWRvclRyZWFzdXJ5BABVBwHscGFsbGV0X3RyZWFzdXJ5OjpFcnJvcjxSdW50aW1lLCBwYWxsZXRfdHJlYXN1cnk6Okluc3RhbmNlMj4ASwAAjBhTeXN0ZW0BGFN5c3RlbUQcQWNjb3VudAEBBAIADEEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAE6CBUaGUgZnVsbCBhY2NvdW50IGluZm9ybWF0aW9uIGZvciBhIHBhcnRpY3VsYXIgYWNjb3VudCBJRC44RXh0cmluc2ljQ291bnQAABAEAAS4IFRvdGFsIGV4dHJpbnNpY3MgY291bnQgZm9yIHRoZSBjdXJyZW50IGJsb2NrLixCbG9ja1dlaWdodAEAIBgAAAAAAAAEiCBUaGUgY3VycmVudCB3ZWlnaHQgZm9yIHRoZSBibG9jay5AQWxsRXh0cmluc2ljc0xlbgAAEAQABEEBIFRvdGFsIGxlbmd0aCAoaW4gYnl0ZXMpIGZvciBhbGwgZXh0cmluc2ljcyBwdXQgdG9nZXRoZXIsIGZvciB0aGUgY3VycmVudCBibG9jay4kQmxvY2tIYXNoAQEEBRAwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJggTWFwIG9mIGJsb2NrIG51bWJlcnMgdG8gYmxvY2sgaGFzaGVzLjRFeHRyaW5zaWNEYXRhAQEEBRA0BAAEPQEgRXh0cmluc2ljcyBkYXRhIGZvciB0aGUgY3VycmVudCBibG9jayAobWFwcyBhbiBleHRyaW5zaWMncyBpbmRleCB0byBpdHMgZGF0YSkuGE51bWJlcgEAEBAAAAAABAkBIFRoZSBjdXJyZW50IGJsb2NrIG51bWJlciBiZWluZyBwcm9jZXNzZWQuIFNldCBieSBgZXhlY3V0ZV9ibG9ja2AuKFBhcmVudEhhc2gBADCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEcCBIYXNoIG9mIHRoZSBwcmV2aW91cyBibG9jay4YRGlnZXN0AQA4BAAE8CBEaWdlc3Qgb2YgdGhlIGN1cnJlbnQgYmxvY2ssIGFsc28gcGFydCBvZiB0aGUgYmxvY2sgaGVhZGVyLhhFdmVudHMBAEgEABygIEV2ZW50cyBkZXBvc2l0ZWQgZm9yIHRoZSBjdXJyZW50IGJsb2NrLgAdASBOT1RFOiBUaGUgaXRlbSBpcyB1bmJvdW5kIGFuZCBzaG91bGQgdGhlcmVmb3JlIG5ldmVyIGJlIHJlYWQgb24gY2hhaW4u0CBJdCBjb3VsZCBvdGhlcndpc2UgaW5mbGF0ZSB0aGUgUG9WIHNpemUgb2YgYSBibG9jay4ALQEgRXZlbnRzIGhhdmUgYSBsYXJnZSBpbi1tZW1vcnkgc2l6ZS4gQm94IHRoZSBldmVudHMgdG8gbm90IGdvIG91dC1vZi1tZW1vcnn8IGp1c3QgaW4gY2FzZSBzb21lb25lIHN0aWxsIHJlYWRzIHRoZW0gZnJvbSB3aXRoaW4gdGhlIHJ1bnRpbWUuKEV2ZW50Q291bnQBABAQAAAAAAS4IFRoZSBudW1iZXIgb2YgZXZlbnRzIGluIHRoZSBgRXZlbnRzPFQ+YCBsaXN0LixFdmVudFRvcGljcwEBBAIwSQQEACglASBNYXBwaW5nIGJldHdlZW4gYSB0b3BpYyAocmVwcmVzZW50ZWQgYnkgVDo6SGFzaCkgYW5kIGEgdmVjdG9yIG9mIGluZGV4ZXOUIG9mIGV2ZW50cyBpbiB0aGUgYDxFdmVudHM8VD4+YCBsaXN0LgBRASBBbGwgdG9waWMgdmVjdG9ycyBoYXZlIGRldGVybWluaXN0aWMgc3RvcmFnZSBsb2NhdGlvbnMgZGVwZW5kaW5nIG9uIHRoZSB0b3BpYy4gVGhpc0UBIGFsbG93cyBsaWdodC1jbGllbnRzIHRvIGxldmVyYWdlIHRoZSBjaGFuZ2VzIHRyaWUgc3RvcmFnZSB0cmFja2luZyBtZWNoYW5pc20gYW5k5CBpbiBjYXNlIG9mIGNoYW5nZXMgZmV0Y2ggdGhlIGxpc3Qgb2YgZXZlbnRzIG9mIGludGVyZXN0LgBZASBUaGUgdmFsdWUgaGFzIHRoZSB0eXBlIGAoQmxvY2tOdW1iZXJGb3I8VD4sIEV2ZW50SW5kZXgpYCBiZWNhdXNlIGlmIHdlIHVzZWQgb25seSBqdXN0TQEgdGhlIGBFdmVudEluZGV4YCB0aGVuIGluIGNhc2UgaWYgdGhlIHRvcGljIGhhcyB0aGUgc2FtZSBjb250ZW50cyBvbiB0aGUgbmV4dCBibG9jawEBIG5vIG5vdGlmaWNhdGlvbiB3aWxsIGJlIHRyaWdnZXJlZCB0aHVzIHRoZSBldmVudCBtaWdodCBiZSBsb3N0LkhMYXN0UnVudGltZVVwZ3JhZGUAAE0EBAAEVQEgU3RvcmVzIHRoZSBgc3BlY192ZXJzaW9uYCBhbmQgYHNwZWNfbmFtZWAgb2Ygd2hlbiB0aGUgbGFzdCBydW50aW1lIHVwZ3JhZGUgaGFwcGVuZWQuVFVwZ3JhZGVkVG9VMzJSZWZDb3VudAEAeAQABE0BIFRydWUgaWYgd2UgaGF2ZSB1cGdyYWRlZCBzbyB0aGF0IGB0eXBlIFJlZkNvdW50YCBpcyBgdTMyYC4gRmFsc2UgKGRlZmF1bHQpIGlmIG5vdC5gVXBncmFkZWRUb1RyaXBsZVJlZkNvdW50AQB4BAAIXQEgVHJ1ZSBpZiB3ZSBoYXZlIHVwZ3JhZGVkIHNvIHRoYXQgQWNjb3VudEluZm8gY29udGFpbnMgdGhyZWUgdHlwZXMgb2YgYFJlZkNvdW50YC4gRmFsc2VIIChkZWZhdWx0KSBpZiBub3QuOEV4ZWN1dGlvblBoYXNlAABFBAQABIggVGhlIGV4ZWN1dGlvbiBwaGFzZSBvZiB0aGUgYmxvY2suREF1dGhvcml6ZWRVcGdyYWRlAABVBAQABLggYFNvbWVgIGlmIGEgY29kZSB1cGdyYWRlIGhhcyBiZWVuIGF1dGhvcml6ZWQuAV0CAVQYMEJsb2NrV2VpZ2h0c1kEdQEHAPIFKgEABwCIUmp0AgBAAQJlzR0AAQfA0ix2UQIA4AABBwDmvU9XAgDwAAEAAAJlzR0AAQfAdMGQbgIAMAEBBwCIUmp0AgBAAQEHAKKUGh0CAFAAAmXNHQAAAAAE0CBCbG9jayAmIGV4dHJpbnNpY3Mgd2VpZ2h0czogYmFzZSB2YWx1ZXMgYW5kIGxpbWl0cy4sQmxvY2tMZW5ndGhpBDAAADwAAABQAAAAUAAEqCBUaGUgbWF4aW11bSBsZW5ndGggb2YgYSBibG9jayAoaW4gYnl0ZXMpLjhCbG9ja0hhc2hDb3VudBAQABAAAARVASBNYXhpbXVtIG51bWJlciBvZiBibG9jayBudW1iZXIgdG8gYmxvY2sgaGFzaCBtYXBwaW5ncyB0byBrZWVwIChvbGRlc3QgcHJ1bmVkIGZpcnN0KS4gRGJXZWlnaHRxBEBAeH0BAAAAAADh9QUAAAAABAkBIFRoZSB3ZWlnaHQgb2YgcnVudGltZSBkYXRhYmFzZSBvcGVyYXRpb25zIHRoZSBydW50aW1lIGNhbiBpbnZva2UuHFZlcnNpb251BBkDLGNvbGxlY3RpdmVzLGNvbGxlY3RpdmVzAQAAABVKDwAAAAAANN1xjVzFMmLUAQAAANe92KJyyg1lAQAAAN9qy2iZB2CbBAAAADfjl/x8kfXkAgAAAED+OtQB+JWaBgAAANK8mJfu0I8VAwAAAPeLJ4vlP0VMAgAAAKs8BXIpH+uLAQAAALydiZBPW5I/AQAAADfIuxNQqaKoBAAAAPP/FNWrUnBZAwAAAOqT4/FvPWliAgAAAPvFd7nXR+/WAQAAAAcAAAAABIQgR2V0IHRoZSBjaGFpbidzIGN1cnJlbnQgdmVyc2lvbi4oU1M1OFByZWZpeP0BCAAAFKggVGhlIGRlc2lnbmF0ZWQgU1M1OCBwcmVmaXggb2YgdGhpcyBjaGFpbi4AOQEgVGhpcyByZXBsYWNlcyB0aGUgInNzNThGb3JtYXQiIHByb3BlcnR5IGRlY2xhcmVkIGluIHRoZSBjaGFpbiBzcGVjLiBSZWFzb24gaXMxASB0aGF0IHRoZSBydW50aW1lIHNob3VsZCBrbm93IGFib3V0IHRoZSBwcmVmaXggaW4gb3JkZXIgdG8gbWFrZSB1c2Ugb2YgaXQgYXNwIGFuIGlkZW50aWZpZXIgb2YgdGhlIGNoYWluLgGFBAAAPFBhcmFjaGFpblN5c3RlbQE8UGFyYWNoYWluU3lzdGVtYERVbmluY2x1ZGVkU2VnbWVudAEAiQQEABhJASBMYXRlc3QgaW5jbHVkZWQgYmxvY2sgZGVzY2VuZGFudHMgdGhlIHJ1bnRpbWUgYWNjZXB0ZWQuIEluIG90aGVyIHdvcmRzLCB0aGVzZSBhcmVhASBhbmNlc3RvcnMgb2YgdGhlIGN1cnJlbnRseSBleGVjdXRpbmcgYmxvY2sgd2hpY2ggaGF2ZSBub3QgYmVlbiBpbmNsdWRlZCBpbiB0aGUgb2JzZXJ2ZWRMIHJlbGF5LWNoYWluIHN0YXRlLgB1ASBUaGUgc2VnbWVudCBsZW5ndGggaXMgbGltaXRlZCBieSB0aGUgY2FwYWNpdHkgcmV0dXJuZWQgZnJvbSB0aGUgW2BDb25zZW5zdXNIb29rYF0gY29uZmlndXJlZDwgaW4gdGhlIHBhbGxldC5sQWdncmVnYXRlZFVuaW5jbHVkZWRTZWdtZW50AACtBAQADGkBIFN0b3JhZ2UgZmllbGQgdGhhdCBrZWVwcyB0cmFjayBvZiBiYW5kd2lkdGggdXNlZCBieSB0aGUgdW5pbmNsdWRlZCBzZWdtZW50IGFsb25nIHdpdGggdGhlLQEgbGF0ZXN0IEhSTVAgd2F0ZXJtYXJrLiBVc2VkIGZvciBsaW1pdGluZyB0aGUgYWNjZXB0YW5jZSBvZiBuZXcgYmxvY2tzIHdpdGiQIHJlc3BlY3QgdG8gcmVsYXkgY2hhaW4gY29uc3RyYWludHMuVFBlbmRpbmdWYWxpZGF0aW9uQ29kZQEANAQAGFkBIEluIGNhc2Ugb2YgYSBzY2hlZHVsZWQgdXBncmFkZSwgdGhpcyBzdG9yYWdlIGZpZWxkIGNvbnRhaW5zIHRoZSB2YWxpZGF0aW9uIGNvZGUgdG8gYmUkIGFwcGxpZWQuAD0BIEFzIHNvb24gYXMgdGhlIHJlbGF5IGNoYWluIGdpdmVzIHVzIHRoZSBnby1haGVhZCBzaWduYWwsIHdlIHdpbGwgb3ZlcndyaXRlIHRoZXEBIFtgOmNvZGVgXVtzcF9jb3JlOjpzdG9yYWdlOjp3ZWxsX2tub3duX2tleXM6OkNPREVdIHdoaWNoIHdpbGwgcmVzdWx0IHRoZSBuZXh0IGJsb2NrIHByb2Nlc3MJASB3aXRoIHRoZSBuZXcgdmFsaWRhdGlvbiBjb2RlLiBUaGlzIGNvbmNsdWRlcyB0aGUgdXBncmFkZSBwcm9jZXNzLkROZXdWYWxpZGF0aW9uQ29kZQAANAQAFF0BIFZhbGlkYXRpb24gY29kZSB0aGF0IGlzIHNldCBieSB0aGUgcGFyYWNoYWluIGFuZCBpcyB0byBiZSBjb21tdW5pY2F0ZWQgdG8gY29sbGF0b3IgYW5keCBjb25zZXF1ZW50bHkgdGhlIHJlbGF5LWNoYWluLgBlASBUaGlzIHdpbGwgYmUgY2xlYXJlZCBpbiBgb25faW5pdGlhbGl6ZWAgb2YgZWFjaCBuZXcgYmxvY2sgaWYgbm8gb3RoZXIgcGFsbGV0IGFscmVhZHkgc2V0LCB0aGUgdmFsdWUuOFZhbGlkYXRpb25EYXRhAAB1AgQADNAgVGhlIFtgUGVyc2lzdGVkVmFsaWRhdGlvbkRhdGFgXSBzZXQgZm9yIHRoaXMgYmxvY2suLQEgVGhpcyB2YWx1ZSBpcyBleHBlY3RlZCB0byBiZSBzZXQgb25seSBvbmNlIHBlciBibG9jayBhbmQgaXQncyBuZXZlciBzdG9yZWQ0IGluIHRoZSB0cmllLlBEaWRTZXRWYWxpZGF0aW9uQ29kZQEAeAQABOAgV2VyZSB0aGUgdmFsaWRhdGlvbiBkYXRhIHNldCB0byBub3RpZnkgdGhlIHJlbGF5IGNoYWluP2RMYXN0UmVsYXlDaGFpbkJsb2NrTnVtYmVyAQAQEAAAAAAMHQEgVGhlIHJlbGF5IGNoYWluIGJsb2NrIG51bWJlciBhc3NvY2lhdGVkIHdpdGggdGhlIGxhc3QgcGFyYWNoYWluIGJsb2NrLgCIIFRoaXMgaXMgdXBkYXRlZCBpbiBgb25fZmluYWxpemVgLmBVcGdyYWRlUmVzdHJpY3Rpb25TaWduYWwBALEEBAAcdQEgQW4gb3B0aW9uIHdoaWNoIGluZGljYXRlcyBpZiB0aGUgcmVsYXktY2hhaW4gcmVzdHJpY3RzIHNpZ25hbGxpbmcgYSB2YWxpZGF0aW9uIGNvZGUgdXBncmFkZS5hASBJbiBvdGhlciB3b3JkcywgaWYgdGhpcyBpcyBgU29tZWAgYW5kIFtgTmV3VmFsaWRhdGlvbkNvZGVgXSBpcyBgU29tZWAgdGhlbiB0aGUgcHJvZHVjZWRsIGNhbmRpZGF0ZSB3aWxsIGJlIGludmFsaWQuAHEBIFRoaXMgc3RvcmFnZSBpdGVtIGlzIGEgbWlycm9yIG9mIHRoZSBjb3JyZXNwb25kaW5nIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYXJhY2hhaW4gZnJvbSB0aGVtASByZWxheS1jaGFpbi4gVGhpcyB2YWx1ZSBpcyBlcGhlbWVyYWwgd2hpY2ggbWVhbnMgaXQgZG9lc24ndCBoaXQgdGhlIHN0b3JhZ2UuIFRoaXMgdmFsdWUgaXNgIHNldCBhZnRlciB0aGUgaW5oZXJlbnQuOFVwZ3JhZGVHb0FoZWFkAQClBAQAFNwgT3B0aW9uYWwgdXBncmFkZSBnby1haGVhZCBzaWduYWwgZnJvbSB0aGUgcmVsYXktY2hhaW4uAHEBIFRoaXMgc3RvcmFnZSBpdGVtIGlzIGEgbWlycm9yIG9mIHRoZSBjb3JyZXNwb25kaW5nIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYXJhY2hhaW4gZnJvbSB0aGVtASByZWxheS1jaGFpbi4gVGhpcyB2YWx1ZSBpcyBlcGhlbWVyYWwgd2hpY2ggbWVhbnMgaXQgZG9lc24ndCBoaXQgdGhlIHN0b3JhZ2UuIFRoaXMgdmFsdWUgaXNgIHNldCBhZnRlciB0aGUgaW5oZXJlbnQuPFJlbGF5U3RhdGVQcm9vZgAAfQIEABjEIFRoZSBzdGF0ZSBwcm9vZiBmb3IgdGhlIGxhc3QgcmVsYXkgcGFyZW50IGJsb2NrLgBtASBUaGlzIGZpZWxkIGlzIG1lYW50IHRvIGJlIHVwZGF0ZWQgZWFjaCBibG9jayB3aXRoIHRoZSB2YWxpZGF0aW9uIGRhdGEgaW5oZXJlbnQuIFRoZXJlZm9yZSxNASBiZWZvcmUgcHJvY2Vzc2luZyBvZiB0aGUgaW5oZXJlbnQsIGUuZy4gaW4gYG9uX2luaXRpYWxpemVgIHRoaXMgZGF0YSBtYXkgYmUgc3RhbGUuAKwgVGhpcyBkYXRhIGlzIGFsc28gYWJzZW50IGZyb20gdGhlIGdlbmVzaXMuWFJlbGV2YW50TWVzc2FnaW5nU3RhdGUAALkEBAAcZQEgVGhlIHNuYXBzaG90IG9mIHNvbWUgc3RhdGUgcmVsYXRlZCB0byBtZXNzYWdpbmcgcmVsZXZhbnQgdG8gdGhlIGN1cnJlbnQgcGFyYWNoYWluIGFzIHBlckggdGhlIHJlbGF5IHBhcmVudC4AbQEgVGhpcyBmaWVsZCBpcyBtZWFudCB0byBiZSB1cGRhdGVkIGVhY2ggYmxvY2sgd2l0aCB0aGUgdmFsaWRhdGlvbiBkYXRhIGluaGVyZW50LiBUaGVyZWZvcmUsTQEgYmVmb3JlIHByb2Nlc3Npbmcgb2YgdGhlIGluaGVyZW50LCBlLmcuIGluIGBvbl9pbml0aWFsaXplYCB0aGlzIGRhdGEgbWF5IGJlIHN0YWxlLgCsIFRoaXMgZGF0YSBpcyBhbHNvIGFic2VudCBmcm9tIHRoZSBnZW5lc2lzLkRIb3N0Q29uZmlndXJhdGlvbgAAzQQEABgpASBUaGUgcGFyYWNoYWluIGhvc3QgY29uZmlndXJhdGlvbiB0aGF0IHdhcyBvYnRhaW5lZCBmcm9tIHRoZSByZWxheSBwYXJlbnQuAG0BIFRoaXMgZmllbGQgaXMgbWVhbnQgdG8gYmUgdXBkYXRlZCBlYWNoIGJsb2NrIHdpdGggdGhlIHZhbGlkYXRpb24gZGF0YSBpbmhlcmVudC4gVGhlcmVmb3JlLE0BIGJlZm9yZSBwcm9jZXNzaW5nIG9mIHRoZSBpbmhlcmVudCwgZS5nLiBpbiBgb25faW5pdGlhbGl6ZWAgdGhpcyBkYXRhIG1heSBiZSBzdGFsZS4ArCBUaGlzIGRhdGEgaXMgYWxzbyBhYnNlbnQgZnJvbSB0aGUgZ2VuZXNpcy44TGFzdERtcU1xY0hlYWQBANUEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPQgVGhlIGxhc3QgZG93bndhcmQgbWVzc2FnZSBxdWV1ZSBjaGFpbiBoZWFkIHdlIGhhdmUgb2JzZXJ2ZWQuAGUBIFRoaXMgdmFsdWUgaXMgbG9hZGVkIGJlZm9yZSBhbmQgc2F2ZWQgYWZ0ZXIgcHJvY2Vzc2luZyBpbmJvdW5kIGRvd253YXJkIG1lc3NhZ2VzIGNhcnJpZWRgIGJ5IHRoZSBzeXN0ZW0gaW5oZXJlbnQuQExhc3RIcm1wTXFjSGVhZHMBANkEBAAQSQEgVGhlIG1lc3NhZ2UgcXVldWUgY2hhaW4gaGVhZHMgd2UgaGF2ZSBvYnNlcnZlZCBwZXIgZWFjaCBjaGFubmVsIGluY29taW5nIGNoYW5uZWwuAGUBIFRoaXMgdmFsdWUgaXMgbG9hZGVkIGJlZm9yZSBhbmQgc2F2ZWQgYWZ0ZXIgcHJvY2Vzc2luZyBpbmJvdW5kIGRvd253YXJkIG1lc3NhZ2VzIGNhcnJpZWRgIGJ5IHRoZSBzeXN0ZW0gaW5oZXJlbnQuZFByb2Nlc3NlZERvd253YXJkTWVzc2FnZXMBABAQAAAAAAzIIE51bWJlciBvZiBkb3dud2FyZCBtZXNzYWdlcyBwcm9jZXNzZWQgaW4gYSBibG9jay4A7CBUaGlzIHdpbGwgYmUgY2xlYXJlZCBpbiBgb25faW5pdGlhbGl6ZWAgb2YgZWFjaCBuZXcgYmxvY2suNEhybXBXYXRlcm1hcmsBABAQAAAAAAygIEhSTVAgd2F0ZXJtYXJrIHRoYXQgd2FzIHNldCBpbiBhIGJsb2NrLgDsIFRoaXMgd2lsbCBiZSBjbGVhcmVkIGluIGBvbl9pbml0aWFsaXplYCBvZiBlYWNoIG5ldyBibG9jay5QSHJtcE91dGJvdW5kTWVzc2FnZXMBAOUEBAAMpCBIUk1QIG1lc3NhZ2VzIHRoYXQgd2VyZSBzZW50IGluIGEgYmxvY2suAOwgVGhpcyB3aWxsIGJlIGNsZWFyZWQgaW4gYG9uX2luaXRpYWxpemVgIG9mIGVhY2ggbmV3IGJsb2NrLjhVcHdhcmRNZXNzYWdlcwEAaQIEAAysIFVwd2FyZCBtZXNzYWdlcyB0aGF0IHdlcmUgc2VudCBpbiBhIGJsb2NrLgDsIFRoaXMgd2lsbCBiZSBjbGVhcmVkIGluIGBvbl9pbml0aWFsaXplYCBvZiBlYWNoIG5ldyBibG9jay5UUGVuZGluZ1Vwd2FyZE1lc3NhZ2VzAQBpAgQABDEBIFVwd2FyZCBtZXNzYWdlcyB0aGF0IGFyZSBzdGlsbCBwZW5kaW5nIGFuZCBub3QgeWV0IHNlbmQgdG8gdGhlIHJlbGF5IGNoYWluLlxVcHdhcmREZWxpdmVyeUZlZUZhY3RvcgEAFQJAAABkp7O24A0AAAAAAAAAAATkIFRoZSBmYWN0b3IgdG8gbXVsdGlwbHkgdGhlIGJhc2UgZGVsaXZlcnkgZmVlIGJ5IGZvciBVTVAuhEFubm91bmNlZEhybXBNZXNzYWdlc1BlckNhbmRpZGF0ZQEAEBAAAAAACGUBIFRoZSBudW1iZXIgb2YgSFJNUCBtZXNzYWdlcyB3ZSBvYnNlcnZlZCBpbiBgb25faW5pdGlhbGl6ZWAgYW5kIHRodXMgdXNlZCB0aGF0IG51bWJlciBmb3LwIGFubm91bmNpbmcgdGhlIHdlaWdodCBvZiBgb25faW5pdGlhbGl6ZWAgYW5kIGBvbl9maW5hbGl6ZWAuaFJlc2VydmVkWGNtcFdlaWdodE92ZXJyaWRlAAAkBAAIXQEgVGhlIHdlaWdodCB3ZSByZXNlcnZlIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGJsb2NrIGZvciBwcm9jZXNzaW5nIFhDTVAgbWVzc2FnZXMuIFRoaXO4IG92ZXJyaWRlcyB0aGUgYW1vdW50IHNldCBpbiB0aGUgQ29uZmlnIHRyYWl0LmRSZXNlcnZlZERtcFdlaWdodE92ZXJyaWRlAAAkBAAIWQEgVGhlIHdlaWdodCB3ZSByZXNlcnZlIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGJsb2NrIGZvciBwcm9jZXNzaW5nIERNUCBtZXNzYWdlcy4gVGhpc7ggb3ZlcnJpZGVzIHRoZSBhbW91bnQgc2V0IGluIHRoZSBDb25maWcgdHJhaXQuYEN1c3RvbVZhbGlkYXRpb25IZWFkRGF0YQAANAQADCkBIEEgY3VzdG9tIGhlYWQgZGF0YSB0aGF0IHNob3VsZCBiZSByZXR1cm5lZCBhcyByZXN1bHQgb2YgYHZhbGlkYXRlX2Jsb2NrYC4AEQEgU2VlIGBQYWxsZXQ6OnNldF9jdXN0b21fdmFsaWRhdGlvbl9oZWFkX2RhdGFgIGZvciBtb3JlIGluZm9ybWF0aW9uLgFtAgF8AAHtBAEAJFRpbWVzdGFtcAEkVGltZXN0YW1wCAxOb3cBACwgAAAAAAAAAAAEoCBUaGUgY3VycmVudCB0aW1lIGZvciB0aGUgY3VycmVudCBibG9jay4kRGlkVXBkYXRlAQB4BAAQ2CBXaGV0aGVyIHRoZSB0aW1lc3RhbXAgaGFzIGJlZW4gdXBkYXRlZCBpbiB0aGlzIGJsb2NrLgBVASBUaGlzIHZhbHVlIGlzIHVwZGF0ZWQgdG8gYHRydWVgIHVwb24gc3VjY2Vzc2Z1bCBzdWJtaXNzaW9uIG9mIGEgdGltZXN0YW1wIGJ5IGEgbm9kZS5FASBJdCBpcyB0aGVuIGNoZWNrZWQgYXQgdGhlIGVuZCBvZiBlYWNoIGJsb2NrIGV4ZWN1dGlvbiBpbiB0aGUgYG9uX2ZpbmFsaXplYCBob29rLgGhAgAENE1pbmltdW1QZXJpb2QsIHAXAAAAAAAAGIwgVGhlIG1pbmltdW0gcGVyaW9kIGJldHdlZW4gYmxvY2tzLgBNASBCZSBhd2FyZSB0aGF0IHRoaXMgaXMgZGlmZmVyZW50IHRvIHRoZSAqZXhwZWN0ZWQqIHBlcmlvZCB0aGF0IHRoZSBibG9jayBwcm9kdWN0aW9uSQEgYXBwYXJhdHVzIHByb3ZpZGVzLiBZb3VyIGNob3NlbiBjb25zZW5zdXMgc3lzdGVtIHdpbGwgZ2VuZXJhbGx5IHdvcmsgd2l0aCB0aGlzIHRvYQEgZGV0ZXJtaW5lIGEgc2Vuc2libGUgYmxvY2sgdGltZS4gRm9yIGV4YW1wbGUsIGluIHRoZSBBdXJhIHBhbGxldCBpdCB3aWxsIGJlIGRvdWJsZSB0aGlzcCBwZXJpb2Qgb24gZGVmYXVsdCBzZXR0aW5ncy4AAgA0UGFyYWNoYWluSW5mbwE0UGFyYWNoYWluSW5mbwQsUGFyYWNoYWluSWQBANkBEGQAAAAAAaUCAAAAAwAgQmFsYW5jZXMBIEJhbGFuY2VzHDRUb3RhbElzc3VhbmNlAQAYQAAAAAAAAAAAAAAAAAAAAAAEmCBUaGUgdG90YWwgdW5pdHMgaXNzdWVkIGluIHRoZSBzeXN0ZW0uQEluYWN0aXZlSXNzdWFuY2UBABhAAAAAAAAAAAAAAAAAAAAAAAQJASBUaGUgdG90YWwgdW5pdHMgb2Ygb3V0c3RhbmRpbmcgZGVhY3RpdmF0ZWQgYmFsYW5jZSBpbiB0aGUgc3lzdGVtLhxBY2NvdW50AQEEAgAUAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAYAkBIFRoZSBCYWxhbmNlcyBwYWxsZXQgZXhhbXBsZSBvZiBzdG9yaW5nIHRoZSBiYWxhbmNlIG9mIGFuIGFjY291bnQuACggIyBFeGFtcGxlADQgYGBgbm9jb21waWxlsCAgaW1wbCBwYWxsZXRfYmFsYW5jZXM6OkNvbmZpZyBmb3IgUnVudGltZSB7GQIgICAgdHlwZSBBY2NvdW50U3RvcmUgPSBTdG9yYWdlTWFwU2hpbTxTZWxmOjpBY2NvdW50PFJ1bnRpbWU+LCBmcmFtZV9zeXN0ZW06OlByb3ZpZGVyPFJ1bnRpbWU+LCBBY2NvdW50SWQsIFNlbGY6OkFjY291bnREYXRhPEJhbGFuY2U+PgwgIH0QIGBgYAAVASBZb3UgY2FuIGFsc28gc3RvcmUgdGhlIGJhbGFuY2Ugb2YgYW4gYWNjb3VudCBpbiB0aGUgYFN5c3RlbWAgcGFsbGV0LgAoICMgRXhhbXBsZQA0IGBgYG5vY29tcGlsZbAgIGltcGwgcGFsbGV0X2JhbGFuY2VzOjpDb25maWcgZm9yIFJ1bnRpbWUge3QgICB0eXBlIEFjY291bnRTdG9yZSA9IFN5c3RlbQwgIH0QIGBgYABRASBCdXQgdGhpcyBjb21lcyB3aXRoIHRyYWRlb2Zmcywgc3RvcmluZyBhY2NvdW50IGJhbGFuY2VzIGluIHRoZSBzeXN0ZW0gcGFsbGV0IHN0b3Jlc20BIGBmcmFtZV9zeXN0ZW1gIGRhdGEgYWxvbmdzaWRlIHRoZSBhY2NvdW50IGRhdGEgY29udHJhcnkgdG8gc3RvcmluZyBhY2NvdW50IGJhbGFuY2VzIGluIHRoZSkBIGBCYWxhbmNlc2AgcGFsbGV0LCB3aGljaCB1c2VzIGEgYFN0b3JhZ2VNYXBgIHRvIHN0b3JlIGJhbGFuY2VzIGRhdGEgb25seS5BASBOT1RFOiBUaGlzIGlzIG9ubHkgdXNlZCBpbiB0aGUgY2FzZSB0aGF0IHRoaXMgcGFsbGV0IGlzIHVzZWQgdG8gc3RvcmUgYmFsYW5jZXMuFExvY2tzAQEEAgDxBAQACLggQW55IGxpcXVpZGl0eSBsb2NrcyBvbiBzb21lIGFjY291bnQgYmFsYW5jZXMuJQEgTk9URTogU2hvdWxkIG9ubHkgYmUgYWNjZXNzZWQgd2hlbiBzZXR0aW5nLCBjaGFuZ2luZyBhbmQgZnJlZWluZyBhIGxvY2suIFJlc2VydmVzAQEEAgABBQQABKQgTmFtZWQgcmVzZXJ2ZXMgb24gc29tZSBhY2NvdW50IGJhbGFuY2VzLhRIb2xkcwEBBAIADQUEAARsIEhvbGRzIG9uIGFjY291bnQgYmFsYW5jZXMuHEZyZWV6ZXMBAQQCACEFBAAEiCBGcmVlemUgbG9ja3Mgb24gYWNjb3VudCBiYWxhbmNlcy4BqQIBhBBIRXhpc3RlbnRpYWxEZXBvc2l0GEAAypo7AAAAAAAAAAAAAAAAIEEBIFRoZSBtaW5pbXVtIGFtb3VudCByZXF1aXJlZCB0byBrZWVwIGFuIGFjY291bnQgb3Blbi4gTVVTVCBCRSBHUkVBVEVSIFRIQU4gWkVSTyEAWQEgSWYgeW91ICpyZWFsbHkqIG5lZWQgaXQgdG8gYmUgemVybywgeW91IGNhbiBlbmFibGUgdGhlIGZlYXR1cmUgYGluc2VjdXJlX3plcm9fZWRgIGZvcmEBIHRoaXMgcGFsbGV0LiBIb3dldmVyLCB5b3UgZG8gc28gYXQgeW91ciBvd24gcmlzazogdGhpcyB3aWxsIG9wZW4gdXAgYSBtYWpvciBEb1MgdmVjdG9yLlkBIEluIGNhc2UgeW91IGhhdmUgbXVsdGlwbGUgc291cmNlcyBvZiBwcm92aWRlciByZWZlcmVuY2VzLCB5b3UgbWF5IGFsc28gZ2V0IHVuZXhwZWN0ZWSMIGJlaGF2aW91ciBpZiB5b3Ugc2V0IHRoaXMgdG8gemVyby4A8CBCb3R0b20gbGluZTogRG8geW91cnNlbGYgYSBmYXZvdXIgYW5kIG1ha2UgaXQgYXQgbGVhc3Qgb25lISBNYXhMb2NrcxAQMgAAAAj0IFRoZSBtYXhpbXVtIG51bWJlciBvZiBsb2NrcyB0aGF0IHNob3VsZCBleGlzdCBvbiBhbiBhY2NvdW50LtwgTm90IHN0cmljdGx5IGVuZm9yY2VkLCBidXQgdXNlZCBmb3Igd2VpZ2h0IGVzdGltYXRpb24uLE1heFJlc2VydmVzEBAyAAAABA0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBuYW1lZCByZXNlcnZlcyB0aGF0IGNhbiBleGlzdCBvbiBhbiBhY2NvdW50LihNYXhGcmVlemVzEBAAAAAABGEBIFRoZSBtYXhpbXVtIG51bWJlciBvZiBpbmRpdmlkdWFsIGZyZWV6ZSBsb2NrcyB0aGF0IGNhbiBleGlzdCBvbiBhbiBhY2NvdW50IGF0IGFueSB0aW1lLgEtBQoASFRyYW5zYWN0aW9uUGF5bWVudAFIVHJhbnNhY3Rpb25QYXltZW50CEROZXh0RmVlTXVsdGlwbGllcgEAFQJAAABkp7O24A0AAAAAAAAAAAA4U3RvcmFnZVZlcnNpb24BADEFBAAAAAGMBGBPcGVyYXRpb25hbEZlZU11bHRpcGxpZXIIBAVUWQEgQSBmZWUgbXVsdGlwbGllciBmb3IgYE9wZXJhdGlvbmFsYCBleHRyaW5zaWNzIHRvIGNvbXB1dGUgInZpcnR1YWwgdGlwIiB0byBib29zdCB0aGVpciwgYHByaW9yaXR5YABRASBUaGlzIHZhbHVlIGlzIG11bHRpcGxpZWQgYnkgdGhlIGBmaW5hbF9mZWVgIHRvIG9idGFpbiBhICJ2aXJ0dWFsIHRpcCIgdGhhdCBpcyBsYXRlcvQgYWRkZWQgdG8gYSB0aXAgY29tcG9uZW50IGluIHJlZ3VsYXIgYHByaW9yaXR5YCBjYWxjdWxhdGlvbnMuTQEgSXQgbWVhbnMgdGhhdCBhIGBOb3JtYWxgIHRyYW5zYWN0aW9uIGNhbiBmcm9udC1ydW4gYSBzaW1pbGFybHktc2l6ZWQgYE9wZXJhdGlvbmFsYEEBIGV4dHJpbnNpYyAod2l0aCBubyB0aXApLCBieSBpbmNsdWRpbmcgYSB0aXAgdmFsdWUgZ3JlYXRlciB0aGFuIHRoZSB2aXJ0dWFsIHRpcC4APCBgYGBydXN0LGlnbm9yZUAgLy8gRm9yIGBOb3JtYWxgjCBsZXQgcHJpb3JpdHkgPSBwcmlvcml0eV9jYWxjKHRpcCk7AFQgLy8gRm9yIGBPcGVyYXRpb25hbGARASBsZXQgdmlydHVhbF90aXAgPSAoaW5jbHVzaW9uX2ZlZSArIHRpcCkgKiBPcGVyYXRpb25hbEZlZU11bHRpcGxpZXI7xCBsZXQgcHJpb3JpdHkgPSBwcmlvcml0eV9jYWxjKHRpcCArIHZpcnR1YWxfdGlwKTsQIGBgYABRASBOb3RlIHRoYXQgc2luY2Ugd2UgdXNlIGBmaW5hbF9mZWVgIHRoZSBtdWx0aXBsaWVyIGFwcGxpZXMgYWxzbyB0byB0aGUgcmVndWxhciBgdGlwYF0BIHNlbnQgd2l0aCB0aGUgdHJhbnNhY3Rpb24uIFNvLCBub3Qgb25seSBkb2VzIHRoZSB0cmFuc2FjdGlvbiBnZXQgYSBwcmlvcml0eSBidW1wIGJhc2VkYQEgb24gdGhlIGBpbmNsdXNpb25fZmVlYCwgYnV0IHdlIGFsc28gYW1wbGlmeSB0aGUgaW1wYWN0IG9mIHRpcHMgYXBwbGllZCB0byBgT3BlcmF0aW9uYWxgOCB0cmFuc2FjdGlvbnMuAAsAKEF1dGhvcnNoaXABKEF1dGhvcnNoaXAEGEF1dGhvcgAAAAQABGQgQXV0aG9yIG9mIGN1cnJlbnQgYmxvY2suAAAAABQARENvbGxhdG9yU2VsZWN0aW9uAURDb2xsYXRvclNlbGVjdGlvbhQ0SW52dWxuZXJhYmxlcwEANQUEAAQRASBUaGUgaW52dWxuZXJhYmxlLCBwZXJtaXNzaW9uZWQgY29sbGF0b3JzLiBUaGlzIGxpc3QgbXVzdCBiZSBzb3J0ZWQuNENhbmRpZGF0ZUxpc3QBADkFBAAUaQEgVGhlIChjb21tdW5pdHksIGxpbWl0ZWQpIGNvbGxhdGlvbiBjYW5kaWRhdGVzLiBgQ2FuZGlkYXRlc2AgYW5kIGBJbnZ1bG5lcmFibGVzYCBzaG91bGQgYmVQIG11dHVhbGx5IGV4Y2x1c2l2ZS4AdQEgVGhpcyBsaXN0IGlzIHNvcnRlZCBpbiBhc2NlbmRpbmcgb3JkZXIgYnkgZGVwb3NpdCBhbmQgd2hlbiB0aGUgZGVwb3NpdHMgYXJlIGVxdWFsLCB0aGUgbGVhc3SgIHJlY2VudGx5IHVwZGF0ZWQgaXMgY29uc2lkZXJlZCBncmVhdGVyLkRMYXN0QXV0aG9yZWRCbG9jawEBBAUAEBAAAAAABIQgTGFzdCBibG9jayBhdXRob3JlZCBieSBjb2xsYXRvci5ERGVzaXJlZENhbmRpZGF0ZXMBABAQAAAAAAx4IERlc2lyZWQgbnVtYmVyIG9mIGNhbmRpZGF0ZXMuAHUBIFRoaXMgc2hvdWxkIGlkZWFsbHkgYWx3YXlzIGJlIGxlc3MgdGhhbiBbYENvbmZpZzo6TWF4Q2FuZGlkYXRlc2BdIGZvciB3ZWlnaHRzIHRvIGJlIGNvcnJlY3QuNENhbmRpZGFjeUJvbmQBABhAAAAAAAAAAAAAAAAAAAAAAAy4IEZpeGVkIGFtb3VudCB0byBkZXBvc2l0IHRvIGJlY29tZSBhIGNvbGxhdG9yLgBBASBXaGVuIGEgY29sbGF0b3IgY2FsbHMgYGxlYXZlX2ludGVudGAgdGhleSBpbW1lZGlhdGVseSByZWNlaXZlIHRoZSBkZXBvc2l0IGJhY2suAbkCAZAAAUUFFQAcU2Vzc2lvbgEcU2Vzc2lvbhwoVmFsaWRhdG9ycwEAlAQABHwgVGhlIGN1cnJlbnQgc2V0IG9mIHZhbGlkYXRvcnMuMEN1cnJlbnRJbmRleAEAEBAAAAAABHggQ3VycmVudCBpbmRleCBvZiB0aGUgc2Vzc2lvbi40UXVldWVkQ2hhbmdlZAEAeAQACDkBIFRydWUgaWYgdGhlIHVuZGVybHlpbmcgZWNvbm9taWMgaWRlbnRpdGllcyBvciB3ZWlnaHRpbmcgYmVoaW5kIHRoZSB2YWxpZGF0b3JzpCBoYXMgY2hhbmdlZCBpbiB0aGUgcXVldWVkIHZhbGlkYXRvciBzZXQuKFF1ZXVlZEtleXMBAEkFBAAIPQEgVGhlIHF1ZXVlZCBrZXlzIGZvciB0aGUgbmV4dCBzZXNzaW9uLiBXaGVuIHRoZSBuZXh0IHNlc3Npb24gYmVnaW5zLCB0aGVzZSBrZXlz4CB3aWxsIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB2YWxpZGF0b3IncyBzZXNzaW9uIGtleXMuSERpc2FibGVkVmFsaWRhdG9ycwEAUQUEABSAIEluZGljZXMgb2YgZGlzYWJsZWQgdmFsaWRhdG9ycy4APQEgVGhlIHZlYyBpcyBhbHdheXMga2VwdCBzb3J0ZWQgc28gdGhhdCB3ZSBjYW4gZmluZCB3aGV0aGVyIGEgZ2l2ZW4gdmFsaWRhdG9yIGlzPQEgZGlzYWJsZWQgdXNpbmcgYmluYXJ5IHNlYXJjaC4gSXQgZ2V0cyBjbGVhcmVkIHdoZW4gYG9uX3Nlc3Npb25fZW5kaW5nYCByZXR1cm5zZCBhIG5ldyBzZXQgb2YgaWRlbnRpdGllcy4gTmV4dEtleXMAAQQFAMECBAAEnCBUaGUgbmV4dCBzZXNzaW9uIGtleXMgZm9yIGEgdmFsaWRhdG9yLiBLZXlPd25lcgABBAVVBQAEAAQJASBUaGUgb3duZXIgb2YgYSBrZXkuIFRoZSBrZXkgaXMgdGhlIGBLZXlUeXBlSWRgICsgdGhlIGVuY29kZWQga2V5LgG9AgGYAAFdBRYAEEF1cmEBEEF1cmEILEF1dGhvcml0aWVzAQBhBQQABGwgVGhlIGN1cnJlbnQgYXV0aG9yaXR5IHNldC4sQ3VycmVudFNsb3QBAGkFIAAAAAAAAAAADIAgVGhlIGN1cnJlbnQgc2xvdCBvZiB0aGlzIGJsb2NrLgCUIFRoaXMgd2lsbCBiZSBzZXQgaW4gYG9uX2luaXRpYWxpemVgLgAAAAAXABxBdXJhRXh0ARxBdXJhRXh0CCxBdXRob3JpdGllcwEAYQUEABSUIFNlcnZlcyBhcyBjYWNoZSBmb3IgdGhlIGF1dGhvcml0aWVzLgBxASBUaGUgYXV0aG9yaXRpZXMgaW4gQXVSYSBhcmUgb3ZlcndyaXR0ZW4gaW4gYG9uX2luaXRpYWxpemVgIHdoZW4gd2Ugc3dpdGNoIHRvIGEgbmV3IHNlc3Npb24sXQEgYnV0IHdlIHJlcXVpcmUgdGhlIG9sZCBhdXRob3JpdGllcyB0byB2ZXJpZnkgdGhlIHNlYWwgd2hlbiB2YWxpZGF0aW5nIGEgUG9WLiBUaGlzIHdpbGwNASBhbHdheXMgYmUgdXBkYXRlZCB0byB0aGUgbGF0ZXN0IEF1UmEgYXV0aG9yaXRpZXMgaW4gYG9uX2ZpbmFsaXplYC4gU2xvdEluZm8AAG0FBAAM2CBDdXJyZW50IHNsb3QgcGFpcmVkIHdpdGggYSBudW1iZXIgb2YgYXV0aG9yZWQgYmxvY2tzLgCYIFVwZGF0ZWQgb24gZWFjaCBibG9jayBpbml0aWFsaXphdGlvbi4AAAAAGAAkWGNtcFF1ZXVlASRYY21wUXVldWUcUEluYm91bmRYY21wU3VzcGVuZGVkAQBxBQQAIA0BIFRoZSBzdXNwZW5kZWQgaW5ib3VuZCBYQ01QIGNoYW5uZWxzLiBBbGwgb3RoZXJzIGFyZSBub3Qgc3VzcGVuZGVkLgBxASBUaGlzIGlzIGEgYFN0b3JhZ2VWYWx1ZWAgaW5zdGVhZCBvZiBhIGBTdG9yYWdlTWFwYCBzaW5jZSB3ZSBleHBlY3QgbXVsdGlwbGUgcmVhZHMgcGVyIGJsb2NraQEgdG8gZGlmZmVyZW50IGtleXMgd2l0aCBhIG9uZSBieXRlIHBheWxvYWQuIFRoZSBhY2Nlc3MgdG8gYEJvdW5kZWRCVHJlZVNldGAgd2lsbCBiZSBjYWNoZWQVASB3aXRoaW4gdGhlIGJsb2NrIGFuZCB0aGVyZWZvcmUgb25seSBpbmNsdWRlZCBvbmNlIGluIHRoZSBwcm9vZiBzaXplLgBlASBOT1RFOiBUaGUgUG9WIGJlbmNobWFya2luZyBjYW5ub3Qga25vdyB0aGlzIGFuZCB3aWxsIG92ZXItZXN0aW1hdGUsIGJ1dCB0aGUgYWN0dWFsIHByb29mRCB3aWxsIGJlIHNtYWxsZXIuSE91dGJvdW5kWGNtcFN0YXR1cwEAfQUEABhdASBUaGUgbm9uLWVtcHR5IFhDTVAgY2hhbm5lbHMgaW4gb3JkZXIgb2YgYmVjb21pbmcgbm9uLWVtcHR5LCBhbmQgdGhlIGluZGV4IG9mIHRoZSBmaXJzdFEBIGFuZCBsYXN0IG91dGJvdW5kIG1lc3NhZ2UuIElmIHRoZSB0d28gaW5kaWNlcyBhcmUgZXF1YWwsIHRoZW4gaXQgaW5kaWNhdGVzIGFuIGVtcHR5WQEgcXVldWUgYW5kIHRoZXJlIG11c3QgYmUgYSBub24tYE9rYCBgT3V0Ym91bmRTdGF0dXNgLiBXZSBhc3N1bWUgcXVldWVzIGdyb3cgbm8gZ3JlYXRlclkBIHRoYW4gNjU1MzUgaXRlbXMuIFF1ZXVlIGluZGljZXMgZm9yIG5vcm1hbCBtZXNzYWdlcyBiZWdpbiBhdCBvbmU7IHplcm8gaXMgcmVzZXJ2ZWQgaW4RASBjYXNlIG9mIHRoZSBuZWVkIHRvIHNlbmQgYSBoaWdoLXByaW9yaXR5IHNpZ25hbCBtZXNzYWdlIHRoaXMgYmxvY2suCQEgVGhlIGJvb2wgaXMgdHJ1ZSBpZiB0aGVyZSBpcyBhIHNpZ25hbCBtZXNzYWdlIHdhaXRpbmcgdG8gYmUgc2VudC5QT3V0Ym91bmRYY21wTWVzc2FnZXMBAQgCBYkFNAQABLwgVGhlIG1lc3NhZ2VzIG91dGJvdW5kIGluIGEgZ2l2ZW4gWENNUCBjaGFubmVsLjhTaWduYWxNZXNzYWdlcwEBBALZATQEAASgIEFueSBzaWduYWwgbWVzc2FnZXMgd2FpdGluZyB0byBiZSBzZW50LixRdWV1ZUNvbmZpZwEAjQUwIAAAADAAAAAIAAAABBUBIFRoZSBjb25maWd1cmF0aW9uIHdoaWNoIGNvbnRyb2xzIHRoZSBkeW5hbWljcyBvZiB0aGUgb3V0Ym91bmQgcXVldWUuOFF1ZXVlU3VzcGVuZGVkAQB4BAAEQQEgV2hldGhlciBvciBub3QgdGhlIFhDTVAgcXVldWUgaXMgc3VzcGVuZGVkIGZyb20gZXhlY3V0aW5nIGluY29taW5nIFhDTXMgb3Igbm90LkREZWxpdmVyeUZlZUZhY3RvcgEBBAXZARUCQAAAZKeztuANAAAAAAAAAAAExCBUaGUgZmFjdG9yIHRvIG11bHRpcGx5IHRoZSBiYXNlIGRlbGl2ZXJ5IGZlZSBieS4BzQIBnARMTWF4SW5ib3VuZFN1c3BlbmRlZBAQ6AMAABRJASBUaGUgbWF4aW11bSBudW1iZXIgb2YgaW5ib3VuZCBYQ01QIGNoYW5uZWxzIHRoYXQgY2FuIGJlIHN1c3BlbmRlZCBzaW11bHRhbmVvdXNseS4AXQEgQW55IGZ1cnRoZXIgY2hhbm5lbCBzdXNwZW5zaW9ucyB3aWxsIGZhaWwgYW5kIG1lc3NhZ2VzIG1heSBnZXQgZHJvcHBlZCB3aXRob3V0IGZ1cnRoZXJFASBub3RpY2UuIENob29zaW5nIGEgaGlnaCB2YWx1ZSAoMTAwMCkgaXMgb2theTsgdGhlIHRyYWRlLW9mZiB0aGF0IGlzIGRlc2NyaWJlZCBpbtggW2BJbmJvdW5kWGNtcFN1c3BlbmRlZGBdIHN0aWxsIGFwcGxpZXMgYXQgdGhhdCBzY2FsZS4BkQUeACxQb2xrYWRvdFhjbQEsUG9sa2Fkb3RYY20wMFF1ZXJ5Q291bnRlcgEALCAAAAAAAAAAAASIIFRoZSBsYXRlc3QgYXZhaWxhYmxlIHF1ZXJ5IGluZGV4LhxRdWVyaWVzAAEEAiyVBQQABFQgVGhlIG9uZ29pbmcgcXVlcmllcy4oQXNzZXRUcmFwcwEBBAYwEBAAAAAAEGggVGhlIGV4aXN0aW5nIGFzc2V0IHRyYXBzLgBhASBLZXkgaXMgdGhlIGJsYWtlMiAyNTYgaGFzaCBvZiAob3JpZ2luLCB2ZXJzaW9uZWQgYEFzc2V0c2ApIHBhaXIuIFZhbHVlIGlzIHRoZSBudW1iZXIgb2YdASB0aW1lcyB0aGlzIHBhaXIgaGFzIGJlZW4gdHJhcHBlZCAodXN1YWxseSBqdXN0IDEgaWYgaXQgZXhpc3RzIGF0IGFsbCkuOFNhZmVYY21WZXJzaW9uAAAQBAAIYQEgRGVmYXVsdCB2ZXJzaW9uIHRvIGVuY29kZSBYQ00gd2hlbiBsYXRlc3QgdmVyc2lvbiBvZiBkZXN0aW5hdGlvbiBpcyB1bmtub3duLiBJZiBgTm9uZWAsPQEgdGhlbiB0aGUgZGVzdGluYXRpb25zIHdob3NlIFhDTSB2ZXJzaW9uIGlzIHVua25vd24gYXJlIGNvbnNpZGVyZWQgdW5yZWFjaGFibGUuQFN1cHBvcnRlZFZlcnNpb24AAQgFAqkFEAQABPAgVGhlIExhdGVzdCB2ZXJzaW9ucyB0aGF0IHdlIGtub3cgdmFyaW91cyBsb2NhdGlvbnMgc3VwcG9ydC5AVmVyc2lvbk5vdGlmaWVycwABCAUCqQUsBAAEBQEgQWxsIGxvY2F0aW9ucyB0aGF0IHdlIGhhdmUgcmVxdWVzdGVkIHZlcnNpb24gbm90aWZpY2F0aW9ucyBmcm9tLlBWZXJzaW9uTm90aWZ5VGFyZ2V0cwABCAUCqQWtBQQACHEBIFRoZSB0YXJnZXQgbG9jYXRpb25zIHRoYXQgYXJlIHN1YnNjcmliZWQgdG8gb3VyIHZlcnNpb24gY2hhbmdlcywgYXMgd2VsbCBhcyB0aGUgbW9zdCByZWNlbnSUIG9mIG91ciB2ZXJzaW9ucyB3ZSBpbmZvcm1lZCB0aGVtIG9mLlRWZXJzaW9uRGlzY292ZXJ5UXVldWUBALEFBAAMZQEgRGVzdGluYXRpb25zIHdob3NlIGxhdGVzdCBYQ00gdmVyc2lvbiB3ZSB3b3VsZCBsaWtlIHRvIGtub3cuIER1cGxpY2F0ZXMgbm90IGFsbG93ZWQsIGFuZHEBIHRoZSBgdTMyYCBjb3VudGVyIGlzIHRoZSBudW1iZXIgb2YgdGltZXMgdGhhdCBhIHNlbmQgdG8gdGhlIGRlc3RpbmF0aW9uIGhhcyBiZWVuIGF0dGVtcHRlZCyMIHdoaWNoIGlzIHVzZWQgYXMgYSBwcmlvcml0aXphdGlvbi5AQ3VycmVudE1pZ3JhdGlvbgAAvQUEAAScIFRoZSBjdXJyZW50IG1pZ3JhdGlvbidzIHN0YWdlLCBpZiBhbnkuVFJlbW90ZUxvY2tlZEZ1bmdpYmxlcwABDAUCAsUFyQUEAATwIEZ1bmdpYmxlIGFzc2V0cyB3aGljaCB3ZSBrbm93IGFyZSBsb2NrZWQgb24gYSByZW1vdGUgY2hhaW4uPExvY2tlZEZ1bmdpYmxlcwABBAIA2QUEAATgIEZ1bmdpYmxlIGFzc2V0cyB3aGljaCB3ZSBrbm93IGFyZSBsb2NrZWQgb24gdGhpcyBjaGFpbi5UWGNtRXhlY3V0aW9uU3VzcGVuZGVkAQB4BAAEtCBHbG9iYWwgc3VzcGVuc2lvbiBzdGF0ZSBvZiB0aGUgWENNIGV4ZWN1dG9yLgHRAgGgAAHlBR8AKEN1bXVsdXNYY20AAXEDAc0BAAAgADBNZXNzYWdlUXVldWUBME1lc3NhZ2VRdWV1ZQwwQm9va1N0YXRlRm9yAQEEBdUB6QV0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEzCBUaGUgaW5kZXggb2YgdGhlIGZpcnN0IGFuZCBsYXN0IChub24tZW1wdHkpIHBhZ2VzLixTZXJ2aWNlSGVhZAAA1QEEAAS8IFRoZSBvcmlnaW4gYXQgd2hpY2ggd2Ugc2hvdWxkIGJlZ2luIHNlcnZpY2luZy4UUGFnZXMAAQgFBfUF+QUEAASIIFRoZSBtYXAgb2YgcGFnZSBpbmRpY2VzIHRvIHBhZ2VzLgF1AwHRAQwgSGVhcFNpemUQEAAAAQAUPQEgVGhlIHNpemUgb2YgdGhlIHBhZ2U7IHRoaXMgaW1wbGllcyB0aGUgbWF4aW11bSBtZXNzYWdlIHNpemUgd2hpY2ggY2FuIGJlIHNlbnQuAFkBIEEgZ29vZCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBleHBlY3RlZCBtZXNzYWdlIHNpemVzLCB0aGVpciB3ZWlnaHRzLCB0aGUgd2VpZ2h0IHRoYXQgaXNdASBhdmFpbGFibGUgZm9yIHByb2Nlc3NpbmcgdGhlbSBhbmQgdGhlIG1heGltYWwgbmVlZGVkIG1lc3NhZ2Ugc2l6ZS4gVGhlIG1heGltYWwgbWVzc2FnZREBIHNpemUgaXMgc2xpZ2h0bHkgbG93ZXIgdGhhbiB0aGlzIGFzIGRlZmluZWQgYnkgW2BNYXhNZXNzYWdlTGVuT2ZgXS4gTWF4U3RhbGUQEAgAAAAMXQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIHN0YWxlIHBhZ2VzIChpLmUuIG9mIG92ZXJ3ZWlnaHQgbWVzc2FnZXMpIGFsbG93ZWQgYmVmb3JlIGN1bGxpbmdRASBjYW4gaGFwcGVuLiBPbmNlIHRoZXJlIGFyZSBtb3JlIHN0YWxlIHBhZ2VzIHRoYW4gdGhpcywgdGhlbiBoaXN0b3JpY2FsIHBhZ2VzIG1heSBiZfwgZHJvcHBlZCwgZXZlbiBpZiB0aGV5IGNvbnRhaW4gdW5wcm9jZXNzZWQgb3ZlcndlaWdodCBtZXNzYWdlcy40U2VydmljZVdlaWdodGUELAEHABbQvigCAHAAFEEBIFRoZSBhbW91bnQgb2Ygd2VpZ2h0IChpZiBhbnkpIHdoaWNoIHNob3VsZCBiZSBwcm92aWRlZCB0byB0aGUgbWVzc2FnZSBxdWV1ZSBmb3JoIHNlcnZpY2luZyBlbnF1ZXVlZCBpdGVtcy4A/CBUaGlzIG1heSBiZSBsZWdpdGltYXRlbHkgYE5vbmVgIGluIHRoZSBjYXNlIHRoYXQgeW91IHdpbGwgY2FsbKggYFNlcnZpY2VRdWV1ZXM6OnNlcnZpY2VfcXVldWVzYCBtYW51YWxseS4BAQYiABxVdGlsaXR5AAF5AwHhAQRMYmF0Y2hlZF9jYWxsc19saW1pdBAQqioAAASoIFRoZSBsaW1pdCBvbiB0aGUgbnVtYmVyIG9mIGJhdGNoZWQgY2FsbHMuAQUGKAAgTXVsdGlzaWcBIE11bHRpc2lnBCRNdWx0aXNpZ3MAAQgFAgkGDQYEAASUIFRoZSBzZXQgb2Ygb3BlbiBtdWx0aXNpZyBvcGVyYXRpb25zLgGhAwHtAQwsRGVwb3NpdEJhc2UYQADbu3cAAAAAAAAAAAAAAAAYWQEgVGhlIGJhc2UgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCB0byByZXNlcnZlIGZvciBjcmVhdGluZyBhIG11bHRpc2lnIGV4ZWN1dGlvbiBvciB0b4Qgc3RvcmUgYSBkaXNwYXRjaCBjYWxsIGZvciBsYXRlci4AAQEgVGhpcyBpcyBoZWxkIGZvciBhbiBhZGRpdGlvbmFsIHN0b3JhZ2UgaXRlbSB3aG9zZSB2YWx1ZSBzaXplIGlzMQEgYDQgKyBzaXplb2YoKEJsb2NrTnVtYmVyLCBCYWxhbmNlLCBBY2NvdW50SWQpKWAgYnl0ZXMgYW5kIHdob3NlIGtleSBzaXplIGlzgCBgMzIgKyBzaXplb2YoQWNjb3VudElkKWAgYnl0ZXMuNERlcG9zaXRGYWN0b3IYQADUMAAAAAAAAAAAAAAAAAAMVQEgVGhlIGFtb3VudCBvZiBjdXJyZW5jeSBuZWVkZWQgcGVyIHVuaXQgdGhyZXNob2xkIHdoZW4gY3JlYXRpbmcgYSBtdWx0aXNpZyBleGVjdXRpb24uACUBIFRoaXMgaXMgaGVsZCBmb3IgYWRkaW5nIDMyIGJ5dGVzIG1vcmUgaW50byBhIHByZS1leGlzdGluZyBzdG9yYWdlIHZhbHVlLjhNYXhTaWduYXRvcmllcxAQZAAAAATsIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBzaWduYXRvcmllcyBhbGxvd2VkIGluIHRoZSBtdWx0aXNpZy4BFQYpABRQcm94eQEUUHJveHkIHFByb3hpZXMBAQQFABkGRAAAAAAAAAAAAAAAAAAAAAAACEUBIFRoZSBzZXQgb2YgYWNjb3VudCBwcm94aWVzLiBNYXBzIHRoZSBhY2NvdW50IHdoaWNoIGhhcyBkZWxlZ2F0ZWQgdG8gdGhlIGFjY291bnRzIQEgd2hpY2ggYXJlIGJlaW5nIGRlbGVnYXRlZCB0bywgdG9nZXRoZXIgd2l0aCB0aGUgYW1vdW50IGhlbGQgb24gZGVwb3NpdC40QW5ub3VuY2VtZW50cwEBBAUAKQZEAAAAAAAAAAAAAAAAAAAAAAAErCBUaGUgYW5ub3VuY2VtZW50cyBtYWRlIGJ5IHRoZSBwcm94eSAoa2V5KS4BqQMB9QEYQFByb3h5RGVwb3NpdEJhc2UYQACdcncAAAAAAAAAAAAAAAAQEQEgVGhlIGJhc2UgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCB0byByZXNlcnZlIGZvciBjcmVhdGluZyBhIHByb3h5LgABASBUaGlzIGlzIGhlbGQgZm9yIGFuIGFkZGl0aW9uYWwgc3RvcmFnZSBpdGVtIHdob3NlIHZhbHVlIHNpemUgaXMlASBgc2l6ZW9mKEJhbGFuY2UpYCBieXRlcyBhbmQgd2hvc2Uga2V5IHNpemUgaXMgYHNpemVvZihBY2NvdW50SWQpYCBieXRlcy5IUHJveHlEZXBvc2l0RmFjdG9yGECgWjIAAAAAAAAAAAAAAAAAFLwgVGhlIGFtb3VudCBvZiBjdXJyZW5jeSBuZWVkZWQgcGVyIHByb3h5IGFkZGVkLgA1ASBUaGlzIGlzIGhlbGQgZm9yIGFkZGluZyAzMiBieXRlcyBwbHVzIGFuIGluc3RhbmNlIG9mIGBQcm94eVR5cGVgIG1vcmUgaW50byBhYQEgcHJlLWV4aXN0aW5nIHN0b3JhZ2UgdmFsdWUuIFRodXMsIHdoZW4gY29uZmlndXJpbmcgYFByb3h5RGVwb3NpdEZhY3RvcmAgb25lIHNob3VsZCB0YWtl9CBpbnRvIGFjY291bnQgYDMyICsgcHJveHlfdHlwZS5lbmNvZGUoKS5sZW4oKWAgYnl0ZXMgb2YgZGF0YS4oTWF4UHJveGllcxAQIAAAAATwIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBwcm94aWVzIGFsbG93ZWQgZm9yIGEgc2luZ2xlIGFjY291bnQuKE1heFBlbmRpbmcQECAAAAAERQEgVGhlIG1heGltdW0gYW1vdW50IG9mIHRpbWUtZGVsYXllZCBhbm5vdW5jZW1lbnRzIHRoYXQgYXJlIGFsbG93ZWQgdG8gYmUgcGVuZGluZy5cQW5ub3VuY2VtZW50RGVwb3NpdEJhc2UYQADSfncAAAAAAAAAAAAAAAAQMQEgVGhlIGJhc2UgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCB0byByZXNlcnZlIGZvciBjcmVhdGluZyBhbiBhbm5vdW5jZW1lbnQuAEkBIFRoaXMgaXMgaGVsZCB3aGVuIGEgbmV3IHN0b3JhZ2UgaXRlbSBob2xkaW5nIGEgYEJhbGFuY2VgIGlzIGNyZWF0ZWQgKHR5cGljYWxseSAxNiAgYnl0ZXMpLmRBbm5vdW5jZW1lbnREZXBvc2l0RmFjdG9yGEBAtWQAAAAAAAAAAAAAAAAAENQgVGhlIGFtb3VudCBvZiBjdXJyZW5jeSBuZWVkZWQgcGVyIGFubm91bmNlbWVudCBtYWRlLgBZASBUaGlzIGlzIGhlbGQgZm9yIGFkZGluZyBhbiBgQWNjb3VudElkYCwgYEhhc2hgIGFuZCBgQmxvY2tOdW1iZXJgICh0eXBpY2FsbHkgNjggYnl0ZXMpjCBpbnRvIGEgcHJlLWV4aXN0aW5nIHN0b3JhZ2UgdmFsdWUuATkGKgAgUHJlaW1hZ2UBIFByZWltYWdlDCRTdGF0dXNGb3IAAQQGMD0GBAAEkCBUaGUgcmVxdWVzdCBzdGF0dXMgb2YgYSBnaXZlbiBoYXNoLkBSZXF1ZXN0U3RhdHVzRm9yAAEEBjBJBgQABJAgVGhlIHJlcXVlc3Qgc3RhdHVzIG9mIGEgZ2l2ZW4gaGFzaC4sUHJlaW1hZ2VGb3IAAQQGWQZdBgQAAAGxAwEBAgABYQYrACRTY2hlZHVsZXIBJFNjaGVkdWxlcgw8SW5jb21wbGV0ZVNpbmNlAAAQBAAAGEFnZW5kYQEBBAUQZQYEAARNASBJdGVtcyB0byBiZSBleGVjdXRlZCwgaW5kZXhlZCBieSB0aGUgYmxvY2sgbnVtYmVyIHRoYXQgdGhleSBzaG91bGQgYmUgZXhlY3V0ZWQgb24uGExvb2t1cAABBAUECQIEABD4IExvb2t1cCBmcm9tIGEgbmFtZSB0byB0aGUgYmxvY2sgbnVtYmVyIGFuZCBpbmRleCBvZiB0aGUgdGFzay4AWQEgRm9yIHYzIC0+IHY0IHRoZSBwcmV2aW91c2x5IHVuYm91bmRlZCBpZGVudGl0aWVzIGFyZSBCbGFrZTItMjU2IGhhc2hlZCB0byBmb3JtIHRoZSB2NDAgaWRlbnRpdGllcy4BuQMBBQIINE1heGltdW1XZWlnaHQkKAcAoNshXQIAAAEEKQEgVGhlIG1heGltdW0gd2VpZ2h0IHRoYXQgbWF5IGJlIHNjaGVkdWxlZCBwZXIgYmxvY2sgZm9yIGFueSBkaXNwYXRjaGFibGVzLlBNYXhTY2hlZHVsZWRQZXJCbG9jaxAQMgAAABQdASBUaGUgbWF4aW11bSBudW1iZXIgb2Ygc2NoZWR1bGVkIGNhbGxzIGluIHRoZSBxdWV1ZSBmb3IgYSBzaW5nbGUgYmxvY2suABggTk9URTpRASArIERlcGVuZGVudCBwYWxsZXRzJyBiZW5jaG1hcmtzIG1pZ2h0IHJlcXVpcmUgYSBoaWdoZXIgbGltaXQgZm9yIHRoZSBzZXR0aW5nLiBTZXQgYcQgaGlnaGVyIGxpbWl0IHVuZGVyIGBydW50aW1lLWJlbmNobWFya3NgIGZlYXR1cmUuAXUGLAAkQXNzZXRSYXRlASRBc3NldFJhdGUEWENvbnZlcnNpb25SYXRlVG9OYXRpdmUAAQQCEQIVAgQADB0BIE1hcHMgYW4gYXNzZXQgdG8gaXRzIGZpeGVkIHBvaW50IHJlcHJlc2VudGF0aW9uIGluIHRoZSBuYXRpdmUgYmFsYW5jZS4ATQEgRS5nLiBgbmF0aXZlX2Ftb3VudCA9IGFzc2V0X2Ftb3VudCAqIENvbnZlcnNpb25SYXRlVG9OYXRpdmU6OjxUPjo6Z2V0KGFzc2V0X2tpbmQpYAHBAwENAgABeQYtACBBbGxpYW5jZQEgQWxsaWFuY2UcEFJ1bGUAAB0CBAAIjCBUaGUgSVBGUyBDSUQgb2YgdGhlIGFsbGlhbmNlIHJ1bGUu2CBGZWxsb3dzIGNhbiBwcm9wb3NlIGEgbmV3IHJ1bGUgd2l0aCBhIHN1cGVyLW1ham9yaXR5LjRBbm5vdW5jZW1lbnRzAQB9BgQABLAgVGhlIGN1cnJlbnQgSVBGUyBDSURzIG9mIGFueSBhbm5vdW5jZW1lbnRzLiREZXBvc2l0T2YAAQQCABgEAASkIE1hcHMgbWVtYmVycyB0byB0aGVpciBjYW5kaWRhY3kgZGVwb3NpdC4cTWVtYmVycwEBBAWFBhEGBAAEqCBNYXBzIG1lbWJlciB0eXBlIHRvIG1lbWJlcnMgb2YgZWFjaCB0eXBlLjxSZXRpcmluZ01lbWJlcnMAAQQCABAEAAhtASBBIHNldCBvZiBtZW1iZXJzIHdobyBnYXZlIGEgcmV0aXJlbWVudCBub3RpY2UuIFRoZXkgY2FuIHJldGlyZSBhZnRlciB0aGUgZW5kIG9mIHJldGlyZW1lbnSgIHBlcmlvZCBzdG9yZWQgYXMgYSBmdXR1cmUgYmxvY2sgbnVtYmVyLlBVbnNjcnVwdWxvdXNBY2NvdW50cwEAEQYEAAhlASBUaGUgY3VycmVudCBsaXN0IG9mIGFjY291bnRzIGRlZW1lZCB1bnNjcnVwdWxvdXMuIFRoZXNlIGFjY291bnRzIG5vbiBncmF0YSBjYW5ub3Qgc3VibWl0LCBjYW5kaWRhY3kuUFVuc2NydXB1bG91c1dlYnNpdGVzAQCJBgQABMggVGhlIGN1cnJlbnQgbGlzdCBvZiB3ZWJzaXRlcyBkZWVtZWQgdW5zY3J1cHVsb3VzLgHFAwEZAhRQTWF4VW5zY3J1cHVsb3VzSXRlbXMQEGQAAAAEGQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIHRoZSB1bnNjcnVwdWxvdXMgaXRlbXMgc3VwcG9ydGVkIGJ5IHRoZSBwYWxsZXQuTE1heFdlYnNpdGVVcmxMZW5ndGgQEP8AAAAElCBUaGUgbWF4aW11bSBsZW5ndGggb2YgYSB3ZWJzaXRlIFVSTC4sQWxseURlcG9zaXQYQACgck4YCQAAAAAAAAAAAAAEvCBUaGUgZGVwb3NpdCByZXF1aXJlZCBmb3Igc3VibWl0dGluZyBjYW5kaWRhY3kuVE1heEFubm91bmNlbWVudHNDb3VudBAQZAAAAASUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhbm5vdW5jZW1lbnRzLjxNYXhNZW1iZXJzQ291bnQQEGQAAAAEvCBUaGUgbWF4aW11bSBudW1iZXIgb2YgbWVtYmVycyBwZXIgbWVtYmVyIHJvbGUuAZEGMgA4QWxsaWFuY2VNb3Rpb24BOEFsbGlhbmNlTW90aW9uGCRQcm9wb3NhbHMBAJUGBAAEkCBUaGUgaGFzaGVzIG9mIHRoZSBhY3RpdmUgcHJvcG9zYWxzLihQcm9wb3NhbE9mAAEEBjBZAgQABMwgQWN0dWFsIHByb3Bvc2FsIGZvciBhIGdpdmVuIGhhc2gsIGlmIGl0J3MgY3VycmVudC4YVm90aW5nAAEEBjCZBgQABLQgVm90ZXMgb24gYSBnaXZlbiBwcm9wb3NhbCwgaWYgaXQgaXMgb25nb2luZy40UHJvcG9zYWxDb3VudAEAEBAAAAAABEggUHJvcG9zYWxzIHNvIGZhci4cTWVtYmVycwEAlAQABDkBIFRoZSBjdXJyZW50IG1lbWJlcnMgb2YgdGhlIGNvbGxlY3RpdmUuIFRoaXMgaXMgc3RvcmVkIHNvcnRlZCAoanVzdCBieSB2YWx1ZSkuFFByaW1lAAAABAAEZQEgVGhlIHByaW1lIG1lbWJlciB0aGF0IGhlbHBzIGRldGVybWluZSB0aGUgZGVmYXVsdCB2b3RlIGJlaGF2aW9yIGluIGNhc2Ugb2YgYWJzZW50YXRpb25zLgHNAwFBAgRETWF4UHJvcG9zYWxXZWlnaHQkKAcARCk1OgIAoAAEJQEgVGhlIG1heGltdW0gd2VpZ2h0IG9mIGEgZGlzcGF0Y2ggY2FsbCB0aGF0IGNhbiBiZSBwcm9wb3NlZCBhbmQgZXhlY3V0ZWQuAZ0GMwBQRmVsbG93c2hpcENvbGxlY3RpdmUBUEZlbGxvd3NoaXBDb2xsZWN0aXZlGCxNZW1iZXJDb3VudAEBBAX9ARAQAAAAAAhpASBUaGUgbnVtYmVyIG9mIG1lbWJlcnMgaW4gdGhlIGNvbGxlY3RpdmUgd2hvIGhhdmUgYXQgbGVhc3QgdGhlIHJhbmsgYWNjb3JkaW5nIHRvIHRoZSBpbmRleDAgb2YgdGhlIHZlYy4cTWVtYmVycwABBAUAoQYEAAScIFRoZSBjdXJyZW50IG1lbWJlcnMgb2YgdGhlIGNvbGxlY3RpdmUuJElkVG9JbmRleAABCAUFpQYQBAAEYQEgVGhlIGluZGV4IG9mIGVhY2ggcmFua3MncyBtZW1iZXIgaW50byB0aGUgZ3JvdXAgb2YgbWVtYmVycyB3aG8gaGF2ZSBhdCBsZWFzdCB0aGF0IHJhbmsuJEluZGV4VG9JZAABCAUFqQYABAAIXQEgVGhlIG1lbWJlcnMgaW4gdGhlIGNvbGxlY3RpdmUgYnkgaW5kZXguIEFsbCBpbmRpY2VzIGluIHRoZSByYW5nZSBgMC4uTWVtYmVyQ291bnRgIHdpbGxlASByZXR1cm4gYFNvbWVgLCBob3dldmVyIGEgbWVtYmVyJ3MgaW5kZXggaXMgbm90IGd1YXJhbnRlZWQgdG8gcmVtYWluIHVuY2hhbmdlZCBvdmVyIHRpbWUuGFZvdGluZwABCAIFrQZJAgQABLQgVm90ZXMgb24gYSBnaXZlbiBwcm9wb3NhbCwgaWYgaXQgaXMgb25nb2luZy40Vm90aW5nQ2xlYW51cAABBAIQsQYEAAAB0QMBRQIAAbUGPABMRmVsbG93c2hpcFJlZmVyZW5kYQFMRmVsbG93c2hpcFJlZmVyZW5kYRQ8UmVmZXJlbmR1bUNvdW50AQAQEAAAAAAEMQEgVGhlIG5leHQgZnJlZSByZWZlcmVuZHVtIGluZGV4LCBha2EgdGhlIG51bWJlciBvZiByZWZlcmVuZGEgc3RhcnRlZCBzbyBmYXIuRFJlZmVyZW5kdW1JbmZvRm9yAAEEAhC5BgQABLQgSW5mb3JtYXRpb24gY29uY2VybmluZyBhbnkgZ2l2ZW4gcmVmZXJlbmR1bS4oVHJhY2tRdWV1ZQEBBAX9AdkGBAAQXQEgVGhlIHNvcnRlZCBsaXN0IG9mIHJlZmVyZW5kYSByZWFkeSB0byBiZSBkZWNpZGVkIGJ1dCBub3QgeWV0IGJlaW5nIGRlY2lkZWQsIG9yZGVyZWQgYnl8IGNvbnZpY3Rpb24td2VpZ2h0ZWQgYXBwcm92YWxzLgBBASBUaGlzIHNob3VsZCBiZSBlbXB0eSBpZiBgRGVjaWRpbmdDb3VudGAgaXMgbGVzcyB0aGFuIGBUcmFja0luZm86Om1heF9kZWNpZGluZ2AuNERlY2lkaW5nQ291bnQBAQQF/QEQEAAAAAAExCBUaGUgbnVtYmVyIG9mIHJlZmVyZW5kYSBiZWluZyBkZWNpZGVkIGN1cnJlbnRseS4oTWV0YWRhdGFPZgABBAIQMAQAGAUBIFRoZSBtZXRhZGF0YSBpcyBhIGdlbmVyYWwgaW5mb3JtYXRpb24gY29uY2VybmluZyB0aGUgcmVmZXJlbmR1bS5JASBUaGUgYEhhc2hgIHJlZmVycyB0byB0aGUgcHJlaW1hZ2Ugb2YgdGhlIGBQcmVpbWFnZXNgIHByb3ZpZGVyIHdoaWNoIGNhbiBiZSBhIEpTT06IIGR1bXAgb3IgSVBGUyBoYXNoIG9mIGEgSlNPTiBmaWxlLgB1ASBDb25zaWRlciBhIGdhcmJhZ2UgY29sbGVjdGlvbiBmb3IgYSBtZXRhZGF0YSBvZiBmaW5pc2hlZCByZWZlcmVuZHVtcyB0byBgdW5yZXF1ZXN0YCAocmVtb3ZlKUQgbGFyZ2UgcHJlaW1hZ2VzLgHVAwFRAhREU3VibWlzc2lvbkRlcG9zaXQYQAAAAAAAAAAAAAAAAAAAAAAENQEgVGhlIG1pbmltdW0gYW1vdW50IHRvIGJlIHVzZWQgYXMgYSBkZXBvc2l0IGZvciBhIHB1YmxpYyByZWZlcmVuZHVtIHByb3Bvc2FsLiRNYXhRdWV1ZWQQEGQAAAAE5CBNYXhpbXVtIHNpemUgb2YgdGhlIHJlZmVyZW5kdW0gcXVldWUgZm9yIGEgc2luZ2xlIHRyYWNrLkRVbmRlY2lkaW5nVGltZW91dBAQ4MQAAAhVASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBhZnRlciBzdWJtaXNzaW9uIHRoYXQgYSByZWZlcmVuZHVtIG11c3QgYmVnaW4gYmVpbmcgZGVjaWRlZCBieS7kIE9uY2UgdGhpcyBwYXNzZXMsIHRoZW4gYW55b25lIG1heSBjYW5jZWwgdGhlIHJlZmVyZW5kdW0uNEFsYXJtSW50ZXJ2YWwQEAEAAAAMXQEgUXVhbnRpemF0aW9uIGxldmVsIGZvciB0aGUgcmVmZXJlbmR1bSB3YWtldXAgc2NoZWR1bGVyLiBBIGhpZ2hlciBudW1iZXIgd2lsbCByZXN1bHQgaW5dASBmZXdlciBzdG9yYWdlIHJlYWRzL3dyaXRlcyBuZWVkZWQgZm9yIHNtYWxsZXIgdm90ZXJzLCBidXQgYWxzbyByZXN1bHQgaW4gZGVsYXlzIHRvIHRoZVUBIGF1dG9tYXRpYyByZWZlcmVuZHVtIHN0YXR1cyBjaGFuZ2VzLiBFeHBsaWNpdCBzZXJ2aWNpbmcgaW5zdHJ1Y3Rpb25zIGFyZSB1bmFmZmVjdGVkLhhUcmFja3PdBiEaVAEAHG1lbWJlcnMKAAAAAHQ7pAsAAAAAAAAAAAAAAJYAAADgxAAAlgAAABkAAAAAAMqaOwBlzR0Aypo7AADKmjsAAAAAAMqaOwIASHByb2ZpY2llbnQgbWVtYmVycwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7AwAcZmVsbG93cwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7BAAoYXJjaGl0ZWN0cwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7BQBAYXJjaGl0ZWN0cyBhZGVwdAoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7BgBAZ3JhbmQgYXJjaGl0ZWN0cwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7BwAcbWFzdGVycwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7CABAbWFzdGVycyBjb25zdGFudAoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7CQA0Z3JhbmQgbWFzdGVycwoAAAAAdDukCwAAAAAAAAAAAAAAlgAAAODEAACWAAAAGQAAAAAAypo7AGXNHQDKmjsAAMqaOwAAAAAAypo7CwA8cmV0YWluIGF0IEkgRGFuGQAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwIkBACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsMAEByZXRhaW4gYXQgSUkgRGFuGQAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwIkBACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsNAERyZXRhaW4gYXQgSUlJIERhbhkAAAAAdDukCwAAAAAAAAAAAAAAAAAAAMCJAQAsAQAAAAAAAAAAypo7AEbDIwDKmjsAAMqaOwDh9QUAypo7DgBAcmV0YWluIGF0IElWIERhbhkAAAAAdDukCwAAAAAAAAAAAAAAAAAAAMCJAQAsAQAAAAAAAAAAypo7AEbDIwDKmjsAAMqaOwDh9QUAypo7DwA8cmV0YWluIGF0IFYgRGFuGQAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwIkBACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsQAEByZXRhaW4gYXQgVkkgRGFuGQAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwIkBACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsVAEBwcm9tb3RlIHRvIEkgRGFuCgAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwEsDACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsWAERwcm9tb3RlIHRvIElJIERhbgoAAAAAdDukCwAAAAAAAAAAAAAAAAAAAMBLAwAsAQAAAAAAAAAAypo7AEbDIwDKmjsAAMqaOwDh9QUAypo7FwBIcHJvbW90ZSB0byBJSUkgRGFuCgAAAAB0O6QLAAAAAAAAAAAAAAAAAAAAwEsDACwBAAAAAAAAAADKmjsARsMjAMqaOwAAypo7AOH1BQDKmjsYAERwcm9tb3RlIHRvIElWIERhbgoAAAAAdDukCwAAAAAAAAAAAAAAAAAAAMBLAwAsAQAAAAAAAAAAypo7AEbDIwDKmjsAAMqaOwDh9QUAypo7GQBAcHJvbW90ZSB0byBWIERhbgoAAAAAdDukCwAAAAAAAAAAAAAAAAAAAMBLAwAsAQAAAAAAAAAAypo7AEbDIwDKmjsAAMqaOwDh9QUAypo7GgBEcHJvbW90ZSB0byBWSSBEYW4KAAAAAHQ7pAsAAAAAAAAAAAAAAAAAAADASwMALAEAAAAAAAAAAMqaOwBGwyMAypo7AADKmjsA4fUFAMqaOwTgIEluZm9ybWF0aW9uIGNvbmNlcm5pbmcgdGhlIGRpZmZlcmVudCByZWZlcmVuZHVtIHRyYWNrcy4B+QY9AERGZWxsb3dzaGlwT3JpZ2lucwAAAAAAPgA4RmVsbG93c2hpcENvcmUBOEZlbGxvd3NoaXBDb3JlDBhQYXJhbXMBAOUDsQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIggVGhlIG92ZXJhbGwgc3RhdHVzIG9mIHRoZSBzeXN0ZW0uGE1lbWJlcgABBAUA/QYEAARoIFRoZSBzdGF0dXMgb2YgYSBjbGFpbWFudC44TWVtYmVyRXZpZGVuY2UAAQQFAAEHBAAEMQEgU29tZSBldmlkZW5jZSB0b2dldGhlciB3aXRoIHRoZSBkZXNpcmVkIG91dGNvbWUgZm9yIHdoaWNoIGl0IHdhcyBwcmVzZW50ZWQuAeEDAR0EBDBFdmlkZW5jZVNpemUQEAAAAQAE/CBUaGUgbWF4aW11bSBzaXplIGluIGJ5dGVzIHN1Ym1pdHRlZCBldmlkZW5jZSBpcyBhbGxvd2VkIHRvIGJlLgEFBz8AQEZlbGxvd3NoaXBTYWxhcnkBQEZlbGxvd3NoaXBTYWxhcnkIGFN0YXR1cwAACQcEAASIIFRoZSBvdmVyYWxsIHN0YXR1cyBvZiB0aGUgc3lzdGVtLiBDbGFpbWFudAABBAUADQcEAARoIFRoZSBzdGF0dXMgb2YgYSBjbGFpbWFudC4B+QMBJQQMSFJlZ2lzdHJhdGlvblBlcmlvZBAQ4KUBABRRASBUaGUgbnVtYmVyIG9mIGJsb2NrcyB3aXRoaW4gYSBjeWNsZSB3aGljaCBhY2NvdW50cyBoYXZlIHRvIHJlZ2lzdGVyIHRoZWlyIGludGVudCB0bxwgY2xhaW0uADUBIFRoZSBudW1iZXIgb2YgYmxvY2tzIGJldHdlZW4gc2VxdWVudGlhbCBwYXlvdXQgY3ljbGVzIGlzIHRoZSBzdW0gb2YgdGhpcyBhbmRAIGBQYXlvdXRQZXJpb2RgLjBQYXlvdXRQZXJpb2QQEOClAQAQNQEgVGhlIG51bWJlciBvZiBibG9ja3Mgd2l0aGluIGEgY3ljbGUgd2hpY2ggYWNjb3VudHMgaGF2ZSB0byBjbGFpbSB0aGUgcGF5b3V0LgA1ASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBiZXR3ZWVuIHNlcXVlbnRpYWwgcGF5b3V0IGN5Y2xlcyBpcyB0aGUgc3VtIG9mIHRoaXMgYW5kWCBgUmVnaXN0cmF0aW9uUGVyaW9kYC4YQnVkZ2V0GEAARCk1OgAAAAAAAAAAAAAADHAgVGhlIHRvdGFsIGJ1ZGdldCBwZXIgY3ljbGUuAAEBIFRoaXMgbWF5IGNoYW5nZSBvdmVyIHRoZSBjb3Vyc2Ugb2YgYSBjeWNsZSB3aXRob3V0IGFueSBwcm9ibGVtLgEVB0AASEZlbGxvd3NoaXBUcmVhc3VyeQFIRmVsbG93c2hpcFRyZWFzdXJ5GDRQcm9wb3NhbENvdW50AQAQEAAAAAAEpCBOdW1iZXIgb2YgcHJvcG9zYWxzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuJFByb3Bvc2FscwABBAUQGQcEAAR8IFByb3Bvc2FscyB0aGF0IGhhdmUgYmVlbiBtYWRlLixEZWFjdGl2YXRlZAEAGEAAAAAAAAAAAAAAAAAAAAAABPAgVGhlIGFtb3VudCB3aGljaCBoYXMgYmVlbiByZXBvcnRlZCBhcyBpbmFjdGl2ZSB0byBDdXJyZW5jeS4kQXBwcm92YWxzAQAdBwQABPggUHJvcG9zYWwgaW5kaWNlcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBidXQgbm90IHlldCBhd2FyZGVkLihTcGVuZENvdW50AQAQEAAAAAAEpCBUaGUgY291bnQgb2Ygc3BlbmRzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuGFNwZW5kcwABBAUQIQcEAATQIFNwZW5kcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBhbmQgYmVpbmcgcHJvY2Vzc2VkLgH9AwEpBCAwUHJvcG9zYWxCb25kKQcQQEIPAAhVASBGcmFjdGlvbiBvZiBhIHByb3Bvc2FsJ3MgdmFsdWUgdGhhdCBzaG91bGQgYmUgYm9uZGVkIGluIG9yZGVyIHRvIHBsYWNlIHRoZSBwcm9wb3NhbC4RASBBbiBhY2NlcHRlZCBwcm9wb3NhbCBnZXRzIHRoZXNlIGJhY2suIEEgcmVqZWN0ZWQgcHJvcG9zYWwgZG9lcyBub3QuTFByb3Bvc2FsQm9uZE1pbmltdW0YQP////////////////////8ESQEgTWluaW11bSBhbW91bnQgb2YgZnVuZHMgdGhhdCBzaG91bGQgYmUgcGxhY2VkIGluIGEgZGVwb3NpdCBmb3IgbWFraW5nIGEgcHJvcG9zYWwuTFByb3Bvc2FsQm9uZE1heGltdW0xAkQB/////////////////////wRJASBNYXhpbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC4sU3BlbmRQZXJpb2QQEODEAAAEiCBQZXJpb2QgYmV0d2VlbiBzdWNjZXNzaXZlIHNwZW5kcy4QQnVybikHEAAAAAAEEQEgUGVyY2VudGFnZSBvZiBzcGFyZSBmdW5kcyAoaWYgYW55KSB0aGF0IGFyZSBidXJudCBwZXIgc3BlbmQgcGVyaW9kLiBQYWxsZXRJZC0HIHB5L2ZlbHRyBBkBIFRoZSB0cmVhc3VyeSdzIHBhbGxldCBpZCwgdXNlZCBmb3IgZGVyaXZpbmcgaXRzIHNvdmVyZWlnbiBhY2NvdW50IElELjBNYXhBcHByb3ZhbHMQEGQAAAAMFQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGFwcHJvdmFscyB0aGF0IGNhbiB3YWl0IGluIHRoZSBzcGVuZGluZyBxdWV1ZS4ATQEgTk9URTogVGhpcyBwYXJhbWV0ZXIgaXMgYWxzbyB1c2VkIHdpdGhpbiB0aGUgQm91bnRpZXMgUGFsbGV0IGV4dGVuc2lvbiBpZiBlbmFibGVkLjBQYXlvdXRQZXJpb2QQEMBLAwAEGQEgVGhlIHBlcmlvZCBkdXJpbmcgd2hpY2ggYW4gYXBwcm92ZWQgdHJlYXN1cnkgc3BlbmQgaGFzIHRvIGJlIGNsYWltZWQuATEHQQBQQW1iYXNzYWRvckNvbGxlY3RpdmUBUEFtYmFzc2Fkb3JDb2xsZWN0aXZlGCxNZW1iZXJDb3VudAEBBAX9ARAQAAAAAAhpASBUaGUgbnVtYmVyIG9mIG1lbWJlcnMgaW4gdGhlIGNvbGxlY3RpdmUgd2hvIGhhdmUgYXQgbGVhc3QgdGhlIHJhbmsgYWNjb3JkaW5nIHRvIHRoZSBpbmRleDAgb2YgdGhlIHZlYy4cTWVtYmVycwABBAUAoQYEAAScIFRoZSBjdXJyZW50IG1lbWJlcnMgb2YgdGhlIGNvbGxlY3RpdmUuJElkVG9JbmRleAABCAUFpQYQBAAEYQEgVGhlIGluZGV4IG9mIGVhY2ggcmFua3MncyBtZW1iZXIgaW50byB0aGUgZ3JvdXAgb2YgbWVtYmVycyB3aG8gaGF2ZSBhdCBsZWFzdCB0aGF0IHJhbmsuJEluZGV4VG9JZAABCAUFqQYABAAIXQEgVGhlIG1lbWJlcnMgaW4gdGhlIGNvbGxlY3RpdmUgYnkgaW5kZXguIEFsbCBpbmRpY2VzIGluIHRoZSByYW5nZSBgMC4uTWVtYmVyQ291bnRgIHdpbGxlASByZXR1cm4gYFNvbWVgLCBob3dldmVyIGEgbWVtYmVyJ3MgaW5kZXggaXMgbm90IGd1YXJhbnRlZWQgdG8gcmVtYWluIHVuY2hhbmdlZCBvdmVyIHRpbWUuGFZvdGluZwABCAIFrQZJAgQABLQgVm90ZXMgb24gYSBnaXZlbiBwcm9wb3NhbCwgaWYgaXQgaXMgb25nb2luZy40Vm90aW5nQ2xlYW51cAABBAIQNQcEAAABAQQBLQQAATkHRgBMQW1iYXNzYWRvclJlZmVyZW5kYQFMQW1iYXNzYWRvclJlZmVyZW5kYRQ8UmVmZXJlbmR1bUNvdW50AQAQEAAAAAAEMQEgVGhlIG5leHQgZnJlZSByZWZlcmVuZHVtIGluZGV4LCBha2EgdGhlIG51bWJlciBvZiByZWZlcmVuZGEgc3RhcnRlZCBzbyBmYXIuRFJlZmVyZW5kdW1JbmZvRm9yAAEEAhA9BwQABLQgSW5mb3JtYXRpb24gY29uY2VybmluZyBhbnkgZ2l2ZW4gcmVmZXJlbmR1bS4oVHJhY2tRdWV1ZQEBBAX9AUUHBAAQXQEgVGhlIHNvcnRlZCBsaXN0IG9mIHJlZmVyZW5kYSByZWFkeSB0byBiZSBkZWNpZGVkIGJ1dCBub3QgeWV0IGJlaW5nIGRlY2lkZWQsIG9yZGVyZWQgYnl8IGNvbnZpY3Rpb24td2VpZ2h0ZWQgYXBwcm92YWxzLgBBASBUaGlzIHNob3VsZCBiZSBlbXB0eSBpZiBgRGVjaWRpbmdDb3VudGAgaXMgbGVzcyB0aGFuIGBUcmFja0luZm86Om1heF9kZWNpZGluZ2AuNERlY2lkaW5nQ291bnQBAQQF/QEQEAAAAAAExCBUaGUgbnVtYmVyIG9mIHJlZmVyZW5kYSBiZWluZyBkZWNpZGVkIGN1cnJlbnRseS4oTWV0YWRhdGFPZgABBAIQMAQAGAUBIFRoZSBtZXRhZGF0YSBpcyBhIGdlbmVyYWwgaW5mb3JtYXRpb24gY29uY2VybmluZyB0aGUgcmVmZXJlbmR1bS5JASBUaGUgYEhhc2hgIHJlZmVycyB0byB0aGUgcHJlaW1hZ2Ugb2YgdGhlIGBQcmVpbWFnZXNgIHByb3ZpZGVyIHdoaWNoIGNhbiBiZSBhIEpTT06IIGR1bXAgb3IgSVBGUyBoYXNoIG9mIGEgSlNPTiBmaWxlLgB1ASBDb25zaWRlciBhIGdhcmJhZ2UgY29sbGVjdGlvbiBmb3IgYSBtZXRhZGF0YSBvZiBmaW5pc2hlZCByZWZlcmVuZHVtcyB0byBgdW5yZXF1ZXN0YCAocmVtb3ZlKUQgbGFyZ2UgcHJlaW1hZ2VzLgEFBAE1BBREU3VibWlzc2lvbkRlcG9zaXQYQAAAAAAAAAAAAAAAAAAAAAAENQEgVGhlIG1pbmltdW0gYW1vdW50IHRvIGJlIHVzZWQgYXMgYSBkZXBvc2l0IGZvciBhIHB1YmxpYyByZWZlcmVuZHVtIHByb3Bvc2FsLiRNYXhRdWV1ZWQQEBQAAAAE5CBNYXhpbXVtIHNpemUgb2YgdGhlIHJlZmVyZW5kdW0gcXVldWUgZm9yIGEgc2luZ2xlIHRyYWNrLkRVbmRlY2lkaW5nVGltZW91dBAQ4MQAAAhVASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBhZnRlciBzdWJtaXNzaW9uIHRoYXQgYSByZWZlcmVuZHVtIG11c3QgYmVnaW4gYmVpbmcgZGVjaWRlZCBieS7kIE9uY2UgdGhpcyBwYXNzZXMsIHRoZW4gYW55b25lIG1heSBjYW5jZWwgdGhlIHJlZmVyZW5kdW0uNEFsYXJtSW50ZXJ2YWwQEAEAAAAMXQEgUXVhbnRpemF0aW9uIGxldmVsIGZvciB0aGUgcmVmZXJlbmR1bSB3YWtldXAgc2NoZWR1bGVyLiBBIGhpZ2hlciBudW1iZXIgd2lsbCByZXN1bHQgaW5dASBmZXdlciBzdG9yYWdlIHJlYWRzL3dyaXRlcyBuZWVkZWQgZm9yIHNtYWxsZXIgdm90ZXJzLCBidXQgYWxzbyByZXN1bHQgaW4gZGVsYXlzIHRvIHRoZVUBIGF1dG9tYXRpYyByZWZlcmVuZHVtIHN0YXR1cyBjaGFuZ2VzLiBFeHBsaWNpdCBzZXJ2aWNpbmcgaW5zdHJ1Y3Rpb25zIGFyZSB1bmFmZmVjdGVkLhhUcmFja3PdBrkDDAEAKGFtYmFzc2Fkb3IKAAAAAHQ7pAsAAAAAAAAAAAAAACAcAADgxAAAIBwAACwBAAAAAMqaOwBlzR0Aypo7AADKmjsAAAAAAGXNHQIARHNlbmlvciBhbWJhc3NhZG9yCgAAAAB0O6QLAAAAAAAAAAAAAAAgHAAA4MQAACAcAAAsAQAAAADKmjsAZc0dAMqaOwAAypo7AAAAAABlzR0DADxoZWFkIGFtYmFzc2Fkb3IKAAAAAHQ7pAsAAAAAAAAAAAAAACAcAADgxAAAIBwAACwBAAAAAMqaOwBlzR0Aypo7AADKmjsAAAAAAGXNHQTgIEluZm9ybWF0aW9uIGNvbmNlcm5pbmcgdGhlIGRpZmZlcmVudCByZWZlcmVuZHVtIHRyYWNrcy4BSQdHAERBbWJhc3NhZG9yT3JpZ2lucwAAAAAASAA4QW1iYXNzYWRvckNvcmUBOEFtYmFzc2Fkb3JDb3JlDBhQYXJhbXMBAOUDsQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIggVGhlIG92ZXJhbGwgc3RhdHVzIG9mIHRoZSBzeXN0ZW0uGE1lbWJlcgABBAUA/QYEAARoIFRoZSBzdGF0dXMgb2YgYSBjbGFpbWFudC44TWVtYmVyRXZpZGVuY2UAAQQFAAEHBAAEMQEgU29tZSBldmlkZW5jZSB0b2dldGhlciB3aXRoIHRoZSBkZXNpcmVkIG91dGNvbWUgZm9yIHdoaWNoIGl0IHdhcyBwcmVzZW50ZWQuAQkEATkEBDBFdmlkZW5jZVNpemUQEAAAAQAE/CBUaGUgbWF4aW11bSBzaXplIGluIGJ5dGVzIHN1Ym1pdHRlZCBldmlkZW5jZSBpcyBhbGxvd2VkIHRvIGJlLgFNB0kAQEFtYmFzc2Fkb3JTYWxhcnkBQEFtYmFzc2Fkb3JTYWxhcnkIGFN0YXR1cwAACQcEAASIIFRoZSBvdmVyYWxsIHN0YXR1cyBvZiB0aGUgc3lzdGVtLiBDbGFpbWFudAABBAUADQcEAARoIFRoZSBzdGF0dXMgb2YgYSBjbGFpbWFudC4BDQQBPQQMSFJlZ2lzdHJhdGlvblBlcmlvZBAQ4KUBABRRASBUaGUgbnVtYmVyIG9mIGJsb2NrcyB3aXRoaW4gYSBjeWNsZSB3aGljaCBhY2NvdW50cyBoYXZlIHRvIHJlZ2lzdGVyIHRoZWlyIGludGVudCB0bxwgY2xhaW0uADUBIFRoZSBudW1iZXIgb2YgYmxvY2tzIGJldHdlZW4gc2VxdWVudGlhbCBwYXlvdXQgY3ljbGVzIGlzIHRoZSBzdW0gb2YgdGhpcyBhbmRAIGBQYXlvdXRQZXJpb2RgLjBQYXlvdXRQZXJpb2QQEOClAQAQNQEgVGhlIG51bWJlciBvZiBibG9ja3Mgd2l0aGluIGEgY3ljbGUgd2hpY2ggYWNjb3VudHMgaGF2ZSB0byBjbGFpbSB0aGUgcGF5b3V0LgA1ASBUaGUgbnVtYmVyIG9mIGJsb2NrcyBiZXR3ZWVuIHNlcXVlbnRpYWwgcGF5b3V0IGN5Y2xlcyBpcyB0aGUgc3VtIG9mIHRoaXMgYW5kWCBgUmVnaXN0cmF0aW9uUGVyaW9kYC4YQnVkZ2V0GEAAtPnkMAAAAAAAAAAAAAAADHAgVGhlIHRvdGFsIGJ1ZGdldCBwZXIgY3ljbGUuAAEBIFRoaXMgbWF5IGNoYW5nZSBvdmVyIHRoZSBjb3Vyc2Ugb2YgYSBjeWNsZSB3aXRob3V0IGFueSBwcm9ibGVtLgFRB0oASEFtYmFzc2Fkb3JUcmVhc3VyeQFIQW1iYXNzYWRvclRyZWFzdXJ5GDRQcm9wb3NhbENvdW50AQAQEAAAAAAEpCBOdW1iZXIgb2YgcHJvcG9zYWxzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuJFByb3Bvc2FscwABBAUQGQcEAAR8IFByb3Bvc2FscyB0aGF0IGhhdmUgYmVlbiBtYWRlLixEZWFjdGl2YXRlZAEAGEAAAAAAAAAAAAAAAAAAAAAABPAgVGhlIGFtb3VudCB3aGljaCBoYXMgYmVlbiByZXBvcnRlZCBhcyBpbmFjdGl2ZSB0byBDdXJyZW5jeS4kQXBwcm92YWxzAQAdBwQABPggUHJvcG9zYWwgaW5kaWNlcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBidXQgbm90IHlldCBhd2FyZGVkLihTcGVuZENvdW50AQAQEAAAAAAEpCBUaGUgY291bnQgb2Ygc3BlbmRzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuGFNwZW5kcwABBAUQIQcEAATQIFNwZW5kcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBhbmQgYmVpbmcgcHJvY2Vzc2VkLgERBAFBBCAwUHJvcG9zYWxCb25kKQcQQEIPAAhVASBGcmFjdGlvbiBvZiBhIHByb3Bvc2FsJ3MgdmFsdWUgdGhhdCBzaG91bGQgYmUgYm9uZGVkIGluIG9yZGVyIHRvIHBsYWNlIHRoZSBwcm9wb3NhbC4RASBBbiBhY2NlcHRlZCBwcm9wb3NhbCBnZXRzIHRoZXNlIGJhY2suIEEgcmVqZWN0ZWQgcHJvcG9zYWwgZG9lcyBub3QuTFByb3Bvc2FsQm9uZE1pbmltdW0YQP////////////////////8ESQEgTWluaW11bSBhbW91bnQgb2YgZnVuZHMgdGhhdCBzaG91bGQgYmUgcGxhY2VkIGluIGEgZGVwb3NpdCBmb3IgbWFraW5nIGEgcHJvcG9zYWwuTFByb3Bvc2FsQm9uZE1heGltdW0xAkQB/////////////////////wRJASBNYXhpbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC4sU3BlbmRQZXJpb2QQEODEAAAEiCBQZXJpb2QgYmV0d2VlbiBzdWNjZXNzaXZlIHNwZW5kcy4QQnVybikHEAAAAAAEEQEgUGVyY2VudGFnZSBvZiBzcGFyZSBmdW5kcyAoaWYgYW55KSB0aGF0IGFyZSBidXJudCBwZXIgc3BlbmQgcGVyaW9kLiBQYWxsZXRJZC0HIHB5L2FtYnRyBBkBIFRoZSB0cmVhc3VyeSdzIHBhbGxldCBpZCwgdXNlZCBmb3IgZGVyaXZpbmcgaXRzIHNvdmVyZWlnbiBhY2NvdW50IElELjBNYXhBcHByb3ZhbHMQEGQAAAAMFQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGFwcHJvdmFscyB0aGF0IGNhbiB3YWl0IGluIHRoZSBzcGVuZGluZyBxdWV1ZS4ATQEgTk9URTogVGhpcyBwYXJhbWV0ZXIgaXMgYWxzbyB1c2VkIHdpdGhpbiB0aGUgQm91bnRpZXMgUGFsbGV0IGV4dGVuc2lvbiBpZiBlbmFibGVkLjBQYXlvdXRQZXJpb2QQEMBLAwAEGQEgVGhlIHBlcmlvZCBkdXJpbmcgd2hpY2ggYW4gYXBwcm92ZWQgdHJlYXN1cnkgc3BlbmQgaGFzIHRvIGJlIGNsYWltZWQuAVUHSwAErQJZAlkHcQcgSENoZWNrTm9uWmVyb1NlbmRlcnUH6QFAQ2hlY2tTcGVjVmVyc2lvbnkHEDhDaGVja1R4VmVyc2lvbn0HEDBDaGVja0dlbmVzaXOBBzA4Q2hlY2tNb3J0YWxpdHmFBzAoQ2hlY2tOb25jZY0H6QEsQ2hlY2tXZWlnaHSRB+kBRENoZWNrTWV0YWRhdGFIYXNolQeAnQc0HEF1cmFBcGkINHNsb3RfZHVyYXRpb24AoQcMkCBSZXR1cm5zIHRoZSBzbG90IGR1cmF0aW9uIGZvciBBdXJhLgAlASBDdXJyZW50bHksIG9ubHkgdGhlIHZhbHVlIHByb3ZpZGVkIGJ5IHRoaXMgdHlwZSBhdCBnZW5lc2lzIHdpbGwgYmUgdXNlZC4sYXV0aG9yaXRpZXMAZQUEnCBSZXR1cm4gdGhlIGN1cnJlbnQgc2V0IG9mIGF1dGhvcml0aWVzLgS4IEFQSSBuZWNlc3NhcnkgZm9yIGJsb2NrIGF1dGhvcnNoaXAgd2l0aCBhdXJhLmBBdXJhVW5pbmNsdWRlZFNlZ21lbnRBcGkEOGNhbl9idWlsZF91cG9uCDRpbmNsdWRlZF9oYXNoMBBzbG90aQV4KDkBIFdoZXRoZXIgaXQgaXMgbGVnYWwgdG8gZXh0ZW5kIHRoZSBjaGFpbiwgYXNzdW1pbmcgdGhlIGdpdmVuIGJsb2NrIGlzIHRoZSBtb3N0NQEgcmVjZW50bHkgaW5jbHVkZWQgb25lIGFzLW9mIHRoZSByZWxheSBwYXJlbnQgdGhhdCB3aWxsIGJlIGJ1aWx0IGFnYWluc3QsIGFuZEAgdGhlIGdpdmVuIHNsb3QuAFEBIFRoaXMgc2hvdWxkIGJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgbG9naWMgdGhlIHJ1bnRpbWUgdXNlcyB3aGVuIHZhbGlkYXRpbmcgYmxvY2tzIHRvOCBhdm9pZCBpc3N1ZXMuAGEBIFdoZW4gdGhlIHVuaW5jbHVkZWQgc2VnbWVudCBpcyBlbXB0eSwgaS5lLiBgaW5jbHVkZWRfaGFzaCA9PSBhdGAsIHdoZXJlIGF0IGlzIHRoZSBibG9ja2EBIHdob3NlIHN0YXRlIHdlIGFyZSBxdWVyeWluZyBhZ2FpbnN0LCB0aGlzIG11c3QgYWx3YXlzIHJldHVybiBgdHJ1ZWAgYXMgbG9uZyBhcyB0aGUgc2xvdLwgaXMgbW9yZSByZWNlbnQgdGhhbiB0aGUgaW5jbHVkZWQgYmxvY2sgaXRzZWxmLig1ASBUaGlzIHJ1bnRpbWUgQVBJIGlzIHVzZWQgdG8gaW5mb3JtIHBvdGVudGlhbCBibG9jayBhdXRob3JzIHdoZXRoZXIgdGhleSB3aWxsJQEgaGF2ZSB0aGUgcmlnaHQgdG8gYXV0aG9yIGF0IGEgc2xvdCwgYXNzdW1pbmcgdGhleSBoYXZlIGNsYWltZWQgdGhlIHNsb3QuAHUBIEluIHBhcnRpY3VsYXIsIHRoaXMgQVBJIGFsbG93cyBBdXJhLWJhc2VkIHBhcmFjaGFpbnMgdG8gcmVndWxhdGUgdGhlaXIgInVuaW5jbHVkZWQgc2VnbWVudCIsbQEgd2hpY2ggaXMgdGhlIHNlY3Rpb24gb2YgdGhlIGhlYWQgb2YgdGhlIGNoYWluIHdoaWNoIGhhcyBub3QgeWV0IGJlZW4gbWFkZSBhdmFpbGFibGUgaW4gdGhlNCByZWxheSBjaGFpbi4AYQEgV2hlbiB0aGUgdW5pbmNsdWRlZCBzZWdtZW50IGlzIHNob3J0LCBBdXJhIGNoYWlucyB3aWxsIGFsbG93IGF1dGhvcnMgdG8gY3JlYXRlIG11bHRpcGxlXQEgYmxvY2tzIHBlciBzbG90IGluIG9yZGVyIHRvIGJ1aWxkIGEgYmFja2xvZy4gV2hlbiBpdCBpcyBzYXR1cmF0ZWQsIHRoaXMgQVBJIHdpbGwgbGltaXSoIHRoZSBhbW91bnQgb2YgYmxvY2tzIHRoYXQgY2FuIGJlIGNyZWF0ZWQuEENvcmUMHHZlcnNpb24AdQQEkCBSZXR1cm5zIHRoZSB2ZXJzaW9uIG9mIHRoZSBydW50aW1lLjRleGVjdXRlX2Jsb2NrBBRibG9ja6UH6QEEZCBFeGVjdXRlIHRoZSBnaXZlbiBibG9jay5AaW5pdGlhbGl6ZV9ibG9jawQYaGVhZGVyqQfpAQSoIEluaXRpYWxpemUgYSBibG9jayB3aXRoIHRoZSBnaXZlbiBoZWFkZXIuBCEBIFRoZSBgQ29yZWAgcnVudGltZSBhcGkgdGhhdCBldmVyeSBTdWJzdHJhdGUgcnVudGltZSBuZWVkcyB0byBpbXBsZW1lbnQuIE1ldGFkYXRhDCBtZXRhZGF0YQC1BwSMIFJldHVybnMgdGhlIG1ldGFkYXRhIG9mIGEgcnVudGltZS5MbWV0YWRhdGFfYXRfdmVyc2lvbgQcdmVyc2lvbhC5BxCkIFJldHVybnMgdGhlIG1ldGFkYXRhIGF0IGEgZ2l2ZW4gdmVyc2lvbi4ABQEgSWYgdGhlIGdpdmVuIGB2ZXJzaW9uYCBpc24ndCBzdXBwb3J0ZWQsIHRoaXMgd2lsbCByZXR1cm4gYE5vbmVgLnUBIFVzZSBbYFNlbGY6Om1ldGFkYXRhX3ZlcnNpb25zYF0gdG8gZmluZCBvdXQgYWJvdXQgc3VwcG9ydGVkIG1ldGFkYXRhIHZlcnNpb24gb2YgdGhlIHJ1bnRpbWUuRG1ldGFkYXRhX3ZlcnNpb25zAFEFDKQgUmV0dXJucyB0aGUgc3VwcG9ydGVkIG1ldGFkYXRhIHZlcnNpb25zLgDAIFRoaXMgY2FuIGJlIHVzZWQgdG8gY2FsbCBgbWV0YWRhdGFfYXRfdmVyc2lvbmAuBAEBIFRoZSBgTWV0YWRhdGFgIGFwaSB0cmFpdCB0aGF0IHJldHVybnMgbWV0YWRhdGEgZm9yIHRoZSBydW50aW1lLjBCbG9ja0J1aWxkZXIQPGFwcGx5X2V4dHJpbnNpYwQkZXh0cmluc2ljrQe9BxBsIEFwcGx5IHRoZSBnaXZlbiBleHRyaW5zaWMuADkBIFJldHVybnMgYW4gaW5jbHVzaW9uIG91dGNvbWUgd2hpY2ggc3BlY2lmaWVzIGlmIHRoaXMgZXh0cmluc2ljIGlzIGluY2x1ZGVkIGluTCB0aGlzIGJsb2NrIG9yIG5vdC44ZmluYWxpemVfYmxvY2sAqQcEaCBGaW5pc2ggdGhlIGN1cnJlbnQgYmxvY2suTGluaGVyZW50X2V4dHJpbnNpY3MEIGluaGVyZW50zQexBwQ9ASBHZW5lcmF0ZSBpbmhlcmVudCBleHRyaW5zaWNzLiBUaGUgaW5oZXJlbnQgZGF0YSB3aWxsIHZhcnkgZnJvbSBjaGFpbiB0byBjaGFpbi48Y2hlY2tfaW5oZXJlbnRzCBRibG9ja6UHEGRhdGHNB90HBFUBIENoZWNrIHRoYXQgdGhlIGluaGVyZW50cyBhcmUgdmFsaWQuIFRoZSBpbmhlcmVudCBkYXRhIHdpbGwgdmFyeSBmcm9tIGNoYWluIHRvIGNoYWluLgRxASBUaGUgYEJsb2NrQnVpbGRlcmAgYXBpIHRyYWl0IHRoYXQgcHJvdmlkZXMgdGhlIHJlcXVpcmVkIGZ1bmN0aW9uYWxpdHkgZm9yIGJ1aWxkaW5nIGEgYmxvY2suWFRhZ2dlZFRyYW5zYWN0aW9uUXVldWUEUHZhbGlkYXRlX3RyYW5zYWN0aW9uDBhzb3VyY2XhBwh0eK0HKGJsb2NrX2hhc2gw5QckaCBWYWxpZGF0ZSB0aGUgdHJhbnNhY3Rpb24uAGUBIFRoaXMgbWV0aG9kIGlzIGludm9rZWQgYnkgdGhlIHRyYW5zYWN0aW9uIHBvb2wgdG8gbGVhcm4gZGV0YWlscyBhYm91dCBnaXZlbiB0cmFuc2FjdGlvbi5FASBUaGUgaW1wbGVtZW50YXRpb24gc2hvdWxkIG1ha2Ugc3VyZSB0byB2ZXJpZnkgdGhlIGNvcnJlY3RuZXNzIG9mIHRoZSB0cmFuc2FjdGlvbk0BIGFnYWluc3QgY3VycmVudCBzdGF0ZS4gVGhlIGdpdmVuIGBibG9ja19oYXNoYCBjb3JyZXNwb25kcyB0byB0aGUgaGFzaCBvZiB0aGUgYmxvY2t8IHRoYXQgaXMgdXNlZCBhcyBjdXJyZW50IHN0YXRlLgBFASBOb3RlIHRoYXQgdGhpcyBjYWxsIG1heSBiZSBwZXJmb3JtZWQgYnkgdGhlIHBvb2wgbXVsdGlwbGUgdGltZXMgYW5kIHRyYW5zYWN0aW9uc6QgbWlnaHQgYmUgdmVyaWZpZWQgaW4gYW55IHBvc3NpYmxlIG9yZGVyLgRNASBUaGUgYFRhZ2dlZFRyYW5zYWN0aW9uUXVldWVgIGFwaSB0cmFpdCBmb3IgaW50ZXJmZXJpbmcgd2l0aCB0aGUgdHJhbnNhY3Rpb24gcXVldWUuRE9mZmNoYWluV29ya2VyQXBpBDxvZmZjaGFpbl93b3JrZXIEGGhlYWRlcqkH6QEEyCBTdGFydHMgdGhlIG9mZi1jaGFpbiB0YXNrIGZvciBnaXZlbiBibG9jayBoZWFkZXIuBGQgVGhlIG9mZmNoYWluIHdvcmtlciBhcGkuLFNlc3Npb25LZXlzCFRnZW5lcmF0ZV9zZXNzaW9uX2tleXMEEHNlZWTBBTQcFQEgR2VuZXJhdGUgYSBzZXQgb2Ygc2Vzc2lvbiBrZXlzIHdpdGggb3B0aW9uYWxseSB1c2luZyB0aGUgZ2l2ZW4gc2VlZC4JASBUaGUga2V5cyBzaG91bGQgYmUgc3RvcmVkIHdpdGhpbiB0aGUga2V5c3RvcmUgZXhwb3NlZCB2aWEgcnVudGltZTwgZXh0ZXJuYWxpdGllcy4AsCBUaGUgc2VlZCBuZWVkcyB0byBiZSBhIHZhbGlkIGB1dGY4YCBzdHJpbmcuANAgUmV0dXJucyB0aGUgY29uY2F0ZW5hdGVkIFNDQUxFIGVuY29kZWQgcHVibGljIGtleXMuTGRlY29kZV9zZXNzaW9uX2tleXMEHGVuY29kZWQ07QcMmCBEZWNvZGUgdGhlIGdpdmVuIHB1YmxpYyBzZXNzaW9uIGtleXMuANwgUmV0dXJucyB0aGUgbGlzdCBvZiBwdWJsaWMgcmF3IHB1YmxpYyBrZXlzICsga2V5IHR5cGUuBGggU2Vzc2lvbiBrZXlzIHJ1bnRpbWUgYXBpLjxBY2NvdW50Tm9uY2VBcGkENGFjY291bnRfbm9uY2UEHGFjY291bnQAEATAIEdldCBjdXJyZW50IGFjY291bnQgbm9uY2Ugb2YgZ2l2ZW4gYEFjY291bnRJZGAuBIAgVGhlIEFQSSB0byBxdWVyeSBhY2NvdW50IG5vbmNlLlRUcmFuc2FjdGlvblBheW1lbnRBcGkQKHF1ZXJ5X2luZm8IDHV4dK0HDGxlbhD5BwBEcXVlcnlfZmVlX2RldGFpbHMIDHV4dK0HDGxlbhD9BwBMcXVlcnlfd2VpZ2h0X3RvX2ZlZQQYd2VpZ2h0JBgATHF1ZXJ5X2xlbmd0aF90b19mZWUEGGxlbmd0aBAYAABkVHJhbnNhY3Rpb25QYXltZW50Q2FsbEFwaRA8cXVlcnlfY2FsbF9pbmZvCBBjYWxsWQIMbGVuEPkHBEkBIFF1ZXJ5IGluZm9ybWF0aW9uIG9mIGEgZGlzcGF0Y2ggY2xhc3MsIHdlaWdodCwgYW5kIGZlZSBvZiBhIGdpdmVuIGVuY29kZWQgYENhbGxgLlhxdWVyeV9jYWxsX2ZlZV9kZXRhaWxzCBBjYWxsWQIMbGVuEP0HBLQgUXVlcnkgZmVlIGRldGFpbHMgb2YgYSBnaXZlbiBlbmNvZGVkIGBDYWxsYC5McXVlcnlfd2VpZ2h0X3RvX2ZlZQQYd2VpZ2h0JBgEAQEgUXVlcnkgdGhlIG91dHB1dCBvZiB0aGUgY3VycmVudCBgV2VpZ2h0VG9GZWVgIGdpdmVuIHNvbWUgaW5wdXQuTHF1ZXJ5X2xlbmd0aF90b19mZWUEGGxlbmd0aBAYBAEBIFF1ZXJ5IHRoZSBvdXRwdXQgb2YgdGhlIGN1cnJlbnQgYExlbmd0aFRvRmVlYCBnaXZlbiBzb21lIGlucHV0LgBQQ29sbGVjdENvbGxhdGlvbkluZm8EWGNvbGxlY3RfY29sbGF0aW9uX2luZm8EGGhlYWRlcqkHCQgQnCBDb2xsZWN0IGluZm9ybWF0aW9uIGFib3V0IGEgY29sbGF0aW9uLgD0IFRoZSBnaXZlbiBgaGVhZGVyYCBpcyB0aGUgaGVhZGVyIG9mIHRoZSBidWlsdCBibG9jayBmb3IgdGhhdKggd2UgYXJlIGNvbGxlY3RpbmcgdGhlIGNvbGxhdGlvbiBpbmZvIGZvci4E2CBSdW50aW1lIGFwaSB0byBjb2xsZWN0IGluZm9ybWF0aW9uIGFib3V0IGEgY29sbGF0aW9uLjhHZW5lc2lzQnVpbGRlcghUY3JlYXRlX2RlZmF1bHRfY29uZmlnADQQDQEgQ3JlYXRlcyB0aGUgZGVmYXVsdCBgR2VuZXNpc0NvbmZpZ2AgYW5kIHJldHVybnMgaXQgYXMgYSBKU09OIGJsb2IuALEBIFRoaXMgZnVuY3Rpb24gaW5zdGFudGlhdGVzIHRoZSBkZWZhdWx0IGBHZW5lc2lzQ29uZmlnYCBzdHJ1Y3QgZm9yIHRoZSBydW50aW1lIGFuZCBzZXJpYWxpemVzIGl0IGludG8gYSBKU09OgQEgYmxvYi4gSXQgcmV0dXJucyBhIGBWZWM8dTg+YCBjb250YWluaW5nIHRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBkZWZhdWx0IGBHZW5lc2lzQ29uZmlnYC4wYnVpbGRfY29uZmlnBBBqc29uNBUIHG0BIEJ1aWxkIGBHZW5lc2lzQ29uZmlnYCBmcm9tIGEgSlNPTiBibG9iIG5vdCB1c2luZyBhbnkgZGVmYXVsdHMgYW5kIHN0b3JlIGl0IGluIHRoZSBzdG9yYWdlLgCtASBUaGlzIGZ1bmN0aW9uIGRlc2VyaWFsaXplcyB0aGUgZnVsbCBgR2VuZXNpc0NvbmZpZ2AgZnJvbSB0aGUgZ2l2ZW4gSlNPTiBibG9iIGFuZCBwdXRzIGl0IGludG8gdGhlIHN0b3JhZ2UupQEgSWYgdGhlIHByb3ZpZGVkIEpTT04gYmxvYiBpcyBpbmNvcnJlY3Qgb3IgaW5jb21wbGV0ZSBvciB0aGUgZGVzZXJpYWxpemF0aW9uIGZhaWxzLCBhbiBlcnJvciBpcyByZXR1cm5lZC4RASBJdCBpcyByZWNvbW1lbmRlZCB0byBsb2cgYW55IGVycm9ycyBlbmNvdW50ZXJlZCBkdXJpbmcgdGhlIHByb2Nlc3MuAJ0BIFBsZWFzZSBub3RlIHRoYXQgcHJvdmlkZWQganNvbiBibG9iIG11c3QgY29udGFpbiBhbGwgYEdlbmVzaXNDb25maWdgIGZpZWxkcywgbm8gZGVmYXVsdHMgd2lsbCBiZSB1c2VkLgTMIEFQSSB0byBpbnRlcmFjdCB3aXRoIEdlbmVzaXNDb25maWcgZm9yIHRoZSBydW50aW1lWQJQGQgA",B=A;export{B as default};
