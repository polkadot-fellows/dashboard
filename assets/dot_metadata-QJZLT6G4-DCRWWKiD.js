var A="bWV0YQ/9DgAMHHNwX2NvcmUYY3J5cHRvLEFjY291bnRJZDMyAAAEAAQBIFt1ODsgMzJdAAAEAAADIAAAAAgACAAABQMADAgwZnJhbWVfc3lzdGVtLEFjY291bnRJbmZvCBROb25jZQEQLEFjY291bnREYXRhARQAFAEUbm9uY2UQARROb25jZQABJGNvbnN1bWVycxABIFJlZkNvdW50AAEkcHJvdmlkZXJzEAEgUmVmQ291bnQAASxzdWZmaWNpZW50cxABIFJlZkNvdW50AAEQZGF0YRQBLEFjY291bnREYXRhAAAQAAAFBQAUDDxwYWxsZXRfYmFsYW5jZXMUdHlwZXMsQWNjb3VudERhdGEEHEJhbGFuY2UBGAAQARBmcmVlGAEcQmFsYW5jZQABIHJlc2VydmVkGAEcQmFsYW5jZQABGGZyb3plbhgBHEJhbGFuY2UAARRmbGFncxwBKEV4dHJhRmxhZ3MAABgAAAUHABwMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyhFeHRyYUZsYWdzAAAEABgBEHUxMjgAACAMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAEkAAwBGG5vcm1hbCQBBFQAASxvcGVyYXRpb25hbCQBBFQAASRtYW5kYXRvcnkkAQRUAAAkDChzcF93ZWlnaHRzJHdlaWdodF92MhhXZWlnaHQAAAgBIHJlZl90aW1lKAEMdTY0AAEocHJvb2Zfc2l6ZSgBDHU2NAAAKAAABiwALAAABQYAMAg8cHJpbWl0aXZlX3R5cGVzEEgyNTYAAAQABAEgW3U4OyAzMl0AADQAAAIIADgQKHNwX3J1bnRpbWUcZ2VuZXJpYxhkaWdlc3QYRGlnZXN0AAAEARBsb2dzPAE8VmVjPERpZ2VzdEl0ZW0+AAA8AAACQABAEChzcF9ydW50aW1lHGdlbmVyaWMYZGlnZXN0KERpZ2VzdEl0ZW0AARQoUHJlUnVudGltZQgARAFEQ29uc2Vuc3VzRW5naW5lSWQAADQBHFZlYzx1OD4ABgAkQ29uc2Vuc3VzCABEAURDb25zZW5zdXNFbmdpbmVJZAAANAEcVmVjPHU4PgAEABBTZWFsCABEAURDb25zZW5zdXNFbmdpbmVJZAAANAEcVmVjPHU4PgAFABRPdGhlcgQANAEcVmVjPHU4PgAAAGRSdW50aW1lRW52aXJvbm1lbnRVcGRhdGVkAAgAAEQAAAMEAAAACABIAAACTABMCDBmcmFtZV9zeXN0ZW0sRXZlbnRSZWNvcmQIBEUBUARUATAADAEUcGhhc2UxCAEUUGhhc2UAARRldmVudFABBEUAARh0b3BpY3O5AQEYVmVjPFQ+AABQCEBwb2xrYWRvdF9ydW50aW1lMFJ1bnRpbWVFdmVudAABoBhTeXN0ZW0EAFQBcGZyYW1lX3N5c3RlbTo6RXZlbnQ8UnVudGltZT4AAAAkU2NoZWR1bGVyBAB8AYBwYWxsZXRfc2NoZWR1bGVyOjpFdmVudDxSdW50aW1lPgABACBQcmVpbWFnZQQAkAF8cGFsbGV0X3ByZWltYWdlOjpFdmVudDxSdW50aW1lPgAKABxJbmRpY2VzBACUAXhwYWxsZXRfaW5kaWNlczo6RXZlbnQ8UnVudGltZT4ABAAgQmFsYW5jZXMEAJgBfHBhbGxldF9iYWxhbmNlczo6RXZlbnQ8UnVudGltZT4ABQBIVHJhbnNhY3Rpb25QYXltZW50BACgAahwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudDo6RXZlbnQ8UnVudGltZT4AIAAcU3Rha2luZwQApAF4cGFsbGV0X3N0YWtpbmc6OkV2ZW50PFJ1bnRpbWU+AAcAIE9mZmVuY2VzBAC8AVhwYWxsZXRfb2ZmZW5jZXM6OkV2ZW50AAgAHFNlc3Npb24EAMQBVHBhbGxldF9zZXNzaW9uOjpFdmVudAAJABxHcmFuZHBhBADIAVRwYWxsZXRfZ3JhbmRwYTo6RXZlbnQACwAgSW1PbmxpbmUEANwBgHBhbGxldF9pbV9vbmxpbmU6OkV2ZW50PFJ1bnRpbWU+AAwAIFRyZWFzdXJ5BAABAQF8cGFsbGV0X3RyZWFzdXJ5OjpFdmVudDxSdW50aW1lPgATAEBDb252aWN0aW9uVm90aW5nBACJAQGgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nOjpFdmVudDxSdW50aW1lPgAUACRSZWZlcmVuZGEEAI0BAYBwYWxsZXRfcmVmZXJlbmRhOjpFdmVudDxSdW50aW1lPgAVACRXaGl0ZWxpc3QEAIkHAYBwYWxsZXRfd2hpdGVsaXN0OjpFdmVudDxSdW50aW1lPgAXABhDbGFpbXMEAJ0HAVhjbGFpbXM6OkV2ZW50PFJ1bnRpbWU+ABgAHFZlc3RpbmcEAKEHAXhwYWxsZXRfdmVzdGluZzo6RXZlbnQ8UnVudGltZT4AGQAcVXRpbGl0eQQApQcBVHBhbGxldF91dGlsaXR5OjpFdmVudAAaACBJZGVudGl0eQQAqQcBfHBhbGxldF9pZGVudGl0eTo6RXZlbnQ8UnVudGltZT4AHAAUUHJveHkEAK0HAXBwYWxsZXRfcHJveHk6OkV2ZW50PFJ1bnRpbWU+AB0AIE11bHRpc2lnBACxBwF8cGFsbGV0X211bHRpc2lnOjpFdmVudDxSdW50aW1lPgAeACBCb3VudGllcwQAtQcBfHBhbGxldF9ib3VudGllczo6RXZlbnQ8UnVudGltZT4AIgA0Q2hpbGRCb3VudGllcwQAuQcBlHBhbGxldF9jaGlsZF9ib3VudGllczo6RXZlbnQ8UnVudGltZT4AJgBoRWxlY3Rpb25Qcm92aWRlck11bHRpUGhhc2UEAL0HAdBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2U6OkV2ZW50PFJ1bnRpbWU+ACQAJFZvdGVyTGlzdAQAzQcB9HBhbGxldF9iYWdzX2xpc3Q6OkV2ZW50PFJ1bnRpbWUsIHBhbGxldF9iYWdzX2xpc3Q6Okluc3RhbmNlMT4AJQA8Tm9taW5hdGlvblBvb2xzBADRBwGccGFsbGV0X25vbWluYXRpb25fcG9vbHM6OkV2ZW50PFJ1bnRpbWU+ACcALEZhc3RVbnN0YWtlBADVBwGMcGFsbGV0X2Zhc3RfdW5zdGFrZTo6RXZlbnQ8UnVudGltZT4AKAA0UGFyYUluY2x1c2lvbgQA2QcBkHBhcmFjaGFpbnNfaW5jbHVzaW9uOjpFdmVudDxSdW50aW1lPgA1ABRQYXJhcwQA6QcBXHBhcmFjaGFpbnNfcGFyYXM6OkV2ZW50ADgAEEhybXAEAO0HAXxwYXJhY2hhaW5zX2hybXA6OkV2ZW50PFJ1bnRpbWU+ADwANFBhcmFzRGlzcHV0ZXMEAPEHAYxwYXJhY2hhaW5zX2Rpc3B1dGVzOjpFdmVudDxSdW50aW1lPgA+ACRSZWdpc3RyYXIEAP0HAXxwYXJhc19yZWdpc3RyYXI6OkV2ZW50PFJ1bnRpbWU+AEYAFFNsb3RzBAABCAFUc2xvdHM6OkV2ZW50PFJ1bnRpbWU+AEcAIEF1Y3Rpb25zBAAFCAFgYXVjdGlvbnM6OkV2ZW50PFJ1bnRpbWU+AEgAJENyb3dkbG9hbgQACQgBZGNyb3dkbG9hbjo6RXZlbnQ8UnVudGltZT4ASQBIU3RhdGVUcmllTWlncmF0aW9uBAANCAGscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uOjpFdmVudDxSdW50aW1lPgBiACRYY21QYWxsZXQEABkIAWhwYWxsZXRfeGNtOjpFdmVudDxSdW50aW1lPgBjADBNZXNzYWdlUXVldWUEACEIAZBwYWxsZXRfbWVzc2FnZV9xdWV1ZTo6RXZlbnQ8UnVudGltZT4AZAAkQXNzZXRSYXRlBAApCAGEcGFsbGV0X2Fzc2V0X3JhdGU6OkV2ZW50PFJ1bnRpbWU+AGUAQElkZW50aXR5TWlncmF0b3IEAC0IAYRpZGVudGl0eV9taWdyYXRvcjo6RXZlbnQ8UnVudGltZT4A+AAAVAwwZnJhbWVfc3lzdGVtGHBhbGxldBRFdmVudAQEVAABHEBFeHRyaW5zaWNTdWNjZXNzBAE0ZGlzcGF0Y2hfaW5mb1gBMERpc3BhdGNoSW5mbwAABJBBbiBleHRyaW5zaWMgY29tcGxldGVkIHN1Y2Nlc3NmdWxseS48RXh0cmluc2ljRmFpbGVkCAE4ZGlzcGF0Y2hfZXJyb3JkATREaXNwYXRjaEVycm9yAAE0ZGlzcGF0Y2hfaW5mb1gBMERpc3BhdGNoSW5mbwABBFBBbiBleHRyaW5zaWMgZmFpbGVkLixDb2RlVXBkYXRlZAACBFBgOmNvZGVgIHdhcyB1cGRhdGVkLihOZXdBY2NvdW50BAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAADBGhBIG5ldyBhY2NvdW50IHdhcyBjcmVhdGVkLjRLaWxsZWRBY2NvdW50BAEcYWNjb3VudAABMFQ6OkFjY291bnRJZAAEBFhBbiBhY2NvdW50IHdhcyByZWFwZWQuIFJlbWFya2VkCAEYc2VuZGVyAAEwVDo6QWNjb3VudElkAAEQaGFzaDABHFQ6Okhhc2gABQRwT24gb24tY2hhaW4gcmVtYXJrIGhhcHBlbmVkLkRVcGdyYWRlQXV0aG9yaXplZAgBJGNvZGVfaGFzaDABHFQ6Okhhc2gAATRjaGVja192ZXJzaW9ueAEQYm9vbAAGBGhBbiB1cGdyYWRlIHdhcyBhdXRob3JpemVkLgRwRXZlbnQgZm9yIHRoZSBTeXN0ZW0gcGFsbGV0LlgMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2gwRGlzcGF0Y2hJbmZvAAAMARh3ZWlnaHQkARhXZWlnaHQAARRjbGFzc1wBNERpc3BhdGNoQ2xhc3MAASBwYXlzX2ZlZWABEFBheXMAAFwMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2g0RGlzcGF0Y2hDbGFzcwABDBhOb3JtYWwAAAAsT3BlcmF0aW9uYWwAAQAkTWFuZGF0b3J5AAIAAGAMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2gQUGF5cwABCAxZZXMAAAAITm8AAQAAZAgoc3BfcnVudGltZTREaXNwYXRjaEVycm9yAAE4FE90aGVyAAAAMENhbm5vdExvb2t1cAABACRCYWRPcmlnaW4AAgAYTW9kdWxlBABoASxNb2R1bGVFcnJvcgADAERDb25zdW1lclJlbWFpbmluZwAEACxOb1Byb3ZpZGVycwAFAEBUb29NYW55Q29uc3VtZXJzAAYAFFRva2VuBABsAShUb2tlbkVycm9yAAcAKEFyaXRobWV0aWMEAHABPEFyaXRobWV0aWNFcnJvcgAIADRUcmFuc2FjdGlvbmFsBAB0AUhUcmFuc2FjdGlvbmFsRXJyb3IACQAkRXhoYXVzdGVkAAoAKENvcnJ1cHRpb24ACwAsVW5hdmFpbGFibGUADAA4Um9vdE5vdEFsbG93ZWQADQAAaAgoc3BfcnVudGltZSxNb2R1bGVFcnJvcgAACAEUaW5kZXgIAQh1OAABFGVycm9yRAGMW3U4OyBNQVhfTU9EVUxFX0VSUk9SX0VOQ09ERURfU0laRV0AAGwIKHNwX3J1bnRpbWUoVG9rZW5FcnJvcgABKEBGdW5kc1VuYXZhaWxhYmxlAAAAME9ubHlQcm92aWRlcgABADBCZWxvd01pbmltdW0AAgAwQ2Fubm90Q3JlYXRlAAMAMFVua25vd25Bc3NldAAEABhGcm96ZW4ABQAsVW5zdXBwb3J0ZWQABgBAQ2Fubm90Q3JlYXRlSG9sZAAHADROb3RFeHBlbmRhYmxlAAgAHEJsb2NrZWQACQAAcAg0c3BfYXJpdGhtZXRpYzxBcml0aG1ldGljRXJyb3IAAQwkVW5kZXJmbG93AAAAIE92ZXJmbG93AAEAOERpdmlzaW9uQnlaZXJvAAIAAHQIKHNwX3J1bnRpbWVIVHJhbnNhY3Rpb25hbEVycm9yAAEIMExpbWl0UmVhY2hlZAAAABxOb0xheWVyAAEAAHgAAAUAAHwMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0FEV2ZW50BARUAAEYJFNjaGVkdWxlZAgBEHdoZW4QAURCbG9ja051bWJlckZvcjxUPgABFGluZGV4EAEMdTMyAAAEUFNjaGVkdWxlZCBzb21lIHRhc2suIENhbmNlbGVkCAEQd2hlbhABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXgQAQx1MzIAAQRMQ2FuY2VsZWQgc29tZSB0YXNrLihEaXNwYXRjaGVkDAEQdGFza4ABeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkhAFAT3B0aW9uPFRhc2tOYW1lPgABGHJlc3VsdIgBOERpc3BhdGNoUmVzdWx0AAIEVERpc3BhdGNoZWQgc29tZSB0YXNrLjxDYWxsVW5hdmFpbGFibGUIARB0YXNrgAF4VGFza0FkZHJlc3M8QmxvY2tOdW1iZXJGb3I8VD4+AAEIaWSEAUBPcHRpb248VGFza05hbWU+AAMEKQFUaGUgY2FsbCBmb3IgdGhlIHByb3ZpZGVkIGhhc2ggd2FzIG5vdCBmb3VuZCBzbyB0aGUgdGFzayBoYXMgYmVlbiBhYm9ydGVkLjhQZXJpb2RpY0ZhaWxlZAgBEHRhc2uAAXhUYXNrQWRkcmVzczxCbG9ja051bWJlckZvcjxUPj4AAQhpZIQBQE9wdGlvbjxUYXNrTmFtZT4ABAQ9AVRoZSBnaXZlbiB0YXNrIHdhcyB1bmFibGUgdG8gYmUgcmVuZXdlZCBzaW5jZSB0aGUgYWdlbmRhIGlzIGZ1bGwgYXQgdGhhdCBibG9jay5UUGVybWFuZW50bHlPdmVyd2VpZ2h0CAEQdGFza4ABeFRhc2tBZGRyZXNzPEJsb2NrTnVtYmVyRm9yPFQ+PgABCGlkhAFAT3B0aW9uPFRhc2tOYW1lPgAFBPBUaGUgZ2l2ZW4gdGFzayBjYW4gbmV2ZXIgYmUgZXhlY3V0ZWQgc2luY2UgaXQgaXMgb3ZlcndlaWdodC4EMEV2ZW50cyB0eXBlLoAAAAQIEBAAhAQYT3B0aW9uBARUAQQBCBBOb25lAAAAEFNvbWUEAAQAAAEAAIgEGFJlc3VsdAgEVAGMBEUBZAEICE9rBACMAAAAAAxFcnIEAGQAAAEAAIwAAAQAAJAMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQURXZlbnQEBFQAAQwUTm90ZWQEARBoYXNoMAEcVDo6SGFzaAAABGhBIHByZWltYWdlIGhhcyBiZWVuIG5vdGVkLiRSZXF1ZXN0ZWQEARBoYXNoMAEcVDo6SGFzaAABBHhBIHByZWltYWdlIGhhcyBiZWVuIHJlcXVlc3RlZC4cQ2xlYXJlZAQBEGhhc2gwARxUOjpIYXNoAAIEbEEgcHJlaW1hZ2UgaGFzIGJlbiBjbGVhcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJQMOHBhbGxldF9pbmRpY2VzGHBhbGxldBRFdmVudAQEVAABDDRJbmRleEFzc2lnbmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgAAAR0QSBhY2NvdW50IGluZGV4IHdhcyBhc3NpZ25lZC4oSW5kZXhGcmVlZAQBFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAEEvEEgYWNjb3VudCBpbmRleCBoYXMgYmVlbiBmcmVlZCB1cCAodW5hc3NpZ25lZCkuLEluZGV4RnJvemVuCAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgAAQx3aG8AATBUOjpBY2NvdW50SWQAAgToQSBhY2NvdW50IGluZGV4IGhhcyBiZWVuIGZyb3plbiB0byBpdHMgY3VycmVudCBhY2NvdW50IElELgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldJgMPHBhbGxldF9iYWxhbmNlcxhwYWxsZXQURXZlbnQIBFQABEkAAVgcRW5kb3dlZAgBHGFjY291bnQAATBUOjpBY2NvdW50SWQAATBmcmVlX2JhbGFuY2UYAShUOjpCYWxhbmNlAAAEuEFuIGFjY291bnQgd2FzIGNyZWF0ZWQgd2l0aCBzb21lIGZyZWUgYmFsYW5jZS4gRHVzdExvc3QIARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQABCD0BQW4gYWNjb3VudCB3YXMgcmVtb3ZlZCB3aG9zZSBiYWxhbmNlIHdhcyBub24temVybyBidXQgYmVsb3cgRXhpc3RlbnRpYWxEZXBvc2l0LHhyZXN1bHRpbmcgaW4gYW4gb3V0cmlnaHQgbG9zcy4gVHJhbnNmZXIMARBmcm9tAAEwVDo6QWNjb3VudElkAAEIdG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAIETFRyYW5zZmVyIHN1Y2NlZWRlZC4oQmFsYW5jZVNldAgBDHdobwABMFQ6OkFjY291bnRJZAABEGZyZWUYAShUOjpCYWxhbmNlAAMEaEEgYmFsYW5jZSB3YXMgc2V0IGJ5IHJvb3QuIFJlc2VydmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAEBOBTb21lIGJhbGFuY2Ugd2FzIHJlc2VydmVkIChtb3ZlZCBmcm9tIGZyZWUgdG8gcmVzZXJ2ZWQpLihVbnJlc2VydmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAFBOhTb21lIGJhbGFuY2Ugd2FzIHVucmVzZXJ2ZWQgKG1vdmVkIGZyb20gcmVzZXJ2ZWQgdG8gZnJlZSkuSFJlc2VydmVSZXBhdHJpYXRlZBABEGZyb20AATBUOjpBY2NvdW50SWQAAQh0bwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAAUhkZXN0aW5hdGlvbl9zdGF0dXOcARhTdGF0dXMABghNAVNvbWUgYmFsYW5jZSB3YXMgbW92ZWQgZnJvbSB0aGUgcmVzZXJ2ZSBvZiB0aGUgZmlyc3QgYWNjb3VudCB0byB0aGUgc2Vjb25kIGFjY291bnQu2EZpbmFsIGFyZ3VtZW50IGluZGljYXRlcyB0aGUgZGVzdGluYXRpb24gYmFsYW5jZSB0eXBlLhxEZXBvc2l0CAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAHBNhTb21lIGFtb3VudCB3YXMgZGVwb3NpdGVkIChlLmcuIGZvciB0cmFuc2FjdGlvbiBmZWVzKS4gV2l0aGRyYXcIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAgEHQFTb21lIGFtb3VudCB3YXMgd2l0aGRyYXduIGZyb20gdGhlIGFjY291bnQgKGUuZy4gZm9yIHRyYW5zYWN0aW9uIGZlZXMpLhxTbGFzaGVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAJBAEBU29tZSBhbW91bnQgd2FzIHJlbW92ZWQgZnJvbSB0aGUgYWNjb3VudCAoZS5nLiBmb3IgbWlzYmVoYXZpb3IpLhhNaW50ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAoEnFNvbWUgYW1vdW50IHdhcyBtaW50ZWQgaW50byBhbiBhY2NvdW50LhhCdXJuZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAsEnFNvbWUgYW1vdW50IHdhcyBidXJuZWQgZnJvbSBhbiBhY2NvdW50LiRTdXNwZW5kZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAAwEFQFTb21lIGFtb3VudCB3YXMgc3VzcGVuZGVkIGZyb20gYW4gYWNjb3VudCAoaXQgY2FuIGJlIHJlc3RvcmVkIGxhdGVyKS4gUmVzdG9yZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlAA0EpFNvbWUgYW1vdW50IHdhcyByZXN0b3JlZCBpbnRvIGFuIGFjY291bnQuIFVwZ3JhZGVkBAEMd2hvAAEwVDo6QWNjb3VudElkAA4EYEFuIGFjY291bnQgd2FzIHVwZ3JhZGVkLhhJc3N1ZWQEARhhbW91bnQYAShUOjpCYWxhbmNlAA8ELQFUb3RhbCBpc3N1YW5jZSB3YXMgaW5jcmVhc2VkIGJ5IGBhbW91bnRgLCBjcmVhdGluZyBhIGNyZWRpdCB0byBiZSBiYWxhbmNlZC4kUmVzY2luZGVkBAEYYW1vdW50GAEoVDo6QmFsYW5jZQAQBCUBVG90YWwgaXNzdWFuY2Ugd2FzIGRlY3JlYXNlZCBieSBgYW1vdW50YCwgY3JlYXRpbmcgYSBkZWJ0IHRvIGJlIGJhbGFuY2VkLhhMb2NrZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARhhbW91bnQYAShUOjpCYWxhbmNlABEEYFNvbWUgYmFsYW5jZSB3YXMgbG9ja2VkLiBVbmxvY2tlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBKFQ6OkJhbGFuY2UAEgRoU29tZSBiYWxhbmNlIHdhcyB1bmxvY2tlZC4YRnJvemVuCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQATBGBTb21lIGJhbGFuY2Ugd2FzIGZyb3plbi4YVGhhd2VkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEoVDo6QmFsYW5jZQAUBGBTb21lIGJhbGFuY2Ugd2FzIHRoYXdlZC5MVG90YWxJc3N1YW5jZUZvcmNlZAgBDG9sZBgBKFQ6OkJhbGFuY2UAAQxuZXcYAShUOjpCYWxhbmNlABUErFRoZSBgVG90YWxJc3N1YW5jZWAgd2FzIGZvcmNlZnVsbHkgY2hhbmdlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXScFDRmcmFtZV9zdXBwb3J0GHRyYWl0cxh0b2tlbnMQbWlzYzRCYWxhbmNlU3RhdHVzAAEIEEZyZWUAAAAgUmVzZXJ2ZWQAAQAAoAxocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQYcGFsbGV0FEV2ZW50BARUAAEESFRyYW5zYWN0aW9uRmVlUGFpZAwBDHdobwABMFQ6OkFjY291bnRJZAABKGFjdHVhbF9mZWUYATBCYWxhbmNlT2Y8VD4AAQx0aXAYATBCYWxhbmNlT2Y8VD4AAAhZAUEgdHJhbnNhY3Rpb24gZmVlIGBhY3R1YWxfZmVlYCwgb2Ygd2hpY2ggYHRpcGAgd2FzIGFkZGVkIHRvIHRoZSBtaW5pbXVtIGluY2x1c2lvbiBmZWUsXGhhcyBiZWVuIHBhaWQgYnkgYHdob2AuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0pBA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldBRFdmVudAQEVAABSBxFcmFQYWlkDAEkZXJhX2luZGV4EAEgRXJhSW5kZXgAAUB2YWxpZGF0b3JfcGF5b3V0GAEwQmFsYW5jZU9mPFQ+AAEkcmVtYWluZGVyGAEwQmFsYW5jZU9mPFQ+AAAIVQFUaGUgZXJhIHBheW91dCBoYXMgYmVlbiBzZXQ7IHRoZSBmaXJzdCBiYWxhbmNlIGlzIHRoZSB2YWxpZGF0b3ItcGF5b3V0OyB0aGUgc2Vjb25kIGlzwHRoZSByZW1haW5kZXIgZnJvbSB0aGUgbWF4aW11bSBhbW91bnQgb2YgcmV3YXJkLiBSZXdhcmRlZAwBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEQZGVzdKgBfFJld2FyZERlc3RpbmF0aW9uPFQ6OkFjY291bnRJZD4AARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAQQNAVRoZSBub21pbmF0b3IgaGFzIGJlZW4gcmV3YXJkZWQgYnkgdGhpcyBhbW91bnQgdG8gdGhpcyBkZXN0aW5hdGlvbi4cU2xhc2hlZAgBGHN0YWtlcgABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgACBB0BQSBzdGFrZXIgKHZhbGlkYXRvciBvciBub21pbmF0b3IpIGhhcyBiZWVuIHNsYXNoZWQgYnkgdGhlIGdpdmVuIGFtb3VudC40U2xhc2hSZXBvcnRlZAwBJHZhbGlkYXRvcgABMFQ6OkFjY291bnRJZAABIGZyYWN0aW9urAEcUGVyYmlsbAABJHNsYXNoX2VyYRABIEVyYUluZGV4AAMIWQFBIHNsYXNoIGZvciB0aGUgZ2l2ZW4gdmFsaWRhdG9yLCBmb3IgdGhlIGdpdmVuIHBlcmNlbnRhZ2Ugb2YgdGhlaXIgc3Rha2UsIGF0IHRoZSBnaXZlblRlcmEgYXMgYmVlbiByZXBvcnRlZC5oT2xkU2xhc2hpbmdSZXBvcnREaXNjYXJkZWQEATRzZXNzaW9uX2luZGV4EAEwU2Vzc2lvbkluZGV4AAQIGQFBbiBvbGQgc2xhc2hpbmcgcmVwb3J0IGZyb20gYSBwcmlvciBlcmEgd2FzIGRpc2NhcmRlZCBiZWNhdXNlIGl0IGNvdWxkRG5vdCBiZSBwcm9jZXNzZWQuOFN0YWtlcnNFbGVjdGVkAAUEhEEgbmV3IHNldCBvZiBzdGFrZXJzIHdhcyBlbGVjdGVkLhhCb25kZWQIARRzdGFzaAABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAGENBBbiBhY2NvdW50IGhhcyBib25kZWQgdGhpcyBhbW91bnQuIFxbc3Rhc2gsIGFtb3VudFxdAE0BTk9URTogVGhpcyBldmVudCBpcyBvbmx5IGVtaXR0ZWQgd2hlbiBmdW5kcyBhcmUgYm9uZGVkIHZpYSBhIGRpc3BhdGNoYWJsZS4gTm90YWJseSwhAWl0IHdpbGwgbm90IGJlIGVtaXR0ZWQgZm9yIHN0YWtpbmcgcmV3YXJkcyB3aGVuIHRoZXkgYXJlIGFkZGVkIHRvIHN0YWtlLiBVbmJvbmRlZAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAcEkEFuIGFjY291bnQgaGFzIHVuYm9uZGVkIHRoaXMgYW1vdW50LiRXaXRoZHJhd24IARRzdGFzaAABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAICFkBQW4gYWNjb3VudCBoYXMgY2FsbGVkIGB3aXRoZHJhd191bmJvbmRlZGAgYW5kIHJlbW92ZWQgdW5ib25kaW5nIGNodW5rcyB3b3J0aCBgQmFsYW5jZWBkZnJvbSB0aGUgdW5sb2NraW5nIHF1ZXVlLhhLaWNrZWQIASRub21pbmF0b3IAATBUOjpBY2NvdW50SWQAARRzdGFzaAABMFQ6OkFjY291bnRJZAAJBLRBIG5vbWluYXRvciBoYXMgYmVlbiBraWNrZWQgZnJvbSBhIHZhbGlkYXRvci5UU3Rha2luZ0VsZWN0aW9uRmFpbGVkAAoErFRoZSBlbGVjdGlvbiBmYWlsZWQuIE5vIG5ldyBlcmEgaXMgcGxhbm5lZC4cQ2hpbGxlZAQBFHN0YXNoAAEwVDo6QWNjb3VudElkAAsEIQFBbiBhY2NvdW50IGhhcyBzdG9wcGVkIHBhcnRpY2lwYXRpbmcgYXMgZWl0aGVyIGEgdmFsaWRhdG9yIG9yIG5vbWluYXRvci40UGF5b3V0U3RhcnRlZAgBJGVyYV9pbmRleBABIEVyYUluZGV4AAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkAAwEmFRoZSBzdGFrZXJzJyByZXdhcmRzIGFyZSBnZXR0aW5nIHBhaWQuRFZhbGlkYXRvclByZWZzU2V0CAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAARRwcmVmc7ABOFZhbGlkYXRvclByZWZzAA0EmEEgdmFsaWRhdG9yIGhhcyBzZXQgdGhlaXIgcHJlZmVyZW5jZXMuaFNuYXBzaG90Vm90ZXJzU2l6ZUV4Y2VlZGVkBAEQc2l6ZRABDHUzMgAOBGhWb3RlcnMgc2l6ZSBsaW1pdCByZWFjaGVkLmxTbmFwc2hvdFRhcmdldHNTaXplRXhjZWVkZWQEARBzaXplEAEMdTMyAA8EbFRhcmdldHMgc2l6ZSBsaW1pdCByZWFjaGVkLiBGb3JjZUVyYQQBEG1vZGW4ARxGb3JjaW5nABAEdEEgbmV3IGZvcmNlIGVyYSBtb2RlIHdhcyBzZXQuZENvbnRyb2xsZXJCYXRjaERlcHJlY2F0ZWQEASBmYWlsdXJlcxABDHUzMgARBKRSZXBvcnQgb2YgYSBjb250cm9sbGVyIGJhdGNoIGRlcHJlY2F0aW9uLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldKgIOHBhbGxldF9zdGFraW5nRFJld2FyZERlc3RpbmF0aW9uBCRBY2NvdW50SWQBAAEUGFN0YWtlZAAAABRTdGFzaAABAChDb250cm9sbGVyAAIAHEFjY291bnQEAAABJEFjY291bnRJZAADABBOb25lAAQAAKwMNHNwX2FyaXRobWV0aWMocGVyX3RoaW5ncxxQZXJiaWxsAAAEABABDHUzMgAAsAg4cGFsbGV0X3N0YWtpbmc4VmFsaWRhdG9yUHJlZnMAAAgBKGNvbW1pc3Npb260ARxQZXJiaWxsAAEcYmxvY2tlZHgBEGJvb2wAALQAAAasALgIOHBhbGxldF9zdGFraW5nHEZvcmNpbmcAARAoTm90Rm9yY2luZwAAACBGb3JjZU5ldwABACRGb3JjZU5vbmUAAgAsRm9yY2VBbHdheXMAAwAAvAw8cGFsbGV0X29mZmVuY2VzGHBhbGxldBRFdmVudAABBBxPZmZlbmNlCAEQa2luZMABEEtpbmQAASB0aW1lc2xvdDQBOE9wYXF1ZVRpbWVTbG90AAAMUQFUaGVyZSBpcyBhbiBvZmZlbmNlIHJlcG9ydGVkIG9mIHRoZSBnaXZlbiBga2luZGAgaGFwcGVuZWQgYXQgdGhlIGBzZXNzaW9uX2luZGV4YCBhbmQ1AShraW5kLXNwZWNpZmljKSB0aW1lIHNsb3QuIFRoaXMgZXZlbnQgaXMgbm90IGRlcG9zaXRlZCBmb3IgZHVwbGljYXRlIHNsYXNoZXMuTFxba2luZCwgdGltZXNsb3RcXS4EMEV2ZW50cyB0eXBlLsAAAAMQAAAACADEDDhwYWxsZXRfc2Vzc2lvbhhwYWxsZXQURXZlbnQAAQQoTmV3U2Vzc2lvbgQBNHNlc3Npb25faW5kZXgQATBTZXNzaW9uSW5kZXgAAAg5AU5ldyBzZXNzaW9uIGhhcyBoYXBwZW5lZC4gTm90ZSB0aGF0IHRoZSBhcmd1bWVudCBpcyB0aGUgc2Vzc2lvbiBpbmRleCwgbm90IHRoZZxibG9jayBudW1iZXIgYXMgdGhlIHR5cGUgbWlnaHQgc3VnZ2VzdC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTIDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQURXZlbnQAAQw4TmV3QXV0aG9yaXRpZXMEATRhdXRob3JpdHlfc2V0zAE0QXV0aG9yaXR5TGlzdAAABIxOZXcgYXV0aG9yaXR5IHNldCBoYXMgYmVlbiBhcHBsaWVkLhhQYXVzZWQAAQSYQ3VycmVudCBhdXRob3JpdHkgc2V0IGhhcyBiZWVuIHBhdXNlZC4cUmVzdW1lZAACBJxDdXJyZW50IGF1dGhvcml0eSBzZXQgaGFzIGJlZW4gcmVzdW1lZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTMAAAC0ADQAAAECNQsANQMUHNwX2NvbnNlbnN1c19ncmFuZHBhDGFwcBhQdWJsaWMAAAQA2AE8ZWQyNTUxOTo6UHVibGljAADYDBxzcF9jb3JlHGVkMjU1MTkYUHVibGljAAAEAAQBIFt1ODsgMzJdAADcEEBwb2xrYWRvdF9ydW50aW1lQHBhbGxldF9pbV9vbmxpbmUYcGFsbGV0FEV2ZW50BARUAAEMREhlYXJ0YmVhdFJlY2VpdmVkBAEwYXV0aG9yaXR5X2lk4AFsc3VwZXI6OnNyMjU1MTk6OkF1dGhvcml0eUlkAAAAHEFsbEdvb2QAAQAsU29tZU9mZmxpbmUEARxvZmZsaW5l6AGgc3Bfc3RkOjp2ZWM6OlZlYzxJZGVudGlmaWNhdGlvblR1cGxlPFQ+PgACAAR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldOAUQHBvbGthZG90X3J1bnRpbWVAcGFsbGV0X2ltX29ubGluZRxzcjI1NTE5LGFwcF9zcjI1NTE5GFB1YmxpYwAABADkATxzcjI1NTE5OjpQdWJsaWMAAOQMHHNwX2NvcmUcc3IyNTUxORhQdWJsaWMAAAQABAEgW3U4OyAzMl0AAOgAAALsAOwAAAQIAPAA8Agoc3Bfc3Rha2luZyBFeHBvc3VyZQgkQWNjb3VudElkAQAcQmFsYW5jZQEYAAwBFHRvdGFs9AEcQmFsYW5jZQABDG93bvQBHEJhbGFuY2UAARhvdGhlcnP4AaxWZWM8SW5kaXZpZHVhbEV4cG9zdXJlPEFjY291bnRJZCwgQmFsYW5jZT4+AAD0AAAGGAD4AAAC/AD8CChzcF9zdGFraW5nSEluZGl2aWR1YWxFeHBvc3VyZQgkQWNjb3VudElkAQAcQmFsYW5jZQEYAAgBDHdobwABJEFjY291bnRJZAABFHZhbHVl9AEcQmFsYW5jZQAAAQEMPHBhbGxldF90cmVhc3VyeRhwYWxsZXQURXZlbnQIBFQABEkAATggUHJvcG9zZWQEAThwcm9wb3NhbF9pbmRleBABNFByb3Bvc2FsSW5kZXgAAAQ0TmV3IHByb3Bvc2FsLiBTcGVuZGluZwQBQGJ1ZGdldF9yZW1haW5pbmcYATxCYWxhbmNlT2Y8VCwgST4AAQTkV2UgaGF2ZSBlbmRlZCBhIHNwZW5kIHBlcmlvZCBhbmQgd2lsbCBub3cgYWxsb2NhdGUgZnVuZHMuHEF3YXJkZWQMAThwcm9wb3NhbF9pbmRleBABNFByb3Bvc2FsSW5kZXgAARRhd2FyZBgBPEJhbGFuY2VPZjxULCBJPgABHGFjY291bnQAATBUOjpBY2NvdW50SWQAAgR8U29tZSBmdW5kcyBoYXZlIGJlZW4gYWxsb2NhdGVkLiBSZWplY3RlZAgBOHByb3Bvc2FsX2luZGV4EAE0UHJvcG9zYWxJbmRleAABHHNsYXNoZWQYATxCYWxhbmNlT2Y8VCwgST4AAwSwQSBwcm9wb3NhbCB3YXMgcmVqZWN0ZWQ7IGZ1bmRzIHdlcmUgc2xhc2hlZC4UQnVybnQEASxidXJudF9mdW5kcxgBPEJhbGFuY2VPZjxULCBJPgAEBIhTb21lIG9mIG91ciBmdW5kcyBoYXZlIGJlZW4gYnVybnQuIFJvbGxvdmVyBAFAcm9sbG92ZXJfYmFsYW5jZRgBPEJhbGFuY2VPZjxULCBJPgAFBC0BU3BlbmRpbmcgaGFzIGZpbmlzaGVkOyB0aGlzIGlzIHRoZSBhbW91bnQgdGhhdCByb2xscyBvdmVyIHVudGlsIG5leHQgc3BlbmQuHERlcG9zaXQEARR2YWx1ZRgBPEJhbGFuY2VPZjxULCBJPgAGBHxTb21lIGZ1bmRzIGhhdmUgYmVlbiBkZXBvc2l0ZWQuNFNwZW5kQXBwcm92ZWQMAThwcm9wb3NhbF9pbmRleBABNFByb3Bvc2FsSW5kZXgAARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAAHBJxBIG5ldyBzcGVuZCBwcm9wb3NhbCBoYXMgYmVlbiBhcHByb3ZlZC48VXBkYXRlZEluYWN0aXZlCAEscmVhY3RpdmF0ZWQYATxCYWxhbmNlT2Y8VCwgST4AASxkZWFjdGl2YXRlZBgBPEJhbGFuY2VPZjxULCBJPgAIBMxUaGUgaW5hY3RpdmUgZnVuZHMgb2YgdGhlIHBhbGxldCBoYXZlIGJlZW4gdXBkYXRlZC5IQXNzZXRTcGVuZEFwcHJvdmVkGAEUaW5kZXgQAShTcGVuZEluZGV4AAEoYXNzZXRfa2luZAUBATBUOjpBc3NldEtpbmQAARhhbW91bnQYAVBBc3NldEJhbGFuY2VPZjxULCBJPgABLGJlbmVmaWNpYXJ5aQEBOFQ6OkJlbmVmaWNpYXJ5AAEodmFsaWRfZnJvbRABREJsb2NrTnVtYmVyRm9yPFQ+AAEkZXhwaXJlX2F0EAFEQmxvY2tOdW1iZXJGb3I8VD4ACQS0QSBuZXcgYXNzZXQgc3BlbmQgcHJvcG9zYWwgaGFzIGJlZW4gYXBwcm92ZWQuQEFzc2V0U3BlbmRWb2lkZWQEARRpbmRleBABKFNwZW5kSW5kZXgACgR0QW4gYXBwcm92ZWQgc3BlbmQgd2FzIHZvaWRlZC4QUGFpZAgBFGluZGV4EAEoU3BlbmRJbmRleAABKHBheW1lbnRfaWQsAWQ8VDo6UGF5bWFzdGVyIGFzIFBheT46OklkAAsETEEgcGF5bWVudCBoYXBwZW5lZC40UGF5bWVudEZhaWxlZAgBFGluZGV4EAEoU3BlbmRJbmRleAABKHBheW1lbnRfaWQsAWQ8VDo6UGF5bWFzdGVyIGFzIFBheT46OklkAAwEkEEgcGF5bWVudCBmYWlsZWQgYW5kIGNhbiBiZSByZXRyaWVkLjhTcGVuZFByb2Nlc3NlZAQBFGluZGV4EAEoU3BlbmRJbmRleAANCE0BQSBzcGVuZCB3YXMgcHJvY2Vzc2VkIGFuZCByZW1vdmVkIGZyb20gdGhlIHN0b3JhZ2UuIEl0IG1pZ2h0IGhhdmUgYmVlbiBzdWNjZXNzZnVsbHlwcGFpZCBvciBpdCBtYXkgaGF2ZSBleHBpcmVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldAUBDFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhRpbXBsc1xWZXJzaW9uZWRMb2NhdGFibGVBc3NldAABCAhWMwgBIGxvY2F0aW9uCQEBWHhjbTo6djM6Ok11bHRpTG9jYXRpb24AASBhc3NldF9pZC0BAUB4Y206OnYzOjpBc3NldElkAAMACFY0CAEgbG9jYXRpb24xAQFEeGNtOjp2NDo6TG9jYXRpb24AASBhc3NldF9pZGUBAUB4Y206OnY0OjpBc3NldElkAAQAAAkBECxzdGFnaW5nX3hjbQh2MzRtdWx0aWxvY2F0aW9uNE11bHRpTG9jYXRpb24AAAgBHHBhcmVudHMIAQh1OAABIGludGVyaW9yDQEBJEp1bmN0aW9ucwAADQEQDHhjbQh2MyRqdW5jdGlvbnMkSnVuY3Rpb25zAAEkEEhlcmUAAAAIWDEEABEBASBKdW5jdGlvbgABAAhYMggAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AAgAIWDMMABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AAwAIWDQQABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAEAAhYNRQAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24ABQAIWDYYABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24ABgAIWDccABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAHAAhYOCAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24AABEBASBKdW5jdGlvbgAAEQEBIEp1bmN0aW9uAAARAQEgSnVuY3Rpb24ACAAAEQEQDHhjbQh2MyBqdW5jdGlvbiBKdW5jdGlvbgABKCRQYXJhY2hhaW4EABUBAQx1MzIAAAAsQWNjb3VudElkMzIIARxuZXR3b3JrGQEBRE9wdGlvbjxOZXR3b3JrSWQ+AAEIaWQEASBbdTg7IDMyXQABADhBY2NvdW50SW5kZXg2NAgBHG5ldHdvcmsZAQFET3B0aW9uPE5ldHdvcmtJZD4AARRpbmRleCgBDHU2NAACADBBY2NvdW50S2V5MjAIARxuZXR3b3JrGQEBRE9wdGlvbjxOZXR3b3JrSWQ+AAEMa2V5IQEBIFt1ODsgMjBdAAMAOFBhbGxldEluc3RhbmNlBAAIAQh1OAAEADBHZW5lcmFsSW5kZXgEAPQBEHUxMjgABQAoR2VuZXJhbEtleQgBGGxlbmd0aAgBCHU4AAEQZGF0YQQBIFt1ODsgMzJdAAYAJE9ubHlDaGlsZAAHACRQbHVyYWxpdHkIAQhpZCUBARhCb2R5SWQAARBwYXJ0KQEBIEJvZHlQYXJ0AAgAPEdsb2JhbENvbnNlbnN1cwQAHQEBJE5ldHdvcmtJZAAJAAAVAQAABhAAGQEEGE9wdGlvbgQEVAEdAQEIEE5vbmUAAAAQU29tZQQAHQEAAAEAAB0BEAx4Y20IdjMganVuY3Rpb24kTmV0d29ya0lkAAEsJEJ5R2VuZXNpcwQABAEgW3U4OyAzMl0AAAAYQnlGb3JrCAEwYmxvY2tfbnVtYmVyLAEMdTY0AAEoYmxvY2tfaGFzaAQBIFt1ODsgMzJdAAEAIFBvbGthZG90AAIAGEt1c2FtYQADABxXZXN0ZW5kAAQAGFJvY29jbwAFABhXb2NvY28ABgAgRXRoZXJldW0EASBjaGFpbl9pZCgBDHU2NAAHACxCaXRjb2luQ29yZQAIACxCaXRjb2luQ2FzaAAJAEBQb2xrYWRvdEJ1bGxldGluAAoAACEBAAADFAAAAAgAJQEQDHhjbQh2MyBqdW5jdGlvbhhCb2R5SWQAASgQVW5pdAAAABxNb25pa2VyBABEARxbdTg7IDRdAAEAFEluZGV4BAAVAQEMdTMyAAIAJEV4ZWN1dGl2ZQADACRUZWNobmljYWwABAAsTGVnaXNsYXRpdmUABQAgSnVkaWNpYWwABgAcRGVmZW5zZQAHADhBZG1pbmlzdHJhdGlvbgAIACBUcmVhc3VyeQAJAAApARAMeGNtCHYzIGp1bmN0aW9uIEJvZHlQYXJ0AAEUFFZvaWNlAAAAHE1lbWJlcnMEARRjb3VudBUBAQx1MzIAAQAgRnJhY3Rpb24IAQxub20VAQEMdTMyAAEUZGVub20VAQEMdTMyAAIAREF0TGVhc3RQcm9wb3J0aW9uCAEMbm9tFQEBDHUzMgABFGRlbm9tFQEBDHUzMgADAEhNb3JlVGhhblByb3BvcnRpb24IAQxub20VAQEMdTMyAAEUZGVub20VAQEMdTMyAAQAAC0BEAx4Y20IdjMobXVsdGlhc3NldBxBc3NldElkAAEIIENvbmNyZXRlBAAJAQE0TXVsdGlMb2NhdGlvbgAAACBBYnN0cmFjdAQABAEgW3U4OyAzMl0AAQAAMQEQLHN0YWdpbmdfeGNtCHY0IGxvY2F0aW9uIExvY2F0aW9uAAAIARxwYXJlbnRzCAEIdTgAASBpbnRlcmlvcjUBASRKdW5jdGlvbnMAADUBECxzdGFnaW5nX3hjbQh2NCRqdW5jdGlvbnMkSnVuY3Rpb25zAAEkEEhlcmUAAAAIWDEEADkBAUhBcmM8W0p1bmN0aW9uOyAxXT4AAQAIWDIEAEkBAUhBcmM8W0p1bmN0aW9uOyAyXT4AAgAIWDMEAE0BAUhBcmM8W0p1bmN0aW9uOyAzXT4AAwAIWDQEAFEBAUhBcmM8W0p1bmN0aW9uOyA0XT4ABAAIWDUEAFUBAUhBcmM8W0p1bmN0aW9uOyA1XT4ABQAIWDYEAFkBAUhBcmM8W0p1bmN0aW9uOyA2XT4ABgAIWDcEAF0BAUhBcmM8W0p1bmN0aW9uOyA3XT4ABwAIWDgEAGEBAUhBcmM8W0p1bmN0aW9uOyA4XT4ACAAAOQEAAAMBAAAAPQEAPQEQLHN0YWdpbmdfeGNtCHY0IGp1bmN0aW9uIEp1bmN0aW9uAAEoJFBhcmFjaGFpbgQAFQEBDHUzMgAAACxBY2NvdW50SWQzMggBHG5ldHdvcmtBAQFET3B0aW9uPE5ldHdvcmtJZD4AAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29ya0EBAURPcHRpb248TmV0d29ya0lkPgABFGluZGV4KAEMdTY0AAIAMEFjY291bnRLZXkyMAgBHG5ldHdvcmtBAQFET3B0aW9uPE5ldHdvcmtJZD4AAQxrZXkhAQEgW3U4OyAyMF0AAwA4UGFsbGV0SW5zdGFuY2UEAAgBCHU4AAQAMEdlbmVyYWxJbmRleAQA9AEQdTEyOAAFAChHZW5lcmFsS2V5CAEYbGVuZ3RoCAEIdTgAARBkYXRhBAEgW3U4OyAzMl0ABgAkT25seUNoaWxkAAcAJFBsdXJhbGl0eQgBCGlkJQEBGEJvZHlJZAABEHBhcnQpAQEgQm9keVBhcnQACAA8R2xvYmFsQ29uc2Vuc3VzBABFAQEkTmV0d29ya0lkAAkAAEEBBBhPcHRpb24EBFQBRQEBCBBOb25lAAAAEFNvbWUEAEUBAAABAABFARAsc3RhZ2luZ194Y20IdjQganVuY3Rpb24kTmV0d29ya0lkAAEsJEJ5R2VuZXNpcwQABAEgW3U4OyAzMl0AAAAYQnlGb3JrCAEwYmxvY2tfbnVtYmVyLAEMdTY0AAEoYmxvY2tfaGFzaAQBIFt1ODsgMzJdAAEAIFBvbGthZG90AAIAGEt1c2FtYQADABxXZXN0ZW5kAAQAGFJvY29jbwAFABhXb2NvY28ABgAgRXRoZXJldW0EASBjaGFpbl9pZCgBDHU2NAAHACxCaXRjb2luQ29yZQAIACxCaXRjb2luQ2FzaAAJAEBQb2xrYWRvdEJ1bGxldGluAAoAAEkBAAADAgAAAD0BAE0BAAADAwAAAD0BAFEBAAADBAAAAD0BAFUBAAADBQAAAD0BAFkBAAADBgAAAD0BAF0BAAADBwAAAD0BAGEBAAADCAAAAD0BAGUBECxzdGFnaW5nX3hjbQh2NBRhc3NldBxBc3NldElkAAAEADEBASBMb2NhdGlvbgAAaQEIDHhjbURWZXJzaW9uZWRMb2NhdGlvbgABDAhWMgQAbQEBRHYyOjpNdWx0aUxvY2F0aW9uAAEACFYzBAAJAQFEdjM6Ok11bHRpTG9jYXRpb24AAwAIVjQEADEBATB2NDo6TG9jYXRpb24ABAAAbQEQDHhjbQh2MjRtdWx0aWxvY2F0aW9uNE11bHRpTG9jYXRpb24AAAgBHHBhcmVudHMIAQh1OAABIGludGVyaW9ycQEBJEp1bmN0aW9ucwAAcQEQDHhjbQh2MjRtdWx0aWxvY2F0aW9uJEp1bmN0aW9ucwABJBBIZXJlAAAACFgxBAB1AQEgSnVuY3Rpb24AAQAIWDIIAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAIACFgzDAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAMACFg0EAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24ABAAIWDUUAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAUACFg2GAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAYACFg3HAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24ABwAIWDggAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAB1AQEgSnVuY3Rpb24AAHUBASBKdW5jdGlvbgAAdQEBIEp1bmN0aW9uAAgAAHUBEAx4Y20IdjIganVuY3Rpb24gSnVuY3Rpb24AASQkUGFyYWNoYWluBAAVAQEMdTMyAAAALEFjY291bnRJZDMyCAEcbmV0d29ya3kBASROZXR3b3JrSWQAAQhpZAQBIFt1ODsgMzJdAAEAOEFjY291bnRJbmRleDY0CAEcbmV0d29ya3kBASROZXR3b3JrSWQAARRpbmRleCgBDHU2NAACADBBY2NvdW50S2V5MjAIARxuZXR3b3JreQEBJE5ldHdvcmtJZAABDGtleSEBASBbdTg7IDIwXQADADhQYWxsZXRJbnN0YW5jZQQACAEIdTgABAAwR2VuZXJhbEluZGV4BAD0ARB1MTI4AAUAKEdlbmVyYWxLZXkEAH0BAYBXZWFrQm91bmRlZFZlYzx1OCwgQ29uc3RVMzI8MzI+PgAGACRPbmx5Q2hpbGQABwAkUGx1cmFsaXR5CAEIaWSBAQEYQm9keUlkAAEQcGFydIUBASBCb2R5UGFydAAIAAB5AQwMeGNtCHYyJE5ldHdvcmtJZAABEAxBbnkAAAAUTmFtZWQEAH0BAYBXZWFrQm91bmRlZFZlYzx1OCwgQ29uc3RVMzI8MzI+PgABACBQb2xrYWRvdAACABhLdXNhbWEAAwAAfQEMTGJvdW5kZWRfY29sbGVjdGlvbnNAd2Vha19ib3VuZGVkX3ZlYzhXZWFrQm91bmRlZFZlYwgEVAEIBFMAAAQANAEYVmVjPFQ+AACBAQwMeGNtCHYyGEJvZHlJZAABKBBVbml0AAAAFE5hbWVkBAB9AQGAV2Vha0JvdW5kZWRWZWM8dTgsIENvbnN0VTMyPDMyPj4AAQAUSW5kZXgEABUBAQx1MzIAAgAkRXhlY3V0aXZlAAMAJFRlY2huaWNhbAAEACxMZWdpc2xhdGl2ZQAFACBKdWRpY2lhbAAGABxEZWZlbnNlAAcAOEFkbWluaXN0cmF0aW9uAAgAIFRyZWFzdXJ5AAkAAIUBDAx4Y20IdjIgQm9keVBhcnQAARQUVm9pY2UAAAAcTWVtYmVycwQBFGNvdW50FQEBDHUzMgABACBGcmFjdGlvbggBDG5vbRUBAQx1MzIAARRkZW5vbRUBAQx1MzIAAgBEQXRMZWFzdFByb3BvcnRpb24IAQxub20VAQEMdTMyAAEUZGVub20VAQEMdTMyAAMASE1vcmVUaGFuUHJvcG9ydGlvbggBDG5vbRUBAQx1MzIAARRkZW5vbRUBAQx1MzIABAAAiQEMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxhwYWxsZXQURXZlbnQIBFQABEkAAQgkRGVsZWdhdGVkCAAAATBUOjpBY2NvdW50SWQAAAABMFQ6OkFjY291bnRJZAAABB0BQW4gYWNjb3VudCBoYXMgZGVsZWdhdGVkIHRoZWlyIHZvdGUgdG8gYW5vdGhlciBhY2NvdW50LiBcW3dobywgdGFyZ2V0XF0sVW5kZWxlZ2F0ZWQEAAABMFQ6OkFjY291bnRJZAABBPRBbiBcW2FjY291bnRcXSBoYXMgY2FuY2VsbGVkIGEgcHJldmlvdXMgZGVsZWdhdGlvbiBvcGVyYXRpb24uBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0jQEMQHBhbGxldF9yZWZlcmVuZGEYcGFsbGV0FEV2ZW50CARUAARJAAFAJFN1Ym1pdHRlZAwBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRyYWNrkQEBPFRyYWNrSWRPZjxULCBJPgQlAVRoZSB0cmFjayAoYW5kIGJ5IGV4dGVuc2lvbiBwcm9wb3NhbCBkaXNwYXRjaCBvcmlnaW4pIG9mIHRoaXMgcmVmZXJlbmR1bS4BIHByb3Bvc2FslQEBTEJvdW5kZWRDYWxsT2Y8VCwgST4EgFRoZSBwcm9wb3NhbCBmb3IgdGhlIHJlZmVyZW5kdW0uAASAQSByZWZlcmVuZHVtIGhhcyBiZWVuIHN1Ym1pdHRlZC5URGVjaXNpb25EZXBvc2l0UGxhY2VkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEMd2hvAAEwVDo6QWNjb3VudElkBIxUaGUgYWNjb3VudCB3aG8gcGxhY2VkIHRoZSBkZXBvc2l0LgEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+BIRUaGUgYW1vdW50IHBsYWNlZCBieSB0aGUgYWNjb3VudC4BBJRUaGUgZGVjaXNpb24gZGVwb3NpdCBoYXMgYmVlbiBwbGFjZWQuXERlY2lzaW9uRGVwb3NpdFJlZnVuZGVkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEMd2hvAAEwVDo6QWNjb3VudElkBIxUaGUgYWNjb3VudCB3aG8gcGxhY2VkIHRoZSBkZXBvc2l0LgEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+BIRUaGUgYW1vdW50IHBsYWNlZCBieSB0aGUgYWNjb3VudC4CBJxUaGUgZGVjaXNpb24gZGVwb3NpdCBoYXMgYmVlbiByZWZ1bmRlZC44RGVwb3NpdFNsYXNoZWQIAQx3aG8AATBUOjpBY2NvdW50SWQEjFRoZSBhY2NvdW50IHdobyBwbGFjZWQgdGhlIGRlcG9zaXQuARhhbW91bnQYATxCYWxhbmNlT2Y8VCwgST4EhFRoZSBhbW91bnQgcGxhY2VkIGJ5IHRoZSBhY2NvdW50LgMEbEEgZGVwb3NpdCBoYXMgYmVlbiBzbGFzaGVkLjxEZWNpc2lvblN0YXJ0ZWQQARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0cmFja5EBATxUcmFja0lkT2Y8VCwgST4EJQFUaGUgdHJhY2sgKGFuZCBieSBleHRlbnNpb24gcHJvcG9zYWwgZGlzcGF0Y2ggb3JpZ2luKSBvZiB0aGlzIHJlZmVyZW5kdW0uASBwcm9wb3NhbJUBAUxCb3VuZGVkQ2FsbE9mPFQsIEk+BIBUaGUgcHJvcG9zYWwgZm9yIHRoZSByZWZlcmVuZHVtLgEUdGFsbHmFBwEgVDo6VGFsbHkEuFRoZSBjdXJyZW50IHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4EBLxBIHJlZmVyZW5kdW0gaGFzIG1vdmVkIGludG8gdGhlIGRlY2lkaW5nIHBoYXNlLjhDb25maXJtU3RhcnRlZAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4FADhDb25maXJtQWJvcnRlZAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4GACRDb25maXJtZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseYUHASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4HBCEBQSByZWZlcmVuZHVtIGhhcyBlbmRlZCBpdHMgY29uZmlybWF0aW9uIHBoYXNlIGFuZCBpcyByZWFkeSBmb3IgYXBwcm92YWwuIEFwcHJvdmVkBAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLggEDQFBIHJlZmVyZW5kdW0gaGFzIGJlZW4gYXBwcm92ZWQgYW5kIGl0cyBwcm9wb3NhbCBoYXMgYmVlbiBzY2hlZHVsZWQuIFJlamVjdGVkCAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEUdGFsbHmFBwEgVDo6VGFsbHkEsFRoZSBmaW5hbCB0YWxseSBvZiB2b3RlcyBpbiB0aGlzIHJlZmVyZW5kdW0uCQSsQSBwcm9wb3NhbCBoYXMgYmVlbiByZWplY3RlZCBieSByZWZlcmVuZHVtLiBUaW1lZE91dAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BFHRhbGx5hQcBIFQ6OlRhbGx5BLBUaGUgZmluYWwgdGFsbHkgb2Ygdm90ZXMgaW4gdGhpcyByZWZlcmVuZHVtLgoE2EEgcmVmZXJlbmR1bSBoYXMgYmVlbiB0aW1lZCBvdXQgd2l0aG91dCBiZWluZyBkZWNpZGVkLiRDYW5jZWxsZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseYUHASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4LBIBBIHJlZmVyZW5kdW0gaGFzIGJlZW4gY2FuY2VsbGVkLhhLaWxsZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARR0YWxseYUHASBUOjpUYWxseQSwVGhlIGZpbmFsIHRhbGx5IG9mIHZvdGVzIGluIHRoaXMgcmVmZXJlbmR1bS4MBHRBIHJlZmVyZW5kdW0gaGFzIGJlZW4ga2lsbGVkLmRTdWJtaXNzaW9uRGVwb3NpdFJlZnVuZGVkDAEUaW5kZXgQATxSZWZlcmVuZHVtSW5kZXgEYEluZGV4IG9mIHRoZSByZWZlcmVuZHVtLgEMd2hvAAEwVDo6QWNjb3VudElkBIxUaGUgYWNjb3VudCB3aG8gcGxhY2VkIHRoZSBkZXBvc2l0LgEYYW1vdW50GAE8QmFsYW5jZU9mPFQsIEk+BIRUaGUgYW1vdW50IHBsYWNlZCBieSB0aGUgYWNjb3VudC4NBKRUaGUgc3VibWlzc2lvbiBkZXBvc2l0IGhhcyBiZWVuIHJlZnVuZGVkLixNZXRhZGF0YVNldAgBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4BGBJbmRleCBvZiB0aGUgcmVmZXJlbmR1bS4BEGhhc2gwARxUOjpIYXNoBDhQcmVpbWFnZSBoYXNoLg4EnE1ldGFkYXRhIGZvciBhIHJlZmVyZW5kdW0gaGFzIGJlZW4gc2V0LjxNZXRhZGF0YUNsZWFyZWQIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleARgSW5kZXggb2YgdGhlIHJlZmVyZW5kdW0uARBoYXNoMAEcVDo6SGFzaAQ4UHJlaW1hZ2UgaGFzaC4PBKxNZXRhZGF0YSBmb3IgYSByZWZlcmVuZHVtIGhhcyBiZWVuIGNsZWFyZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0kQEAAAUEAJUBEDRmcmFtZV9zdXBwb3J0GHRyYWl0cyRwcmVpbWFnZXMcQm91bmRlZAgEVAGZAQRIAX0HAQwYTGVnYWN5BAEQaGFzaDABJEg6Ok91dHB1dAAAABhJbmxpbmUEAIEHATRCb3VuZGVkSW5saW5lAAEAGExvb2t1cAgBEGhhc2gwASRIOjpPdXRwdXQAAQxsZW4QAQx1MzIAAgAAmQEIQHBvbGthZG90X3J1bnRpbWUsUnVudGltZUNhbGwAAbQYU3lzdGVtBACdAQGtAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTeXN0ZW0sIFJ1bnRpbWU+AAAAJFNjaGVkdWxlcgQArQEBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8U2NoZWR1bGVyLCBSdW50aW1lPgABACBQcmVpbWFnZQQAtQEBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UHJlaW1hZ2UsIFJ1bnRpbWU+AAoAEEJhYmUEAL0BAaUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEJhYmUsIFJ1bnRpbWU+AAIAJFRpbWVzdGFtcAQA4QEBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8VGltZXN0YW1wLCBSdW50aW1lPgADABxJbmRpY2VzBADlAQGxAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxJbmRpY2VzLCBSdW50aW1lPgAEACBCYWxhbmNlcwQA8QEBtQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8QmFsYW5jZXMsIFJ1bnRpbWU+AAUAHFN0YWtpbmcEAP0BAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFN0YWtpbmcsIFJ1bnRpbWU+AAcAHFNlc3Npb24EADkCAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFNlc3Npb24sIFJ1bnRpbWU+AAkAHEdyYW5kcGEEAFkCAbEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEdyYW5kcGEsIFJ1bnRpbWU+AAsAIFRyZWFzdXJ5BACJAgG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxUcmVhc3VyeSwgUnVudGltZT4AEwBAQ29udmljdGlvblZvdGluZwQAkQIB1QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Q29udmljdGlvblZvdGluZywgUnVudGltZT4AFAAkUmVmZXJlbmRhBAClAgG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxSZWZlcmVuZGEsIFJ1bnRpbWU+ABUAJFdoaXRlbGlzdAQAzQIBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8V2hpdGVsaXN0LCBSdW50aW1lPgAXABhDbGFpbXMEANECAa0Bc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPENsYWltcywgUnVudGltZT4AGAAcVmVzdGluZwQA8QIBsQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8VmVzdGluZywgUnVudGltZT4AGQAcVXRpbGl0eQQA+QIBsQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8VXRpbGl0eSwgUnVudGltZT4AGgAgSWRlbnRpdHkEAAEDAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPElkZW50aXR5LCBSdW50aW1lPgAcABRQcm94eQQAsQMBqQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UHJveHksIFJ1bnRpbWU+AB0AIE11bHRpc2lnBAC9AwG1AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxNdWx0aXNpZywgUnVudGltZT4AHgAgQm91bnRpZXMEAMkDAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEJvdW50aWVzLCBSdW50aW1lPgAiADRDaGlsZEJvdW50aWVzBADNAwHJAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxDaGlsZEJvdW50aWVzLCBSdW50aW1lPgAmAGhFbGVjdGlvblByb3ZpZGVyTXVsdGlQaGFzZQQA0QMB/QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8RWxlY3Rpb25Qcm92aWRlck11bHRpUGhhc2UsIFJ1bnRpbWU+ACQAJFZvdGVyTGlzdAQAxQQBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8Vm90ZXJMaXN0LCBSdW50aW1lPgAlADxOb21pbmF0aW9uUG9vbHMEAMkEAdEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE5vbWluYXRpb25Qb29scywgUnVudGltZT4AJwAsRmFzdFVuc3Rha2UEAP0EAcEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEZhc3RVbnN0YWtlLCBSdW50aW1lPgAoADRDb25maWd1cmF0aW9uBAABBQHJAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxDb25maWd1cmF0aW9uLCBSdW50aW1lPgAzACxQYXJhc1NoYXJlZAQAIQUBwQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNTaGFyZWQsIFJ1bnRpbWU+ADQANFBhcmFJbmNsdXNpb24EACUFAckBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPFBhcmFJbmNsdXNpb24sIFJ1bnRpbWU+ADUAMFBhcmFJbmhlcmVudAQAKQUBxQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYUluaGVyZW50LCBSdW50aW1lPgA2ABRQYXJhcwQAtQUBqQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXMsIFJ1bnRpbWU+ADgALEluaXRpYWxpemVyBAC9BQHBAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxJbml0aWFsaXplciwgUnVudGltZT4AOQAQSHJtcAQAwQUBpQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8SHJtcCwgUnVudGltZT4APAA0UGFyYXNEaXNwdXRlcwQAyQUByQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNEaXNwdXRlcywgUnVudGltZT4APgA0UGFyYXNTbGFzaGluZwQAzQUByQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8UGFyYXNTbGFzaGluZywgUnVudGltZT4APwAkUmVnaXN0cmFyBADdBQG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxSZWdpc3RyYXIsIFJ1bnRpbWU+AEYAFFNsb3RzBADhBQGpAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTbG90cywgUnVudGltZT4ARwAgQXVjdGlvbnMEAOUFAbUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPEF1Y3Rpb25zLCBSdW50aW1lPgBIACRDcm93ZGxvYW4EAO0FAbkBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPENyb3dkbG9hbiwgUnVudGltZT4ASQBIU3RhdGVUcmllTWlncmF0aW9uBAD5BQHdAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxTdGF0ZVRyaWVNaWdyYXRpb24sIFJ1bnRpbWU+AGIAJFhjbVBhbGxldAQAEQYBuQFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8WGNtUGFsbGV0LCBSdW50aW1lPgBjADBNZXNzYWdlUXVldWUEAEUHAcUBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OmRpc3BhdGNoCjo6Q2FsbGFibGVDYWxsRm9yPE1lc3NhZ2VRdWV1ZSwgUnVudGltZT4AZAAkQXNzZXRSYXRlBABRBwG5AXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxBc3NldFJhdGUsIFJ1bnRpbWU+AGUAFEJlZWZ5BABZBwGpAXNlbGY6OnNwX2FwaV9oaWRkZW5faW5jbHVkZXNfY29uc3RydWN0X3J1bnRpbWU6OmhpZGRlbl9pbmNsdWRlOjpkaXNwYXRjaAo6OkNhbGxhYmxlQ2FsbEZvcjxCZWVmeSwgUnVudGltZT4AyABASWRlbnRpdHlNaWdyYXRvcgQAeQcB1QFzZWxmOjpzcF9hcGlfaGlkZGVuX2luY2x1ZGVzX2NvbnN0cnVjdF9ydW50aW1lOjpoaWRkZW5faW5jbHVkZTo6ZGlzcGF0Y2gKOjpDYWxsYWJsZUNhbGxGb3I8SWRlbnRpdHlNaWdyYXRvciwgUnVudGltZT4A+AAAnQEMMGZyYW1lX3N5c3RlbRhwYWxsZXQQQ2FsbAQEVAABLBhyZW1hcmsEARhyZW1hcms0ARxWZWM8dTg+AAAEXFNlZSBbYFBhbGxldDo6cmVtYXJrYF0uOHNldF9oZWFwX3BhZ2VzBAEUcGFnZXMsAQx1NjQAAQR8U2VlIFtgUGFsbGV0OjpzZXRfaGVhcF9wYWdlc2BdLiBzZXRfY29kZQQBEGNvZGU0ARxWZWM8dTg+AAIEZFNlZSBbYFBhbGxldDo6c2V0X2NvZGVgXS5cc2V0X2NvZGVfd2l0aG91dF9jaGVja3MEARBjb2RlNAEcVmVjPHU4PgADBKBTZWUgW2BQYWxsZXQ6OnNldF9jb2RlX3dpdGhvdXRfY2hlY2tzYF0uLHNldF9zdG9yYWdlBAEUaXRlbXOhAQE0VmVjPEtleVZhbHVlPgAEBHBTZWUgW2BQYWxsZXQ6OnNldF9zdG9yYWdlYF0uMGtpbGxfc3RvcmFnZQQBEGtleXOpAQEgVmVjPEtleT4ABQR0U2VlIFtgUGFsbGV0OjpraWxsX3N0b3JhZ2VgXS4sa2lsbF9wcmVmaXgIARhwcmVmaXg0AQxLZXkAARxzdWJrZXlzEAEMdTMyAAYEcFNlZSBbYFBhbGxldDo6a2lsbF9wcmVmaXhgXS5EcmVtYXJrX3dpdGhfZXZlbnQEARhyZW1hcms0ARxWZWM8dTg+AAcEiFNlZSBbYFBhbGxldDo6cmVtYXJrX3dpdGhfZXZlbnRgXS5EYXV0aG9yaXplX3VwZ3JhZGUEASRjb2RlX2hhc2gwARxUOjpIYXNoAAkEiFNlZSBbYFBhbGxldDo6YXV0aG9yaXplX3VwZ3JhZGVgXS6AYXV0aG9yaXplX3VwZ3JhZGVfd2l0aG91dF9jaGVja3MEASRjb2RlX2hhc2gwARxUOjpIYXNoAAoExFNlZSBbYFBhbGxldDo6YXV0aG9yaXplX3VwZ3JhZGVfd2l0aG91dF9jaGVja3NgXS5gYXBwbHlfYXV0aG9yaXplZF91cGdyYWRlBAEQY29kZTQBHFZlYzx1OD4ACwSkU2VlIFtgUGFsbGV0OjphcHBseV9hdXRob3JpemVkX3VwZ3JhZGVgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuoQEAAAKlAQClAQAABAg0NACpAQAAAjQArQEMQHBhbGxldF9zY2hlZHVsZXIYcGFsbGV0EENhbGwEBFQAARggc2NoZWR1bGUQARB3aGVuEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY7EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAARkU2VlIFtgUGFsbGV0OjpzY2hlZHVsZWBdLhhjYW5jZWwIARB3aGVuEAFEQmxvY2tOdW1iZXJGb3I8VD4AARRpbmRleBABDHUzMgABBFxTZWUgW2BQYWxsZXQ6OmNhbmNlbGBdLjhzY2hlZHVsZV9uYW1lZBQBCGlkBAEgVGFza05hbWUAARB3aGVuEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY7EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAgR8U2VlIFtgUGFsbGV0OjpzY2hlZHVsZV9uYW1lZGBdLjBjYW5jZWxfbmFtZWQEAQhpZAQBIFRhc2tOYW1lAAMEdFNlZSBbYFBhbGxldDo6Y2FuY2VsX25hbWVkYF0uOHNjaGVkdWxlX2FmdGVyEAEUYWZ0ZXIQAURCbG9ja051bWJlckZvcjxUPgABOG1heWJlX3BlcmlvZGljsQEBrE9wdGlvbjxzY2hlZHVsZTo6UGVyaW9kPEJsb2NrTnVtYmVyRm9yPFQ+Pj4AASBwcmlvcml0eQgBSHNjaGVkdWxlOjpQcmlvcml0eQABEGNhbGyZAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgAEBHxTZWUgW2BQYWxsZXQ6OnNjaGVkdWxlX2FmdGVyYF0uUHNjaGVkdWxlX25hbWVkX2FmdGVyFAEIaWQEASBUYXNrTmFtZQABFGFmdGVyEAFEQmxvY2tOdW1iZXJGb3I8VD4AAThtYXliZV9wZXJpb2RpY7EBAaxPcHRpb248c2NoZWR1bGU6OlBlcmlvZDxCbG9ja051bWJlckZvcjxUPj4+AAEgcHJpb3JpdHkIAUhzY2hlZHVsZTo6UHJpb3JpdHkAARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABQSUU2VlIFtgUGFsbGV0OjpzY2hlZHVsZV9uYW1lZF9hZnRlcmBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6xAQQYT3B0aW9uBARUAYABCBBOb25lAAAAEFNvbWUEAIAAAAEAALUBDDxwYWxsZXRfcHJlaW1hZ2UYcGFsbGV0EENhbGwEBFQAARQ0bm90ZV9wcmVpbWFnZQQBFGJ5dGVzNAEcVmVjPHU4PgAABHhTZWUgW2BQYWxsZXQ6Om5vdGVfcHJlaW1hZ2VgXS48dW5ub3RlX3ByZWltYWdlBAEQaGFzaDABHFQ6Okhhc2gAAQSAU2VlIFtgUGFsbGV0Ojp1bm5vdGVfcHJlaW1hZ2VgXS5AcmVxdWVzdF9wcmVpbWFnZQQBEGhhc2gwARxUOjpIYXNoAAIEhFNlZSBbYFBhbGxldDo6cmVxdWVzdF9wcmVpbWFnZWBdLkh1bnJlcXVlc3RfcHJlaW1hZ2UEARBoYXNoMAEcVDo6SGFzaAADBIxTZWUgW2BQYWxsZXQ6OnVucmVxdWVzdF9wcmVpbWFnZWBdLjhlbnN1cmVfdXBkYXRlZAQBGGhhc2hlc7kBATBWZWM8VDo6SGFzaD4ABAR8U2VlIFtgUGFsbGV0OjplbnN1cmVfdXBkYXRlZGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy65AQAAAjAAvQEMLHBhbGxldF9iYWJlGHBhbGxldBBDYWxsBARUAAEMTHJlcG9ydF9lcXVpdm9jYXRpb24IAUhlcXVpdm9jYXRpb25fcHJvb2bBAQGQQm94PEVxdWl2b2NhdGlvblByb29mPEhlYWRlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m0QEBQFQ6OktleU93bmVyUHJvb2YAAASQU2VlIFtgUGFsbGV0OjpyZXBvcnRfZXF1aXZvY2F0aW9uYF0ucHJlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWQIAUhlcXVpdm9jYXRpb25fcHJvb2bBAQGQQm94PEVxdWl2b2NhdGlvblByb29mPEhlYWRlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m0QEBQFQ6OktleU93bmVyUHJvb2YAAQS0U2VlIFtgUGFsbGV0OjpyZXBvcnRfZXF1aXZvY2F0aW9uX3Vuc2lnbmVkYF0uSHBsYW5fY29uZmlnX2NoYW5nZQQBGGNvbmZpZ9UBAVBOZXh0Q29uZmlnRGVzY3JpcHRvcgACBIxTZWUgW2BQYWxsZXQ6OnBsYW5fY29uZmlnX2NoYW5nZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7BAQhIc3BfY29uc2Vuc3VzX3Nsb3RzREVxdWl2b2NhdGlvblByb29mCBhIZWFkZXIBxQEISWQByQEAEAEgb2ZmZW5kZXLJAQEISWQAARBzbG90zQEBEFNsb3QAATBmaXJzdF9oZWFkZXLFAQEYSGVhZGVyAAE0c2Vjb25kX2hlYWRlcsUBARhIZWFkZXIAAMUBEChzcF9ydW50aW1lHGdlbmVyaWMYaGVhZGVyGEhlYWRlcggYTnVtYmVyARAQSGFzaAAAFAEscGFyZW50X2hhc2gwATBIYXNoOjpPdXRwdXQAARhudW1iZXIVAQEYTnVtYmVyAAEoc3RhdGVfcm9vdDABMEhhc2g6Ok91dHB1dAABPGV4dHJpbnNpY3Nfcm9vdDABMEhhc2g6Ok91dHB1dAABGGRpZ2VzdDgBGERpZ2VzdAAAyQEMRHNwX2NvbnNlbnN1c19iYWJlDGFwcBhQdWJsaWMAAAQA5AE8c3IyNTUxOTo6UHVibGljAADNAQhIc3BfY29uc2Vuc3VzX3Nsb3RzEFNsb3QAAAQALAEMdTY0AADRAQgoc3Bfc2Vzc2lvbjxNZW1iZXJzaGlwUHJvb2YAAAwBHHNlc3Npb24QATBTZXNzaW9uSW5kZXgAASh0cmllX25vZGVzqQEBMFZlYzxWZWM8dTg+PgABPHZhbGlkYXRvcl9jb3VudBABOFZhbGlkYXRvckNvdW50AADVAQxEc3BfY29uc2Vuc3VzX2JhYmUcZGlnZXN0c1BOZXh0Q29uZmlnRGVzY3JpcHRvcgABBAhWMQgBBGPZAQEoKHU2NCwgdTY0KQABNGFsbG93ZWRfc2xvdHPdAQEwQWxsb3dlZFNsb3RzAAEAANkBAAAECCwsAN0BCERzcF9jb25zZW5zdXNfYmFiZTBBbGxvd2VkU2xvdHMAAQwwUHJpbWFyeVNsb3RzAAAAdFByaW1hcnlBbmRTZWNvbmRhcnlQbGFpblNsb3RzAAEAbFByaW1hcnlBbmRTZWNvbmRhcnlWUkZTbG90cwACAADhAQxAcGFsbGV0X3RpbWVzdGFtcBhwYWxsZXQQQ2FsbAQEVAABBAxzZXQEAQxub3coASRUOjpNb21lbnQAAARQU2VlIFtgUGFsbGV0OjpzZXRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu5QEMOHBhbGxldF9pbmRpY2VzGHBhbGxldBBDYWxsBARUAAEUFGNsYWltBAEUaW5kZXgQATxUOjpBY2NvdW50SW5kZXgAAARYU2VlIFtgUGFsbGV0OjpjbGFpbWBdLiB0cmFuc2ZlcggBDG5ld+kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAEEZFNlZSBbYFBhbGxldDo6dHJhbnNmZXJgXS4QZnJlZQQBFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAIEVFNlZSBbYFBhbGxldDo6ZnJlZWBdLjhmb3JjZV90cmFuc2ZlcgwBDG5ld+kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAEYZnJlZXpleAEQYm9vbAADBHxTZWUgW2BQYWxsZXQ6OmZvcmNlX3RyYW5zZmVyYF0uGGZyZWV6ZQQBFGluZGV4EAE8VDo6QWNjb3VudEluZGV4AAQEXFNlZSBbYFBhbGxldDo6ZnJlZXplYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLukBDChzcF9ydW50aW1lMG11bHRpYWRkcmVzczBNdWx0aUFkZHJlc3MIJEFjY291bnRJZAEAMEFjY291bnRJbmRleAGMARQISWQEAAABJEFjY291bnRJZAAAABRJbmRleAQA7QEBMEFjY291bnRJbmRleAABAAxSYXcEADQBHFZlYzx1OD4AAgAkQWRkcmVzczMyBAAEASBbdTg7IDMyXQADACRBZGRyZXNzMjAEACEBASBbdTg7IDIwXQAEAADtAQAABowA8QEMPHBhbGxldF9iYWxhbmNlcxhwYWxsZXQQQ2FsbAgEVAAESQABIFB0cmFuc2Zlcl9hbGxvd19kZWF0aAgBEGRlc3TpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARR2YWx1ZfQBKFQ6OkJhbGFuY2UAAASUU2VlIFtgUGFsbGV0Ojp0cmFuc2Zlcl9hbGxvd19kZWF0aGBdLjhmb3JjZV90cmFuc2ZlcgwBGHNvdXJjZekBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEGRlc3TpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARR2YWx1ZfQBKFQ6OkJhbGFuY2UAAgR8U2VlIFtgUGFsbGV0Ojpmb3JjZV90cmFuc2ZlcmBdLkx0cmFuc2Zlcl9rZWVwX2FsaXZlCAEQZGVzdOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFHZhbHVl9AEoVDo6QmFsYW5jZQADBJBTZWUgW2BQYWxsZXQ6OnRyYW5zZmVyX2tlZXBfYWxpdmVgXS4wdHJhbnNmZXJfYWxsCAEQZGVzdOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKGtlZXBfYWxpdmV4ARBib29sAAQEdFNlZSBbYFBhbGxldDo6dHJhbnNmZXJfYWxsYF0uPGZvcmNlX3VucmVzZXJ2ZQgBDHdob+kBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABGGFtb3VudBgBKFQ6OkJhbGFuY2UABQSAU2VlIFtgUGFsbGV0Ojpmb3JjZV91bnJlc2VydmVgXS5AdXBncmFkZV9hY2NvdW50cwQBDHdob/UBAURWZWM8VDo6QWNjb3VudElkPgAGBIRTZWUgW2BQYWxsZXQ6OnVwZ3JhZGVfYWNjb3VudHNgXS5EZm9yY2Vfc2V0X2JhbGFuY2UIAQx3aG/pAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASBuZXdfZnJlZfQBKFQ6OkJhbGFuY2UACASIU2VlIFtgUGFsbGV0Ojpmb3JjZV9zZXRfYmFsYW5jZWBdLmxmb3JjZV9hZGp1c3RfdG90YWxfaXNzdWFuY2UIASRkaXJlY3Rpb275AQFMQWRqdXN0bWVudERpcmVjdGlvbgABFGRlbHRh9AEoVDo6QmFsYW5jZQAJBLBTZWUgW2BQYWxsZXQ6OmZvcmNlX2FkanVzdF90b3RhbF9pc3N1YW5jZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy71AQAAAgAA+QEMPHBhbGxldF9iYWxhbmNlcxR0eXBlc0xBZGp1c3RtZW50RGlyZWN0aW9uAAEIIEluY3JlYXNlAAAAIERlY3JlYXNlAAEAAP0BEDhwYWxsZXRfc3Rha2luZxhwYWxsZXQYcGFsbGV0EENhbGwEBFQAAXgQYm9uZAgBFHZhbHVl9AEwQmFsYW5jZU9mPFQ+AAEUcGF5ZWWoAXxSZXdhcmREZXN0aW5hdGlvbjxUOjpBY2NvdW50SWQ+AAAEVFNlZSBbYFBhbGxldDo6Ym9uZGBdLihib25kX2V4dHJhBAE4bWF4X2FkZGl0aW9uYWz0ATBCYWxhbmNlT2Y8VD4AAQRsU2VlIFtgUGFsbGV0Ojpib25kX2V4dHJhYF0uGHVuYm9uZAQBFHZhbHVl9AEwQmFsYW5jZU9mPFQ+AAIEXFNlZSBbYFBhbGxldDo6dW5ib25kYF0uRHdpdGhkcmF3X3VuYm9uZGVkBAFIbnVtX3NsYXNoaW5nX3NwYW5zEAEMdTMyAAMEiFNlZSBbYFBhbGxldDo6d2l0aGRyYXdfdW5ib25kZWRgXS4gdmFsaWRhdGUEARRwcmVmc7ABOFZhbGlkYXRvclByZWZzAAQEZFNlZSBbYFBhbGxldDo6dmFsaWRhdGVgXS4gbm9taW5hdGUEARx0YXJnZXRzAQIBZFZlYzxBY2NvdW50SWRMb29rdXBPZjxUPj4ABQRkU2VlIFtgUGFsbGV0Ojpub21pbmF0ZWBdLhRjaGlsbAAGBFhTZWUgW2BQYWxsZXQ6OmNoaWxsYF0uJHNldF9wYXllZQQBFHBheWVlqAF8UmV3YXJkRGVzdGluYXRpb248VDo6QWNjb3VudElkPgAHBGhTZWUgW2BQYWxsZXQ6OnNldF9wYXllZWBdLjhzZXRfY29udHJvbGxlcgAIBHxTZWUgW2BQYWxsZXQ6OnNldF9jb250cm9sbGVyYF0uTHNldF92YWxpZGF0b3JfY291bnQEAQxuZXcVAQEMdTMyAAkEkFNlZSBbYFBhbGxldDo6c2V0X3ZhbGlkYXRvcl9jb3VudGBdLmBpbmNyZWFzZV92YWxpZGF0b3JfY291bnQEAShhZGRpdGlvbmFsFQEBDHUzMgAKBKRTZWUgW2BQYWxsZXQ6OmluY3JlYXNlX3ZhbGlkYXRvcl9jb3VudGBdLlRzY2FsZV92YWxpZGF0b3JfY291bnQEARhmYWN0b3IFAgEcUGVyY2VudAALBJhTZWUgW2BQYWxsZXQ6OnNjYWxlX3ZhbGlkYXRvcl9jb3VudGBdLjRmb3JjZV9ub19lcmFzAAwEeFNlZSBbYFBhbGxldDo6Zm9yY2Vfbm9fZXJhc2BdLjRmb3JjZV9uZXdfZXJhAA0EeFNlZSBbYFBhbGxldDo6Zm9yY2VfbmV3X2VyYWBdLkRzZXRfaW52dWxuZXJhYmxlcwQBNGludnVsbmVyYWJsZXP1AQFEVmVjPFQ6OkFjY291bnRJZD4ADgSIU2VlIFtgUGFsbGV0OjpzZXRfaW52dWxuZXJhYmxlc2BdLjRmb3JjZV91bnN0YWtlCAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAAUhudW1fc2xhc2hpbmdfc3BhbnMQAQx1MzIADwR4U2VlIFtgUGFsbGV0Ojpmb3JjZV91bnN0YWtlYF0uUGZvcmNlX25ld19lcmFfYWx3YXlzABAElFNlZSBbYFBhbGxldDo6Zm9yY2VfbmV3X2VyYV9hbHdheXNgXS5UY2FuY2VsX2RlZmVycmVkX3NsYXNoCAEMZXJhEAEgRXJhSW5kZXgAATRzbGFzaF9pbmRpY2VzCQIBIFZlYzx1MzI+ABEEmFNlZSBbYFBhbGxldDo6Y2FuY2VsX2RlZmVycmVkX3NsYXNoYF0uOHBheW91dF9zdGFrZXJzCAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkAAEMZXJhEAEgRXJhSW5kZXgAEgR8U2VlIFtgUGFsbGV0OjpwYXlvdXRfc3Rha2Vyc2BdLhhyZWJvbmQEARR2YWx1ZfQBMEJhbGFuY2VPZjxUPgATBFxTZWUgW2BQYWxsZXQ6OnJlYm9uZGBdLihyZWFwX3N0YXNoCAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAAUhudW1fc2xhc2hpbmdfc3BhbnMQAQx1MzIAFARsU2VlIFtgUGFsbGV0OjpyZWFwX3N0YXNoYF0uEGtpY2sEAQx3aG8BAgFkVmVjPEFjY291bnRJZExvb2t1cE9mPFQ+PgAVBFRTZWUgW2BQYWxsZXQ6OmtpY2tgXS5Mc2V0X3N0YWtpbmdfY29uZmlncxgBSG1pbl9ub21pbmF0b3JfYm9uZA0CAVhDb25maWdPcDxCYWxhbmNlT2Y8VD4+AAFIbWluX3ZhbGlkYXRvcl9ib25kDQIBWENvbmZpZ09wPEJhbGFuY2VPZjxUPj4AAUxtYXhfbm9taW5hdG9yX2NvdW50EQIBNENvbmZpZ09wPHUzMj4AAUxtYXhfdmFsaWRhdG9yX2NvdW50EQIBNENvbmZpZ09wPHUzMj4AATxjaGlsbF90aHJlc2hvbGQVAgFEQ29uZmlnT3A8UGVyY2VudD4AAThtaW5fY29tbWlzc2lvbhkCAURDb25maWdPcDxQZXJiaWxsPgAWBJBTZWUgW2BQYWxsZXQ6OnNldF9zdGFraW5nX2NvbmZpZ3NgXS4sY2hpbGxfb3RoZXIEARRzdGFzaAABMFQ6OkFjY291bnRJZAAXBHBTZWUgW2BQYWxsZXQ6OmNoaWxsX290aGVyYF0uaGZvcmNlX2FwcGx5X21pbl9jb21taXNzaW9uBAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkABgErFNlZSBbYFBhbGxldDo6Zm9yY2VfYXBwbHlfbWluX2NvbW1pc3Npb25gXS5Ic2V0X21pbl9jb21taXNzaW9uBAEMbmV3rAEcUGVyYmlsbAAZBIxTZWUgW2BQYWxsZXQ6OnNldF9taW5fY29tbWlzc2lvbmBdLlhwYXlvdXRfc3Rha2Vyc19ieV9wYWdlDAE8dmFsaWRhdG9yX3N0YXNoAAEwVDo6QWNjb3VudElkAAEMZXJhEAEgRXJhSW5kZXgAARBwYWdlEAEQUGFnZQAaBJxTZWUgW2BQYWxsZXQ6OnBheW91dF9zdGFrZXJzX2J5X3BhZ2VgXS4wdXBkYXRlX3BheWVlBAEoY29udHJvbGxlcgABMFQ6OkFjY291bnRJZAAbBHRTZWUgW2BQYWxsZXQ6OnVwZGF0ZV9wYXllZWBdLmhkZXByZWNhdGVfY29udHJvbGxlcl9iYXRjaAQBLGNvbnRyb2xsZXJzHQIB9EJvdW5kZWRWZWM8VDo6QWNjb3VudElkLCBUOjpNYXhDb250cm9sbGVyc0luRGVwcmVjYXRpb25CYXRjaD4AHASsU2VlIFtgUGFsbGV0OjpkZXByZWNhdGVfY29udHJvbGxlcl9iYXRjaGBdLjhyZXN0b3JlX2xlZGdlchABFHN0YXNoAAEwVDo6QWNjb3VudElkAAFAbWF5YmVfY29udHJvbGxlciECAVBPcHRpb248VDo6QWNjb3VudElkPgABLG1heWJlX3RvdGFsJQIBUE9wdGlvbjxCYWxhbmNlT2Y8VD4+AAE8bWF5YmVfdW5sb2NraW5nKQIBFQFPcHRpb248Qm91bmRlZFZlYzxVbmxvY2tDaHVuazxCYWxhbmNlT2Y8VD4+LCBUOjoKTWF4VW5sb2NraW5nQ2h1bmtzPj4AHQR8U2VlIFtgUGFsbGV0OjpyZXN0b3JlX2xlZGdlcmBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy4BAgAAAukBAAUCDDRzcF9hcml0aG1ldGljKHBlcl90aGluZ3McUGVyY2VudAAABAAIAQh1OAAACQIAAAIQAA0CEDhwYWxsZXRfc3Rha2luZxhwYWxsZXQYcGFsbGV0IENvbmZpZ09wBARUARgBDBBOb29wAAAADFNldAQAGAEEVAABABhSZW1vdmUAAgAAEQIQOHBhbGxldF9zdGFraW5nGHBhbGxldBhwYWxsZXQgQ29uZmlnT3AEBFQBEAEMEE5vb3AAAAAMU2V0BAAQAQRUAAEAGFJlbW92ZQACAAAVAhA4cGFsbGV0X3N0YWtpbmcYcGFsbGV0GHBhbGxldCBDb25maWdPcAQEVAEFAgEMEE5vb3AAAAAMU2V0BAAFAgEEVAABABhSZW1vdmUAAgAAGQIQOHBhbGxldF9zdGFraW5nGHBhbGxldBhwYWxsZXQgQ29uZmlnT3AEBFQBrAEMEE5vb3AAAAAMU2V0BACsAQRUAAEAGFJlbW92ZQACAAAdAgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABAD1AQEYVmVjPFQ+AAAhAgQYT3B0aW9uBARUAQABCBBOb25lAAAAEFNvbWUEAAAAAAEAACUCBBhPcHRpb24EBFQBGAEIEE5vbmUAAAAQU29tZQQAGAAAAQAAKQIEGE9wdGlvbgQEVAEtAgEIEE5vbmUAAAAQU29tZQQALQIAAAEAAC0CDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBMQIEUwAABAA1AgEYVmVjPFQ+AAAxAgg4cGFsbGV0X3N0YWtpbmcsVW5sb2NrQ2h1bmsEHEJhbGFuY2UBGAAIARR2YWx1ZfQBHEJhbGFuY2UAAQxlcmEVAQEgRXJhSW5kZXgAADUCAAACMQIAOQIMOHBhbGxldF9zZXNzaW9uGHBhbGxldBBDYWxsBARUAAEIIHNldF9rZXlzCAEQa2V5cz0CARxUOjpLZXlzAAEUcHJvb2Y0ARxWZWM8dTg+AAAEZFNlZSBbYFBhbGxldDo6c2V0X2tleXNgXS4ocHVyZ2Vfa2V5cwABBGxTZWUgW2BQYWxsZXQ6OnB1cmdlX2tleXNgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuPQIIQHBvbGthZG90X3J1bnRpbWUsU2Vzc2lvbktleXMAABgBHGdyYW5kcGHUAdA8R3JhbmRwYSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAEQYmFiZckBAcQ8QmFiZSBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAE4cGFyYV92YWxpZGF0b3JBAgHgPEluaXRpYWxpemVyIGFzICRjcmF0ZTo6Qm91bmRUb1J1bnRpbWVBcHBQdWJsaWM+OjpQdWJsaWMAATxwYXJhX2Fzc2lnbm1lbnRFAgHwPFBhcmFTZXNzaW9uSW5mbyBhcyAkY3JhdGU6OkJvdW5kVG9SdW50aW1lQXBwUHVibGljPjo6UHVibGljAAFMYXV0aG9yaXR5X2Rpc2NvdmVyeUkCAfw8QXV0aG9yaXR5RGlzY292ZXJ5IGFzICRjcmF0ZTo6Qm91bmRUb1J1bnRpbWVBcHBQdWJsaWM+OjpQdWJsaWMAARRiZWVmeU0CAcg8QmVlZnkgYXMgJGNyYXRlOjpCb3VuZFRvUnVudGltZUFwcFB1YmxpYz46OlB1YmxpYwAAQQIQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjY0dmFsaWRhdG9yX2FwcBhQdWJsaWMAAAQA5AE8c3IyNTUxOTo6UHVibGljAABFAhBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2Njhhc3NpZ25tZW50X2FwcBhQdWJsaWMAAAQA5AE8c3IyNTUxOTo6UHVibGljAABJAgxYc3BfYXV0aG9yaXR5X2Rpc2NvdmVyeQxhcHAYUHVibGljAAAEAOQBPHNyMjU1MTk6OlB1YmxpYwAATQIMSHNwX2NvbnNlbnN1c19iZWVmeTBlY2RzYV9jcnlwdG8YUHVibGljAAAEAFECATRlY2RzYTo6UHVibGljAABRAgwcc3BfY29yZRRlY2RzYRhQdWJsaWMAAAQAVQIBgFt1ODsgUFVCTElDX0tFWV9TRVJJQUxJWkVEX1NJWkVdAABVAgAAAyEAAAAIAFkCDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQQQ2FsbAQEVAABDExyZXBvcnRfZXF1aXZvY2F0aW9uCAFIZXF1aXZvY2F0aW9uX3Byb29mXQIByEJveDxFcXVpdm9jYXRpb25Qcm9vZjxUOjpIYXNoLCBCbG9ja051bWJlckZvcjxUPj4+AAE8a2V5X293bmVyX3Byb29m0QEBQFQ6OktleU93bmVyUHJvb2YAAASQU2VlIFtgUGFsbGV0OjpyZXBvcnRfZXF1aXZvY2F0aW9uYF0ucHJlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWQIAUhlcXVpdm9jYXRpb25fcHJvb2ZdAgHIQm94PEVxdWl2b2NhdGlvblByb29mPFQ6Okhhc2gsIEJsb2NrTnVtYmVyRm9yPFQ+Pj4AATxrZXlfb3duZXJfcHJvb2bRAQFAVDo6S2V5T3duZXJQcm9vZgABBLRTZWUgW2BQYWxsZXQ6OnJlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWRgXS4wbm90ZV9zdGFsbGVkCAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgABbGJlc3RfZmluYWxpemVkX2Jsb2NrX251bWJlchABREJsb2NrTnVtYmVyRm9yPFQ+AAIEdFNlZSBbYFBhbGxldDo6bm90ZV9zdGFsbGVkYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLl0CCFBzcF9jb25zZW5zdXNfZ3JhbmRwYURFcXVpdm9jYXRpb25Qcm9vZggESAEwBE4BEAAIARhzZXRfaWQsARRTZXRJZAABMGVxdWl2b2NhdGlvbmECAUhFcXVpdm9jYXRpb248SCwgTj4AAGECCFBzcF9jb25zZW5zdXNfZ3JhbmRwYTBFcXVpdm9jYXRpb24IBEgBMAROARABCBxQcmV2b3RlBABlAgE5AWdyYW5kcGE6OkVxdWl2b2NhdGlvbjxBdXRob3JpdHlJZCwgZ3JhbmRwYTo6UHJldm90ZTxILCBOPiwKQXV0aG9yaXR5U2lnbmF0dXJlPgAAACRQcmVjb21taXQEAH0CAUEBZ3JhbmRwYTo6RXF1aXZvY2F0aW9uPEF1dGhvcml0eUlkLCBncmFuZHBhOjpQcmVjb21taXQ8SCwgTj4sCkF1dGhvcml0eVNpZ25hdHVyZT4AAQAAZQIIQGZpbmFsaXR5X2dyYW5kcGEwRXF1aXZvY2F0aW9uDAhJZAHUBFYBaQIEUwFtAgAQATByb3VuZF9udW1iZXIsAQx1NjQAASBpZGVudGl0edQBCElkAAEUZmlyc3R5AgEYKFYsIFMpAAEYc2Vjb25keQIBGChWLCBTKQAAaQIIQGZpbmFsaXR5X2dyYW5kcGEcUHJldm90ZQgESAEwBE4BEAAIASx0YXJnZXRfaGFzaDABBEgAATR0YXJnZXRfbnVtYmVyEAEETgAAbQIMUHNwX2NvbnNlbnN1c19ncmFuZHBhDGFwcCRTaWduYXR1cmUAAAQAcQIBSGVkMjU1MTk6OlNpZ25hdHVyZQAAcQIMHHNwX2NvcmUcZWQyNTUxOSRTaWduYXR1cmUAAAQAdQIBIFt1ODsgNjRdAAB1AgAAA0AAAAAIAHkCAAAECGkCbQIAfQIIQGZpbmFsaXR5X2dyYW5kcGEwRXF1aXZvY2F0aW9uDAhJZAHUBFYBgQIEUwFtAgAQATByb3VuZF9udW1iZXIsAQx1NjQAASBpZGVudGl0edQBCElkAAEUZmlyc3SFAgEYKFYsIFMpAAEYc2Vjb25khQIBGChWLCBTKQAAgQIIQGZpbmFsaXR5X2dyYW5kcGEkUHJlY29tbWl0CARIATAETgEQAAgBLHRhcmdldF9oYXNoMAEESAABNHRhcmdldF9udW1iZXIQAQROAACFAgAABAiBAm0CAIkCDDxwYWxsZXRfdHJlYXN1cnkYcGFsbGV0EENhbGwIBFQABEkAASQ0cHJvcG9zZV9zcGVuZAgBFHZhbHVl9AE8QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnnpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAAR4U2VlIFtgUGFsbGV0Ojpwcm9wb3NlX3NwZW5kYF0uPHJlamVjdF9wcm9wb3NhbAQBLHByb3Bvc2FsX2lkFQEBNFByb3Bvc2FsSW5kZXgAAQSAU2VlIFtgUGFsbGV0OjpyZWplY3RfcHJvcG9zYWxgXS5AYXBwcm92ZV9wcm9wb3NhbAQBLHByb3Bvc2FsX2lkFQEBNFByb3Bvc2FsSW5kZXgAAgSEU2VlIFtgUGFsbGV0OjphcHByb3ZlX3Byb3Bvc2FsYF0uLHNwZW5kX2xvY2FsCAEYYW1vdW509AE8QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnnpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAwRwU2VlIFtgUGFsbGV0OjpzcGVuZF9sb2NhbGBdLjxyZW1vdmVfYXBwcm92YWwEASxwcm9wb3NhbF9pZBUBATRQcm9wb3NhbEluZGV4AAQEgFNlZSBbYFBhbGxldDo6cmVtb3ZlX2FwcHJvdmFsYF0uFHNwZW5kEAEoYXNzZXRfa2luZAUBAURCb3g8VDo6QXNzZXRLaW5kPgABGGFtb3VudPQBUEFzc2V0QmFsYW5jZU9mPFQsIEk+AAEsYmVuZWZpY2lhcnlpAQF4Qm94PEJlbmVmaWNpYXJ5TG9va3VwT2Y8VCwgST4+AAEodmFsaWRfZnJvbY0CAWRPcHRpb248QmxvY2tOdW1iZXJGb3I8VD4+AAUEWFNlZSBbYFBhbGxldDo6c3BlbmRgXS4YcGF5b3V0BAEUaW5kZXgQAShTcGVuZEluZGV4AAYEXFNlZSBbYFBhbGxldDo6cGF5b3V0YF0uMGNoZWNrX3N0YXR1cwQBFGluZGV4EAEoU3BlbmRJbmRleAAHBHRTZWUgW2BQYWxsZXQ6OmNoZWNrX3N0YXR1c2BdLih2b2lkX3NwZW5kBAEUaW5kZXgQAShTcGVuZEluZGV4AAgEbFNlZSBbYFBhbGxldDo6dm9pZF9zcGVuZGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6NAgQYT3B0aW9uBARUARABCBBOb25lAAAAEFNvbWUEABAAAAEAAJECDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcYcGFsbGV0EENhbGwIBFQABEkAARgQdm90ZQgBKHBvbGxfaW5kZXgVAQFEUG9sbEluZGV4T2Y8VCwgST4AARB2b3RllQIBcEFjY291bnRWb3RlPEJhbGFuY2VPZjxULCBJPj4AAARUU2VlIFtgUGFsbGV0Ojp2b3RlYF0uIGRlbGVnYXRlEAEUY2xhc3ORAQE0Q2xhc3NPZjxULCBJPgABCHRv6QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEoY29udmljdGlvbp0CAShDb252aWN0aW9uAAEcYmFsYW5jZRgBPEJhbGFuY2VPZjxULCBJPgABBGRTZWUgW2BQYWxsZXQ6OmRlbGVnYXRlYF0uKHVuZGVsZWdhdGUEARRjbGFzc5EBATRDbGFzc09mPFQsIEk+AAIEbFNlZSBbYFBhbGxldDo6dW5kZWxlZ2F0ZWBdLhh1bmxvY2sIARRjbGFzc5EBATRDbGFzc09mPFQsIEk+AAEYdGFyZ2V06QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAMEXFNlZSBbYFBhbGxldDo6dW5sb2NrYF0uLHJlbW92ZV92b3RlCAEUY2xhc3OhAgFUT3B0aW9uPENsYXNzT2Y8VCwgST4+AAEUaW5kZXgQAURQb2xsSW5kZXhPZjxULCBJPgAEBHBTZWUgW2BQYWxsZXQ6OnJlbW92ZV92b3RlYF0uRHJlbW92ZV9vdGhlcl92b3RlDAEYdGFyZ2V06QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEUY2xhc3ORAQE0Q2xhc3NPZjxULCBJPgABFGluZGV4EAFEUG9sbEluZGV4T2Y8VCwgST4ABQSIU2VlIFtgUGFsbGV0OjpyZW1vdmVfb3RoZXJfdm90ZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy6VAgxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nEHZvdGUsQWNjb3VudFZvdGUEHEJhbGFuY2UBGAEMIFN0YW5kYXJkCAEQdm90ZZkCARBWb3RlAAEcYmFsYW5jZRgBHEJhbGFuY2UAAAAUU3BsaXQIAQxheWUYARxCYWxhbmNlAAEMbmF5GAEcQmFsYW5jZQABADBTcGxpdEFic3RhaW4MAQxheWUYARxCYWxhbmNlAAEMbmF5GAEcQmFsYW5jZQABHGFic3RhaW4YARxCYWxhbmNlAAIAAJkCDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcQdm90ZRBWb3RlAAAEAAgAAACdAgxgcGFsbGV0X2NvbnZpY3Rpb25fdm90aW5nKGNvbnZpY3Rpb24oQ29udmljdGlvbgABHBBOb25lAAAAIExvY2tlZDF4AAEAIExvY2tlZDJ4AAIAIExvY2tlZDN4AAMAIExvY2tlZDR4AAQAIExvY2tlZDV4AAUAIExvY2tlZDZ4AAYAAKECBBhPcHRpb24EBFQBkQEBCBBOb25lAAAAEFNvbWUEAJEBAAABAAClAgxAcGFsbGV0X3JlZmVyZW5kYRhwYWxsZXQQQ2FsbAgEVAAESQABJBhzdWJtaXQMATxwcm9wb3NhbF9vcmlnaW6pAgFcQm94PFBhbGxldHNPcmlnaW5PZjxUPj4AASBwcm9wb3NhbJUBAUxCb3VuZGVkQ2FsbE9mPFQsIEk+AAFAZW5hY3RtZW50X21vbWVudMUCAXxEaXNwYXRjaFRpbWU8QmxvY2tOdW1iZXJGb3I8VD4+AAAEXFNlZSBbYFBhbGxldDo6c3VibWl0YF0uWHBsYWNlX2RlY2lzaW9uX2RlcG9zaXQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAABBJxTZWUgW2BQYWxsZXQ6OnBsYWNlX2RlY2lzaW9uX2RlcG9zaXRgXS5ccmVmdW5kX2RlY2lzaW9uX2RlcG9zaXQEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAACBKBTZWUgW2BQYWxsZXQ6OnJlZnVuZF9kZWNpc2lvbl9kZXBvc2l0YF0uGGNhbmNlbAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAMEXFNlZSBbYFBhbGxldDo6Y2FuY2VsYF0uEGtpbGwEARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAAEBFRTZWUgW2BQYWxsZXQ6OmtpbGxgXS5AbnVkZ2VfcmVmZXJlbmR1bQQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAUEhFNlZSBbYFBhbGxldDo6bnVkZ2VfcmVmZXJlbmR1bWBdLkhvbmVfZmV3ZXJfZGVjaWRpbmcEARR0cmFja5EBATxUcmFja0lkT2Y8VCwgST4ABgSMU2VlIFtgUGFsbGV0OjpvbmVfZmV3ZXJfZGVjaWRpbmdgXS5kcmVmdW5kX3N1Ym1pc3Npb25fZGVwb3NpdAQBFGluZGV4EAE8UmVmZXJlbmR1bUluZGV4AAcEqFNlZSBbYFBhbGxldDo6cmVmdW5kX3N1Ym1pc3Npb25fZGVwb3NpdGBdLjBzZXRfbWV0YWRhdGEIARRpbmRleBABPFJlZmVyZW5kdW1JbmRleAABKG1heWJlX2hhc2jJAgE8T3B0aW9uPFQ6Okhhc2g+AAgEdFNlZSBbYFBhbGxldDo6c2V0X21ldGFkYXRhYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLqkCCEBwb2xrYWRvdF9ydW50aW1lME9yaWdpbkNhbGxlcgABFBhzeXN0ZW0EAK0CAXRmcmFtZV9zeXN0ZW06Ok9yaWdpbjxSdW50aW1lPgAAABxPcmlnaW5zBACxAgF0cGFsbGV0X2N1c3RvbV9vcmlnaW5zOjpPcmlnaW4AFgBAUGFyYWNoYWluc09yaWdpbgQAtQIBZHBhcmFjaGFpbnNfb3JpZ2luOjpPcmlnaW4AMgAkWGNtUGFsbGV0BAC9AgFIcGFsbGV0X3hjbTo6T3JpZ2luAGMAEFZvaWQEAMECAUEBc2VsZjo6c3BfYXBpX2hpZGRlbl9pbmNsdWRlc19jb25zdHJ1Y3RfcnVudGltZTo6aGlkZGVuX2luY2x1ZGU6OgpfX3ByaXZhdGU6OlZvaWQABAAArQIMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2gkUmF3T3JpZ2luBCRBY2NvdW50SWQBAAEMEFJvb3QAAAAYU2lnbmVkBAAAASRBY2NvdW50SWQAAQAQTm9uZQACAACxAhRAcG9sa2Fkb3RfcnVudGltZShnb3Zlcm5hbmNlHG9yaWdpbnNUcGFsbGV0X2N1c3RvbV9vcmlnaW5zGE9yaWdpbgABPDBTdGFraW5nQWRtaW4AAAAkVHJlYXN1cmVyAAEAPEZlbGxvd3NoaXBBZG1pbgACADBHZW5lcmFsQWRtaW4AAwAwQXVjdGlvbkFkbWluAAQAKExlYXNlQWRtaW4ABQBMUmVmZXJlbmR1bUNhbmNlbGxlcgAGAEBSZWZlcmVuZHVtS2lsbGVyAAcALFNtYWxsVGlwcGVyAAgAJEJpZ1RpcHBlcgAJADBTbWFsbFNwZW5kZXIACgA0TWVkaXVtU3BlbmRlcgALAChCaWdTcGVuZGVyAAwARFdoaXRlbGlzdGVkQ2FsbGVyAA0ANFdpc2hGb3JDaGFuZ2UADgAAtQIQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxhvcmlnaW4YcGFsbGV0GE9yaWdpbgABBCRQYXJhY2hhaW4EALkCARhQYXJhSWQAAAAAuQIMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXMISWQAAAQAEAEMdTMyAAC9AgwocGFsbGV0X3hjbRhwYWxsZXQYT3JpZ2luAAEIDFhjbQQAMQEBIExvY2F0aW9uAAAAIFJlc3BvbnNlBAAxAQEgTG9jYXRpb24AAQAAwQIIHHNwX2NvcmUQVm9pZAABAADFAhA0ZnJhbWVfc3VwcG9ydBh0cmFpdHMgc2NoZWR1bGUwRGlzcGF0Y2hUaW1lBCxCbG9ja051bWJlcgEQAQgIQXQEABABLEJsb2NrTnVtYmVyAAAAFEFmdGVyBAAQASxCbG9ja051bWJlcgABAADJAgQYT3B0aW9uBARUATABCBBOb25lAAAAEFNvbWUEADAAAAEAAM0CDEBwYWxsZXRfd2hpdGVsaXN0GHBhbGxldBBDYWxsBARUAAEQOHdoaXRlbGlzdF9jYWxsBAEkY2FsbF9oYXNoMAEcVDo6SGFzaAAABHxTZWUgW2BQYWxsZXQ6OndoaXRlbGlzdF9jYWxsYF0uXHJlbW92ZV93aGl0ZWxpc3RlZF9jYWxsBAEkY2FsbF9oYXNoMAEcVDo6SGFzaAABBKBTZWUgW2BQYWxsZXQ6OnJlbW92ZV93aGl0ZWxpc3RlZF9jYWxsYF0uZGRpc3BhdGNoX3doaXRlbGlzdGVkX2NhbGwMASRjYWxsX2hhc2gwARxUOjpIYXNoAAFAY2FsbF9lbmNvZGVkX2xlbhABDHUzMgABTGNhbGxfd2VpZ2h0X3dpdG5lc3MkARhXZWlnaHQAAgSoU2VlIFtgUGFsbGV0OjpkaXNwYXRjaF93aGl0ZWxpc3RlZF9jYWxsYF0unGRpc3BhdGNoX3doaXRlbGlzdGVkX2NhbGxfd2l0aF9wcmVpbWFnZQQBEGNhbGyZAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgADBOBTZWUgW2BQYWxsZXQ6OmRpc3BhdGNoX3doaXRlbGlzdGVkX2NhbGxfd2l0aF9wcmVpbWFnZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7RAhBccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zGHBhbGxldBBDYWxsBARUAAEUFGNsYWltCAEQZGVzdAABMFQ6OkFjY291bnRJZAABSGV0aGVyZXVtX3NpZ25hdHVyZdUCAThFY2RzYVNpZ25hdHVyZQAABFhTZWUgW2BQYWxsZXQ6OmNsYWltYF0uKG1pbnRfY2xhaW0QAQx3aG/dAgE8RXRoZXJldW1BZGRyZXNzAAEUdmFsdWUYATBCYWxhbmNlT2Y8VD4AAUB2ZXN0aW5nX3NjaGVkdWxl4QIB3E9wdGlvbjwoQmFsYW5jZU9mPFQ+LCBCYWxhbmNlT2Y8VD4sIEJsb2NrTnVtYmVyRm9yPFQ+KT4AASRzdGF0ZW1lbnTpAgFUT3B0aW9uPFN0YXRlbWVudEtpbmQ+AAEEbFNlZSBbYFBhbGxldDo6bWludF9jbGFpbWBdLjBjbGFpbV9hdHRlc3QMARBkZXN0AAEwVDo6QWNjb3VudElkAAFIZXRoZXJldW1fc2lnbmF0dXJl1QIBOEVjZHNhU2lnbmF0dXJlAAEkc3RhdGVtZW50NAEcVmVjPHU4PgACBHRTZWUgW2BQYWxsZXQ6OmNsYWltX2F0dGVzdGBdLhhhdHRlc3QEASRzdGF0ZW1lbnQ0ARxWZWM8dTg+AAMEXFNlZSBbYFBhbGxldDo6YXR0ZXN0YF0uKG1vdmVfY2xhaW0MAQxvbGTdAgE8RXRoZXJldW1BZGRyZXNzAAEMbmV33QIBPEV0aGVyZXVtQWRkcmVzcwABOG1heWJlX3ByZWNsYWltIQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAQEbFNlZSBbYFBhbGxldDo6bW92ZV9jbGFpbWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7VAgxccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zOEVjZHNhU2lnbmF0dXJlAAAEANkCASBbdTg7IDY1XQAA2QIAAANBAAAACADdAgxccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zPEV0aGVyZXVtQWRkcmVzcwAABAAhAQEgW3U4OyAyMF0AAOECBBhPcHRpb24EBFQB5QIBCBBOb25lAAAAEFNvbWUEAOUCAAABAADlAgAABAwYGBAA6QIEGE9wdGlvbgQEVAHtAgEIEE5vbmUAAAAQU29tZQQA7QIAAAEAAO0CDFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhhjbGFpbXM0U3RhdGVtZW50S2luZAABCBxSZWd1bGFyAAAAEFNhZnQAAQAA8QIMOHBhbGxldF92ZXN0aW5nGHBhbGxldBBDYWxsBARUAAEYEHZlc3QAAARUU2VlIFtgUGFsbGV0Ojp2ZXN0YF0uKHZlc3Rfb3RoZXIEARh0YXJnZXTpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAQRsU2VlIFtgUGFsbGV0Ojp2ZXN0X290aGVyYF0uPHZlc3RlZF90cmFuc2ZlcggBGHRhcmdldOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABIHNjaGVkdWxl9QIBsFZlc3RpbmdJbmZvPEJhbGFuY2VPZjxUPiwgQmxvY2tOdW1iZXJGb3I8VD4+AAIEgFNlZSBbYFBhbGxldDo6dmVzdGVkX3RyYW5zZmVyYF0uVGZvcmNlX3Zlc3RlZF90cmFuc2ZlcgwBGHNvdXJjZekBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABGHRhcmdldOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABIHNjaGVkdWxl9QIBsFZlc3RpbmdJbmZvPEJhbGFuY2VPZjxUPiwgQmxvY2tOdW1iZXJGb3I8VD4+AAMEmFNlZSBbYFBhbGxldDo6Zm9yY2VfdmVzdGVkX3RyYW5zZmVyYF0uPG1lcmdlX3NjaGVkdWxlcwgBPHNjaGVkdWxlMV9pbmRleBABDHUzMgABPHNjaGVkdWxlMl9pbmRleBABDHUzMgAEBIBTZWUgW2BQYWxsZXQ6Om1lcmdlX3NjaGVkdWxlc2BdLnRmb3JjZV9yZW1vdmVfdmVzdGluZ19zY2hlZHVsZQgBGHRhcmdldOkBAYw8VDo6TG9va3VwIGFzIFN0YXRpY0xvb2t1cD46OlNvdXJjZQABOHNjaGVkdWxlX2luZGV4EAEMdTMyAAUEuFNlZSBbYFBhbGxldDo6Zm9yY2VfcmVtb3ZlX3Zlc3Rpbmdfc2NoZWR1bGVgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu9QIMOHBhbGxldF92ZXN0aW5nMHZlc3RpbmdfaW5mbyxWZXN0aW5nSW5mbwgcQmFsYW5jZQEYLEJsb2NrTnVtYmVyARAADAEYbG9ja2VkGAEcQmFsYW5jZQABJHBlcl9ibG9jaxgBHEJhbGFuY2UAAThzdGFydGluZ19ibG9jaxABLEJsb2NrTnVtYmVyAAD5Agw4cGFsbGV0X3V0aWxpdHkYcGFsbGV0EENhbGwEBFQAARgUYmF0Y2gEARRjYWxsc/0CAXxWZWM8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAAEWFNlZSBbYFBhbGxldDo6YmF0Y2hgXS40YXNfZGVyaXZhdGl2ZQgBFGluZGV4kQEBDHUxNgABEGNhbGyZAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgABBHhTZWUgW2BQYWxsZXQ6OmFzX2Rlcml2YXRpdmVgXS4kYmF0Y2hfYWxsBAEUY2FsbHP9AgF8VmVjPDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgACBGhTZWUgW2BQYWxsZXQ6OmJhdGNoX2FsbGBdLixkaXNwYXRjaF9hcwgBJGFzX29yaWdpbqkCAVRCb3g8VDo6UGFsbGV0c09yaWdpbj4AARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAwRwU2VlIFtgUGFsbGV0OjpkaXNwYXRjaF9hc2BdLixmb3JjZV9iYXRjaAQBFGNhbGxz/QIBfFZlYzw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4ABARwU2VlIFtgUGFsbGV0Ojpmb3JjZV9iYXRjaGBdLix3aXRoX3dlaWdodAgBEGNhbGyZAQF8Qm94PDxUIGFzIENvbmZpZz46OlJ1bnRpbWVDYWxsPgABGHdlaWdodCQBGFdlaWdodAAFBHBTZWUgW2BQYWxsZXQ6OndpdGhfd2VpZ2h0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLv0CAAACmQEAAQMMPHBhbGxldF9pZGVudGl0eRhwYWxsZXQQQ2FsbAQEVAABWDRhZGRfcmVnaXN0cmFyBAEcYWNjb3VudOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgAABHhTZWUgW2BQYWxsZXQ6OmFkZF9yZWdpc3RyYXJgXS4wc2V0X2lkZW50aXR5BAEQaW5mbwUDAWxCb3g8VDo6SWRlbnRpdHlJbmZvcm1hdGlvbj4AAQR0U2VlIFtgUGFsbGV0OjpzZXRfaWRlbnRpdHlgXS4gc2V0X3N1YnMEARBzdWJzkQMBZFZlYzwoVDo6QWNjb3VudElkLCBEYXRhKT4AAgRkU2VlIFtgUGFsbGV0OjpzZXRfc3Vic2BdLjhjbGVhcl9pZGVudGl0eQADBHxTZWUgW2BQYWxsZXQ6OmNsZWFyX2lkZW50aXR5YF0uRHJlcXVlc3RfanVkZ2VtZW50CAEkcmVnX2luZGV4FQEBOFJlZ2lzdHJhckluZGV4AAEcbWF4X2ZlZfQBMEJhbGFuY2VPZjxUPgAEBIhTZWUgW2BQYWxsZXQ6OnJlcXVlc3RfanVkZ2VtZW50YF0uOGNhbmNlbF9yZXF1ZXN0BAEkcmVnX2luZGV4EAE4UmVnaXN0cmFySW5kZXgABQR8U2VlIFtgUGFsbGV0OjpjYW5jZWxfcmVxdWVzdGBdLhxzZXRfZmVlCAEUaW5kZXgVAQE4UmVnaXN0cmFySW5kZXgAAQxmZWX0ATBCYWxhbmNlT2Y8VD4ABgRgU2VlIFtgUGFsbGV0OjpzZXRfZmVlYF0uOHNldF9hY2NvdW50X2lkCAEUaW5kZXgVAQE4UmVnaXN0cmFySW5kZXgAAQxuZXfpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4ABwR8U2VlIFtgUGFsbGV0OjpzZXRfYWNjb3VudF9pZGBdLihzZXRfZmllbGRzCAEUaW5kZXgVAQE4UmVnaXN0cmFySW5kZXgAARhmaWVsZHMsASkBPFQ6OklkZW50aXR5SW5mb3JtYXRpb24gYXMgSWRlbnRpdHlJbmZvcm1hdGlvblByb3ZpZGVyPjo6CkZpZWxkc0lkZW50aWZpZXIACARsU2VlIFtgUGFsbGV0OjpzZXRfZmllbGRzYF0uRHByb3ZpZGVfanVkZ2VtZW50EAEkcmVnX2luZGV4FQEBOFJlZ2lzdHJhckluZGV4AAEYdGFyZ2V06QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkanVkZ2VtZW50mQMBXEp1ZGdlbWVudDxCYWxhbmNlT2Y8VD4+AAEgaWRlbnRpdHkwARxUOjpIYXNoAAkEiFNlZSBbYFBhbGxldDo6cHJvdmlkZV9qdWRnZW1lbnRgXS40a2lsbF9pZGVudGl0eQQBGHRhcmdldOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgAKBHhTZWUgW2BQYWxsZXQ6OmtpbGxfaWRlbnRpdHlgXS4cYWRkX3N1YggBDHN1YukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEGRhdGERAwEQRGF0YQALBGBTZWUgW2BQYWxsZXQ6OmFkZF9zdWJgXS4ocmVuYW1lX3N1YggBDHN1YukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEGRhdGERAwEQRGF0YQAMBGxTZWUgW2BQYWxsZXQ6OnJlbmFtZV9zdWJgXS4ocmVtb3ZlX3N1YgQBDHN1YukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgANBGxTZWUgW2BQYWxsZXQ6OnJlbW92ZV9zdWJgXS4gcXVpdF9zdWIADgRkU2VlIFtgUGFsbGV0OjpxdWl0X3N1YmBdLlhhZGRfdXNlcm5hbWVfYXV0aG9yaXR5DAEkYXV0aG9yaXR56QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEYc3VmZml4NAEcVmVjPHU4PgABKGFsbG9jYXRpb24QAQx1MzIADwScU2VlIFtgUGFsbGV0OjphZGRfdXNlcm5hbWVfYXV0aG9yaXR5YF0uZHJlbW92ZV91c2VybmFtZV9hdXRob3JpdHkEASRhdXRob3JpdHnpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AEASoU2VlIFtgUGFsbGV0OjpyZW1vdmVfdXNlcm5hbWVfYXV0aG9yaXR5YF0uQHNldF91c2VybmFtZV9mb3IMAQx3aG/pAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASB1c2VybmFtZTQBHFZlYzx1OD4AASRzaWduYXR1cmWdAwFwT3B0aW9uPFQ6Ok9mZmNoYWluU2lnbmF0dXJlPgARBIRTZWUgW2BQYWxsZXQ6OnNldF91c2VybmFtZV9mb3JgXS48YWNjZXB0X3VzZXJuYW1lBAEgdXNlcm5hbWWtAwEsVXNlcm5hbWU8VD4AEgSAU2VlIFtgUGFsbGV0OjphY2NlcHRfdXNlcm5hbWVgXS5ccmVtb3ZlX2V4cGlyZWRfYXBwcm92YWwEASB1c2VybmFtZa0DASxVc2VybmFtZTxUPgATBKBTZWUgW2BQYWxsZXQ6OnJlbW92ZV9leHBpcmVkX2FwcHJvdmFsYF0uUHNldF9wcmltYXJ5X3VzZXJuYW1lBAEgdXNlcm5hbWWtAwEsVXNlcm5hbWU8VD4AFASUU2VlIFtgUGFsbGV0OjpzZXRfcHJpbWFyeV91c2VybmFtZWBdLmByZW1vdmVfZGFuZ2xpbmdfdXNlcm5hbWUEASB1c2VybmFtZa0DASxVc2VybmFtZTxUPgAVBKRTZWUgW2BQYWxsZXQ6OnJlbW92ZV9kYW5nbGluZ191c2VybmFtZWBdLgRwSWRlbnRpdHkgcGFsbGV0IGRlY2xhcmF0aW9uLgUDDDxwYWxsZXRfaWRlbnRpdHkYbGVnYWN5MElkZW50aXR5SW5mbwQoRmllbGRMaW1pdAAAJAEoYWRkaXRpb25hbAkDAZBCb3VuZGVkVmVjPChEYXRhLCBEYXRhKSwgRmllbGRMaW1pdD4AARxkaXNwbGF5EQMBEERhdGEAARRsZWdhbBEDARBEYXRhAAEMd2ViEQMBEERhdGEAARByaW90EQMBEERhdGEAARRlbWFpbBEDARBEYXRhAAE8cGdwX2ZpbmdlcnByaW50jQMBQE9wdGlvbjxbdTg7IDIwXT4AARRpbWFnZREDARBEYXRhAAEcdHdpdHRlchEDARBEYXRhAAAJAwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQ0DBFMAAAQAiQMBGFZlYzxUPgAADQMAAAQIEQMRAwARAww8cGFsbGV0X2lkZW50aXR5FHR5cGVzEERhdGEAAZgQTm9uZQAAABBSYXcwBAAVAwAAAQAQUmF3MQQAGQMAAAIAEFJhdzIEAB0DAAADABBSYXczBAAhAwAABAAQUmF3NAQARAAABQAQUmF3NQQAJQMAAAYAEFJhdzYEACkDAAAHABBSYXc3BAAtAwAACAAQUmF3OAQAMQMAAAkAEFJhdzkEADUDAAAKABRSYXcxMAQAOQMAAAsAFFJhdzExBAA9AwAADAAUUmF3MTIEAEEDAAANABRSYXcxMwQARQMAAA4AFFJhdzE0BABJAwAADwAUUmF3MTUEAE0DAAAQABRSYXcxNgQAwAAAEQAUUmF3MTcEAFEDAAASABRSYXcxOAQAVQMAABMAFFJhdzE5BABZAwAAFAAUUmF3MjAEACEBAAAVABRSYXcyMQQAXQMAABYAFFJhdzIyBABhAwAAFwAUUmF3MjMEAGUDAAAYABRSYXcyNAQAaQMAABkAFFJhdzI1BABtAwAAGgAUUmF3MjYEAHEDAAAbABRSYXcyNwQAdQMAABwAFFJhdzI4BAB5AwAAHQAUUmF3MjkEAH0DAAAeABRSYXczMAQAgQMAAB8AFFJhdzMxBACFAwAAIAAUUmF3MzIEAAQAACEALEJsYWtlVHdvMjU2BAAEAAAiABhTaGEyNTYEAAQAACMAJEtlY2NhazI1NgQABAAAJAAsU2hhVGhyZWUyNTYEAAQAACUAABUDAAADAAAAAAgAGQMAAAMBAAAACAAdAwAAAwIAAAAIACEDAAADAwAAAAgAJQMAAAMFAAAACAApAwAAAwYAAAAIAC0DAAADBwAAAAgAMQMAAAMIAAAACAA1AwAAAwkAAAAIADkDAAADCgAAAAgAPQMAAAMLAAAACABBAwAAAwwAAAAIAEUDAAADDQAAAAgASQMAAAMOAAAACABNAwAAAw8AAAAIAFEDAAADEQAAAAgAVQMAAAMSAAAACABZAwAAAxMAAAAIAF0DAAADFQAAAAgAYQMAAAMWAAAACABlAwAAAxcAAAAIAGkDAAADGAAAAAgAbQMAAAMZAAAACABxAwAAAxoAAAAIAHUDAAADGwAAAAgAeQMAAAMcAAAACAB9AwAAAx0AAAAIAIEDAAADHgAAAAgAhQMAAAMfAAAACACJAwAAAg0DAI0DBBhPcHRpb24EBFQBIQEBCBBOb25lAAAAEFNvbWUEACEBAAABAACRAwAAApUDAJUDAAAECAARAwCZAww8cGFsbGV0X2lkZW50aXR5FHR5cGVzJEp1ZGdlbWVudAQcQmFsYW5jZQEYARwcVW5rbm93bgAAABxGZWVQYWlkBAAYARxCYWxhbmNlAAEAKFJlYXNvbmFibGUAAgAkS25vd25Hb29kAAMAJE91dE9mRGF0ZQAEAChMb3dRdWFsaXR5AAUAJEVycm9uZW91cwAGAACdAwQYT3B0aW9uBARUAaEDAQgQTm9uZQAAABBTb21lBAChAwAAAQAAoQMIKHNwX3J1bnRpbWU4TXVsdGlTaWduYXR1cmUAAQwcRWQyNTUxOQQAcQIBSGVkMjU1MTk6OlNpZ25hdHVyZQAAABxTcjI1NTE5BAClAwFIc3IyNTUxOTo6U2lnbmF0dXJlAAEAFEVjZHNhBACpAwFAZWNkc2E6OlNpZ25hdHVyZQACAAClAwwcc3BfY29yZRxzcjI1NTE5JFNpZ25hdHVyZQAABAB1AgEgW3U4OyA2NF0AAKkDDBxzcF9jb3JlFGVjZHNhJFNpZ25hdHVyZQAABADZAgF8W3U4OyBTSUdOQVRVUkVfU0VSSUFMSVpFRF9TSVpFXQAArQMMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEIBFMAAAQANAEYVmVjPFQ+AACxAwwwcGFsbGV0X3Byb3h5GHBhbGxldBBDYWxsBARUAAEoFHByb3h5DAEQcmVhbOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABQGZvcmNlX3Byb3h5X3R5cGW1AwFQT3B0aW9uPFQ6OlByb3h5VHlwZT4AARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAARYU2VlIFtgUGFsbGV0Ojpwcm94eWBdLiRhZGRfcHJveHkMASBkZWxlZ2F0ZekBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGW5AwEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgABBGhTZWUgW2BQYWxsZXQ6OmFkZF9wcm94eWBdLjByZW1vdmVfcHJveHkMASBkZWxlZ2F0ZekBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGW5AwEwVDo6UHJveHlUeXBlAAEUZGVsYXkQAURCbG9ja051bWJlckZvcjxUPgACBHRTZWUgW2BQYWxsZXQ6OnJlbW92ZV9wcm94eWBdLjhyZW1vdmVfcHJveGllcwADBHxTZWUgW2BQYWxsZXQ6OnJlbW92ZV9wcm94aWVzYF0uLGNyZWF0ZV9wdXJlDAEocHJveHlfdHlwZbkDATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAEUaW5kZXiRAQEMdTE2AAQEcFNlZSBbYFBhbGxldDo6Y3JlYXRlX3B1cmVgXS4ka2lsbF9wdXJlFAEcc3Bhd25lcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABKHByb3h5X3R5cGW5AwEwVDo6UHJveHlUeXBlAAEUaW5kZXiRAQEMdTE2AAEYaGVpZ2h0FQEBREJsb2NrTnVtYmVyRm9yPFQ+AAEkZXh0X2luZGV4FQEBDHUzMgAFBGhTZWUgW2BQYWxsZXQ6OmtpbGxfcHVyZWBdLiBhbm5vdW5jZQgBEHJlYWzpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRjYWxsX2hhc2gwATRDYWxsSGFzaE9mPFQ+AAYEZFNlZSBbYFBhbGxldDo6YW5ub3VuY2VgXS5McmVtb3ZlX2Fubm91bmNlbWVudAgBEHJlYWzpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRjYWxsX2hhc2gwATRDYWxsSGFzaE9mPFQ+AAcEkFNlZSBbYFBhbGxldDo6cmVtb3ZlX2Fubm91bmNlbWVudGBdLkxyZWplY3RfYW5ub3VuY2VtZW50CAEgZGVsZWdhdGXpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRjYWxsX2hhc2gwATRDYWxsSGFzaE9mPFQ+AAgEkFNlZSBbYFBhbGxldDo6cmVqZWN0X2Fubm91bmNlbWVudGBdLjxwcm94eV9hbm5vdW5jZWQQASBkZWxlZ2F0ZekBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABEHJlYWzpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AAUBmb3JjZV9wcm94eV90eXBltQMBUE9wdGlvbjxUOjpQcm94eVR5cGU+AAEQY2FsbJkBAXxCb3g8PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+AAkEgFNlZSBbYFBhbGxldDo6cHJveHlfYW5ub3VuY2VkYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLrUDBBhPcHRpb24EBFQBuQMBCBBOb25lAAAAEFNvbWUEALkDAAABAAC5AwhAcG9sa2Fkb3RfcnVudGltZSRQcm94eVR5cGUAASAMQW55AAAALE5vblRyYW5zZmVyAAEAKEdvdmVybmFuY2UAAgAcU3Rha2luZwADAERJZGVudGl0eUp1ZGdlbWVudAAFACxDYW5jZWxQcm94eQAGABxBdWN0aW9uAAcAPE5vbWluYXRpb25Qb29scwAIAAC9Aww8cGFsbGV0X211bHRpc2lnGHBhbGxldBBDYWxsBARUAAEQUGFzX211bHRpX3RocmVzaG9sZF8xCAFEb3RoZXJfc2lnbmF0b3JpZXP1AQFEVmVjPFQ6OkFjY291bnRJZD4AARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAASUU2VlIFtgUGFsbGV0Ojphc19tdWx0aV90aHJlc2hvbGRfMWBdLiBhc19tdWx0aRQBJHRocmVzaG9sZJEBAQx1MTYAAURvdGhlcl9zaWduYXRvcmllc/UBAURWZWM8VDo6QWNjb3VudElkPgABPG1heWJlX3RpbWVwb2ludMEDAZBPcHRpb248VGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+Pj4AARBjYWxsmQEBfEJveDw8VCBhcyBDb25maWc+OjpSdW50aW1lQ2FsbD4AAShtYXhfd2VpZ2h0JAEYV2VpZ2h0AAEEZFNlZSBbYFBhbGxldDo6YXNfbXVsdGlgXS5AYXBwcm92ZV9hc19tdWx0aRQBJHRocmVzaG9sZJEBAQx1MTYAAURvdGhlcl9zaWduYXRvcmllc/UBAURWZWM8VDo6QWNjb3VudElkPgABPG1heWJlX3RpbWVwb2ludMEDAZBPcHRpb248VGltZXBvaW50PEJsb2NrTnVtYmVyRm9yPFQ+Pj4AASRjYWxsX2hhc2gEASBbdTg7IDMyXQABKG1heF93ZWlnaHQkARhXZWlnaHQAAgSEU2VlIFtgUGFsbGV0OjphcHByb3ZlX2FzX211bHRpYF0uPGNhbmNlbF9hc19tdWx0aRABJHRocmVzaG9sZJEBAQx1MTYAAURvdGhlcl9zaWduYXRvcmllc/UBAURWZWM8VDo6QWNjb3VudElkPgABJHRpbWVwb2ludMUDAXBUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+AAEkY2FsbF9oYXNoBAEgW3U4OyAzMl0AAwSAU2VlIFtgUGFsbGV0OjpjYW5jZWxfYXNfbXVsdGlgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuwQMEGE9wdGlvbgQEVAHFAwEIEE5vbmUAAAAQU29tZQQAxQMAAAEAAMUDCDxwYWxsZXRfbXVsdGlzaWckVGltZXBvaW50BCxCbG9ja051bWJlcgEQAAgBGGhlaWdodBABLEJsb2NrTnVtYmVyAAEUaW5kZXgQAQx1MzIAAMkDDDxwYWxsZXRfYm91bnRpZXMYcGFsbGV0EENhbGwIBFQABEkAASQ4cHJvcG9zZV9ib3VudHkIARR2YWx1ZfQBPEJhbGFuY2VPZjxULCBJPgABLGRlc2NyaXB0aW9uNAEcVmVjPHU4PgAABHxTZWUgW2BQYWxsZXQ6OnByb3Bvc2VfYm91bnR5YF0uOGFwcHJvdmVfYm91bnR5BAEkYm91bnR5X2lkFQEBLEJvdW50eUluZGV4AAEEfFNlZSBbYFBhbGxldDo6YXBwcm92ZV9ib3VudHlgXS48cHJvcG9zZV9jdXJhdG9yDAEkYm91bnR5X2lkFQEBLEJvdW50eUluZGV4AAEcY3VyYXRvcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABDGZlZfQBPEJhbGFuY2VPZjxULCBJPgACBIBTZWUgW2BQYWxsZXQ6OnByb3Bvc2VfY3VyYXRvcmBdLkB1bmFzc2lnbl9jdXJhdG9yBAEkYm91bnR5X2lkFQEBLEJvdW50eUluZGV4AAMEhFNlZSBbYFBhbGxldDo6dW5hc3NpZ25fY3VyYXRvcmBdLjhhY2NlcHRfY3VyYXRvcgQBJGJvdW50eV9pZBUBASxCb3VudHlJbmRleAAEBHxTZWUgW2BQYWxsZXQ6OmFjY2VwdF9jdXJhdG9yYF0uMGF3YXJkX2JvdW50eQgBJGJvdW50eV9pZBUBASxCb3VudHlJbmRleAABLGJlbmVmaWNpYXJ56QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAUEdFNlZSBbYFBhbGxldDo6YXdhcmRfYm91bnR5YF0uMGNsYWltX2JvdW50eQQBJGJvdW50eV9pZBUBASxCb3VudHlJbmRleAAGBHRTZWUgW2BQYWxsZXQ6OmNsYWltX2JvdW50eWBdLjBjbG9zZV9ib3VudHkEASRib3VudHlfaWQVAQEsQm91bnR5SW5kZXgABwR0U2VlIFtgUGFsbGV0OjpjbG9zZV9ib3VudHlgXS5QZXh0ZW5kX2JvdW50eV9leHBpcnkIASRib3VudHlfaWQVAQEsQm91bnR5SW5kZXgAARhyZW1hcms0ARxWZWM8dTg+AAgElFNlZSBbYFBhbGxldDo6ZXh0ZW5kX2JvdW50eV9leHBpcnlgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuzQMMVHBhbGxldF9jaGlsZF9ib3VudGllcxhwYWxsZXQQQ2FsbAQEVAABHEBhZGRfY2hpbGRfYm91bnR5DAFAcGFyZW50X2JvdW50eV9pZBUBASxCb3VudHlJbmRleAABFHZhbHVl9AEwQmFsYW5jZU9mPFQ+AAEsZGVzY3JpcHRpb240ARxWZWM8dTg+AAAEhFNlZSBbYFBhbGxldDo6YWRkX2NoaWxkX2JvdW50eWBdLjxwcm9wb3NlX2N1cmF0b3IQAUBwYXJlbnRfYm91bnR5X2lkFQEBLEJvdW50eUluZGV4AAE8Y2hpbGRfYm91bnR5X2lkFQEBLEJvdW50eUluZGV4AAEcY3VyYXRvcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABDGZlZfQBMEJhbGFuY2VPZjxUPgABBIBTZWUgW2BQYWxsZXQ6OnByb3Bvc2VfY3VyYXRvcmBdLjhhY2NlcHRfY3VyYXRvcggBQHBhcmVudF9ib3VudHlfaWQVAQEsQm91bnR5SW5kZXgAATxjaGlsZF9ib3VudHlfaWQVAQEsQm91bnR5SW5kZXgAAgR8U2VlIFtgUGFsbGV0OjphY2NlcHRfY3VyYXRvcmBdLkB1bmFzc2lnbl9jdXJhdG9yCAFAcGFyZW50X2JvdW50eV9pZBUBASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZBUBASxCb3VudHlJbmRleAADBIRTZWUgW2BQYWxsZXQ6OnVuYXNzaWduX2N1cmF0b3JgXS5IYXdhcmRfY2hpbGRfYm91bnR5DAFAcGFyZW50X2JvdW50eV9pZBUBASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZBUBASxCb3VudHlJbmRleAABLGJlbmVmaWNpYXJ56QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAQEjFNlZSBbYFBhbGxldDo6YXdhcmRfY2hpbGRfYm91bnR5YF0uSGNsYWltX2NoaWxkX2JvdW50eQgBQHBhcmVudF9ib3VudHlfaWQVAQEsQm91bnR5SW5kZXgAATxjaGlsZF9ib3VudHlfaWQVAQEsQm91bnR5SW5kZXgABQSMU2VlIFtgUGFsbGV0OjpjbGFpbV9jaGlsZF9ib3VudHlgXS5IY2xvc2VfY2hpbGRfYm91bnR5CAFAcGFyZW50X2JvdW50eV9pZBUBASxCb3VudHlJbmRleAABPGNoaWxkX2JvdW50eV9pZBUBASxCb3VudHlJbmRleAAGBIxTZWUgW2BQYWxsZXQ6OmNsb3NlX2NoaWxkX2JvdW50eWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7RAwyQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlGHBhbGxldBBDYWxsBARUAAEUPHN1Ym1pdF91bnNpZ25lZAgBMHJhd19zb2x1dGlvbtUDAbBCb3g8UmF3U29sdXRpb248U29sdXRpb25PZjxUOjpNaW5lckNvbmZpZz4+PgABHHdpdG5lc3OpBAFYU29sdXRpb25PclNuYXBzaG90U2l6ZQAABIBTZWUgW2BQYWxsZXQ6OnN1Ym1pdF91bnNpZ25lZGBdLmxzZXRfbWluaW11bV91bnRydXN0ZWRfc2NvcmUEAUBtYXliZV9uZXh0X3Njb3JlrQQBVE9wdGlvbjxFbGVjdGlvblNjb3JlPgABBLBTZWUgW2BQYWxsZXQ6OnNldF9taW5pbXVtX3VudHJ1c3RlZF9zY29yZWBdLnRzZXRfZW1lcmdlbmN5X2VsZWN0aW9uX3Jlc3VsdAQBIHN1cHBvcnRzsQQBWFN1cHBvcnRzPFQ6OkFjY291bnRJZD4AAgS4U2VlIFtgUGFsbGV0OjpzZXRfZW1lcmdlbmN5X2VsZWN0aW9uX3Jlc3VsdGBdLhhzdWJtaXQEATByYXdfc29sdXRpb27VAwGwQm94PFJhd1NvbHV0aW9uPFNvbHV0aW9uT2Y8VDo6TWluZXJDb25maWc+Pj4AAwRcU2VlIFtgUGFsbGV0OjpzdWJtaXRgXS5MZ292ZXJuYW5jZV9mYWxsYmFjawgBQG1heWJlX21heF92b3RlcnONAgEsT3B0aW9uPHUzMj4AAURtYXliZV9tYXhfdGFyZ2V0c40CASxPcHRpb248dTMyPgAEBJBTZWUgW2BQYWxsZXQ6OmdvdmVybmFuY2VfZmFsbGJhY2tgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu1QMIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZSxSYXdTb2x1dGlvbgQEUwHZAwAMASBzb2x1dGlvbtkDAQRTAAEUc2NvcmWlBAE0RWxlY3Rpb25TY29yZQABFHJvdW5kEAEMdTMyAADZAwhAcG9sa2Fkb3RfcnVudGltZVROcG9zQ29tcGFjdFNvbHV0aW9uMTYAAEABGHZvdGVzMd0DAAABGHZvdGVzMukDAAABGHZvdGVzM/0DAAABGHZvdGVzNAkEAAABGHZvdGVzNRUEAAABGHZvdGVzNiEEAAABGHZvdGVzNy0EAAABGHZvdGVzODkEAAABGHZvdGVzOUUEAAABHHZvdGVzMTBRBAAAARx2b3RlczExXQQAAAEcdm90ZXMxMmkEAAABHHZvdGVzMTN1BAAAARx2b3RlczE0gQQAAAEcdm90ZXMxNY0EAAABHHZvdGVzMTaZBAAAAN0DAAAC4QMA4QMAAAQIFQHlAwDlAwAABpEBAOkDAAAC7QMA7QMAAAQMFQHxA+UDAPEDAAAECOUD9QMA9QMAAAb5AwD5Aww0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzGFBlclUxNgAABACRAQEMdTE2AAD9AwAAAgEEAAEEAAAEDBUBBQTlAwAFBAAAAwIAAADxAwAJBAAAAg0EAA0EAAAEDBUBEQTlAwARBAAAAwMAAADxAwAVBAAAAhkEABkEAAAEDBUBHQTlAwAdBAAAAwQAAADxAwAhBAAAAiUEACUEAAAEDBUBKQTlAwApBAAAAwUAAADxAwAtBAAAAjEEADEEAAAEDBUBNQTlAwA1BAAAAwYAAADxAwA5BAAAAj0EAD0EAAAEDBUBQQTlAwBBBAAAAwcAAADxAwBFBAAAAkkEAEkEAAAEDBUBTQTlAwBNBAAAAwgAAADxAwBRBAAAAlUEAFUEAAAEDBUBWQTlAwBZBAAAAwkAAADxAwBdBAAAAmEEAGEEAAAEDBUBZQTlAwBlBAAAAwoAAADxAwBpBAAAAm0EAG0EAAAEDBUBcQTlAwBxBAAAAwsAAADxAwB1BAAAAnkEAHkEAAAEDBUBfQTlAwB9BAAAAwwAAADxAwCBBAAAAoUEAIUEAAAEDBUBiQTlAwCJBAAAAw0AAADxAwCNBAAAApEEAJEEAAAEDBUBlQTlAwCVBAAAAw4AAADxAwCZBAAAAp0EAJ0EAAAEDBUBoQTlAwChBAAAAw8AAADxAwClBAhEc3BfbnBvc19lbGVjdGlvbnM0RWxlY3Rpb25TY29yZQAADAE0bWluaW1hbF9zdGFrZRgBPEV4dGVuZGVkQmFsYW5jZQABJHN1bV9zdGFrZRgBPEV4dGVuZGVkQmFsYW5jZQABRHN1bV9zdGFrZV9zcXVhcmVkGAE8RXh0ZW5kZWRCYWxhbmNlAACpBAiQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlWFNvbHV0aW9uT3JTbmFwc2hvdFNpemUAAAgBGHZvdGVycxUBAQx1MzIAARx0YXJnZXRzFQEBDHUzMgAArQQEGE9wdGlvbgQEVAGlBAEIEE5vbmUAAAAQU29tZQQApQQAAAEAALEEAAACtQQAtQQAAAQIALkEALkECERzcF9ucG9zX2VsZWN0aW9ucxxTdXBwb3J0BCRBY2NvdW50SWQBAAAIARR0b3RhbBgBPEV4dGVuZGVkQmFsYW5jZQABGHZvdGVyc70EAYRWZWM8KEFjY291bnRJZCwgRXh0ZW5kZWRCYWxhbmNlKT4AAL0EAAACwQQAwQQAAAQIABgAxQQMQHBhbGxldF9iYWdzX2xpc3QYcGFsbGV0EENhbGwIBFQABEkAAQwUcmViYWcEAShkaXNsb2NhdGVk6QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAAEWFNlZSBbYFBhbGxldDo6cmViYWdgXS48cHV0X2luX2Zyb250X29mBAEcbGlnaHRlcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABBIBTZWUgW2BQYWxsZXQ6OnB1dF9pbl9mcm9udF9vZmBdLlRwdXRfaW5fZnJvbnRfb2Zfb3RoZXIIARxoZWF2aWVy6QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEcbGlnaHRlcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgACBJhTZWUgW2BQYWxsZXQ6OnB1dF9pbl9mcm9udF9vZl9vdGhlcmBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy7JBAxccGFsbGV0X25vbWluYXRpb25fcG9vbHMYcGFsbGV0EENhbGwEBFQAAVwQam9pbggBGGFtb3VudPQBMEJhbGFuY2VPZjxUPgABHHBvb2xfaWQQARhQb29sSWQAAARUU2VlIFtgUGFsbGV0Ojpqb2luYF0uKGJvbmRfZXh0cmEEARRleHRyYc0EAVxCb25kRXh0cmE8QmFsYW5jZU9mPFQ+PgABBGxTZWUgW2BQYWxsZXQ6OmJvbmRfZXh0cmFgXS4wY2xhaW1fcGF5b3V0AAIEdFNlZSBbYFBhbGxldDo6Y2xhaW1fcGF5b3V0YF0uGHVuYm9uZAgBOG1lbWJlcl9hY2NvdW506QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAFAdW5ib25kaW5nX3BvaW50c/QBMEJhbGFuY2VPZjxUPgADBFxTZWUgW2BQYWxsZXQ6OnVuYm9uZGBdLlhwb29sX3dpdGhkcmF3X3VuYm9uZGVkCAEccG9vbF9pZBABGFBvb2xJZAABSG51bV9zbGFzaGluZ19zcGFucxABDHUzMgAEBJxTZWUgW2BQYWxsZXQ6OnBvb2xfd2l0aGRyYXdfdW5ib25kZWRgXS5Ed2l0aGRyYXdfdW5ib25kZWQIAThtZW1iZXJfYWNjb3VudOkBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABSG51bV9zbGFzaGluZ19zcGFucxABDHUzMgAFBIhTZWUgW2BQYWxsZXQ6OndpdGhkcmF3X3VuYm9uZGVkYF0uGGNyZWF0ZRABGGFtb3VudPQBMEJhbGFuY2VPZjxUPgABEHJvb3TpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AASRub21pbmF0b3LpAQFQQWNjb3VudElkTG9va3VwT2Y8VD4AARxib3VuY2Vy6QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAYEXFNlZSBbYFBhbGxldDo6Y3JlYXRlYF0uTGNyZWF0ZV93aXRoX3Bvb2xfaWQUARhhbW91bnT0ATBCYWxhbmNlT2Y8VD4AARByb2906QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEkbm9taW5hdG9y6QEBUEFjY291bnRJZExvb2t1cE9mPFQ+AAEcYm91bmNlcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABHHBvb2xfaWQQARhQb29sSWQABwSQU2VlIFtgUGFsbGV0OjpjcmVhdGVfd2l0aF9wb29sX2lkYF0uIG5vbWluYXRlCAEccG9vbF9pZBABGFBvb2xJZAABKHZhbGlkYXRvcnP1AQFEVmVjPFQ6OkFjY291bnRJZD4ACARkU2VlIFtgUGFsbGV0Ojpub21pbmF0ZWBdLiRzZXRfc3RhdGUIARxwb29sX2lkEAEYUG9vbElkAAEUc3RhdGXRBAEkUG9vbFN0YXRlAAkEaFNlZSBbYFBhbGxldDo6c2V0X3N0YXRlYF0uMHNldF9tZXRhZGF0YQgBHHBvb2xfaWQQARhQb29sSWQAASBtZXRhZGF0YTQBHFZlYzx1OD4ACgR0U2VlIFtgUGFsbGV0OjpzZXRfbWV0YWRhdGFgXS4sc2V0X2NvbmZpZ3MYATRtaW5fam9pbl9ib25k1QQBWENvbmZpZ09wPEJhbGFuY2VPZjxUPj4AATxtaW5fY3JlYXRlX2JvbmTVBAFYQ29uZmlnT3A8QmFsYW5jZU9mPFQ+PgABJG1heF9wb29sc9kEATRDb25maWdPcDx1MzI+AAEsbWF4X21lbWJlcnPZBAE0Q29uZmlnT3A8dTMyPgABUG1heF9tZW1iZXJzX3Blcl9wb29s2QQBNENvbmZpZ09wPHUzMj4AAVRnbG9iYWxfbWF4X2NvbW1pc3Npb27dBAFEQ29uZmlnT3A8UGVyYmlsbD4ACwRwU2VlIFtgUGFsbGV0OjpzZXRfY29uZmlnc2BdLjB1cGRhdGVfcm9sZXMQARxwb29sX2lkEAEYUG9vbElkAAEgbmV3X3Jvb3ThBAFYQ29uZmlnT3A8VDo6QWNjb3VudElkPgABNG5ld19ub21pbmF0b3LhBAFYQ29uZmlnT3A8VDo6QWNjb3VudElkPgABLG5ld19ib3VuY2Vy4QQBWENvbmZpZ09wPFQ6OkFjY291bnRJZD4ADAR0U2VlIFtgUGFsbGV0Ojp1cGRhdGVfcm9sZXNgXS4UY2hpbGwEARxwb29sX2lkEAEYUG9vbElkAA0EWFNlZSBbYFBhbGxldDo6Y2hpbGxgXS5AYm9uZF9leHRyYV9vdGhlcggBGG1lbWJlcukBAVBBY2NvdW50SWRMb29rdXBPZjxUPgABFGV4dHJhzQQBXEJvbmRFeHRyYTxCYWxhbmNlT2Y8VD4+AA4EhFNlZSBbYFBhbGxldDo6Ym9uZF9leHRyYV9vdGhlcmBdLlBzZXRfY2xhaW1fcGVybWlzc2lvbgQBKHBlcm1pc3Npb27lBAE8Q2xhaW1QZXJtaXNzaW9uAA8ElFNlZSBbYFBhbGxldDo6c2V0X2NsYWltX3Blcm1pc3Npb25gXS5IY2xhaW1fcGF5b3V0X290aGVyBAEUb3RoZXIAATBUOjpBY2NvdW50SWQAEASMU2VlIFtgUGFsbGV0OjpjbGFpbV9wYXlvdXRfb3RoZXJgXS44c2V0X2NvbW1pc3Npb24IARxwb29sX2lkEAEYUG9vbElkAAE4bmV3X2NvbW1pc3Npb27pBAF8T3B0aW9uPChQZXJiaWxsLCBUOjpBY2NvdW50SWQpPgARBHxTZWUgW2BQYWxsZXQ6OnNldF9jb21taXNzaW9uYF0uSHNldF9jb21taXNzaW9uX21heAgBHHBvb2xfaWQQARhQb29sSWQAAThtYXhfY29tbWlzc2lvbqwBHFBlcmJpbGwAEgSMU2VlIFtgUGFsbGV0OjpzZXRfY29tbWlzc2lvbl9tYXhgXS5oc2V0X2NvbW1pc3Npb25fY2hhbmdlX3JhdGUIARxwb29sX2lkEAEYUG9vbElkAAEsY2hhbmdlX3JhdGXxBAGcQ29tbWlzc2lvbkNoYW5nZVJhdGU8QmxvY2tOdW1iZXJGb3I8VD4+ABMErFNlZSBbYFBhbGxldDo6c2V0X2NvbW1pc3Npb25fY2hhbmdlX3JhdGVgXS5AY2xhaW1fY29tbWlzc2lvbgQBHHBvb2xfaWQQARhQb29sSWQAFASEU2VlIFtgUGFsbGV0OjpjbGFpbV9jb21taXNzaW9uYF0uTGFkanVzdF9wb29sX2RlcG9zaXQEARxwb29sX2lkEAEYUG9vbElkABUEkFNlZSBbYFBhbGxldDo6YWRqdXN0X3Bvb2xfZGVwb3NpdGBdLnxzZXRfY29tbWlzc2lvbl9jbGFpbV9wZXJtaXNzaW9uCAEccG9vbF9pZBABGFBvb2xJZAABKHBlcm1pc3Npb271BAG8T3B0aW9uPENvbW1pc3Npb25DbGFpbVBlcm1pc3Npb248VDo6QWNjb3VudElkPj4AFgTAU2VlIFtgUGFsbGV0OjpzZXRfY29tbWlzc2lvbl9jbGFpbV9wZXJtaXNzaW9uYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLs0ECFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyRCb25kRXh0cmEEHEJhbGFuY2UBGAEILEZyZWVCYWxhbmNlBAAYARxCYWxhbmNlAAAAHFJld2FyZHMAAQAA0QQIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzJFBvb2xTdGF0ZQABDBBPcGVuAAAAHEJsb2NrZWQAAQAoRGVzdHJveWluZwACAADVBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBGAEMEE5vb3AAAAAMU2V0BAAYAQRUAAEAGFJlbW92ZQACAADZBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBEAEMEE5vb3AAAAAMU2V0BAAQAQRUAAEAGFJlbW92ZQACAADdBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBrAEMEE5vb3AAAAAMU2V0BACsAQRUAAEAGFJlbW92ZQACAADhBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHMgQ29uZmlnT3AEBFQBAAEMEE5vb3AAAAAMU2V0BAAAAQRUAAEAGFJlbW92ZQACAADlBAhccGFsbGV0X25vbWluYXRpb25fcG9vbHM8Q2xhaW1QZXJtaXNzaW9uAAEQMFBlcm1pc3Npb25lZAAAAFhQZXJtaXNzaW9ubGVzc0NvbXBvdW5kAAEAWFBlcm1pc3Npb25sZXNzV2l0aGRyYXcAAgBEUGVybWlzc2lvbmxlc3NBbGwAAwAA6QQEGE9wdGlvbgQEVAHtBAEIEE5vbmUAAAAQU29tZQQA7QQAAAEAAO0EAAAECKwAAPEECFxwYWxsZXRfbm9taW5hdGlvbl9wb29sc1BDb21taXNzaW9uQ2hhbmdlUmF0ZQQsQmxvY2tOdW1iZXIBEAAIATBtYXhfaW5jcmVhc2WsARxQZXJiaWxsAAEkbWluX2RlbGF5EAEsQmxvY2tOdW1iZXIAAPUEBBhPcHRpb24EBFQB+QQBCBBOb25lAAAAEFNvbWUEAPkEAAABAAD5BAhccGFsbGV0X25vbWluYXRpb25fcG9vbHNkQ29tbWlzc2lvbkNsYWltUGVybWlzc2lvbgQkQWNjb3VudElkAQABCDhQZXJtaXNzaW9ubGVzcwAAABxBY2NvdW50BAAAASRBY2NvdW50SWQAAQAA/QQMTHBhbGxldF9mYXN0X3Vuc3Rha2UYcGFsbGV0EENhbGwEBFQAAQxUcmVnaXN0ZXJfZmFzdF91bnN0YWtlAAAEmFNlZSBbYFBhbGxldDo6cmVnaXN0ZXJfZmFzdF91bnN0YWtlYF0uKGRlcmVnaXN0ZXIAAQRsU2VlIFtgUGFsbGV0OjpkZXJlZ2lzdGVyYF0uHGNvbnRyb2wEATRlcmFzX3RvX2NoZWNrEAEgRXJhSW5kZXgAAgRgU2VlIFtgUGFsbGV0Ojpjb250cm9sYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLgEFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnM0Y29uZmlndXJhdGlvbhhwYWxsZXQQQ2FsbAQEVAABvHxzZXRfdmFsaWRhdGlvbl91cGdyYWRlX2Nvb2xkb3duBAEMbmV3EAFEQmxvY2tOdW1iZXJGb3I8VD4AAATAU2VlIFtgUGFsbGV0OjpzZXRfdmFsaWRhdGlvbl91cGdyYWRlX2Nvb2xkb3duYF0ucHNldF92YWxpZGF0aW9uX3VwZ3JhZGVfZGVsYXkEAQxuZXcQAURCbG9ja051bWJlckZvcjxUPgABBLRTZWUgW2BQYWxsZXQ6OnNldF92YWxpZGF0aW9uX3VwZ3JhZGVfZGVsYXlgXS5kc2V0X2NvZGVfcmV0ZW50aW9uX3BlcmlvZAQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AAIEqFNlZSBbYFBhbGxldDo6c2V0X2NvZGVfcmV0ZW50aW9uX3BlcmlvZGBdLkRzZXRfbWF4X2NvZGVfc2l6ZQQBDG5ldxABDHUzMgADBIhTZWUgW2BQYWxsZXQ6OnNldF9tYXhfY29kZV9zaXplYF0uQHNldF9tYXhfcG92X3NpemUEAQxuZXcQAQx1MzIABASEU2VlIFtgUGFsbGV0OjpzZXRfbWF4X3Bvdl9zaXplYF0uWHNldF9tYXhfaGVhZF9kYXRhX3NpemUEAQxuZXcQAQx1MzIABQScU2VlIFtgUGFsbGV0OjpzZXRfbWF4X2hlYWRfZGF0YV9zaXplYF0uSHNldF9jb3JldGltZV9jb3JlcwQBDG5ldxABDHUzMgAGBIxTZWUgW2BQYWxsZXQ6OnNldF9jb3JldGltZV9jb3Jlc2BdLlRzZXRfb25fZGVtYW5kX3JldHJpZXMEAQxuZXcQAQx1MzIABwSYU2VlIFtgUGFsbGV0OjpzZXRfb25fZGVtYW5kX3JldHJpZXNgXS5wc2V0X2dyb3VwX3JvdGF0aW9uX2ZyZXF1ZW5jeQQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AAgEtFNlZSBbYFBhbGxldDo6c2V0X2dyb3VwX3JvdGF0aW9uX2ZyZXF1ZW5jeWBdLnRzZXRfcGFyYXNfYXZhaWxhYmlsaXR5X3BlcmlvZAQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AAkEuFNlZSBbYFBhbGxldDo6c2V0X3BhcmFzX2F2YWlsYWJpbGl0eV9wZXJpb2RgXS5gc2V0X3NjaGVkdWxpbmdfbG9va2FoZWFkBAEMbmV3EAEMdTMyAAsEpFNlZSBbYFBhbGxldDo6c2V0X3NjaGVkdWxpbmdfbG9va2FoZWFkYF0ubHNldF9tYXhfdmFsaWRhdG9yc19wZXJfY29yZQQBDG5ld40CASxPcHRpb248dTMyPgAMBLBTZWUgW2BQYWxsZXQ6OnNldF9tYXhfdmFsaWRhdG9yc19wZXJfY29yZWBdLkhzZXRfbWF4X3ZhbGlkYXRvcnMEAQxuZXeNAgEsT3B0aW9uPHUzMj4ADQSMU2VlIFtgUGFsbGV0OjpzZXRfbWF4X3ZhbGlkYXRvcnNgXS5Ic2V0X2Rpc3B1dGVfcGVyaW9kBAEMbmV3EAEwU2Vzc2lvbkluZGV4AA4EjFNlZSBbYFBhbGxldDo6c2V0X2Rpc3B1dGVfcGVyaW9kYF0utHNldF9kaXNwdXRlX3Bvc3RfY29uY2x1c2lvbl9hY2NlcHRhbmNlX3BlcmlvZAQBDG5ldxABREJsb2NrTnVtYmVyRm9yPFQ+AA8E+FNlZSBbYFBhbGxldDo6c2V0X2Rpc3B1dGVfcG9zdF9jb25jbHVzaW9uX2FjY2VwdGFuY2VfcGVyaW9kYF0uRHNldF9ub19zaG93X3Nsb3RzBAEMbmV3EAEMdTMyABIEiFNlZSBbYFBhbGxldDo6c2V0X25vX3Nob3dfc2xvdHNgXS5Qc2V0X25fZGVsYXlfdHJhbmNoZXMEAQxuZXcQAQx1MzIAEwSUU2VlIFtgUGFsbGV0OjpzZXRfbl9kZWxheV90cmFuY2hlc2BdLnhzZXRfemVyb3RoX2RlbGF5X3RyYW5jaGVfd2lkdGgEAQxuZXcQAQx1MzIAFAS8U2VlIFtgUGFsbGV0OjpzZXRfemVyb3RoX2RlbGF5X3RyYW5jaGVfd2lkdGhgXS5Qc2V0X25lZWRlZF9hcHByb3ZhbHMEAQxuZXcQAQx1MzIAFQSUU2VlIFtgUGFsbGV0OjpzZXRfbmVlZGVkX2FwcHJvdmFsc2BdLnBzZXRfcmVsYXlfdnJmX21vZHVsb19zYW1wbGVzBAEMbmV3EAEMdTMyABYEtFNlZSBbYFBhbGxldDo6c2V0X3JlbGF5X3ZyZl9tb2R1bG9fc2FtcGxlc2BdLmhzZXRfbWF4X3Vwd2FyZF9xdWV1ZV9jb3VudAQBDG5ldxABDHUzMgAXBKxTZWUgW2BQYWxsZXQ6OnNldF9tYXhfdXB3YXJkX3F1ZXVlX2NvdW50YF0uZHNldF9tYXhfdXB3YXJkX3F1ZXVlX3NpemUEAQxuZXcQAQx1MzIAGASoU2VlIFtgUGFsbGV0OjpzZXRfbWF4X3Vwd2FyZF9xdWV1ZV9zaXplYF0udHNldF9tYXhfZG93bndhcmRfbWVzc2FnZV9zaXplBAEMbmV3EAEMdTMyABkEuFNlZSBbYFBhbGxldDo6c2V0X21heF9kb3dud2FyZF9tZXNzYWdlX3NpemVgXS5sc2V0X21heF91cHdhcmRfbWVzc2FnZV9zaXplBAEMbmV3EAEMdTMyABsEsFNlZSBbYFBhbGxldDo6c2V0X21heF91cHdhcmRfbWVzc2FnZV9zaXplYF0uoHNldF9tYXhfdXB3YXJkX21lc3NhZ2VfbnVtX3Blcl9jYW5kaWRhdGUEAQxuZXcQAQx1MzIAHATkU2VlIFtgUGFsbGV0OjpzZXRfbWF4X3Vwd2FyZF9tZXNzYWdlX251bV9wZXJfY2FuZGlkYXRlYF0uZHNldF9ocm1wX29wZW5fcmVxdWVzdF90dGwEAQxuZXcQAQx1MzIAHQSoU2VlIFtgUGFsbGV0OjpzZXRfaHJtcF9vcGVuX3JlcXVlc3RfdHRsYF0uXHNldF9ocm1wX3NlbmRlcl9kZXBvc2l0BAEMbmV3GAEcQmFsYW5jZQAeBKBTZWUgW2BQYWxsZXQ6OnNldF9ocm1wX3NlbmRlcl9kZXBvc2l0YF0uaHNldF9ocm1wX3JlY2lwaWVudF9kZXBvc2l0BAEMbmV3GAEcQmFsYW5jZQAfBKxTZWUgW2BQYWxsZXQ6OnNldF9ocm1wX3JlY2lwaWVudF9kZXBvc2l0YF0udHNldF9ocm1wX2NoYW5uZWxfbWF4X2NhcGFjaXR5BAEMbmV3EAEMdTMyACAEuFNlZSBbYFBhbGxldDo6c2V0X2hybXBfY2hhbm5lbF9tYXhfY2FwYWNpdHlgXS58c2V0X2hybXBfY2hhbm5lbF9tYXhfdG90YWxfc2l6ZQQBDG5ldxABDHUzMgAhBMBTZWUgW2BQYWxsZXQ6OnNldF9ocm1wX2NoYW5uZWxfbWF4X3RvdGFsX3NpemVgXS6cc2V0X2hybXBfbWF4X3BhcmFjaGFpbl9pbmJvdW5kX2NoYW5uZWxzBAEMbmV3EAEMdTMyACIE4FNlZSBbYFBhbGxldDo6c2V0X2hybXBfbWF4X3BhcmFjaGFpbl9pbmJvdW5kX2NoYW5uZWxzYF0uhHNldF9ocm1wX2NoYW5uZWxfbWF4X21lc3NhZ2Vfc2l6ZQQBDG5ldxABDHUzMgAkBMhTZWUgW2BQYWxsZXQ6OnNldF9ocm1wX2NoYW5uZWxfbWF4X21lc3NhZ2Vfc2l6ZWBdLqBzZXRfaHJtcF9tYXhfcGFyYWNoYWluX291dGJvdW5kX2NoYW5uZWxzBAEMbmV3EAEMdTMyACUE5FNlZSBbYFBhbGxldDo6c2V0X2hybXBfbWF4X3BhcmFjaGFpbl9vdXRib3VuZF9jaGFubmVsc2BdLphzZXRfaHJtcF9tYXhfbWVzc2FnZV9udW1fcGVyX2NhbmRpZGF0ZQQBDG5ldxABDHUzMgAnBNxTZWUgW2BQYWxsZXQ6OnNldF9ocm1wX21heF9tZXNzYWdlX251bV9wZXJfY2FuZGlkYXRlYF0uSHNldF9wdmZfdm90aW5nX3R0bAQBDG5ldxABMFNlc3Npb25JbmRleAAqBIxTZWUgW2BQYWxsZXQ6OnNldF9wdmZfdm90aW5nX3R0bGBdLpBzZXRfbWluaW11bV92YWxpZGF0aW9uX3VwZ3JhZGVfZGVsYXkEAQxuZXcQAURCbG9ja051bWJlckZvcjxUPgArBNRTZWUgW2BQYWxsZXQ6OnNldF9taW5pbXVtX3ZhbGlkYXRpb25fdXBncmFkZV9kZWxheWBdLnBzZXRfYnlwYXNzX2NvbnNpc3RlbmN5X2NoZWNrBAEMbmV3eAEQYm9vbAAsBLRTZWUgW2BQYWxsZXQ6OnNldF9ieXBhc3NfY29uc2lzdGVuY3lfY2hlY2tgXS5gc2V0X2FzeW5jX2JhY2tpbmdfcGFyYW1zBAEMbmV3BQUBSEFzeW5jQmFja2luZ1BhcmFtcwAtBKRTZWUgW2BQYWxsZXQ6OnNldF9hc3luY19iYWNraW5nX3BhcmFtc2BdLkxzZXRfZXhlY3V0b3JfcGFyYW1zBAEMbmV3CQUBOEV4ZWN1dG9yUGFyYW1zAC4EkFNlZSBbYFBhbGxldDo6c2V0X2V4ZWN1dG9yX3BhcmFtc2BdLlhzZXRfb25fZGVtYW5kX2Jhc2VfZmVlBAEMbmV3GAEcQmFsYW5jZQAvBJxTZWUgW2BQYWxsZXQ6OnNldF9vbl9kZW1hbmRfYmFzZV9mZWVgXS50c2V0X29uX2RlbWFuZF9mZWVfdmFyaWFiaWxpdHkEAQxuZXesARxQZXJiaWxsADAEuFNlZSBbYFBhbGxldDo6c2V0X29uX2RlbWFuZF9mZWVfdmFyaWFiaWxpdHlgXS5wc2V0X29uX2RlbWFuZF9xdWV1ZV9tYXhfc2l6ZQQBDG5ldxABDHUzMgAxBLRTZWUgW2BQYWxsZXQ6OnNldF9vbl9kZW1hbmRfcXVldWVfbWF4X3NpemVgXS6Yc2V0X29uX2RlbWFuZF90YXJnZXRfcXVldWVfdXRpbGl6YXRpb24EAQxuZXesARxQZXJiaWxsADIE3FNlZSBbYFBhbGxldDo6c2V0X29uX2RlbWFuZF90YXJnZXRfcXVldWVfdXRpbGl6YXRpb25gXS5Ec2V0X29uX2RlbWFuZF90dGwEAQxuZXcQAURCbG9ja051bWJlckZvcjxUPgAzBIhTZWUgW2BQYWxsZXQ6OnNldF9vbl9kZW1hbmRfdHRsYF0uZHNldF9taW5pbXVtX2JhY2tpbmdfdm90ZXMEAQxuZXcQAQx1MzIANASoU2VlIFtgUGFsbGV0OjpzZXRfbWluaW11bV9iYWNraW5nX3ZvdGVzYF0uQHNldF9ub2RlX2ZlYXR1cmUIARRpbmRleAgBCHU4AAEUdmFsdWV4ARBib29sADUEhFNlZSBbYFBhbGxldDo6c2V0X25vZGVfZmVhdHVyZWBdLmhzZXRfYXBwcm92YWxfdm90aW5nX3BhcmFtcwQBDG5ldx0FAVBBcHByb3ZhbFZvdGluZ1BhcmFtcwA2BKxTZWUgW2BQYWxsZXQ6OnNldF9hcHByb3ZhbF92b3RpbmdfcGFyYW1zYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLgUFEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2NGFzeW5jX2JhY2tpbmdIQXN5bmNCYWNraW5nUGFyYW1zAAAIAUxtYXhfY2FuZGlkYXRlX2RlcHRoEAEMdTMyAAFQYWxsb3dlZF9hbmNlc3RyeV9sZW4QAQx1MzIAAAkFEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2PGV4ZWN1dG9yX3BhcmFtczhFeGVjdXRvclBhcmFtcwAABAANBQFIVmVjPEV4ZWN1dG9yUGFyYW0+AAANBQAAAhEFABEFEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2PGV4ZWN1dG9yX3BhcmFtczRFeGVjdXRvclBhcmFtAAEcOE1heE1lbW9yeVBhZ2VzBAAQAQx1MzIAAQA8U3RhY2tMb2dpY2FsTWF4BAAQAQx1MzIAAgA4U3RhY2tOYXRpdmVNYXgEABABDHUzMgADAFBQcmVjaGVja2luZ01heE1lbW9yeQQALAEMdTY0AAQAOFB2ZlByZXBUaW1lb3V0CAAVBQEsUHZmUHJlcEtpbmQAACwBDHU2NAAFADhQdmZFeGVjVGltZW91dAgAGQUBLFB2ZkV4ZWNLaW5kAAAsAQx1NjQABgBEV2FzbUV4dEJ1bGtNZW1vcnkABwAAFQUMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYsUHZmUHJlcEtpbmQAAQggUHJlY2hlY2sAAAAcUHJlcGFyZQABAAAZBQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NixQdmZFeGVjS2luZAABCBxCYWNraW5nAAAAIEFwcHJvdmFsAAEAAB0FDExwb2xrYWRvdF9wcmltaXRpdmVzIHZzdGFnaW5nUEFwcHJvdmFsVm90aW5nUGFyYW1zAAAEAWxtYXhfYXBwcm92YWxfY29hbGVzY2VfY291bnQQAQx1MzIAACEFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMYc2hhcmVkGHBhbGxldBBDYWxsBARUAAEABA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLiUFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uGHBhbGxldBBDYWxsBARUAAEABA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLikFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnM4cGFyYXNfaW5oZXJlbnQYcGFsbGV0EENhbGwEBFQAAQQUZW50ZXIEARBkYXRhLQUBkFBhcmFjaGFpbnNJbmhlcmVudERhdGE8SGVhZGVyRm9yPFQ+PgAABFhTZWUgW2BQYWxsZXQ6OmVudGVyYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLi0FDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2MEluaGVyZW50RGF0YQQMSERSAcUBABABJGJpdGZpZWxkczEFAZBVbmNoZWNrZWRTaWduZWRBdmFpbGFiaWxpdHlCaXRmaWVsZHMAAURiYWNrZWRfY2FuZGlkYXRlc00FAXxWZWM8QmFja2VkQ2FuZGlkYXRlPEhEUjo6SGFzaD4+AAEgZGlzcHV0ZXORBQFgTXVsdGlEaXNwdXRlU3RhdGVtZW50U2V0AAE0cGFyZW50X2hlYWRlcsUBAQxIRFIAADEFAAACNQUANQUQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYYc2lnbmVkPFVuY2hlY2tlZFNpZ25lZAgcUGF5bG9hZAE5BSxSZWFsUGF5bG9hZAE5BQAMARxwYXlsb2FkOQUBHFBheWxvYWQAATx2YWxpZGF0b3JfaW5kZXhFBQE4VmFsaWRhdG9ySW5kZXgAASRzaWduYXR1cmVJBQFIVmFsaWRhdG9yU2lnbmF0dXJlAAA5BQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NlBBdmFpbGFiaWxpdHlCaXRmaWVsZAAABAA9BQF8Qml0VmVjPHU4LCBiaXR2ZWM6Om9yZGVyOjpMc2IwPgAAPQUAAAcIQQUAQQUMGGJpdHZlYxRvcmRlchBMc2IwAAAAAEUFDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2OFZhbGlkYXRvckluZGV4AAAEABABDHUzMgAASQUQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjY0dmFsaWRhdG9yX2FwcCRTaWduYXR1cmUAAAQApQMBSHNyMjU1MTk6OlNpZ25hdHVyZQAATQUAAAJRBQBRBQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NjxCYWNrZWRDYW5kaWRhdGUEBEgBMAAMASRjYW5kaWRhdGVVBQFwQ29tbWl0dGVkQ2FuZGlkYXRlUmVjZWlwdDxIPgABOHZhbGlkaXR5X3ZvdGVziQUBYFZlYzxWYWxpZGl0eUF0dGVzdGF0aW9uPgABRHZhbGlkYXRvcl9pbmRpY2VzPQUBfEJpdFZlYzx1OCwgYml0dmVjOjpvcmRlcjo6THNiMD4AAFUFDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2ZENvbW1pdHRlZENhbmRpZGF0ZVJlY2VpcHQEBEgBMAAIAShkZXNjcmlwdG9yWQUBWENhbmRpZGF0ZURlc2NyaXB0b3I8SD4AASxjb21taXRtZW50c2kFAVBDYW5kaWRhdGVDb21taXRtZW50cwAAWQUMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZMQ2FuZGlkYXRlRGVzY3JpcHRvcgQESAEwACQBHHBhcmFfaWS5AgEISWQAATByZWxheV9wYXJlbnQwAQRIAAEgY29sbGF0b3JdBQEoQ29sbGF0b3JJZAABeHBlcnNpc3RlZF92YWxpZGF0aW9uX2RhdGFfaGFzaDABEEhhc2gAASBwb3ZfaGFzaDABEEhhc2gAATBlcmFzdXJlX3Jvb3QwARBIYXNoAAEkc2lnbmF0dXJlYQUBRENvbGxhdG9yU2lnbmF0dXJlAAEkcGFyYV9oZWFkMAEQSGFzaAABUHZhbGlkYXRpb25fY29kZV9oYXNoZQUBSFZhbGlkYXRpb25Db2RlSGFzaAAAXQUQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYwY29sbGF0b3JfYXBwGFB1YmxpYwAABADkATxzcjI1NTE5OjpQdWJsaWMAAGEFEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2MGNvbGxhdG9yX2FwcCRTaWduYXR1cmUAAAQApQMBSHNyMjU1MTk6OlNpZ25hdHVyZQAAZQUMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXNIVmFsaWRhdGlvbkNvZGVIYXNoAAAEADABEEhhc2gAAGkFDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2UENhbmRpZGF0ZUNvbW1pdG1lbnRzBAROARAAGAE8dXB3YXJkX21lc3NhZ2VzbQUBOFVwd2FyZE1lc3NhZ2VzAAFMaG9yaXpvbnRhbF9tZXNzYWdlc3EFAUhIb3Jpem9udGFsTWVzc2FnZXMAAUxuZXdfdmFsaWRhdGlvbl9jb2RlfQUBWE9wdGlvbjxWYWxpZGF0aW9uQ29kZT4AASRoZWFkX2RhdGGFBQEgSGVhZERhdGEAAWxwcm9jZXNzZWRfZG93bndhcmRfbWVzc2FnZXMQAQx1MzIAAThocm1wX3dhdGVybWFyaxABBE4AAG0FDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBNARTAAAEAKkBARhWZWM8VD4AAHEFDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBdQUEUwAABAB5BQEYVmVjPFQ+AAB1BQhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzTE91dGJvdW5kSHJtcE1lc3NhZ2UECElkAbkCAAgBJHJlY2lwaWVudLkCAQhJZAABEGRhdGE0AVBzcF9zdGQ6OnZlYzo6VmVjPHU4PgAAeQUAAAJ1BQB9BQQYT3B0aW9uBARUAYEFAQgQTm9uZQAAABBTb21lBACBBQAAAQAAgQUMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXM4VmFsaWRhdGlvbkNvZGUAAAQANAEcVmVjPHU4PgAAhQUMdHBvbGthZG90X3BhcmFjaGFpbl9wcmltaXRpdmVzKHByaW1pdGl2ZXMgSGVhZERhdGEAAAQANAEcVmVjPHU4PgAAiQUAAAKNBQCNBQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NkxWYWxpZGl0eUF0dGVzdGF0aW9uAAEIIEltcGxpY2l0BABJBQFIVmFsaWRhdG9yU2lnbmF0dXJlAAEAIEV4cGxpY2l0BABJBQFIVmFsaWRhdG9yU2lnbmF0dXJlAAIAAJEFAAAClQUAlQUMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZMRGlzcHV0ZVN0YXRlbWVudFNldAAADAE4Y2FuZGlkYXRlX2hhc2iZBQE0Q2FuZGlkYXRlSGFzaAABHHNlc3Npb24QATBTZXNzaW9uSW5kZXgAAShzdGF0ZW1lbnRznQUB7FZlYzwoRGlzcHV0ZVN0YXRlbWVudCwgVmFsaWRhdG9ySW5kZXgsIFZhbGlkYXRvclNpZ25hdHVyZSk+AACZBQhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzNENhbmRpZGF0ZUhhc2gAAAQAMAEQSGFzaAAAnQUAAAKhBQChBQAABAylBUUFSQUApQUMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZARGlzcHV0ZVN0YXRlbWVudAABCBRWYWxpZAQAqQUBZFZhbGlkRGlzcHV0ZVN0YXRlbWVudEtpbmQAAAAcSW52YWxpZAQAsQUBbEludmFsaWREaXNwdXRlU3RhdGVtZW50S2luZAABAACpBQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NmRWYWxpZERpc3B1dGVTdGF0ZW1lbnRLaW5kAAEUIEV4cGxpY2l0AAAAPEJhY2tpbmdTZWNvbmRlZAQAMAEQSGFzaAABADBCYWNraW5nVmFsaWQEADABEEhhc2gAAgBAQXBwcm92YWxDaGVja2luZwADAIhBcHByb3ZhbENoZWNraW5nTXVsdGlwbGVDYW5kaWRhdGVzBACtBQFIVmVjPENhbmRpZGF0ZUhhc2g+AAQAAK0FAAACmQUAsQUMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZsSW52YWxpZERpc3B1dGVTdGF0ZW1lbnRLaW5kAAEEIEV4cGxpY2l0AAAAALUFEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXMYcGFsbGV0EENhbGwEBFQAASRYZm9yY2Vfc2V0X2N1cnJlbnRfY29kZQgBEHBhcmG5AgEYUGFyYUlkAAEgbmV3X2NvZGWBBQE4VmFsaWRhdGlvbkNvZGUAAAScU2VlIFtgUGFsbGV0Ojpmb3JjZV9zZXRfY3VycmVudF9jb2RlYF0uWGZvcmNlX3NldF9jdXJyZW50X2hlYWQIARBwYXJhuQIBGFBhcmFJZAABIG5ld19oZWFkhQUBIEhlYWREYXRhAAEEnFNlZSBbYFBhbGxldDo6Zm9yY2Vfc2V0X2N1cnJlbnRfaGVhZGBdLmxmb3JjZV9zY2hlZHVsZV9jb2RlX3VwZ3JhZGUMARBwYXJhuQIBGFBhcmFJZAABIG5ld19jb2RlgQUBOFZhbGlkYXRpb25Db2RlAAFMcmVsYXlfcGFyZW50X251bWJlchABREJsb2NrTnVtYmVyRm9yPFQ+AAIEsFNlZSBbYFBhbGxldDo6Zm9yY2Vfc2NoZWR1bGVfY29kZV91cGdyYWRlYF0uTGZvcmNlX25vdGVfbmV3X2hlYWQIARBwYXJhuQIBGFBhcmFJZAABIG5ld19oZWFkhQUBIEhlYWREYXRhAAMEkFNlZSBbYFBhbGxldDo6Zm9yY2Vfbm90ZV9uZXdfaGVhZGBdLkhmb3JjZV9xdWV1ZV9hY3Rpb24EARBwYXJhuQIBGFBhcmFJZAAEBIxTZWUgW2BQYWxsZXQ6OmZvcmNlX3F1ZXVlX2FjdGlvbmBdLmxhZGRfdHJ1c3RlZF92YWxpZGF0aW9uX2NvZGUEATx2YWxpZGF0aW9uX2NvZGWBBQE4VmFsaWRhdGlvbkNvZGUABQSwU2VlIFtgUGFsbGV0OjphZGRfdHJ1c3RlZF92YWxpZGF0aW9uX2NvZGVgXS5scG9rZV91bnVzZWRfdmFsaWRhdGlvbl9jb2RlBAFQdmFsaWRhdGlvbl9jb2RlX2hhc2hlBQFIVmFsaWRhdGlvbkNvZGVIYXNoAAYEsFNlZSBbYFBhbGxldDo6cG9rZV91bnVzZWRfdmFsaWRhdGlvbl9jb2RlYF0ubGluY2x1ZGVfcHZmX2NoZWNrX3N0YXRlbWVudAgBEHN0bXS5BQFEUHZmQ2hlY2tTdGF0ZW1lbnQAASRzaWduYXR1cmVJBQFIVmFsaWRhdG9yU2lnbmF0dXJlAAcEsFNlZSBbYFBhbGxldDo6aW5jbHVkZV9wdmZfY2hlY2tfc3RhdGVtZW50YF0udGZvcmNlX3NldF9tb3N0X3JlY2VudF9jb250ZXh0CAEQcGFyYbkCARhQYXJhSWQAARxjb250ZXh0EAFEQmxvY2tOdW1iZXJGb3I8VD4ACAS4U2VlIFtgUGFsbGV0Ojpmb3JjZV9zZXRfbW9zdF9yZWNlbnRfY29udGV4dGBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy65BQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NkRQdmZDaGVja1N0YXRlbWVudAAAEAEYYWNjZXB0eAEQYm9vbAABHHN1YmplY3RlBQFIVmFsaWRhdGlvbkNvZGVIYXNoAAE0c2Vzc2lvbl9pbmRleBABMFNlc3Npb25JbmRleAABPHZhbGlkYXRvcl9pbmRleEUFAThWYWxpZGF0b3JJbmRleAAAvQUQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyxpbml0aWFsaXplchhwYWxsZXQQQ2FsbAQEVAABBDRmb3JjZV9hcHByb3ZlBAEUdXBfdG8QASxCbG9ja051bWJlcgAABHhTZWUgW2BQYWxsZXQ6OmZvcmNlX2FwcHJvdmVgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMuwQUQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxBocm1wGHBhbGxldBBDYWxsBARUAAEsWGhybXBfaW5pdF9vcGVuX2NoYW5uZWwMASRyZWNpcGllbnS5AgEYUGFyYUlkAAFUcHJvcG9zZWRfbWF4X2NhcGFjaXR5EAEMdTMyAAFkcHJvcG9zZWRfbWF4X21lc3NhZ2Vfc2l6ZRABDHUzMgAABJxTZWUgW2BQYWxsZXQ6OmhybXBfaW5pdF9vcGVuX2NoYW5uZWxgXS5gaHJtcF9hY2NlcHRfb3Blbl9jaGFubmVsBAEYc2VuZGVyuQIBGFBhcmFJZAABBKRTZWUgW2BQYWxsZXQ6OmhybXBfYWNjZXB0X29wZW5fY2hhbm5lbGBdLkhocm1wX2Nsb3NlX2NoYW5uZWwEAShjaGFubmVsX2lkxQUBNEhybXBDaGFubmVsSWQAAgSMU2VlIFtgUGFsbGV0Ojpocm1wX2Nsb3NlX2NoYW5uZWxgXS5AZm9yY2VfY2xlYW5faHJtcAwBEHBhcmG5AgEYUGFyYUlkAAEsbnVtX2luYm91bmQQAQx1MzIAATBudW1fb3V0Ym91bmQQAQx1MzIAAwSEU2VlIFtgUGFsbGV0Ojpmb3JjZV9jbGVhbl9ocm1wYF0uXGZvcmNlX3Byb2Nlc3NfaHJtcF9vcGVuBAEgY2hhbm5lbHMQAQx1MzIABASgU2VlIFtgUGFsbGV0Ojpmb3JjZV9wcm9jZXNzX2hybXBfb3BlbmBdLmBmb3JjZV9wcm9jZXNzX2hybXBfY2xvc2UEASBjaGFubmVscxABDHUzMgAFBKRTZWUgW2BQYWxsZXQ6OmZvcmNlX3Byb2Nlc3NfaHJtcF9jbG9zZWBdLmBocm1wX2NhbmNlbF9vcGVuX3JlcXVlc3QIAShjaGFubmVsX2lkxQUBNEhybXBDaGFubmVsSWQAATRvcGVuX3JlcXVlc3RzEAEMdTMyAAYEpFNlZSBbYFBhbGxldDo6aHJtcF9jYW5jZWxfb3Blbl9yZXF1ZXN0YF0uXGZvcmNlX29wZW5faHJtcF9jaGFubmVsEAEYc2VuZGVyuQIBGFBhcmFJZAABJHJlY2lwaWVudLkCARhQYXJhSWQAATBtYXhfY2FwYWNpdHkQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAcEoFNlZSBbYFBhbGxldDo6Zm9yY2Vfb3Blbl9ocm1wX2NoYW5uZWxgXS5gZXN0YWJsaXNoX3N5c3RlbV9jaGFubmVsCAEYc2VuZGVyuQIBGFBhcmFJZAABJHJlY2lwaWVudLkCARhQYXJhSWQACASkU2VlIFtgUGFsbGV0Ojplc3RhYmxpc2hfc3lzdGVtX2NoYW5uZWxgXS5UcG9rZV9jaGFubmVsX2RlcG9zaXRzCAEYc2VuZGVyuQIBGFBhcmFJZAABJHJlY2lwaWVudLkCARhQYXJhSWQACQSYU2VlIFtgUGFsbGV0Ojpwb2tlX2NoYW5uZWxfZGVwb3NpdHNgXS50ZXN0YWJsaXNoX2NoYW5uZWxfd2l0aF9zeXN0ZW0EAUx0YXJnZXRfc3lzdGVtX2NoYWluuQIBGFBhcmFJZAAKBLhTZWUgW2BQYWxsZXQ6OmVzdGFibGlzaF9jaGFubmVsX3dpdGhfc3lzdGVtYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLsUFDHRwb2xrYWRvdF9wYXJhY2hhaW5fcHJpbWl0aXZlcyhwcmltaXRpdmVzNEhybXBDaGFubmVsSWQAAAgBGHNlbmRlcrkCAQhJZAABJHJlY2lwaWVudLkCAQhJZAAAyQUQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlcxhwYWxsZXQQQ2FsbAQEVAABBDhmb3JjZV91bmZyZWV6ZQAABHxTZWUgW2BQYWxsZXQ6OmZvcmNlX3VuZnJlZXplYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLs0FFGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMgZGlzcHV0ZXMgc2xhc2hpbmcYcGFsbGV0EENhbGwEBFQAAQRwcmVwb3J0X2Rpc3B1dGVfbG9zdF91bnNpZ25lZAgBNGRpc3B1dGVfcHJvb2bRBQFEQm94PERpc3B1dGVQcm9vZj4AATxrZXlfb3duZXJfcHJvb2bRAQFAVDo6S2V5T3duZXJQcm9vZgAABLRTZWUgW2BQYWxsZXQ6OnJlcG9ydF9kaXNwdXRlX2xvc3RfdW5zaWduZWRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu0QUQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYgc2xhc2hpbmcwRGlzcHV0ZVByb29mAAAQASR0aW1lX3Nsb3TVBQFARGlzcHV0ZXNUaW1lU2xvdAABEGtpbmTZBQFMU2xhc2hpbmdPZmZlbmNlS2luZAABPHZhbGlkYXRvcl9pbmRleEUFAThWYWxpZGF0b3JJbmRleAABMHZhbGlkYXRvcl9pZEECASxWYWxpZGF0b3JJZAAA1QUQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYgc2xhc2hpbmdARGlzcHV0ZXNUaW1lU2xvdAAACAE0c2Vzc2lvbl9pbmRleBABMFNlc3Npb25JbmRleAABOGNhbmRpZGF0ZV9oYXNomQUBNENhbmRpZGF0ZUhhc2gAANkFEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2IHNsYXNoaW5nTFNsYXNoaW5nT2ZmZW5jZUtpbmQAAQgoRm9ySW52YWxpZAAAADBBZ2FpbnN0VmFsaWQAAQAA3QUQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uPHBhcmFzX3JlZ2lzdHJhchhwYWxsZXQQQ2FsbAQEVAABJCByZWdpc3RlcgwBCGlkuQIBGFBhcmFJZAABMGdlbmVzaXNfaGVhZIUFASBIZWFkRGF0YQABPHZhbGlkYXRpb25fY29kZYEFAThWYWxpZGF0aW9uQ29kZQAABGRTZWUgW2BQYWxsZXQ6OnJlZ2lzdGVyYF0uOGZvcmNlX3JlZ2lzdGVyFAEMd2hvAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgABCGlkuQIBGFBhcmFJZAABMGdlbmVzaXNfaGVhZIUFASBIZWFkRGF0YQABPHZhbGlkYXRpb25fY29kZYEFAThWYWxpZGF0aW9uQ29kZQABBHxTZWUgW2BQYWxsZXQ6OmZvcmNlX3JlZ2lzdGVyYF0uKGRlcmVnaXN0ZXIEAQhpZLkCARhQYXJhSWQAAgRsU2VlIFtgUGFsbGV0OjpkZXJlZ2lzdGVyYF0uEHN3YXAIAQhpZLkCARhQYXJhSWQAARRvdGhlcrkCARhQYXJhSWQAAwRUU2VlIFtgUGFsbGV0Ojpzd2FwYF0uLHJlbW92ZV9sb2NrBAEQcGFyYbkCARhQYXJhSWQABARwU2VlIFtgUGFsbGV0OjpyZW1vdmVfbG9ja2BdLhxyZXNlcnZlAAUEYFNlZSBbYFBhbGxldDo6cmVzZXJ2ZWBdLiBhZGRfbG9jawQBEHBhcmG5AgEYUGFyYUlkAAYEZFNlZSBbYFBhbGxldDo6YWRkX2xvY2tgXS5Uc2NoZWR1bGVfY29kZV91cGdyYWRlCAEQcGFyYbkCARhQYXJhSWQAASBuZXdfY29kZYEFAThWYWxpZGF0aW9uQ29kZQAHBJhTZWUgW2BQYWxsZXQ6OnNjaGVkdWxlX2NvZGVfdXBncmFkZWBdLkBzZXRfY3VycmVudF9oZWFkCAEQcGFyYbkCARhQYXJhSWQAASBuZXdfaGVhZIUFASBIZWFkRGF0YQAIBIRTZWUgW2BQYWxsZXQ6OnNldF9jdXJyZW50X2hlYWRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu4QUQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uFHNsb3RzGHBhbGxldBBDYWxsBARUAAEMLGZvcmNlX2xlYXNlFAEQcGFyYbkCARhQYXJhSWQAARhsZWFzZXIAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AATBwZXJpb2RfYmVnaW4QAUBMZWFzZVBlcmlvZE9mPFQ+AAEwcGVyaW9kX2NvdW50EAFATGVhc2VQZXJpb2RPZjxUPgAABHBTZWUgW2BQYWxsZXQ6OmZvcmNlX2xlYXNlYF0uQGNsZWFyX2FsbF9sZWFzZXMEARBwYXJhuQIBGFBhcmFJZAABBIRTZWUgW2BQYWxsZXQ6OmNsZWFyX2FsbF9sZWFzZXNgXS48dHJpZ2dlcl9vbmJvYXJkBAEQcGFyYbkCARhQYXJhSWQAAgSAU2VlIFtgUGFsbGV0Ojp0cmlnZ2VyX29uYm9hcmRgXS4EDQFDb250YWlucyBhIHZhcmlhbnQgcGVyIGRpc3BhdGNoYWJsZSBleHRyaW5zaWMgdGhhdCB0aGlzIHBhbGxldCBoYXMu5QUQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uIGF1Y3Rpb25zGHBhbGxldBBDYWxsBARUAAEMLG5ld19hdWN0aW9uCAEgZHVyYXRpb24VAQFEQmxvY2tOdW1iZXJGb3I8VD4AAUhsZWFzZV9wZXJpb2RfaW5kZXgVAQFATGVhc2VQZXJpb2RPZjxUPgAABHBTZWUgW2BQYWxsZXQ6Om5ld19hdWN0aW9uYF0uDGJpZBQBEHBhcmHpBQEYUGFyYUlkAAE0YXVjdGlvbl9pbmRleBUBATBBdWN0aW9uSW5kZXgAAShmaXJzdF9zbG90FQEBQExlYXNlUGVyaW9kT2Y8VD4AASRsYXN0X3Nsb3QVAQFATGVhc2VQZXJpb2RPZjxUPgABGGFtb3VudPQBMEJhbGFuY2VPZjxUPgABBFBTZWUgW2BQYWxsZXQ6OmJpZGBdLjhjYW5jZWxfYXVjdGlvbgACBHxTZWUgW2BQYWxsZXQ6OmNhbmNlbF9hdWN0aW9uYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLukFAAAGuQIA7QUQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uJGNyb3dkbG9hbhhwYWxsZXQQQ2FsbAQEVAABJBhjcmVhdGUYARRpbmRleOkFARhQYXJhSWQAAQxjYXD0ATBCYWxhbmNlT2Y8VD4AATBmaXJzdF9wZXJpb2QVAQFATGVhc2VQZXJpb2RPZjxUPgABLGxhc3RfcGVyaW9kFQEBQExlYXNlUGVyaW9kT2Y8VD4AAQxlbmQVAQFEQmxvY2tOdW1iZXJGb3I8VD4AASB2ZXJpZmllcvEFAUxPcHRpb248TXVsdGlTaWduZXI+AAAEXFNlZSBbYFBhbGxldDo6Y3JlYXRlYF0uKGNvbnRyaWJ1dGUMARRpbmRleOkFARhQYXJhSWQAARR2YWx1ZfQBMEJhbGFuY2VPZjxUPgABJHNpZ25hdHVyZZ0DAVhPcHRpb248TXVsdGlTaWduYXR1cmU+AAEEbFNlZSBbYFBhbGxldDo6Y29udHJpYnV0ZWBdLiB3aXRoZHJhdwgBDHdobwABMFQ6OkFjY291bnRJZAABFGluZGV46QUBGFBhcmFJZAACBGRTZWUgW2BQYWxsZXQ6OndpdGhkcmF3YF0uGHJlZnVuZAQBFGluZGV46QUBGFBhcmFJZAADBFxTZWUgW2BQYWxsZXQ6OnJlZnVuZGBdLiBkaXNzb2x2ZQQBFGluZGV46QUBGFBhcmFJZAAEBGRTZWUgW2BQYWxsZXQ6OmRpc3NvbHZlYF0uEGVkaXQYARRpbmRleOkFARhQYXJhSWQAAQxjYXD0ATBCYWxhbmNlT2Y8VD4AATBmaXJzdF9wZXJpb2QVAQFATGVhc2VQZXJpb2RPZjxUPgABLGxhc3RfcGVyaW9kFQEBQExlYXNlUGVyaW9kT2Y8VD4AAQxlbmQVAQFEQmxvY2tOdW1iZXJGb3I8VD4AASB2ZXJpZmllcvEFAUxPcHRpb248TXVsdGlTaWduZXI+AAUEVFNlZSBbYFBhbGxldDo6ZWRpdGBdLiBhZGRfbWVtbwgBFGluZGV4uQIBGFBhcmFJZAABEG1lbW80ARxWZWM8dTg+AAYEZFNlZSBbYFBhbGxldDo6YWRkX21lbW9gXS4QcG9rZQQBFGluZGV4uQIBGFBhcmFJZAAHBFRTZWUgW2BQYWxsZXQ6OnBva2VgXS44Y29udHJpYnV0ZV9hbGwIARRpbmRleOkFARhQYXJhSWQAASRzaWduYXR1cmWdAwFYT3B0aW9uPE11bHRpU2lnbmF0dXJlPgAIBHxTZWUgW2BQYWxsZXQ6OmNvbnRyaWJ1dGVfYWxsYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLvEFBBhPcHRpb24EBFQB9QUBCBBOb25lAAAAEFNvbWUEAPUFAAABAAD1BQgoc3BfcnVudGltZSxNdWx0aVNpZ25lcgABDBxFZDI1NTE5BADYATxlZDI1NTE5OjpQdWJsaWMAAAAcU3IyNTUxOQQA5AE8c3IyNTUxOTo6UHVibGljAAEAFEVjZHNhBABRAgE0ZWNkc2E6OlB1YmxpYwACAAD5BQxscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uGHBhbGxldBBDYWxsBARUAAEYWGNvbnRyb2xfYXV0b19taWdyYXRpb24EATBtYXliZV9jb25maWf9BQFcT3B0aW9uPE1pZ3JhdGlvbkxpbWl0cz4AAAScU2VlIFtgUGFsbGV0Ojpjb250cm9sX2F1dG9fbWlncmF0aW9uYF0uQGNvbnRpbnVlX21pZ3JhdGUMARhsaW1pdHMBBgE8TWlncmF0aW9uTGltaXRzAAE8cmVhbF9zaXplX3VwcGVyEAEMdTMyAAEwd2l0bmVzc190YXNrBQYBQE1pZ3JhdGlvblRhc2s8VD4AAQSEU2VlIFtgUGFsbGV0Ojpjb250aW51ZV9taWdyYXRlYF0uSG1pZ3JhdGVfY3VzdG9tX3RvcAgBEGtleXOpAQEwVmVjPFZlYzx1OD4+AAEwd2l0bmVzc19zaXplEAEMdTMyAAIEjFNlZSBbYFBhbGxldDo6bWlncmF0ZV9jdXN0b21fdG9wYF0uUG1pZ3JhdGVfY3VzdG9tX2NoaWxkDAEQcm9vdDQBHFZlYzx1OD4AAShjaGlsZF9rZXlzqQEBMFZlYzxWZWM8dTg+PgABKHRvdGFsX3NpemUQAQx1MzIAAwSUU2VlIFtgUGFsbGV0OjptaWdyYXRlX2N1c3RvbV9jaGlsZGBdLlRzZXRfc2lnbmVkX21heF9saW1pdHMEARhsaW1pdHMBBgE8TWlncmF0aW9uTGltaXRzAAQEmFNlZSBbYFBhbGxldDo6c2V0X3NpZ25lZF9tYXhfbGltaXRzYF0uSGZvcmNlX3NldF9wcm9ncmVzcwgBMHByb2dyZXNzX3RvcAkGATRQcm9ncmVzc09mPFQ+AAE4cHJvZ3Jlc3NfY2hpbGQJBgE0UHJvZ3Jlc3NPZjxUPgAFBIxTZWUgW2BQYWxsZXQ6OmZvcmNlX3NldF9wcm9ncmVzc2BdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy79BQQYT3B0aW9uBARUAQEGAQgQTm9uZQAAABBTb21lBAABBgAAAQAAAQYMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQ8TWlncmF0aW9uTGltaXRzAAAIARBzaXplEAEMdTMyAAEQaXRlbRABDHUzMgAABQYMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQ0TWlncmF0aW9uVGFzawQEVAAAFAEwcHJvZ3Jlc3NfdG9wCQYBNFByb2dyZXNzT2Y8VD4AAThwcm9ncmVzc19jaGlsZAkGATRQcm9ncmVzc09mPFQ+AAEQc2l6ZRABDHUzMgABJHRvcF9pdGVtcxABDHUzMgABLGNoaWxkX2l0ZW1zEAEMdTMyAAAJBgxscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uGHBhbGxldCBQcm9ncmVzcwQkTWF4S2V5TGVuAAEMHFRvU3RhcnQAAAAcTGFzdEtleQQADQYBZEJvdW5kZWRWZWM8dTgsIE1heEtleUxlbj4AAQAgQ29tcGxldGUAAgAADQYMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEIBFMAAAQANAEYVmVjPFQ+AAARBgwocGFsbGV0X3hjbRhwYWxsZXQQQ2FsbAQEVAABOBBzZW5kCAEQZGVzdGkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEcbWVzc2FnZRUGAVRCb3g8VmVyc2lvbmVkWGNtPCgpPj4AAARUU2VlIFtgUGFsbGV0OjpzZW5kYF0uPHRlbGVwb3J0X2Fzc2V0cxABEGRlc3RpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5aQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHMNBwFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgABBIBTZWUgW2BQYWxsZXQ6OnRlbGVwb3J0X2Fzc2V0c2BdLlxyZXNlcnZlX3RyYW5zZmVyX2Fzc2V0cxABEGRlc3RpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5aQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHMNBwFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgACBKBTZWUgW2BQYWxsZXQ6OnJlc2VydmVfdHJhbnNmZXJfYXNzZXRzYF0uHGV4ZWN1dGUIARxtZXNzYWdlEQcBtEJveDxWZXJzaW9uZWRYY208PFQgYXMgQ29uZmlnPjo6UnVudGltZUNhbGw+PgABKG1heF93ZWlnaHQkARhXZWlnaHQAAwRgU2VlIFtgUGFsbGV0OjpleGVjdXRlYF0uRGZvcmNlX3hjbV92ZXJzaW9uCAEgbG9jYXRpb24xAQE0Qm94PExvY2F0aW9uPgABHHZlcnNpb24QAShYY21WZXJzaW9uAAQEiFNlZSBbYFBhbGxldDo6Zm9yY2VfeGNtX3ZlcnNpb25gXS5kZm9yY2VfZGVmYXVsdF94Y21fdmVyc2lvbgQBRG1heWJlX3hjbV92ZXJzaW9ujQIBSE9wdGlvbjxYY21WZXJzaW9uPgAFBKhTZWUgW2BQYWxsZXQ6OmZvcmNlX2RlZmF1bHRfeGNtX3ZlcnNpb25gXS54Zm9yY2Vfc3Vic2NyaWJlX3ZlcnNpb25fbm90aWZ5BAEgbG9jYXRpb25pAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgAGBLxTZWUgW2BQYWxsZXQ6OmZvcmNlX3N1YnNjcmliZV92ZXJzaW9uX25vdGlmeWBdLoBmb3JjZV91bnN1YnNjcmliZV92ZXJzaW9uX25vdGlmeQQBIGxvY2F0aW9uaQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4ABwTEU2VlIFtgUGFsbGV0Ojpmb3JjZV91bnN1YnNjcmliZV92ZXJzaW9uX25vdGlmeWBdLnxsaW1pdGVkX3Jlc2VydmVfdHJhbnNmZXJfYXNzZXRzFAEQZGVzdGkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEsYmVuZWZpY2lhcnlpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0cw0HAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABOGZlZV9hc3NldF9pdGVtEAEMdTMyAAEwd2VpZ2h0X2xpbWl0wQYBLFdlaWdodExpbWl0AAgEwFNlZSBbYFBhbGxldDo6bGltaXRlZF9yZXNlcnZlX3RyYW5zZmVyX2Fzc2V0c2BdLlxsaW1pdGVkX3RlbGVwb3J0X2Fzc2V0cxQBEGRlc3RpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABLGJlbmVmaWNpYXJ5aQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AARhhc3NldHMNBwFQQm94PFZlcnNpb25lZEFzc2V0cz4AAThmZWVfYXNzZXRfaXRlbRABDHUzMgABMHdlaWdodF9saW1pdMEGASxXZWlnaHRMaW1pdAAJBKBTZWUgW2BQYWxsZXQ6OmxpbWl0ZWRfdGVsZXBvcnRfYXNzZXRzYF0uQGZvcmNlX3N1c3BlbnNpb24EASRzdXNwZW5kZWR4ARBib29sAAoEhFNlZSBbYFBhbGxldDo6Zm9yY2Vfc3VzcGVuc2lvbmBdLjx0cmFuc2Zlcl9hc3NldHMUARBkZXN0aQEBWEJveDxWZXJzaW9uZWRMb2NhdGlvbj4AASxiZW5lZmljaWFyeWkBAVhCb3g8VmVyc2lvbmVkTG9jYXRpb24+AAEYYXNzZXRzDQcBUEJveDxWZXJzaW9uZWRBc3NldHM+AAE4ZmVlX2Fzc2V0X2l0ZW0QAQx1MzIAATB3ZWlnaHRfbGltaXTBBgEsV2VpZ2h0TGltaXQACwSAU2VlIFtgUGFsbGV0Ojp0cmFuc2Zlcl9hc3NldHNgXS4wY2xhaW1fYXNzZXRzCAEYYXNzZXRzDQcBUEJveDxWZXJzaW9uZWRBc3NldHM+AAEsYmVuZWZpY2lhcnlpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgAMBHRTZWUgW2BQYWxsZXQ6OmNsYWltX2Fzc2V0c2BdLox0cmFuc2Zlcl9hc3NldHNfdXNpbmdfdHlwZV9hbmRfdGhlbhwBEGRlc3RpAQFYQm94PFZlcnNpb25lZExvY2F0aW9uPgABGGFzc2V0cw0HAVBCb3g8VmVyc2lvbmVkQXNzZXRzPgABUGFzc2V0c190cmFuc2Zlcl90eXBlPQcBREJveDxUcmFuc2ZlclR5cGU+AAE4cmVtb3RlX2ZlZXNfaWRBBwFUQm94PFZlcnNpb25lZEFzc2V0SWQ+AAFIZmVlc190cmFuc2Zlcl90eXBlPQcBREJveDxUcmFuc2ZlclR5cGU+AAFIY3VzdG9tX3hjbV9vbl9kZXN0FQYBVEJveDxWZXJzaW9uZWRYY208KCk+PgABMHdlaWdodF9saW1pdMEGASxXZWlnaHRMaW1pdAANBNBTZWUgW2BQYWxsZXQ6OnRyYW5zZmVyX2Fzc2V0c191c2luZ190eXBlX2FuZF90aGVuYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLhUGCAx4Y20wVmVyc2lvbmVkWGNtBCxSdW50aW1lQ2FsbAABDAhWMgQAGQYBUHYyOjpYY208UnVudGltZUNhbGw+AAIACFYzBABlBgFQdjM6OlhjbTxSdW50aW1lQ2FsbD4AAwAIVjQEAMUGAVB2NDo6WGNtPFJ1bnRpbWVDYWxsPgAEAAAZBgwMeGNtCHYyDFhjbQQsUnVudGltZUNhbGwAAAQAHQYBdFZlYzxJbnN0cnVjdGlvbjxSdW50aW1lQ2FsbD4+AAAdBgAAAiEGACEGDAx4Y20IdjIsSW5zdHJ1Y3Rpb24ELFJ1bnRpbWVDYWxsAAFwNFdpdGhkcmF3QXNzZXQEACUGASxNdWx0aUFzc2V0cwAAAFRSZXNlcnZlQXNzZXREZXBvc2l0ZWQEACUGASxNdWx0aUFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BAAlBgEsTXVsdGlBc3NldHMAAgA0UXVlcnlSZXNwb25zZQwBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABIHJlc3BvbnNlPQYBIFJlc3BvbnNlAAEobWF4X3dlaWdodCgBDHU2NAADADRUcmFuc2ZlckFzc2V0CAEYYXNzZXRzJQYBLE11bHRpQXNzZXRzAAEsYmVuZWZpY2lhcnltAQE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0cyUGASxNdWx0aUFzc2V0cwABEGRlc3RtAQE0TXVsdGlMb2NhdGlvbgABDHhjbRkGARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX3R5cGVNBgEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QoAQx1NjQAARBjYWxsUQYBaERvdWJsZUVuY29kZWQ8UnVudGltZUNhbGw+AAYAZEhybXBOZXdDaGFubmVsT3BlblJlcXVlc3QMARhzZW5kZXIVAQEMdTMyAAFAbWF4X21lc3NhZ2Vfc2l6ZRUBAQx1MzIAATBtYXhfY2FwYWNpdHkVAQEMdTMyAAcATEhybXBDaGFubmVsQWNjZXB0ZWQEASRyZWNpcGllbnQVAQEMdTMyAAgASEhybXBDaGFubmVsQ2xvc2luZwwBJGluaXRpYXRvchUBAQx1MzIAARhzZW5kZXIVAQEMdTMyAAEkcmVjaXBpZW50FQEBDHUzMgAJACxDbGVhck9yaWdpbgAKADREZXNjZW5kT3JpZ2luBABxAQFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAsALFJlcG9ydEVycm9yDAEgcXVlcnlfaWQoARxRdWVyeUlkAAEQZGVzdG0BATRNdWx0aUxvY2F0aW9uAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCgBDHU2NAAMADBEZXBvc2l0QXNzZXQMARhhc3NldHNVBgFATXVsdGlBc3NldEZpbHRlcgABKG1heF9hc3NldHMVAQEMdTMyAAEsYmVuZWZpY2lhcnltAQE0TXVsdGlMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0EAEYYXNzZXRzVQYBQE11bHRpQXNzZXRGaWx0ZXIAAShtYXhfYXNzZXRzFQEBDHUzMgABEGRlc3RtAQE0TXVsdGlMb2NhdGlvbgABDHhjbRkGARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQIARBnaXZlVQYBQE11bHRpQXNzZXRGaWx0ZXIAARxyZWNlaXZlJQYBLE11bHRpQXNzZXRzAA8AXEluaXRpYXRlUmVzZXJ2ZVdpdGhkcmF3DAEYYXNzZXRzVQYBQE11bHRpQXNzZXRGaWx0ZXIAARxyZXNlcnZlbQEBNE11bHRpTG9jYXRpb24AAQx4Y20ZBgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzVQYBQE11bHRpQXNzZXRGaWx0ZXIAARBkZXN0bQEBNE11bHRpTG9jYXRpb24AAQx4Y20ZBgEcWGNtPCgpPgARADBRdWVyeUhvbGRpbmcQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAARBkZXN0bQEBNE11bHRpTG9jYXRpb24AARhhc3NldHNVBgFATXVsdGlBc3NldEZpbHRlcgABTG1heF9yZXNwb25zZV93ZWlnaHQoAQx1NjQAEgAwQnV5RXhlY3V0aW9uCAEQZmVlcy0GAShNdWx0aUFzc2V0AAEwd2VpZ2h0X2xpbWl0YQYBLFdlaWdodExpbWl0ABMANFJlZnVuZFN1cnBsdXMAFAA8U2V0RXJyb3JIYW5kbGVyBAAZBgFAWGNtPFJ1bnRpbWVDYWxsPgAVACxTZXRBcHBlbmRpeAQAGQYBQFhjbTxSdW50aW1lQ2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzJQYBLE11bHRpQXNzZXRzAAEYdGlja2V0bQEBNE11bHRpTG9jYXRpb24AGAAQVHJhcAQAKAEMdTY0ABkAQFN1YnNjcmliZVZlcnNpb24IASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0KAEMdTY0ABoASFVuc3Vic2NyaWJlVmVyc2lvbgAbAAAlBhAMeGNtCHYyKG11bHRpYXNzZXQsTXVsdGlBc3NldHMAAAQAKQYBPFZlYzxNdWx0aUFzc2V0PgAAKQYAAAItBgAtBhAMeGNtCHYyKG11bHRpYXNzZXQoTXVsdGlBc3NldAAACAEIaWQxBgEcQXNzZXRJZAABDGZ1bjUGASxGdW5naWJpbGl0eQAAMQYQDHhjbQh2MihtdWx0aWFzc2V0HEFzc2V0SWQAAQggQ29uY3JldGUEAG0BATRNdWx0aUxvY2F0aW9uAAAAIEFic3RyYWN0BAA0ARxWZWM8dTg+AAEAADUGEAx4Y20IdjIobXVsdGlhc3NldCxGdW5naWJpbGl0eQABCCBGdW5naWJsZQQA9AEQdTEyOAAAACxOb25GdW5naWJsZQQAOQYBNEFzc2V0SW5zdGFuY2UAAQAAOQYQDHhjbQh2MihtdWx0aWFzc2V0NEFzc2V0SW5zdGFuY2UAARwkVW5kZWZpbmVkAAAAFEluZGV4BAD0ARB1MTI4AAEAGEFycmF5NAQARAEcW3U4OyA0XQACABhBcnJheTgEADEDARxbdTg7IDhdAAMAHEFycmF5MTYEAMABIFt1ODsgMTZdAAQAHEFycmF5MzIEAAQBIFt1ODsgMzJdAAUAEEJsb2IEADQBHFZlYzx1OD4ABgAAPQYMDHhjbQh2MiBSZXNwb25zZQABEBBOdWxsAAAAGEFzc2V0cwQAJQYBLE11bHRpQXNzZXRzAAEAPEV4ZWN1dGlvblJlc3VsdAQAQQYBUE9wdGlvbjwodTMyLCBFcnJvcik+AAIAHFZlcnNpb24EABABOHN1cGVyOjpWZXJzaW9uAAMAAEEGBBhPcHRpb24EBFQBRQYBCBBOb25lAAAAEFNvbWUEAEUGAAABAABFBgAABAgQSQYASQYQDHhjbQh2Mhh0cmFpdHMURXJyb3IAAWggT3ZlcmZsb3cAAAA0VW5pbXBsZW1lbnRlZAABAGBVbnRydXN0ZWRSZXNlcnZlTG9jYXRpb24AAgBkVW50cnVzdGVkVGVsZXBvcnRMb2NhdGlvbgADAERNdWx0aUxvY2F0aW9uRnVsbAAEAGhNdWx0aUxvY2F0aW9uTm90SW52ZXJ0aWJsZQAFACRCYWRPcmlnaW4ABgA8SW52YWxpZExvY2F0aW9uAAcANEFzc2V0Tm90Rm91bmQACABURmFpbGVkVG9UcmFuc2FjdEFzc2V0AAkAPE5vdFdpdGhkcmF3YWJsZQAKAEhMb2NhdGlvbkNhbm5vdEhvbGQACwBURXhjZWVkc01heE1lc3NhZ2VTaXplAAwAWERlc3RpbmF0aW9uVW5zdXBwb3J0ZWQADQAkVHJhbnNwb3J0AA4AKFVucm91dGFibGUADwAwVW5rbm93bkNsYWltABAAOEZhaWxlZFRvRGVjb2RlABEAQE1heFdlaWdodEludmFsaWQAEgA4Tm90SG9sZGluZ0ZlZXMAEwAwVG9vRXhwZW5zaXZlABQAEFRyYXAEACwBDHU2NAAVAExVbmhhbmRsZWRYY21WZXJzaW9uABYASFdlaWdodExpbWl0UmVhY2hlZAQALAEYV2VpZ2h0ABcAHEJhcnJpZXIAGABMV2VpZ2h0Tm90Q29tcHV0YWJsZQAZAABNBgwMeGNtCHYyKE9yaWdpbktpbmQAARAYTmF0aXZlAAAAQFNvdmVyZWlnbkFjY291bnQAAQAkU3VwZXJ1c2VyAAIADFhjbQADAABRBgwMeGNtOGRvdWJsZV9lbmNvZGVkNERvdWJsZUVuY29kZWQEBFQAAAQBHGVuY29kZWQ0ARxWZWM8dTg+AABVBhAMeGNtCHYyKG11bHRpYXNzZXRATXVsdGlBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQAJQYBLE11bHRpQXNzZXRzAAAAEFdpbGQEAFkGAThXaWxkTXVsdGlBc3NldAABAABZBhAMeGNtCHYyKG11bHRpYXNzZXQ4V2lsZE11bHRpQXNzZXQAAQgMQWxsAAAAFEFsbE9mCAEIaWQxBgEcQXNzZXRJZAABDGZ1bl0GATxXaWxkRnVuZ2liaWxpdHkAAQAAXQYQDHhjbQh2MihtdWx0aWFzc2V0PFdpbGRGdW5naWJpbGl0eQABCCBGdW5naWJsZQAAACxOb25GdW5naWJsZQABAABhBgwMeGNtCHYyLFdlaWdodExpbWl0AAEIJFVubGltaXRlZAAAABxMaW1pdGVkBAAoAQx1NjQAAQAAZQYMDHhjbQh2MwxYY20EEENhbGwAAAQAaQYBWFZlYzxJbnN0cnVjdGlvbjxDYWxsPj4AAGkGAAACbQYAbQYMDHhjbQh2MyxJbnN0cnVjdGlvbgQQQ2FsbAABwDRXaXRoZHJhd0Fzc2V0BABxBgEsTXVsdGlBc3NldHMAAABUUmVzZXJ2ZUFzc2V0RGVwb3NpdGVkBABxBgEsTXVsdGlBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAcQYBLE11bHRpQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZYUGASBSZXNwb25zZQABKG1heF93ZWlnaHQkARhXZWlnaHQAARxxdWVyaWVyrQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgADADRUcmFuc2ZlckFzc2V0CAEYYXNzZXRzcQYBLE11bHRpQXNzZXRzAAEsYmVuZWZpY2lhcnkJAQE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c3EGASxNdWx0aUFzc2V0cwABEGRlc3QJAQE0TXVsdGlMb2NhdGlvbgABDHhjbWUGARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmRNBgEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QkARhXZWlnaHQAARBjYWxsUQYBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlchUBAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplFQEBDHUzMgABMG1heF9jYXBhY2l0eRUBAQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudBUBAQx1MzIACABISHJtcENoYW5uZWxDbG9zaW5nDAEkaW5pdGlhdG9yFQEBDHUzMgABGHNlbmRlchUBAQx1MzIAASRyZWNpcGllbnQVAQEMdTMyAAkALENsZWFyT3JpZ2luAAoANERlc2NlbmRPcmlnaW4EAA0BAVRJbnRlcmlvck11bHRpTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEALEGAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHO1BgFATXVsdGlBc3NldEZpbHRlcgABLGJlbmVmaWNpYXJ5CQEBNE11bHRpTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldAwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdAkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4ADgA0RXhjaGFuZ2VBc3NldAwBEGdpdmW1BgFATXVsdGlBc3NldEZpbHRlcgABEHdhbnRxBgEsTXVsdGlBc3NldHMAARxtYXhpbWFseAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVzZXJ2ZQkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AEABASW5pdGlhdGVUZWxlcG9ydAwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdAkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AEQA0UmVwb3J0SG9sZGluZwgBNHJlc3BvbnNlX2luZm+xBgFEUXVlcnlSZXNwb25zZUluZm8AARhhc3NldHO1BgFATXVsdGlBc3NldEZpbHRlcgASADBCdXlFeGVjdXRpb24IARBmZWVzeQYBKE11bHRpQXNzZXQAATB3ZWlnaHRfbGltaXTBBgEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAGUGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAGUGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzcQYBLE11bHRpQXNzZXRzAAEYdGlja2V0CQEBNE11bHRpTG9jYXRpb24AGAAQVHJhcAQAKAEMdTY0ABkAQFN1YnNjcmliZVZlcnNpb24IASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0JAEYV2VpZ2h0ABoASFVuc3Vic2NyaWJlVmVyc2lvbgAbACRCdXJuQXNzZXQEAHEGASxNdWx0aUFzc2V0cwAcACxFeHBlY3RBc3NldAQAcQYBLE11bHRpQXNzZXRzAB0AMEV4cGVjdE9yaWdpbgQArQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgAeACxFeHBlY3RFcnJvcgQAiQYBUE9wdGlvbjwodTMyLCBFcnJvcik+AB8AUEV4cGVjdFRyYW5zYWN0U3RhdHVzBAClBgE4TWF5YmVFcnJvckNvZGUAIAAsUXVlcnlQYWxsZXQIASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AATRyZXNwb25zZV9pbmZvsQYBRFF1ZXJ5UmVzcG9uc2VJbmZvACEAMEV4cGVjdFBhbGxldBQBFGluZGV4FQEBDHUzMgABEG5hbWU0ARxWZWM8dTg+AAEsbW9kdWxlX25hbWU0ARxWZWM8dTg+AAEsY3JhdGVfbWFqb3IVAQEMdTMyAAE8bWluX2NyYXRlX21pbm9yFQEBDHUzMgAiAFBSZXBvcnRUcmFuc2FjdFN0YXR1cwQAsQYBRFF1ZXJ5UmVzcG9uc2VJbmZvACMATENsZWFyVHJhbnNhY3RTdGF0dXMAJAA8VW5pdmVyc2FsT3JpZ2luBAARAQEgSnVuY3Rpb24AJQA0RXhwb3J0TWVzc2FnZQwBHG5ldHdvcmsdAQEkTmV0d29ya0lkAAEsZGVzdGluYXRpb24NAQFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXR5BgEoTXVsdGlBc3NldAABIHVubG9ja2VyCQEBNE11bHRpTG9jYXRpb24AJwAsVW5sb2NrQXNzZXQIARRhc3NldHkGAShNdWx0aUFzc2V0AAEYdGFyZ2V0CQEBNE11bHRpTG9jYXRpb24AKAA4Tm90ZVVubG9ja2FibGUIARRhc3NldHkGAShNdWx0aUFzc2V0AAEUb3duZXIJAQE0TXVsdGlMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXR5BgEoTXVsdGlBc3NldAABGGxvY2tlcgkBATRNdWx0aUxvY2F0aW9uACoALFNldEZlZXNNb2RlBAEwaml0X3dpdGhkcmF3eAEQYm9vbAArACBTZXRUb3BpYwQABAEgW3U4OyAzMl0ALAAoQ2xlYXJUb3BpYwAtACxBbGlhc09yaWdpbgQACQEBNE11bHRpTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0wQYBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2lurQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgAvAABxBhAMeGNtCHYzKG11bHRpYXNzZXQsTXVsdGlBc3NldHMAAAQAdQYBPFZlYzxNdWx0aUFzc2V0PgAAdQYAAAJ5BgB5BhAMeGNtCHYzKG11bHRpYXNzZXQoTXVsdGlBc3NldAAACAEIaWQtAQEcQXNzZXRJZAABDGZ1bn0GASxGdW5naWJpbGl0eQAAfQYQDHhjbQh2MyhtdWx0aWFzc2V0LEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlBAD0ARB1MTI4AAAALE5vbkZ1bmdpYmxlBACBBgE0QXNzZXRJbnN0YW5jZQABAACBBhAMeGNtCHYzKG11bHRpYXNzZXQ0QXNzZXRJbnN0YW5jZQABGCRVbmRlZmluZWQAAAAUSW5kZXgEAPQBEHUxMjgAAQAYQXJyYXk0BABEARxbdTg7IDRdAAIAGEFycmF5OAQAMQMBHFt1ODsgOF0AAwAcQXJyYXkxNgQAwAEgW3U4OyAxNl0ABAAcQXJyYXkzMgQABAEgW3U4OyAzMl0ABQAAhQYMDHhjbQh2MyBSZXNwb25zZQABGBBOdWxsAAAAGEFzc2V0cwQAcQYBLE11bHRpQXNzZXRzAAEAPEV4ZWN1dGlvblJlc3VsdAQAiQYBUE9wdGlvbjwodTMyLCBFcnJvcik+AAIAHFZlcnNpb24EABABOHN1cGVyOjpWZXJzaW9uAAMALFBhbGxldHNJbmZvBACVBgGYQm91bmRlZFZlYzxQYWxsZXRJbmZvLCBNYXhQYWxsZXRzSW5mbz4ABAA4RGlzcGF0Y2hSZXN1bHQEAKUGAThNYXliZUVycm9yQ29kZQAFAACJBgQYT3B0aW9uBARUAY0GAQgQTm9uZQAAABBTb21lBACNBgAAAQAAjQYAAAQIEJEGAJEGEAx4Y20IdjMYdHJhaXRzFEVycm9yAAGgIE92ZXJmbG93AAAANFVuaW1wbGVtZW50ZWQAAQBgVW50cnVzdGVkUmVzZXJ2ZUxvY2F0aW9uAAIAZFVudHJ1c3RlZFRlbGVwb3J0TG9jYXRpb24AAwAwTG9jYXRpb25GdWxsAAQAVExvY2F0aW9uTm90SW52ZXJ0aWJsZQAFACRCYWRPcmlnaW4ABgA8SW52YWxpZExvY2F0aW9uAAcANEFzc2V0Tm90Rm91bmQACABURmFpbGVkVG9UcmFuc2FjdEFzc2V0AAkAPE5vdFdpdGhkcmF3YWJsZQAKAEhMb2NhdGlvbkNhbm5vdEhvbGQACwBURXhjZWVkc01heE1lc3NhZ2VTaXplAAwAWERlc3RpbmF0aW9uVW5zdXBwb3J0ZWQADQAkVHJhbnNwb3J0AA4AKFVucm91dGFibGUADwAwVW5rbm93bkNsYWltABAAOEZhaWxlZFRvRGVjb2RlABEAQE1heFdlaWdodEludmFsaWQAEgA4Tm90SG9sZGluZ0ZlZXMAEwAwVG9vRXhwZW5zaXZlABQAEFRyYXAEACwBDHU2NAAVAEBFeHBlY3RhdGlvbkZhbHNlABYAOFBhbGxldE5vdEZvdW5kABcAME5hbWVNaXNtYXRjaAAYAExWZXJzaW9uSW5jb21wYXRpYmxlABkAUEhvbGRpbmdXb3VsZE92ZXJmbG93ABoALEV4cG9ydEVycm9yABsAOFJlYW5jaG9yRmFpbGVkABwAGE5vRGVhbAAdAChGZWVzTm90TWV0AB4AJExvY2tFcnJvcgAfADBOb1Blcm1pc3Npb24AIAAoVW5hbmNob3JlZAAhADhOb3REZXBvc2l0YWJsZQAiAExVbmhhbmRsZWRYY21WZXJzaW9uACMASFdlaWdodExpbWl0UmVhY2hlZAQAJAEYV2VpZ2h0ACQAHEJhcnJpZXIAJQBMV2VpZ2h0Tm90Q29tcHV0YWJsZQAmAERFeGNlZWRzU3RhY2tMaW1pdAAnAACVBgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAZkGBFMAAAQAoQYBGFZlYzxUPgAAmQYMDHhjbQh2MyhQYWxsZXRJbmZvAAAYARRpbmRleBUBAQx1MzIAARBuYW1lnQYBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEsbW9kdWxlX25hbWWdBgGAQm91bmRlZFZlYzx1OCwgTWF4UGFsbGV0TmFtZUxlbj4AARRtYWpvchUBAQx1MzIAARRtaW5vchUBAQx1MzIAARRwYXRjaBUBAQx1MzIAAJ0GDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAAoQYAAAKZBgClBgwMeGNtCHYzOE1heWJlRXJyb3JDb2RlAAEMHFN1Y2Nlc3MAAAAURXJyb3IEAKkGAYxCb3VuZGVkVmVjPHU4LCBNYXhEaXNwYXRjaEVycm9yTGVuPgABADhUcnVuY2F0ZWRFcnJvcgQAqQYBjEJvdW5kZWRWZWM8dTgsIE1heERpc3BhdGNoRXJyb3JMZW4+AAIAAKkGDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAArQYEGE9wdGlvbgQEVAEJAQEIEE5vbmUAAAAQU29tZQQACQEAAAEAALEGDAx4Y20IdjNEUXVlcnlSZXNwb25zZUluZm8AAAwBLGRlc3RpbmF0aW9uCQEBNE11bHRpTG9jYXRpb24AASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAShtYXhfd2VpZ2h0JAEYV2VpZ2h0AAC1BhAMeGNtCHYzKG11bHRpYXNzZXRATXVsdGlBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQAcQYBLE11bHRpQXNzZXRzAAAAEFdpbGQEALkGAThXaWxkTXVsdGlBc3NldAABAAC5BhAMeGNtCHYzKG11bHRpYXNzZXQ4V2lsZE11bHRpQXNzZXQAARAMQWxsAAAAFEFsbE9mCAEIaWQtAQEcQXNzZXRJZAABDGZ1br0GATxXaWxkRnVuZ2liaWxpdHkAAQAoQWxsQ291bnRlZAQAFQEBDHUzMgACADBBbGxPZkNvdW50ZWQMAQhpZC0BARxBc3NldElkAAEMZnVuvQYBPFdpbGRGdW5naWJpbGl0eQABFGNvdW50FQEBDHUzMgADAAC9BhAMeGNtCHYzKG11bHRpYXNzZXQ8V2lsZEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlAAAALE5vbkZ1bmdpYmxlAAEAAMEGDAx4Y20IdjMsV2VpZ2h0TGltaXQAAQgkVW5saW1pdGVkAAAAHExpbWl0ZWQEACQBGFdlaWdodAABAADFBgwsc3RhZ2luZ194Y20IdjQMWGNtBBBDYWxsAAAEAMkGAVhWZWM8SW5zdHJ1Y3Rpb248Q2FsbD4+AADJBgAAAs0GAM0GDCxzdGFnaW5nX3hjbQh2NCxJbnN0cnVjdGlvbgQQQ2FsbAABwDRXaXRoZHJhd0Fzc2V0BADRBgEYQXNzZXRzAAAAVFJlc2VydmVBc3NldERlcG9zaXRlZAQA0QYBGEFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BADRBgEYQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZeUGASBSZXNwb25zZQABKG1heF93ZWlnaHQkARhXZWlnaHQAARxxdWVyaWVy+QYBQE9wdGlvbjxMb2NhdGlvbj4AAwA0VHJhbnNmZXJBc3NldAgBGGFzc2V0c9EGARhBc3NldHMAASxiZW5lZmljaWFyeTEBASBMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c9EGARhBc3NldHMAARBkZXN0MQEBIExvY2F0aW9uAAEMeGNtxQYBHFhjbTwoKT4ABQAgVHJhbnNhY3QMASxvcmlnaW5fa2luZE0GAShPcmlnaW5LaW5kAAFYcmVxdWlyZV93ZWlnaHRfYXRfbW9zdCQBGFdlaWdodAABEGNhbGxRBgFMRG91YmxlRW5jb2RlZDxDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVyFQEBDHUzMgABQG1heF9tZXNzYWdlX3NpemUVAQEMdTMyAAEwbWF4X2NhcGFjaXR5FQEBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50FQEBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3IVAQEMdTMyAAEYc2VuZGVyFQEBDHUzMgABJHJlY2lwaWVudBUBAQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQANQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEAP0GAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHMBBwEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeTEBASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyAAEQZGVzdDEBASBMb2NhdGlvbgABDHhjbcUGARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlAQcBLEFzc2V0RmlsdGVyAAEQd2FudNEGARhBc3NldHMAARxtYXhpbWFseAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0cwEHASxBc3NldEZpbHRlcgABHHJlc2VydmUxAQEgTG9jYXRpb24AAQx4Y23FBgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyAAEQZGVzdDEBASBMb2NhdGlvbgABDHhjbcUGARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZv/QYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXPZBgEUQXNzZXQAATB3ZWlnaHRfbGltaXTBBgEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEAMUGASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEAMUGASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRz0QYBGEFzc2V0cwABGHRpY2tldDEBASBMb2NhdGlvbgAYABBUcmFwBAAoAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQkARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQA0QYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQA0QYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAPkGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBACJBgFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEAKUGAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm/9BgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXgVAQEMdTMyAAEQbmFtZTQBHFZlYzx1OD4AASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AASxjcmF0ZV9tYWpvchUBAQx1MzIAATxtaW5fY3JhdGVfbWlub3IVAQEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBAD9BgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EAD0BASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya0UBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvbjUBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNtxQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXTZBgEUQXNzZXQAASB1bmxvY2tlcjEBASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V02QYBFEFzc2V0AAEYdGFyZ2V0MQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXTZBgEUQXNzZXQAARRvd25lcjEBASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXTZBgEUQXNzZXQAARhsb2NrZXIxAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXd4ARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBAAxAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0wQYBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2lu+QYBQE9wdGlvbjxMb2NhdGlvbj4ALwAA0QYQLHN0YWdpbmdfeGNtCHY0FGFzc2V0GEFzc2V0cwAABADVBgEoVmVjPEFzc2V0PgAA1QYAAALZBgDZBhAsc3RhZ2luZ194Y20IdjQUYXNzZXQUQXNzZXQAAAgBCGlkZQEBHEFzc2V0SWQAAQxmdW7dBgEsRnVuZ2liaWxpdHkAAN0GECxzdGFnaW5nX3hjbQh2NBRhc3NldCxGdW5naWJpbGl0eQABCCBGdW5naWJsZQQA9AEQdTEyOAAAACxOb25GdW5naWJsZQQA4QYBNEFzc2V0SW5zdGFuY2UAAQAA4QYQLHN0YWdpbmdfeGNtCHY0FGFzc2V0NEFzc2V0SW5zdGFuY2UAARgkVW5kZWZpbmVkAAAAFEluZGV4BAD0ARB1MTI4AAEAGEFycmF5NAQARAEcW3U4OyA0XQACABhBcnJheTgEADEDARxbdTg7IDhdAAMAHEFycmF5MTYEAMABIFt1ODsgMTZdAAQAHEFycmF5MzIEAAQBIFt1ODsgMzJdAAUAAOUGDCxzdGFnaW5nX3hjbQh2NCBSZXNwb25zZQABGBBOdWxsAAAAGEFzc2V0cwQA0QYBGEFzc2V0cwABADxFeGVjdXRpb25SZXN1bHQEAIkGAVBPcHRpb248KHUzMiwgRXJyb3IpPgACABxWZXJzaW9uBAAQAThzdXBlcjo6VmVyc2lvbgADACxQYWxsZXRzSW5mbwQA6QYBmEJvdW5kZWRWZWM8UGFsbGV0SW5mbywgTWF4UGFsbGV0c0luZm8+AAQAOERpc3BhdGNoUmVzdWx0BAClBgE4TWF5YmVFcnJvckNvZGUABQAA6QYMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHtBgRTAAAEAPUGARhWZWM8VD4AAO0GDCxzdGFnaW5nX3hjbQh2NChQYWxsZXRJbmZvAAAYARRpbmRleBUBAQx1MzIAARBuYW1l8QYBgEJvdW5kZWRWZWM8dTgsIE1heFBhbGxldE5hbWVMZW4+AAEsbW9kdWxlX25hbWXxBgGAQm91bmRlZFZlYzx1OCwgTWF4UGFsbGV0TmFtZUxlbj4AARRtYWpvchUBAQx1MzIAARRtaW5vchUBAQx1MzIAARRwYXRjaBUBAQx1MzIAAPEGDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAA9QYAAALtBgD5BgQYT3B0aW9uBARUATEBAQgQTm9uZQAAABBTb21lBAAxAQAAAQAA/QYMLHN0YWdpbmdfeGNtCHY0RFF1ZXJ5UmVzcG9uc2VJbmZvAAAMASxkZXN0aW5hdGlvbjEBASBMb2NhdGlvbgABIHF1ZXJ5X2lkKAEcUXVlcnlJZAABKG1heF93ZWlnaHQkARhXZWlnaHQAAAEHECxzdGFnaW5nX3hjbQh2NBRhc3NldCxBc3NldEZpbHRlcgABCCBEZWZpbml0ZQQA0QYBGEFzc2V0cwAAABBXaWxkBAAFBwEkV2lsZEFzc2V0AAEAAAUHECxzdGFnaW5nX3hjbQh2NBRhc3NldCRXaWxkQXNzZXQAARAMQWxsAAAAFEFsbE9mCAEIaWRlAQEcQXNzZXRJZAABDGZ1bgkHATxXaWxkRnVuZ2liaWxpdHkAAQAoQWxsQ291bnRlZAQAFQEBDHUzMgACADBBbGxPZkNvdW50ZWQMAQhpZGUBARxBc3NldElkAAEMZnVuCQcBPFdpbGRGdW5naWJpbGl0eQABFGNvdW50FQEBDHUzMgADAAAJBxAsc3RhZ2luZ194Y20IdjQUYXNzZXQ8V2lsZEZ1bmdpYmlsaXR5AAEIIEZ1bmdpYmxlAAAALE5vbkZ1bmdpYmxlAAEAAA0HCAx4Y208VmVyc2lvbmVkQXNzZXRzAAEMCFYyBAAlBgE8djI6Ok11bHRpQXNzZXRzAAEACFYzBABxBgE8djM6Ok11bHRpQXNzZXRzAAMACFY0BADRBgEodjQ6OkFzc2V0cwAEAAARBwgMeGNtMFZlcnNpb25lZFhjbQQsUnVudGltZUNhbGwAAQwIVjIEABUHAVB2Mjo6WGNtPFJ1bnRpbWVDYWxsPgACAAhWMwQAJQcBUHYzOjpYY208UnVudGltZUNhbGw+AAMACFY0BAAxBwFQdjQ6OlhjbTxSdW50aW1lQ2FsbD4ABAAAFQcMDHhjbQh2MgxYY20ELFJ1bnRpbWVDYWxsAAAEABkHAXRWZWM8SW5zdHJ1Y3Rpb248UnVudGltZUNhbGw+PgAAGQcAAAIdBwAdBwwMeGNtCHYyLEluc3RydWN0aW9uBCxSdW50aW1lQ2FsbAABcDRXaXRoZHJhd0Fzc2V0BAAlBgEsTXVsdGlBc3NldHMAAABUUmVzZXJ2ZUFzc2V0RGVwb3NpdGVkBAAlBgEsTXVsdGlBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAJQYBLE11bHRpQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UMASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZT0GASBSZXNwb25zZQABKG1heF93ZWlnaHQoAQx1NjQAAwA0VHJhbnNmZXJBc3NldAgBGGFzc2V0cyUGASxNdWx0aUFzc2V0cwABLGJlbmVmaWNpYXJ5bQEBNE11bHRpTG9jYXRpb24ABABQVHJhbnNmZXJSZXNlcnZlQXNzZXQMARhhc3NldHMlBgEsTXVsdGlBc3NldHMAARBkZXN0bQEBNE11bHRpTG9jYXRpb24AAQx4Y20ZBgEcWGNtPCgpPgAFACBUcmFuc2FjdAwBLG9yaWdpbl90eXBlTQYBKE9yaWdpbktpbmQAAVhyZXF1aXJlX3dlaWdodF9hdF9tb3N0KAEMdTY0AAEQY2FsbCEHAWhEb3VibGVFbmNvZGVkPFJ1bnRpbWVDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVyFQEBDHUzMgABQG1heF9tZXNzYWdlX3NpemUVAQEMdTMyAAEwbWF4X2NhcGFjaXR5FQEBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50FQEBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3IVAQEMdTMyAAEYc2VuZGVyFQEBDHUzMgABJHJlY2lwaWVudBUBAQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQAcQEBVEludGVyaW9yTXVsdGlMb2NhdGlvbgALACxSZXBvcnRFcnJvcgwBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABEGRlc3RtAQE0TXVsdGlMb2NhdGlvbgABTG1heF9yZXNwb25zZV93ZWlnaHQoAQx1NjQADAAwRGVwb3NpdEFzc2V0DAEYYXNzZXRzVQYBQE11bHRpQXNzZXRGaWx0ZXIAAShtYXhfYXNzZXRzFQEBDHUzMgABLGJlbmVmaWNpYXJ5bQEBNE11bHRpTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldBABGGFzc2V0c1UGAUBNdWx0aUFzc2V0RmlsdGVyAAEobWF4X2Fzc2V0cxUBAQx1MzIAARBkZXN0bQEBNE11bHRpTG9jYXRpb24AAQx4Y20ZBgEcWGNtPCgpPgAOADRFeGNoYW5nZUFzc2V0CAEQZ2l2ZVUGAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVjZWl2ZSUGASxNdWx0aUFzc2V0cwAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c1UGAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVzZXJ2ZW0BATRNdWx0aUxvY2F0aW9uAAEMeGNtGQYBHFhjbTwoKT4AEABASW5pdGlhdGVUZWxlcG9ydAwBGGFzc2V0c1UGAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdG0BATRNdWx0aUxvY2F0aW9uAAEMeGNtGQYBHFhjbTwoKT4AEQAwUXVlcnlIb2xkaW5nEAEgcXVlcnlfaWQoARxRdWVyeUlkAAEQZGVzdG0BATRNdWx0aUxvY2F0aW9uAAEYYXNzZXRzVQYBQE11bHRpQXNzZXRGaWx0ZXIAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0KAEMdTY0ABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXMtBgEoTXVsdGlBc3NldAABMHdlaWdodF9saW1pdGEGASxXZWlnaHRMaW1pdAATADRSZWZ1bmRTdXJwbHVzABQAPFNldEVycm9ySGFuZGxlcgQAFQcBQFhjbTxSdW50aW1lQ2FsbD4AFQAsU2V0QXBwZW5kaXgEABUHAUBYY208UnVudGltZUNhbGw+ABYAKENsZWFyRXJyb3IAFwAoQ2xhaW1Bc3NldAgBGGFzc2V0cyUGASxNdWx0aUFzc2V0cwABGHRpY2tldG0BATRNdWx0aUxvY2F0aW9uABgAEFRyYXAEACgBDHU2NAAZAEBTdWJzY3JpYmVWZXJzaW9uCAEgcXVlcnlfaWQoARxRdWVyeUlkAAFMbWF4X3Jlc3BvbnNlX3dlaWdodCgBDHU2NAAaAEhVbnN1YnNjcmliZVZlcnNpb24AGwAAIQcMDHhjbThkb3VibGVfZW5jb2RlZDREb3VibGVFbmNvZGVkBARUAAAEARxlbmNvZGVkNAEcVmVjPHU4PgAAJQcMDHhjbQh2MwxYY20EEENhbGwAAAQAKQcBWFZlYzxJbnN0cnVjdGlvbjxDYWxsPj4AACkHAAACLQcALQcMDHhjbQh2MyxJbnN0cnVjdGlvbgQQQ2FsbAABwDRXaXRoZHJhd0Fzc2V0BABxBgEsTXVsdGlBc3NldHMAAABUUmVzZXJ2ZUFzc2V0RGVwb3NpdGVkBABxBgEsTXVsdGlBc3NldHMAAQBYUmVjZWl2ZVRlbGVwb3J0ZWRBc3NldAQAcQYBLE11bHRpQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZYUGASBSZXNwb25zZQABKG1heF93ZWlnaHQkARhXZWlnaHQAARxxdWVyaWVyrQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgADADRUcmFuc2ZlckFzc2V0CAEYYXNzZXRzcQYBLE11bHRpQXNzZXRzAAEsYmVuZWZpY2lhcnkJAQE0TXVsdGlMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c3EGASxNdWx0aUFzc2V0cwABEGRlc3QJAQE0TXVsdGlMb2NhdGlvbgABDHhjbWUGARxYY208KCk+AAUAIFRyYW5zYWN0DAEsb3JpZ2luX2tpbmRNBgEoT3JpZ2luS2luZAABWHJlcXVpcmVfd2VpZ2h0X2F0X21vc3QkARhXZWlnaHQAARBjYWxsIQcBTERvdWJsZUVuY29kZWQ8Q2FsbD4ABgBkSHJtcE5ld0NoYW5uZWxPcGVuUmVxdWVzdAwBGHNlbmRlchUBAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplFQEBDHUzMgABMG1heF9jYXBhY2l0eRUBAQx1MzIABwBMSHJtcENoYW5uZWxBY2NlcHRlZAQBJHJlY2lwaWVudBUBAQx1MzIACABISHJtcENoYW5uZWxDbG9zaW5nDAEkaW5pdGlhdG9yFQEBDHUzMgABGHNlbmRlchUBAQx1MzIAASRyZWNpcGllbnQVAQEMdTMyAAkALENsZWFyT3JpZ2luAAoANERlc2NlbmRPcmlnaW4EAA0BAVRJbnRlcmlvck11bHRpTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEALEGAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHO1BgFATXVsdGlBc3NldEZpbHRlcgABLGJlbmVmaWNpYXJ5CQEBNE11bHRpTG9jYXRpb24ADQBMRGVwb3NpdFJlc2VydmVBc3NldAwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdAkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4ADgA0RXhjaGFuZ2VBc3NldAwBEGdpdmW1BgFATXVsdGlBc3NldEZpbHRlcgABEHdhbnRxBgEsTXVsdGlBc3NldHMAARxtYXhpbWFseAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEccmVzZXJ2ZQkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AEABASW5pdGlhdGVUZWxlcG9ydAwBGGFzc2V0c7UGAUBNdWx0aUFzc2V0RmlsdGVyAAEQZGVzdAkBATRNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AEQA0UmVwb3J0SG9sZGluZwgBNHJlc3BvbnNlX2luZm+xBgFEUXVlcnlSZXNwb25zZUluZm8AARhhc3NldHO1BgFATXVsdGlBc3NldEZpbHRlcgASADBCdXlFeGVjdXRpb24IARBmZWVzeQYBKE11bHRpQXNzZXQAATB3ZWlnaHRfbGltaXTBBgEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEACUHASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEACUHASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRzcQYBLE11bHRpQXNzZXRzAAEYdGlja2V0CQEBNE11bHRpTG9jYXRpb24AGAAQVHJhcAQAKAEMdTY0ABkAQFN1YnNjcmliZVZlcnNpb24IASBxdWVyeV9pZCgBHFF1ZXJ5SWQAAUxtYXhfcmVzcG9uc2Vfd2VpZ2h0JAEYV2VpZ2h0ABoASFVuc3Vic2NyaWJlVmVyc2lvbgAbACRCdXJuQXNzZXQEAHEGASxNdWx0aUFzc2V0cwAcACxFeHBlY3RBc3NldAQAcQYBLE11bHRpQXNzZXRzAB0AMEV4cGVjdE9yaWdpbgQArQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgAeACxFeHBlY3RFcnJvcgQAiQYBUE9wdGlvbjwodTMyLCBFcnJvcik+AB8AUEV4cGVjdFRyYW5zYWN0U3RhdHVzBAClBgE4TWF5YmVFcnJvckNvZGUAIAAsUXVlcnlQYWxsZXQIASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AATRyZXNwb25zZV9pbmZvsQYBRFF1ZXJ5UmVzcG9uc2VJbmZvACEAMEV4cGVjdFBhbGxldBQBFGluZGV4FQEBDHUzMgABEG5hbWU0ARxWZWM8dTg+AAEsbW9kdWxlX25hbWU0ARxWZWM8dTg+AAEsY3JhdGVfbWFqb3IVAQEMdTMyAAE8bWluX2NyYXRlX21pbm9yFQEBDHUzMgAiAFBSZXBvcnRUcmFuc2FjdFN0YXR1cwQAsQYBRFF1ZXJ5UmVzcG9uc2VJbmZvACMATENsZWFyVHJhbnNhY3RTdGF0dXMAJAA8VW5pdmVyc2FsT3JpZ2luBAARAQEgSnVuY3Rpb24AJQA0RXhwb3J0TWVzc2FnZQwBHG5ldHdvcmsdAQEkTmV0d29ya0lkAAEsZGVzdGluYXRpb24NAQFUSW50ZXJpb3JNdWx0aUxvY2F0aW9uAAEMeGNtZQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXR5BgEoTXVsdGlBc3NldAABIHVubG9ja2VyCQEBNE11bHRpTG9jYXRpb24AJwAsVW5sb2NrQXNzZXQIARRhc3NldHkGAShNdWx0aUFzc2V0AAEYdGFyZ2V0CQEBNE11bHRpTG9jYXRpb24AKAA4Tm90ZVVubG9ja2FibGUIARRhc3NldHkGAShNdWx0aUFzc2V0AAEUb3duZXIJAQE0TXVsdGlMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXR5BgEoTXVsdGlBc3NldAABGGxvY2tlcgkBATRNdWx0aUxvY2F0aW9uACoALFNldEZlZXNNb2RlBAEwaml0X3dpdGhkcmF3eAEQYm9vbAArACBTZXRUb3BpYwQABAEgW3U4OyAzMl0ALAAoQ2xlYXJUb3BpYwAtACxBbGlhc09yaWdpbgQACQEBNE11bHRpTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0wQYBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2lurQYBVE9wdGlvbjxNdWx0aUxvY2F0aW9uPgAvAAAxBwwsc3RhZ2luZ194Y20IdjQMWGNtBBBDYWxsAAAEADUHAVhWZWM8SW5zdHJ1Y3Rpb248Q2FsbD4+AAA1BwAAAjkHADkHDCxzdGFnaW5nX3hjbQh2NCxJbnN0cnVjdGlvbgQQQ2FsbAABwDRXaXRoZHJhd0Fzc2V0BADRBgEYQXNzZXRzAAAAVFJlc2VydmVBc3NldERlcG9zaXRlZAQA0QYBGEFzc2V0cwABAFhSZWNlaXZlVGVsZXBvcnRlZEFzc2V0BADRBgEYQXNzZXRzAAIANFF1ZXJ5UmVzcG9uc2UQASBxdWVyeV9pZCgBHFF1ZXJ5SWQAASByZXNwb25zZeUGASBSZXNwb25zZQABKG1heF93ZWlnaHQkARhXZWlnaHQAARxxdWVyaWVy+QYBQE9wdGlvbjxMb2NhdGlvbj4AAwA0VHJhbnNmZXJBc3NldAgBGGFzc2V0c9EGARhBc3NldHMAASxiZW5lZmljaWFyeTEBASBMb2NhdGlvbgAEAFBUcmFuc2ZlclJlc2VydmVBc3NldAwBGGFzc2V0c9EGARhBc3NldHMAARBkZXN0MQEBIExvY2F0aW9uAAEMeGNtxQYBHFhjbTwoKT4ABQAgVHJhbnNhY3QMASxvcmlnaW5fa2luZE0GAShPcmlnaW5LaW5kAAFYcmVxdWlyZV93ZWlnaHRfYXRfbW9zdCQBGFdlaWdodAABEGNhbGwhBwFMRG91YmxlRW5jb2RlZDxDYWxsPgAGAGRIcm1wTmV3Q2hhbm5lbE9wZW5SZXF1ZXN0DAEYc2VuZGVyFQEBDHUzMgABQG1heF9tZXNzYWdlX3NpemUVAQEMdTMyAAEwbWF4X2NhcGFjaXR5FQEBDHUzMgAHAExIcm1wQ2hhbm5lbEFjY2VwdGVkBAEkcmVjaXBpZW50FQEBDHUzMgAIAEhIcm1wQ2hhbm5lbENsb3NpbmcMASRpbml0aWF0b3IVAQEMdTMyAAEYc2VuZGVyFQEBDHUzMgABJHJlY2lwaWVudBUBAQx1MzIACQAsQ2xlYXJPcmlnaW4ACgA0RGVzY2VuZE9yaWdpbgQANQEBQEludGVyaW9yTG9jYXRpb24ACwAsUmVwb3J0RXJyb3IEAP0GAURRdWVyeVJlc3BvbnNlSW5mbwAMADBEZXBvc2l0QXNzZXQIARhhc3NldHMBBwEsQXNzZXRGaWx0ZXIAASxiZW5lZmljaWFyeTEBASBMb2NhdGlvbgANAExEZXBvc2l0UmVzZXJ2ZUFzc2V0DAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyAAEQZGVzdDEBASBMb2NhdGlvbgABDHhjbcUGARxYY208KCk+AA4ANEV4Y2hhbmdlQXNzZXQMARBnaXZlAQcBLEFzc2V0RmlsdGVyAAEQd2FudNEGARhBc3NldHMAARxtYXhpbWFseAEQYm9vbAAPAFxJbml0aWF0ZVJlc2VydmVXaXRoZHJhdwwBGGFzc2V0cwEHASxBc3NldEZpbHRlcgABHHJlc2VydmUxAQEgTG9jYXRpb24AAQx4Y23FBgEcWGNtPCgpPgAQAEBJbml0aWF0ZVRlbGVwb3J0DAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyAAEQZGVzdDEBASBMb2NhdGlvbgABDHhjbcUGARxYY208KCk+ABEANFJlcG9ydEhvbGRpbmcIATRyZXNwb25zZV9pbmZv/QYBRFF1ZXJ5UmVzcG9uc2VJbmZvAAEYYXNzZXRzAQcBLEFzc2V0RmlsdGVyABIAMEJ1eUV4ZWN1dGlvbggBEGZlZXPZBgEUQXNzZXQAATB3ZWlnaHRfbGltaXTBBgEsV2VpZ2h0TGltaXQAEwA0UmVmdW5kU3VycGx1cwAUADxTZXRFcnJvckhhbmRsZXIEADEHASRYY208Q2FsbD4AFQAsU2V0QXBwZW5kaXgEADEHASRYY208Q2FsbD4AFgAoQ2xlYXJFcnJvcgAXAChDbGFpbUFzc2V0CAEYYXNzZXRz0QYBGEFzc2V0cwABGHRpY2tldDEBASBMb2NhdGlvbgAYABBUcmFwBAAoAQx1NjQAGQBAU3Vic2NyaWJlVmVyc2lvbggBIHF1ZXJ5X2lkKAEcUXVlcnlJZAABTG1heF9yZXNwb25zZV93ZWlnaHQkARhXZWlnaHQAGgBIVW5zdWJzY3JpYmVWZXJzaW9uABsAJEJ1cm5Bc3NldAQA0QYBGEFzc2V0cwAcACxFeHBlY3RBc3NldAQA0QYBGEFzc2V0cwAdADBFeHBlY3RPcmlnaW4EAPkGAUBPcHRpb248TG9jYXRpb24+AB4ALEV4cGVjdEVycm9yBACJBgFQT3B0aW9uPCh1MzIsIEVycm9yKT4AHwBQRXhwZWN0VHJhbnNhY3RTdGF0dXMEAKUGAThNYXliZUVycm9yQ29kZQAgACxRdWVyeVBhbGxldAgBLG1vZHVsZV9uYW1lNAEcVmVjPHU4PgABNHJlc3BvbnNlX2luZm/9BgFEUXVlcnlSZXNwb25zZUluZm8AIQAwRXhwZWN0UGFsbGV0FAEUaW5kZXgVAQEMdTMyAAEQbmFtZTQBHFZlYzx1OD4AASxtb2R1bGVfbmFtZTQBHFZlYzx1OD4AASxjcmF0ZV9tYWpvchUBAQx1MzIAATxtaW5fY3JhdGVfbWlub3IVAQEMdTMyACIAUFJlcG9ydFRyYW5zYWN0U3RhdHVzBAD9BgFEUXVlcnlSZXNwb25zZUluZm8AIwBMQ2xlYXJUcmFuc2FjdFN0YXR1cwAkADxVbml2ZXJzYWxPcmlnaW4EAD0BASBKdW5jdGlvbgAlADRFeHBvcnRNZXNzYWdlDAEcbmV0d29ya0UBASROZXR3b3JrSWQAASxkZXN0aW5hdGlvbjUBAUBJbnRlcmlvckxvY2F0aW9uAAEMeGNtxQYBHFhjbTwoKT4AJgAkTG9ja0Fzc2V0CAEUYXNzZXTZBgEUQXNzZXQAASB1bmxvY2tlcjEBASBMb2NhdGlvbgAnACxVbmxvY2tBc3NldAgBFGFzc2V02QYBFEFzc2V0AAEYdGFyZ2V0MQEBIExvY2F0aW9uACgAOE5vdGVVbmxvY2thYmxlCAEUYXNzZXTZBgEUQXNzZXQAARRvd25lcjEBASBMb2NhdGlvbgApADRSZXF1ZXN0VW5sb2NrCAEUYXNzZXTZBgEUQXNzZXQAARhsb2NrZXIxAQEgTG9jYXRpb24AKgAsU2V0RmVlc01vZGUEATBqaXRfd2l0aGRyYXd4ARBib29sACsAIFNldFRvcGljBAAEASBbdTg7IDMyXQAsAChDbGVhclRvcGljAC0ALEFsaWFzT3JpZ2luBAAxAQEgTG9jYXRpb24ALgA8VW5wYWlkRXhlY3V0aW9uCAEwd2VpZ2h0X2xpbWl0wQYBLFdlaWdodExpbWl0AAEwY2hlY2tfb3JpZ2lu+QYBQE9wdGlvbjxMb2NhdGlvbj4ALwAAPQcQUHN0YWdpbmdfeGNtX2V4ZWN1dG9yGHRyYWl0czhhc3NldF90cmFuc2ZlcjBUcmFuc2ZlclR5cGUAARAgVGVsZXBvcnQAAAAwTG9jYWxSZXNlcnZlAAEASERlc3RpbmF0aW9uUmVzZXJ2ZQACADRSZW1vdGVSZXNlcnZlBABpAQFEVmVyc2lvbmVkTG9jYXRpb24AAwAAQQcIDHhjbUBWZXJzaW9uZWRBc3NldElkAAEICFYzBAAtAQEsdjM6OkFzc2V0SWQAAwAIVjQEAGUBASx2NDo6QXNzZXRJZAAEAABFBwxQcGFsbGV0X21lc3NhZ2VfcXVldWUYcGFsbGV0EENhbGwEBFQAAQgkcmVhcF9wYWdlCAE4bWVzc2FnZV9vcmlnaW5JBwFITWVzc2FnZU9yaWdpbk9mPFQ+AAEocGFnZV9pbmRleBABJFBhZ2VJbmRleAAABGhTZWUgW2BQYWxsZXQ6OnJlYXBfcGFnZWBdLkhleGVjdXRlX292ZXJ3ZWlnaHQQAThtZXNzYWdlX29yaWdpbkkHAUhNZXNzYWdlT3JpZ2luT2Y8VD4AARBwYWdlEAEkUGFnZUluZGV4AAEUaW5kZXgQARxUOjpTaXplAAEwd2VpZ2h0X2xpbWl0JAEYV2VpZ2h0AAEEjFNlZSBbYFBhbGxldDo6ZXhlY3V0ZV9vdmVyd2VpZ2h0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLkkHDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uWEFnZ3JlZ2F0ZU1lc3NhZ2VPcmlnaW4AAQQMVW1wBABNBwEoVW1wUXVldWVJZAAAAABNBwxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJGluY2x1c2lvbihVbXBRdWV1ZUlkAAEEEFBhcmEEALkCARhQYXJhSWQAAAAAUQcMRHBhbGxldF9hc3NldF9yYXRlGHBhbGxldBBDYWxsBARUAAEMGGNyZWF0ZQgBKGFzc2V0X2tpbmQFAQFEQm94PFQ6OkFzc2V0S2luZD4AARByYXRlVQcBJEZpeGVkVTEyOAAABFxTZWUgW2BQYWxsZXQ6OmNyZWF0ZWBdLhh1cGRhdGUIAShhc3NldF9raW5kBQEBREJveDxUOjpBc3NldEtpbmQ+AAEQcmF0ZVUHASRGaXhlZFUxMjgAAQRcU2VlIFtgUGFsbGV0Ojp1cGRhdGVgXS4YcmVtb3ZlBAEoYXNzZXRfa2luZAUBAURCb3g8VDo6QXNzZXRLaW5kPgACBFxTZWUgW2BQYWxsZXQ6OnJlbW92ZWBdLgQNAUNvbnRhaW5zIGEgdmFyaWFudCBwZXIgZGlzcGF0Y2hhYmxlIGV4dHJpbnNpYyB0aGF0IHRoaXMgcGFsbGV0IGhhcy5VBww0c3BfYXJpdGhtZXRpYyxmaXhlZF9wb2ludCRGaXhlZFUxMjgAAAQAGAEQdTEyOAAAWQcMMHBhbGxldF9iZWVmeRhwYWxsZXQQQ2FsbAQEVAABDExyZXBvcnRfZXF1aXZvY2F0aW9uCAFIZXF1aXZvY2F0aW9uX3Byb29mXQcBjQFCb3g8RXF1aXZvY2F0aW9uUHJvb2Y8QmxvY2tOdW1iZXJGb3I8VD4sIFQ6OkJlZWZ5SWQsPFQ6OkJlZWZ5SWQKYXMgUnVudGltZUFwcFB1YmxpYz46OlNpZ25hdHVyZSw+LD4AATxrZXlfb3duZXJfcHJvb2bRAQFAVDo6S2V5T3duZXJQcm9vZgAABJBTZWUgW2BQYWxsZXQ6OnJlcG9ydF9lcXVpdm9jYXRpb25gXS5wcmVwb3J0X2VxdWl2b2NhdGlvbl91bnNpZ25lZAgBSGVxdWl2b2NhdGlvbl9wcm9vZl0HAY0BQm94PEVxdWl2b2NhdGlvblByb29mPEJsb2NrTnVtYmVyRm9yPFQ+LCBUOjpCZWVmeUlkLDxUOjpCZWVmeUlkCmFzIFJ1bnRpbWVBcHBQdWJsaWM+OjpTaWduYXR1cmUsPiw+AAE8a2V5X293bmVyX3Byb29m0QEBQFQ6OktleU93bmVyUHJvb2YAAQS0U2VlIFtgUGFsbGV0OjpyZXBvcnRfZXF1aXZvY2F0aW9uX3Vuc2lnbmVkYF0uPHNldF9uZXdfZ2VuZXNpcwQBPGRlbGF5X2luX2Jsb2NrcxABREJsb2NrTnVtYmVyRm9yPFQ+AAIEgFNlZSBbYFBhbGxldDo6c2V0X25ld19nZW5lc2lzYF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLl0HCEhzcF9jb25zZW5zdXNfYmVlZnlERXF1aXZvY2F0aW9uUHJvb2YMGE51bWJlcgEQCElkAU0CJFNpZ25hdHVyZQFhBwAIARRmaXJzdGUHAYhWb3RlTWVzc2FnZTxOdW1iZXIsIElkLCBTaWduYXR1cmU+AAEYc2Vjb25kZQcBiFZvdGVNZXNzYWdlPE51bWJlciwgSWQsIFNpZ25hdHVyZT4AAGEHDEhzcF9jb25zZW5zdXNfYmVlZnkwZWNkc2FfY3J5cHRvJFNpZ25hdHVyZQAABACpAwFAZWNkc2E6OlNpZ25hdHVyZQAAZQcISHNwX2NvbnNlbnN1c19iZWVmeSxWb3RlTWVzc2FnZQwYTnVtYmVyARAISWQBTQIkU2lnbmF0dXJlAWEHAAwBKGNvbW1pdG1lbnRpBwFIQ29tbWl0bWVudDxOdW1iZXI+AAEIaWRNAgEISWQAASRzaWduYXR1cmVhBwEkU2lnbmF0dXJlAABpBwxIc3BfY29uc2Vuc3VzX2JlZWZ5KGNvbW1pdG1lbnQoQ29tbWl0bWVudAQwVEJsb2NrTnVtYmVyARAADAEccGF5bG9hZG0HARxQYXlsb2FkAAEwYmxvY2tfbnVtYmVyEAEwVEJsb2NrTnVtYmVyAAFAdmFsaWRhdG9yX3NldF9pZCwBOFZhbGlkYXRvclNldElkAABtBwxIc3BfY29uc2Vuc3VzX2JlZWZ5HHBheWxvYWQcUGF5bG9hZAAABABxBwF4VmVjPChCZWVmeVBheWxvYWRJZCwgVmVjPHU4Pik+AABxBwAAAnUHAHUHAAAECB0DNAB5BxBccG9sa2Fkb3RfcnVudGltZV9jb21tb25EaWRlbnRpdHlfbWlncmF0b3IYcGFsbGV0EENhbGwEBFQAAQg0cmVhcF9pZGVudGl0eQQBDHdobwABMFQ6OkFjY291bnRJZAAABHhTZWUgW2BQYWxsZXQ6OnJlYXBfaWRlbnRpdHlgXS4wcG9rZV9kZXBvc2l0BAEMd2hvAAEwVDo6QWNjb3VudElkAAEEdFNlZSBbYFBhbGxldDo6cG9rZV9kZXBvc2l0YF0uBA0BQ29udGFpbnMgYSB2YXJpYW50IHBlciBkaXNwYXRjaGFibGUgZXh0cmluc2ljIHRoYXQgdGhpcyBwYWxsZXQgaGFzLn0HDChzcF9ydW50aW1lGHRyYWl0cyxCbGFrZVR3bzI1NgAAAACBBwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAIUHDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcUdHlwZXMUVGFsbHkIFFZvdGVzARgUVG90YWwAAAwBEGF5ZXMYARRWb3RlcwABEG5heXMYARRWb3RlcwABHHN1cHBvcnQYARRWb3RlcwAAiQcMQHBhbGxldF93aGl0ZWxpc3QYcGFsbGV0FEV2ZW50BARUAAEMPENhbGxXaGl0ZWxpc3RlZAQBJGNhbGxfaGFzaDABHFQ6Okhhc2gAAABYV2hpdGVsaXN0ZWRDYWxsUmVtb3ZlZAQBJGNhbGxfaGFzaDABHFQ6Okhhc2gAAQBkV2hpdGVsaXN0ZWRDYWxsRGlzcGF0Y2hlZAgBJGNhbGxfaGFzaDABHFQ6Okhhc2gAARhyZXN1bHSNBwFoRGlzcGF0Y2hSZXN1bHRXaXRoUG9zdEluZm8AAgAEfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSNBwQYUmVzdWx0CARUAZEHBEUBmQcBCAhPawQAkQcAAAAADEVycgQAmQcAAAEAAJEHDDRmcmFtZV9zdXBwb3J0IGRpc3BhdGNoQFBvc3REaXNwYXRjaEluZm8AAAgBNGFjdHVhbF93ZWlnaHSVBwE4T3B0aW9uPFdlaWdodD4AASBwYXlzX2ZlZWABEFBheXMAAJUHBBhPcHRpb24EBFQBJAEIEE5vbmUAAAAQU29tZQQAJAAAAQAAmQcIKHNwX3J1bnRpbWVkRGlzcGF0Y2hFcnJvcldpdGhQb3N0SW5mbwQQSW5mbwGRBwAIASRwb3N0X2luZm+RBwEQSW5mbwABFGVycm9yZAE0RGlzcGF0Y2hFcnJvcgAAnQcQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uGGNsYWltcxhwYWxsZXQURXZlbnQEBFQAAQQcQ2xhaW1lZAwBDHdobwABMFQ6OkFjY291bnRJZAABQGV0aGVyZXVtX2FkZHJlc3PdAgE8RXRoZXJldW1BZGRyZXNzAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAAEaFNvbWVvbmUgY2xhaW1lZCBzb21lIERPVHMuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0oQcMOHBhbGxldF92ZXN0aW5nGHBhbGxldBRFdmVudAQEVAABCDhWZXN0aW5nVXBkYXRlZAgBHGFjY291bnQAATBUOjpBY2NvdW50SWQAASB1bnZlc3RlZBgBMEJhbGFuY2VPZjxUPgAACFEBVGhlIGFtb3VudCB2ZXN0ZWQgaGFzIGJlZW4gdXBkYXRlZC4gVGhpcyBjb3VsZCBpbmRpY2F0ZSBhIGNoYW5nZSBpbiBmdW5kcyBhdmFpbGFibGUuJQFUaGUgYmFsYW5jZSBnaXZlbiBpcyB0aGUgYW1vdW50IHdoaWNoIGlzIGxlZnQgdW52ZXN0ZWQgKGFuZCB0aHVzIGxvY2tlZCkuQFZlc3RpbmdDb21wbGV0ZWQEARxhY2NvdW50AAEwVDo6QWNjb3VudElkAAEEnEFuIFxbYWNjb3VudFxdIGhhcyBiZWNvbWUgZnVsbHkgdmVzdGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldKUHDDhwYWxsZXRfdXRpbGl0eRhwYWxsZXQURXZlbnQAARhAQmF0Y2hJbnRlcnJ1cHRlZAgBFGluZGV4EAEMdTMyAAEUZXJyb3JkATREaXNwYXRjaEVycm9yAAAIVQFCYXRjaCBvZiBkaXNwYXRjaGVzIGRpZCBub3QgY29tcGxldGUgZnVsbHkuIEluZGV4IG9mIGZpcnN0IGZhaWxpbmcgZGlzcGF0Y2ggZ2l2ZW4sIGFzSHdlbGwgYXMgdGhlIGVycm9yLjhCYXRjaENvbXBsZXRlZAABBMhCYXRjaCBvZiBkaXNwYXRjaGVzIGNvbXBsZXRlZCBmdWxseSB3aXRoIG5vIGVycm9yLmBCYXRjaENvbXBsZXRlZFdpdGhFcnJvcnMAAgS0QmF0Y2ggb2YgZGlzcGF0Y2hlcyBjb21wbGV0ZWQgYnV0IGhhcyBlcnJvcnMuNEl0ZW1Db21wbGV0ZWQAAwQdAUEgc2luZ2xlIGl0ZW0gd2l0aGluIGEgQmF0Y2ggb2YgZGlzcGF0Y2hlcyBoYXMgY29tcGxldGVkIHdpdGggbm8gZXJyb3IuKEl0ZW1GYWlsZWQEARRlcnJvcmQBNERpc3BhdGNoRXJyb3IABAQRAUEgc2luZ2xlIGl0ZW0gd2l0aGluIGEgQmF0Y2ggb2YgZGlzcGF0Y2hlcyBoYXMgY29tcGxldGVkIHdpdGggZXJyb3IuMERpc3BhdGNoZWRBcwQBGHJlc3VsdIgBOERpc3BhdGNoUmVzdWx0AAUEWEEgY2FsbCB3YXMgZGlzcGF0Y2hlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSpBww8cGFsbGV0X2lkZW50aXR5GHBhbGxldBRFdmVudAQEVAABRCxJZGVudGl0eVNldAQBDHdobwABMFQ6OkFjY291bnRJZAAABOxBIG5hbWUgd2FzIHNldCBvciByZXNldCAod2hpY2ggd2lsbCByZW1vdmUgYWxsIGp1ZGdlbWVudHMpLjxJZGVudGl0eUNsZWFyZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAARxkZXBvc2l0GAEwQmFsYW5jZU9mPFQ+AAEEzEEgbmFtZSB3YXMgY2xlYXJlZCwgYW5kIHRoZSBnaXZlbiBiYWxhbmNlIHJldHVybmVkLjhJZGVudGl0eUtpbGxlZAgBDHdobwABMFQ6OkFjY291bnRJZAABHGRlcG9zaXQYATBCYWxhbmNlT2Y8VD4AAgTEQSBuYW1lIHdhcyByZW1vdmVkIGFuZCB0aGUgZ2l2ZW4gYmFsYW5jZSBzbGFzaGVkLkhKdWRnZW1lbnRSZXF1ZXN0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAATxyZWdpc3RyYXJfaW5kZXgQAThSZWdpc3RyYXJJbmRleAADBJxBIGp1ZGdlbWVudCB3YXMgYXNrZWQgZnJvbSBhIHJlZ2lzdHJhci5QSnVkZ2VtZW50VW5yZXF1ZXN0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAATxyZWdpc3RyYXJfaW5kZXgQAThSZWdpc3RyYXJJbmRleAAEBIhBIGp1ZGdlbWVudCByZXF1ZXN0IHdhcyByZXRyYWN0ZWQuOEp1ZGdlbWVudEdpdmVuCAEYdGFyZ2V0AAEwVDo6QWNjb3VudElkAAE8cmVnaXN0cmFyX2luZGV4EAE4UmVnaXN0cmFySW5kZXgABQSUQSBqdWRnZW1lbnQgd2FzIGdpdmVuIGJ5IGEgcmVnaXN0cmFyLjhSZWdpc3RyYXJBZGRlZAQBPHJlZ2lzdHJhcl9pbmRleBABOFJlZ2lzdHJhckluZGV4AAYEWEEgcmVnaXN0cmFyIHdhcyBhZGRlZC5AU3ViSWRlbnRpdHlBZGRlZAwBDHN1YgABMFQ6OkFjY291bnRJZAABEG1haW4AATBUOjpBY2NvdW50SWQAARxkZXBvc2l0GAEwQmFsYW5jZU9mPFQ+AAcE9EEgc3ViLWlkZW50aXR5IHdhcyBhZGRlZCB0byBhbiBpZGVudGl0eSBhbmQgdGhlIGRlcG9zaXQgcGFpZC5IU3ViSWRlbnRpdHlSZW1vdmVkDAEMc3ViAAEwVDo6QWNjb3VudElkAAEQbWFpbgABMFQ6OkFjY291bnRJZAABHGRlcG9zaXQYATBCYWxhbmNlT2Y8VD4ACAQJAUEgc3ViLWlkZW50aXR5IHdhcyByZW1vdmVkIGZyb20gYW4gaWRlbnRpdHkgYW5kIHRoZSBkZXBvc2l0IGZyZWVkLkhTdWJJZGVudGl0eVJldm9rZWQMAQxzdWIAATBUOjpBY2NvdW50SWQAARBtYWluAAEwVDo6QWNjb3VudElkAAEcZGVwb3NpdBgBMEJhbGFuY2VPZjxUPgAJCBkBQSBzdWItaWRlbnRpdHkgd2FzIGNsZWFyZWQsIGFuZCB0aGUgZ2l2ZW4gZGVwb3NpdCByZXBhdHJpYXRlZCBmcm9tIHRoZchtYWluIGlkZW50aXR5IGFjY291bnQgdG8gdGhlIHN1Yi1pZGVudGl0eSBhY2NvdW50LjhBdXRob3JpdHlBZGRlZAQBJGF1dGhvcml0eQABMFQ6OkFjY291bnRJZAAKBHxBIHVzZXJuYW1lIGF1dGhvcml0eSB3YXMgYWRkZWQuQEF1dGhvcml0eVJlbW92ZWQEASRhdXRob3JpdHkAATBUOjpBY2NvdW50SWQACwSEQSB1c2VybmFtZSBhdXRob3JpdHkgd2FzIHJlbW92ZWQuLFVzZXJuYW1lU2V0CAEMd2hvAAEwVDo6QWNjb3VudElkAAEgdXNlcm5hbWWtAwEsVXNlcm5hbWU8VD4ADAR0QSB1c2VybmFtZSB3YXMgc2V0IGZvciBgd2hvYC44VXNlcm5hbWVRdWV1ZWQMAQx3aG8AATBUOjpBY2NvdW50SWQAASB1c2VybmFtZa0DASxVc2VybmFtZTxUPgABKGV4cGlyYXRpb24QAURCbG9ja051bWJlckZvcjxUPgANBBkBQSB1c2VybmFtZSB3YXMgcXVldWVkLCBidXQgYHdob2AgbXVzdCBhY2NlcHQgaXQgcHJpb3IgdG8gYGV4cGlyYXRpb25gLkhQcmVhcHByb3ZhbEV4cGlyZWQEARR3aG9zZQABMFQ6OkFjY291bnRJZAAOBDkBQSBxdWV1ZWQgdXNlcm5hbWUgcGFzc2VkIGl0cyBleHBpcmF0aW9uIHdpdGhvdXQgYmVpbmcgY2xhaW1lZCBhbmQgd2FzIHJlbW92ZWQuSFByaW1hcnlVc2VybmFtZVNldAgBDHdobwABMFQ6OkFjY291bnRJZAABIHVzZXJuYW1lrQMBLFVzZXJuYW1lPFQ+AA8EAQFBIHVzZXJuYW1lIHdhcyBzZXQgYXMgYSBwcmltYXJ5IGFuZCBjYW4gYmUgbG9va2VkIHVwIGZyb20gYHdob2AuXERhbmdsaW5nVXNlcm5hbWVSZW1vdmVkCAEMd2hvAAEwVDo6QWNjb3VudElkAAEgdXNlcm5hbWWtAwEsVXNlcm5hbWU8VD4AEAhdAUEgZGFuZ2xpbmcgdXNlcm5hbWUgKGFzIGluLCBhIHVzZXJuYW1lIGNvcnJlc3BvbmRpbmcgdG8gYW4gYWNjb3VudCB0aGF0IGhhcyByZW1vdmVkIGl0c2xpZGVudGl0eSkgaGFzIGJlZW4gcmVtb3ZlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXStBwwwcGFsbGV0X3Byb3h5GHBhbGxldBRFdmVudAQEVAABFDRQcm94eUV4ZWN1dGVkBAEYcmVzdWx0iAE4RGlzcGF0Y2hSZXN1bHQAAAS8QSBwcm94eSB3YXMgZXhlY3V0ZWQgY29ycmVjdGx5LCB3aXRoIHRoZSBnaXZlbi4sUHVyZUNyZWF0ZWQQARBwdXJlAAEwVDo6QWNjb3VudElkAAEMd2hvAAEwVDo6QWNjb3VudElkAAEocHJveHlfdHlwZbkDATBUOjpQcm94eVR5cGUAAVBkaXNhbWJpZ3VhdGlvbl9pbmRleJEBAQx1MTYAAQjcQSBwdXJlIGFjY291bnQgaGFzIGJlZW4gY3JlYXRlZCBieSBuZXcgcHJveHkgd2l0aCBnaXZlbpBkaXNhbWJpZ3VhdGlvbiBpbmRleCBhbmQgcHJveHkgdHlwZS4kQW5ub3VuY2VkDAEQcmVhbAABMFQ6OkFjY291bnRJZAABFHByb3h5AAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoMAE0Q2FsbEhhc2hPZjxUPgACBOBBbiBhbm5vdW5jZW1lbnQgd2FzIHBsYWNlZCB0byBtYWtlIGEgY2FsbCBpbiB0aGUgZnV0dXJlLihQcm94eUFkZGVkEAEkZGVsZWdhdG9yAAEwVDo6QWNjb3VudElkAAEkZGVsZWdhdGVlAAEwVDo6QWNjb3VudElkAAEocHJveHlfdHlwZbkDATBUOjpQcm94eVR5cGUAARRkZWxheRABREJsb2NrTnVtYmVyRm9yPFQ+AAMESEEgcHJveHkgd2FzIGFkZGVkLjBQcm94eVJlbW92ZWQQASRkZWxlZ2F0b3IAATBUOjpBY2NvdW50SWQAASRkZWxlZ2F0ZWUAATBUOjpBY2NvdW50SWQAAShwcm94eV90eXBluQMBMFQ6OlByb3h5VHlwZQABFGRlbGF5EAFEQmxvY2tOdW1iZXJGb3I8VD4ABARQQSBwcm94eSB3YXMgcmVtb3ZlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXSxBww8cGFsbGV0X211bHRpc2lnGHBhbGxldBRFdmVudAQEVAABECxOZXdNdWx0aXNpZwwBJGFwcHJvdmluZwABMFQ6OkFjY291bnRJZAABIG11bHRpc2lnAAEwVDo6QWNjb3VudElkAAEkY2FsbF9oYXNoBAEgQ2FsbEhhc2gAAASMQSBuZXcgbXVsdGlzaWcgb3BlcmF0aW9uIGhhcyBiZWd1bi5ATXVsdGlzaWdBcHByb3ZhbBABJGFwcHJvdmluZwABMFQ6OkFjY291bnRJZAABJHRpbWVwb2ludMUDAXBUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+AAEgbXVsdGlzaWcAATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2gEASBDYWxsSGFzaAABBMhBIG11bHRpc2lnIG9wZXJhdGlvbiBoYXMgYmVlbiBhcHByb3ZlZCBieSBzb21lb25lLkBNdWx0aXNpZ0V4ZWN1dGVkFAEkYXBwcm92aW5nAAEwVDo6QWNjb3VudElkAAEkdGltZXBvaW50xQMBcFRpbWVwb2ludDxCbG9ja051bWJlckZvcjxUPj4AASBtdWx0aXNpZwABMFQ6OkFjY291bnRJZAABJGNhbGxfaGFzaAQBIENhbGxIYXNoAAEYcmVzdWx0iAE4RGlzcGF0Y2hSZXN1bHQAAgScQSBtdWx0aXNpZyBvcGVyYXRpb24gaGFzIGJlZW4gZXhlY3V0ZWQuRE11bHRpc2lnQ2FuY2VsbGVkEAEoY2FuY2VsbGluZwABMFQ6OkFjY291bnRJZAABJHRpbWVwb2ludMUDAXBUaW1lcG9pbnQ8QmxvY2tOdW1iZXJGb3I8VD4+AAEgbXVsdGlzaWcAATBUOjpBY2NvdW50SWQAASRjYWxsX2hhc2gEASBDYWxsSGFzaAADBKBBIG11bHRpc2lnIG9wZXJhdGlvbiBoYXMgYmVlbiBjYW5jZWxsZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0tQcMPHBhbGxldF9ib3VudGllcxhwYWxsZXQURXZlbnQIBFQABEkAASw4Qm91bnR5UHJvcG9zZWQEARRpbmRleBABLEJvdW50eUluZGV4AAAEUE5ldyBib3VudHkgcHJvcG9zYWwuOEJvdW50eVJlamVjdGVkCAEUaW5kZXgQASxCb3VudHlJbmRleAABEGJvbmQYATxCYWxhbmNlT2Y8VCwgST4AAQTMQSBib3VudHkgcHJvcG9zYWwgd2FzIHJlamVjdGVkOyBmdW5kcyB3ZXJlIHNsYXNoZWQuSEJvdW50eUJlY2FtZUFjdGl2ZQQBFGluZGV4EAEsQm91bnR5SW5kZXgAAgS4QSBib3VudHkgcHJvcG9zYWwgaXMgZnVuZGVkIGFuZCBiZWNhbWUgYWN0aXZlLjRCb3VudHlBd2FyZGVkCAEUaW5kZXgQASxCb3VudHlJbmRleAABLGJlbmVmaWNpYXJ5AAEwVDo6QWNjb3VudElkAAMElEEgYm91bnR5IGlzIGF3YXJkZWQgdG8gYSBiZW5lZmljaWFyeS40Qm91bnR5Q2xhaW1lZAwBFGluZGV4EAEsQm91bnR5SW5kZXgAARhwYXlvdXQYATxCYWxhbmNlT2Y8VCwgST4AASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAAEBIxBIGJvdW50eSBpcyBjbGFpbWVkIGJ5IGJlbmVmaWNpYXJ5LjhCb3VudHlDYW5jZWxlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABQRYQSBib3VudHkgaXMgY2FuY2VsbGVkLjhCb3VudHlFeHRlbmRlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABgRwQSBib3VudHkgZXhwaXJ5IGlzIGV4dGVuZGVkLjhCb3VudHlBcHByb3ZlZAQBFGluZGV4EAEsQm91bnR5SW5kZXgABwRUQSBib3VudHkgaXMgYXBwcm92ZWQuPEN1cmF0b3JQcm9wb3NlZAgBJGJvdW50eV9pZBABLEJvdW50eUluZGV4AAEcY3VyYXRvcgABMFQ6OkFjY291bnRJZAAIBHRBIGJvdW50eSBjdXJhdG9yIGlzIHByb3Bvc2VkLkRDdXJhdG9yVW5hc3NpZ25lZAQBJGJvdW50eV9pZBABLEJvdW50eUluZGV4AAkEfEEgYm91bnR5IGN1cmF0b3IgaXMgdW5hc3NpZ25lZC48Q3VyYXRvckFjY2VwdGVkCAEkYm91bnR5X2lkEAEsQm91bnR5SW5kZXgAARxjdXJhdG9yAAEwVDo6QWNjb3VudElkAAoEdEEgYm91bnR5IGN1cmF0b3IgaXMgYWNjZXB0ZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0uQcMVHBhbGxldF9jaGlsZF9ib3VudGllcxhwYWxsZXQURXZlbnQEBFQAARAUQWRkZWQIARRpbmRleBABLEJvdW50eUluZGV4AAEsY2hpbGRfaW5kZXgQASxCb3VudHlJbmRleAAABGBBIGNoaWxkLWJvdW50eSBpcyBhZGRlZC4cQXdhcmRlZAwBFGluZGV4EAEsQm91bnR5SW5kZXgAASxjaGlsZF9pbmRleBABLEJvdW50eUluZGV4AAEsYmVuZWZpY2lhcnkAATBUOjpBY2NvdW50SWQAAQSsQSBjaGlsZC1ib3VudHkgaXMgYXdhcmRlZCB0byBhIGJlbmVmaWNpYXJ5LhxDbGFpbWVkEAEUaW5kZXgQASxCb3VudHlJbmRleAABLGNoaWxkX2luZGV4EAEsQm91bnR5SW5kZXgAARhwYXlvdXQYATBCYWxhbmNlT2Y8VD4AASxiZW5lZmljaWFyeQABMFQ6OkFjY291bnRJZAACBKRBIGNoaWxkLWJvdW50eSBpcyBjbGFpbWVkIGJ5IGJlbmVmaWNpYXJ5LiBDYW5jZWxlZAgBFGluZGV4EAEsQm91bnR5SW5kZXgAASxjaGlsZF9pbmRleBABLEJvdW50eUluZGV4AAMEcEEgY2hpbGQtYm91bnR5IGlzIGNhbmNlbGxlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXS9BwyQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlGHBhbGxldBRFdmVudAQEVAABGDhTb2x1dGlvblN0b3JlZAwBHGNvbXB1dGXBBwE8RWxlY3Rpb25Db21wdXRlAAEYb3JpZ2luIQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEwcHJldl9lamVjdGVkeAEQYm9vbAAAHLRBIHNvbHV0aW9uIHdhcyBzdG9yZWQgd2l0aCB0aGUgZ2l2ZW4gY29tcHV0ZS4AUQFUaGUgYG9yaWdpbmAgaW5kaWNhdGVzIHRoZSBvcmlnaW4gb2YgdGhlIHNvbHV0aW9uLiBJZiBgb3JpZ2luYCBpcyBgU29tZShBY2NvdW50SWQpYCxVAXRoZSBzdG9yZWQgc29sdXRpb24gd2FzIHN1Ym1pdGVkIGluIHRoZSBzaWduZWQgcGhhc2UgYnkgYSBtaW5lciB3aXRoIHRoZSBgQWNjb3VudElkYC4lAU90aGVyd2lzZSwgdGhlIHNvbHV0aW9uIHdhcyBzdG9yZWQgZWl0aGVyIGR1cmluZyB0aGUgdW5zaWduZWQgcGhhc2Ugb3IgYnlNAWBUOjpGb3JjZU9yaWdpbmAuIFRoZSBgYm9vbGAgaXMgYHRydWVgIHdoZW4gYSBwcmV2aW91cyBzb2x1dGlvbiB3YXMgZWplY3RlZCB0byBtYWtlSHJvb20gZm9yIHRoaXMgb25lLkRFbGVjdGlvbkZpbmFsaXplZAgBHGNvbXB1dGXBBwE8RWxlY3Rpb25Db21wdXRlAAEUc2NvcmWlBAE0RWxlY3Rpb25TY29yZQABBBkBVGhlIGVsZWN0aW9uIGhhcyBiZWVuIGZpbmFsaXplZCwgd2l0aCB0aGUgZ2l2ZW4gY29tcHV0YXRpb24gYW5kIHNjb3JlLjhFbGVjdGlvbkZhaWxlZAACDExBbiBlbGVjdGlvbiBmYWlsZWQuAAEBTm90IG11Y2ggY2FuIGJlIHNhaWQgYWJvdXQgd2hpY2ggY29tcHV0ZXMgZmFpbGVkIGluIHRoZSBwcm9jZXNzLiBSZXdhcmRlZAgBHGFjY291bnQAAZg8VCBhcyBmcmFtZV9zeXN0ZW06OkNvbmZpZz46OkFjY291bnRJZAABFHZhbHVlGAEwQmFsYW5jZU9mPFQ+AAMEJQFBbiBhY2NvdW50IGhhcyBiZWVuIHJld2FyZGVkIGZvciB0aGVpciBzaWduZWQgc3VibWlzc2lvbiBiZWluZyBmaW5hbGl6ZWQuHFNsYXNoZWQIARxhY2NvdW50AAGYPFQgYXMgZnJhbWVfc3lzdGVtOjpDb25maWc+OjpBY2NvdW50SWQAARR2YWx1ZRgBMEJhbGFuY2VPZjxUPgAEBCEBQW4gYWNjb3VudCBoYXMgYmVlbiBzbGFzaGVkIGZvciBzdWJtaXR0aW5nIGFuIGludmFsaWQgc2lnbmVkIHN1Ym1pc3Npb24uRFBoYXNlVHJhbnNpdGlvbmVkDAEQZnJvbcUHAWBQaGFzZTxCbG9ja051bWJlckZvcjxUPj4AAQh0b8UHAWBQaGFzZTxCbG9ja051bWJlckZvcjxUPj4AARRyb3VuZBABDHUzMgAFBLhUaGVyZSB3YXMgYSBwaGFzZSB0cmFuc2l0aW9uIGluIGEgZ2l2ZW4gcm91bmQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0wQcIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZTxFbGVjdGlvbkNvbXB1dGUAARQcT25DaGFpbgAAABhTaWduZWQAAQAgVW5zaWduZWQAAgAgRmFsbGJhY2sAAwAkRW1lcmdlbmN5AAQAAMUHCJBwYWxsZXRfZWxlY3Rpb25fcHJvdmlkZXJfbXVsdGlfcGhhc2UUUGhhc2UECEJuARABEAxPZmYAAAAYU2lnbmVkAAEAIFVuc2lnbmVkBADJBwEoKGJvb2wsIEJuKQACACRFbWVyZ2VuY3kAAwAAyQcAAAQIeBAAzQcMQHBhbGxldF9iYWdzX2xpc3QYcGFsbGV0FEV2ZW50CARUAARJAAEIIFJlYmFnZ2VkDAEMd2hvAAEwVDo6QWNjb3VudElkAAEQZnJvbSwBIFQ6OlNjb3JlAAEIdG8sASBUOjpTY29yZQAABKRNb3ZlZCBhbiBhY2NvdW50IGZyb20gb25lIGJhZyB0byBhbm90aGVyLjBTY29yZVVwZGF0ZWQIAQx3aG8AATBUOjpBY2NvdW50SWQAASRuZXdfc2NvcmUsASBUOjpTY29yZQABBNhVcGRhdGVkIHRoZSBzY29yZSBvZiBzb21lIGFjY291bnQgdG8gdGhlIGdpdmVuIGFtb3VudC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTRBwxccGFsbGV0X25vbWluYXRpb25fcG9vbHMYcGFsbGV0FEV2ZW50BARUAAFIHENyZWF0ZWQIASRkZXBvc2l0b3IAATBUOjpBY2NvdW50SWQAARxwb29sX2lkEAEYUG9vbElkAAAEYEEgcG9vbCBoYXMgYmVlbiBjcmVhdGVkLhhCb25kZWQQARhtZW1iZXIAATBUOjpBY2NvdW50SWQAARxwb29sX2lkEAEYUG9vbElkAAEYYm9uZGVkGAEwQmFsYW5jZU9mPFQ+AAEYam9pbmVkeAEQYm9vbAABBJRBIG1lbWJlciBoYXMgYmVjYW1lIGJvbmRlZCBpbiBhIHBvb2wuHFBhaWRPdXQMARhtZW1iZXIAATBUOjpBY2NvdW50SWQAARxwb29sX2lkEAEYUG9vbElkAAEYcGF5b3V0GAEwQmFsYW5jZU9mPFQ+AAIEjEEgcGF5b3V0IGhhcyBiZWVuIG1hZGUgdG8gYSBtZW1iZXIuIFVuYm9uZGVkFAEYbWVtYmVyAAEwVDo6QWNjb3VudElkAAEccG9vbF9pZBABGFBvb2xJZAABHGJhbGFuY2UYATBCYWxhbmNlT2Y8VD4AARhwb2ludHMYATBCYWxhbmNlT2Y8VD4AAQxlcmEQASBFcmFJbmRleAADLJhBIG1lbWJlciBoYXMgdW5ib25kZWQgZnJvbSB0aGVpciBwb29sLgA5AS0gYGJhbGFuY2VgIGlzIHRoZSBjb3JyZXNwb25kaW5nIGJhbGFuY2Ugb2YgdGhlIG51bWJlciBvZiBwb2ludHMgdGhhdCBoYXMgYmVlblUBICByZXF1ZXN0ZWQgdG8gYmUgdW5ib25kZWQgKHRoZSBhcmd1bWVudCBvZiB0aGUgYHVuYm9uZGAgdHJhbnNhY3Rpb24pIGZyb20gdGhlIGJvbmRlZBwgIHBvb2wuRQEtIGBwb2ludHNgIGlzIHRoZSBudW1iZXIgb2YgcG9pbnRzIHRoYXQgYXJlIGlzc3VlZCBhcyBhIHJlc3VsdCBvZiBgYmFsYW5jZWAgYmVpbmfAZGlzc29sdmVkIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgdW5ib25kaW5nIHBvb2wu5C0gYGVyYWAgaXMgdGhlIGVyYSBpbiB3aGljaCB0aGUgYmFsYW5jZSB3aWxsIGJlIHVuYm9uZGVkLlUBSW4gdGhlIGFic2VuY2Ugb2Ygc2xhc2hpbmcsIHRoZXNlIHZhbHVlcyB3aWxsIG1hdGNoLiBJbiB0aGUgcHJlc2VuY2Ugb2Ygc2xhc2hpbmcsIHRoZU0BbnVtYmVyIG9mIHBvaW50cyB0aGF0IGFyZSBpc3N1ZWQgaW4gdGhlIHVuYm9uZGluZyBwb29sIHdpbGwgYmUgbGVzcyB0aGFuIHRoZSBhbW91bnRkcmVxdWVzdGVkIHRvIGJlIHVuYm9uZGVkLiRXaXRoZHJhd24QARhtZW1iZXIAATBUOjpBY2NvdW50SWQAARxwb29sX2lkEAEYUG9vbElkAAEcYmFsYW5jZRgBMEJhbGFuY2VPZjxUPgABGHBvaW50cxgBMEJhbGFuY2VPZjxUPgAEGJxBIG1lbWJlciBoYXMgd2l0aGRyYXduIGZyb20gdGhlaXIgcG9vbC4AIQFUaGUgZ2l2ZW4gbnVtYmVyIG9mIGBwb2ludHNgIGhhdmUgYmVlbiBkaXNzb2x2ZWQgaW4gcmV0dXJuIG9mIGBiYWxhbmNlYC4AWQFTaW1pbGFyIHRvIGBVbmJvbmRlZGAgZXZlbnQsIGluIHRoZSBhYnNlbmNlIG9mIHNsYXNoaW5nLCB0aGUgcmF0aW8gb2YgcG9pbnQgdG8gYmFsYW5jZSh3aWxsIGJlIDEuJERlc3Ryb3llZAQBHHBvb2xfaWQQARhQb29sSWQABQRoQSBwb29sIGhhcyBiZWVuIGRlc3Ryb3llZC4wU3RhdGVDaGFuZ2VkCAEccG9vbF9pZBABGFBvb2xJZAABJG5ld19zdGF0ZdEEASRQb29sU3RhdGUABgR8VGhlIHN0YXRlIG9mIGEgcG9vbCBoYXMgY2hhbmdlZDRNZW1iZXJSZW1vdmVkCAEccG9vbF9pZBABGFBvb2xJZAABGG1lbWJlcgABMFQ6OkFjY291bnRJZAAHDJhBIG1lbWJlciBoYXMgYmVlbiByZW1vdmVkIGZyb20gYSBwb29sLgBRAVRoZSByZW1vdmFsIGNhbiBiZSB2b2x1bnRhcnkgKHdpdGhkcmF3biBhbGwgdW5ib25kZWQgZnVuZHMpIG9yIGludm9sdW50YXJ5IChraWNrZWQpLjBSb2xlc1VwZGF0ZWQMARByb290IQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEcYm91bmNlciECAVBPcHRpb248VDo6QWNjb3VudElkPgABJG5vbWluYXRvciECAVBPcHRpb248VDo6QWNjb3VudElkPgAICFUBVGhlIHJvbGVzIG9mIGEgcG9vbCBoYXZlIGJlZW4gdXBkYXRlZCB0byB0aGUgZ2l2ZW4gbmV3IHJvbGVzLiBOb3RlIHRoYXQgdGhlIGRlcG9zaXRvckRjYW4gbmV2ZXIgY2hhbmdlLixQb29sU2xhc2hlZAgBHHBvb2xfaWQQARhQb29sSWQAARxiYWxhbmNlGAEwQmFsYW5jZU9mPFQ+AAkEDQFUaGUgYWN0aXZlIGJhbGFuY2Ugb2YgcG9vbCBgcG9vbF9pZGAgaGFzIGJlZW4gc2xhc2hlZCB0byBgYmFsYW5jZWAuUFVuYm9uZGluZ1Bvb2xTbGFzaGVkDAEccG9vbF9pZBABGFBvb2xJZAABDGVyYRABIEVyYUluZGV4AAEcYmFsYW5jZRgBMEJhbGFuY2VPZjxUPgAKBCUBVGhlIHVuYm9uZCBwb29sIGF0IGBlcmFgIG9mIHBvb2wgYHBvb2xfaWRgIGhhcyBiZWVuIHNsYXNoZWQgdG8gYGJhbGFuY2VgLlRQb29sQ29tbWlzc2lvblVwZGF0ZWQIARxwb29sX2lkEAEYUG9vbElkAAEcY3VycmVudOkEAXxPcHRpb248KFBlcmJpbGwsIFQ6OkFjY291bnRJZCk+AAsEtEEgcG9vbCdzIGNvbW1pc3Npb24gc2V0dGluZyBoYXMgYmVlbiBjaGFuZ2VkLmBQb29sTWF4Q29tbWlzc2lvblVwZGF0ZWQIARxwb29sX2lkEAEYUG9vbElkAAE4bWF4X2NvbW1pc3Npb26sARxQZXJiaWxsAAwE1EEgcG9vbCdzIG1heGltdW0gY29tbWlzc2lvbiBzZXR0aW5nIGhhcyBiZWVuIGNoYW5nZWQufFBvb2xDb21taXNzaW9uQ2hhbmdlUmF0ZVVwZGF0ZWQIARxwb29sX2lkEAEYUG9vbElkAAEsY2hhbmdlX3JhdGXxBAGcQ29tbWlzc2lvbkNoYW5nZVJhdGU8QmxvY2tOdW1iZXJGb3I8VD4+AA0EzEEgcG9vbCdzIGNvbW1pc3Npb24gYGNoYW5nZV9yYXRlYCBoYXMgYmVlbiBjaGFuZ2VkLpBQb29sQ29tbWlzc2lvbkNsYWltUGVybWlzc2lvblVwZGF0ZWQIARxwb29sX2lkEAEYUG9vbElkAAEocGVybWlzc2lvbvUEAbxPcHRpb248Q29tbWlzc2lvbkNsYWltUGVybWlzc2lvbjxUOjpBY2NvdW50SWQ+PgAOBMhQb29sIGNvbW1pc3Npb24gY2xhaW0gcGVybWlzc2lvbiBoYXMgYmVlbiB1cGRhdGVkLlRQb29sQ29tbWlzc2lvbkNsYWltZWQIARxwb29sX2lkEAEYUG9vbElkAAEoY29tbWlzc2lvbhgBMEJhbGFuY2VPZjxUPgAPBIRQb29sIGNvbW1pc3Npb24gaGFzIGJlZW4gY2xhaW1lZC5kTWluQmFsYW5jZURlZmljaXRBZGp1c3RlZAgBHHBvb2xfaWQQARhQb29sSWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AEATIVG9wcGVkIHVwIGRlZmljaXQgaW4gZnJvemVuIEVEIG9mIHRoZSByZXdhcmQgcG9vbC5gTWluQmFsYW5jZUV4Y2Vzc0FkanVzdGVkCAEccG9vbF9pZBABGFBvb2xJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgARBLxDbGFpbWVkIGV4Y2VzcyBmcm96ZW4gRUQgb2YgYWYgdGhlIHJld2FyZCBwb29sLgRYRXZlbnRzIG9mIHRoaXMgcGFsbGV0LtUHDExwYWxsZXRfZmFzdF91bnN0YWtlGHBhbGxldBRFdmVudAQEVAABFCBVbnN0YWtlZAgBFHN0YXNoAAEwVDo6QWNjb3VudElkAAEYcmVzdWx0iAE4RGlzcGF0Y2hSZXN1bHQAAARYQSBzdGFrZXIgd2FzIHVuc3Rha2VkLhxTbGFzaGVkCAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAQQZAUEgc3Rha2VyIHdhcyBzbGFzaGVkIGZvciByZXF1ZXN0aW5nIGZhc3QtdW5zdGFrZSB3aGlsc3QgYmVpbmcgZXhwb3NlZC4wQmF0Y2hDaGVja2VkBAEQZXJhcwkCATRWZWM8RXJhSW5kZXg+AAIERQFBIGJhdGNoIHdhcyBwYXJ0aWFsbHkgY2hlY2tlZCBmb3IgdGhlIGdpdmVuIGVyYXMsIGJ1dCB0aGUgcHJvY2VzcyBkaWQgbm90IGZpbmlzaC40QmF0Y2hGaW5pc2hlZAQBEHNpemUQAQx1MzIAAxCcQSBiYXRjaCBvZiBhIGdpdmVuIHNpemUgd2FzIHRlcm1pbmF0ZWQuAFUBVGhpcyBpcyBhbHdheXMgZm9sbG93cyBieSBhIG51bWJlciBvZiBgVW5zdGFrZWRgIG9yIGBTbGFzaGVkYCBldmVudHMsIG1hcmtpbmcgdGhlIGVuZOhvZiB0aGUgYmF0Y2guIEEgbmV3IGJhdGNoIHdpbGwgYmUgY3JlYXRlZCB1cG9uIG5leHQgYmxvY2suNEludGVybmFsRXJyb3IABAToQW4gaW50ZXJuYWwgZXJyb3IgaGFwcGVuZWQuIE9wZXJhdGlvbnMgd2lsbCBiZSBwYXVzZWQgbm93LgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldNkHEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9uGHBhbGxldBRFdmVudAQEVAABEDxDYW5kaWRhdGVCYWNrZWQQAN0HAWRDYW5kaWRhdGVSZWNlaXB0PFQ6Okhhc2g+AACFBQEgSGVhZERhdGEAAOEHASRDb3JlSW5kZXgAAOUHAShHcm91cEluZGV4AAAEwEEgY2FuZGlkYXRlIHdhcyBiYWNrZWQuIGBbY2FuZGlkYXRlLCBoZWFkX2RhdGFdYERDYW5kaWRhdGVJbmNsdWRlZBAA3QcBZENhbmRpZGF0ZVJlY2VpcHQ8VDo6SGFzaD4AAIUFASBIZWFkRGF0YQAA4QcBJENvcmVJbmRleAAA5QcBKEdyb3VwSW5kZXgAAQTIQSBjYW5kaWRhdGUgd2FzIGluY2x1ZGVkLiBgW2NhbmRpZGF0ZSwgaGVhZF9kYXRhXWBEQ2FuZGlkYXRlVGltZWRPdXQMAN0HAWRDYW5kaWRhdGVSZWNlaXB0PFQ6Okhhc2g+AACFBQEgSGVhZERhdGEAAOEHASRDb3JlSW5kZXgAAgS8QSBjYW5kaWRhdGUgdGltZWQgb3V0LiBgW2NhbmRpZGF0ZSwgaGVhZF9kYXRhXWBYVXB3YXJkTWVzc2FnZXNSZWNlaXZlZAgBEGZyb225AgEYUGFyYUlkAAEUY291bnQQAQx1MzIAAwT4U29tZSB1cHdhcmQgbWVzc2FnZXMgaGF2ZSBiZWVuIHJlY2VpdmVkIGFuZCB3aWxsIGJlIHByb2Nlc3NlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXTdBwxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NkBDYW5kaWRhdGVSZWNlaXB0BARIATAACAEoZGVzY3JpcHRvclkFAVhDYW5kaWRhdGVEZXNjcmlwdG9yPEg+AAFAY29tbWl0bWVudHNfaGFzaDABEEhhc2gAAOEHDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2JENvcmVJbmRleAAABAAQAQx1MzIAAOUHDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2KEdyb3VwSW5kZXgAAAQAEAEMdTMyAADpBxBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzGHBhbGxldBRFdmVudAABIEhDdXJyZW50Q29kZVVwZGF0ZWQEALkCARhQYXJhSWQAAATMQ3VycmVudCBjb2RlIGhhcyBiZWVuIHVwZGF0ZWQgZm9yIGEgUGFyYS4gYHBhcmFfaWRgSEN1cnJlbnRIZWFkVXBkYXRlZAQAuQIBGFBhcmFJZAABBMxDdXJyZW50IGhlYWQgaGFzIGJlZW4gdXBkYXRlZCBmb3IgYSBQYXJhLiBgcGFyYV9pZGBQQ29kZVVwZ3JhZGVTY2hlZHVsZWQEALkCARhQYXJhSWQAAgTcQSBjb2RlIHVwZ3JhZGUgaGFzIGJlZW4gc2NoZWR1bGVkIGZvciBhIFBhcmEuIGBwYXJhX2lkYDBOZXdIZWFkTm90ZWQEALkCARhQYXJhSWQAAwS8QSBuZXcgaGVhZCBoYXMgYmVlbiBub3RlZCBmb3IgYSBQYXJhLiBgcGFyYV9pZGAwQWN0aW9uUXVldWVkCAC5AgEYUGFyYUlkAAAQATBTZXNzaW9uSW5kZXgABATwQSBwYXJhIGhhcyBiZWVuIHF1ZXVlZCB0byBleGVjdXRlIHBlbmRpbmcgYWN0aW9ucy4gYHBhcmFfaWRgPFB2ZkNoZWNrU3RhcnRlZAgAZQUBSFZhbGlkYXRpb25Db2RlSGFzaAAAuQIBGFBhcmFJZAAFCFUBVGhlIGdpdmVuIHBhcmEgZWl0aGVyIGluaXRpYXRlZCBvciBzdWJzY3JpYmVkIHRvIGEgUFZGIGNoZWNrIGZvciB0aGUgZ2l2ZW4gdmFsaWRhdGlvbmxjb2RlLiBgY29kZV9oYXNoYCBgcGFyYV9pZGBAUHZmQ2hlY2tBY2NlcHRlZAgAZQUBSFZhbGlkYXRpb25Db2RlSGFzaAAAuQIBGFBhcmFJZAAGCBEBVGhlIGdpdmVuIHZhbGlkYXRpb24gY29kZSB3YXMgYWNjZXB0ZWQgYnkgdGhlIFBWRiBwcmUtY2hlY2tpbmcgdm90ZS5UYGNvZGVfaGFzaGAgYHBhcmFfaWRgQFB2ZkNoZWNrUmVqZWN0ZWQIAGUFAUhWYWxpZGF0aW9uQ29kZUhhc2gAALkCARhQYXJhSWQABwgRAVRoZSBnaXZlbiB2YWxpZGF0aW9uIGNvZGUgd2FzIHJlamVjdGVkIGJ5IHRoZSBQVkYgcHJlLWNoZWNraW5nIHZvdGUuVGBjb2RlX2hhc2hgIGBwYXJhX2lkYAR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldO0HEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcBhwYWxsZXQURXZlbnQEBFQAARxQT3BlbkNoYW5uZWxSZXF1ZXN0ZWQQARhzZW5kZXK5AgEYUGFyYUlkAAEkcmVjaXBpZW50uQIBGFBhcmFJZAABVHByb3Bvc2VkX21heF9jYXBhY2l0eRABDHUzMgABZHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemUQAQx1MzIAAARwT3BlbiBIUk1QIGNoYW5uZWwgcmVxdWVzdGVkLkxPcGVuQ2hhbm5lbENhbmNlbGVkCAEwYnlfcGFyYWNoYWluuQIBGFBhcmFJZAABKGNoYW5uZWxfaWTFBQE0SHJtcENoYW5uZWxJZAABBCkBQW4gSFJNUCBjaGFubmVsIHJlcXVlc3Qgc2VudCBieSB0aGUgcmVjZWl2ZXIgd2FzIGNhbmNlbGVkIGJ5IGVpdGhlciBwYXJ0eS5MT3BlbkNoYW5uZWxBY2NlcHRlZAgBGHNlbmRlcrkCARhQYXJhSWQAASRyZWNpcGllbnS5AgEYUGFyYUlkAAIEbE9wZW4gSFJNUCBjaGFubmVsIGFjY2VwdGVkLjRDaGFubmVsQ2xvc2VkCAEwYnlfcGFyYWNoYWluuQIBGFBhcmFJZAABKGNoYW5uZWxfaWTFBQE0SHJtcENoYW5uZWxJZAADBFBIUk1QIGNoYW5uZWwgY2xvc2VkLlhIcm1wQ2hhbm5lbEZvcmNlT3BlbmVkEAEYc2VuZGVyuQIBGFBhcmFJZAABJHJlY2lwaWVudLkCARhQYXJhSWQAAVRwcm9wb3NlZF9tYXhfY2FwYWNpdHkQAQx1MzIAAWRwcm9wb3NlZF9tYXhfbWVzc2FnZV9zaXplEAEMdTMyAAQErEFuIEhSTVAgY2hhbm5lbCB3YXMgb3BlbmVkIHZpYSBSb290IG9yaWdpbi5cSHJtcFN5c3RlbUNoYW5uZWxPcGVuZWQQARhzZW5kZXK5AgEYUGFyYUlkAAEkcmVjaXBpZW50uQIBGFBhcmFJZAABVHByb3Bvc2VkX21heF9jYXBhY2l0eRABDHUzMgABZHByb3Bvc2VkX21heF9tZXNzYWdlX3NpemUQAQx1MzIABQS8QW4gSFJNUCBjaGFubmVsIHdhcyBvcGVuZWQgd2l0aCBhIHN5c3RlbSBjaGFpbi5oT3BlbkNoYW5uZWxEZXBvc2l0c1VwZGF0ZWQIARhzZW5kZXK5AgEYUGFyYUlkAAEkcmVjaXBpZW50uQIBGFBhcmFJZAAGBKBBbiBIUk1QIGNoYW5uZWwncyBkZXBvc2l0cyB3ZXJlIHVwZGF0ZWQuBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV08QcQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlcxhwYWxsZXQURXZlbnQEBFQAAQxARGlzcHV0ZUluaXRpYXRlZAgAmQUBNENhbmRpZGF0ZUhhc2gAAPUHATxEaXNwdXRlTG9jYXRpb24AAAQJAUEgZGlzcHV0ZSBoYXMgYmVlbiBpbml0aWF0ZWQuIFxbY2FuZGlkYXRlIGhhc2gsIGRpc3B1dGUgbG9jYXRpb25cXUBEaXNwdXRlQ29uY2x1ZGVkCACZBQE0Q2FuZGlkYXRlSGFzaAAA+QcBNERpc3B1dGVSZXN1bHQAAQjMQSBkaXNwdXRlIGhhcyBjb25jbHVkZWQgZm9yIG9yIGFnYWluc3QgYSBjYW5kaWRhdGUutGBcW3BhcmEgaWQsIGNhbmRpZGF0ZSBoYXNoLCBkaXNwdXRlIHJlc3VsdFxdYBhSZXZlcnQEABABREJsb2NrTnVtYmVyRm9yPFQ+AAIQ/EEgZGlzcHV0ZSBoYXMgY29uY2x1ZGVkIHdpdGggc3VwZXJtYWpvcml0eSBhZ2FpbnN0IGEgY2FuZGlkYXRlLg0BQmxvY2sgYXV0aG9ycyBzaG91bGQgbm8gbG9uZ2VyIGJ1aWxkIG9uIHRvcCBvZiB0aGlzIGhlYWQgYW5kIHNob3VsZAEBaW5zdGVhZCByZXZlcnQgdGhlIGJsb2NrIGF0IHRoZSBnaXZlbiBoZWlnaHQuIFRoaXMgc2hvdWxkIGJlIHRoZfxudW1iZXIgb2YgdGhlIGNoaWxkIG9mIHRoZSBsYXN0IGtub3duIHZhbGlkIGJsb2NrIGluIHRoZSBjaGFpbi4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXT1BwxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGRpc3B1dGVzPERpc3B1dGVMb2NhdGlvbgABCBRMb2NhbAAAABhSZW1vdGUAAQAA+QcMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyBkaXNwdXRlczREaXNwdXRlUmVzdWx0AAEIFFZhbGlkAAAAHEludmFsaWQAAQAA/QcQXHBvbGthZG90X3J1bnRpbWVfY29tbW9uPHBhcmFzX3JlZ2lzdHJhchhwYWxsZXQURXZlbnQEBFQAARAoUmVnaXN0ZXJlZAgBHHBhcmFfaWS5AgEYUGFyYUlkAAEcbWFuYWdlcgABMFQ6OkFjY291bnRJZAAAADBEZXJlZ2lzdGVyZWQEARxwYXJhX2lkuQIBGFBhcmFJZAABACBSZXNlcnZlZAgBHHBhcmFfaWS5AgEYUGFyYUlkAAEMd2hvAAEwVDo6QWNjb3VudElkAAIAHFN3YXBwZWQIARxwYXJhX2lkuQIBGFBhcmFJZAABIG90aGVyX2lkuQIBGFBhcmFJZAADAAR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldAEIEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhRzbG90cxhwYWxsZXQURXZlbnQEBFQAAQg4TmV3TGVhc2VQZXJpb2QEATBsZWFzZV9wZXJpb2QQAUBMZWFzZVBlcmlvZE9mPFQ+AAAEkEEgbmV3IGBbbGVhc2VfcGVyaW9kXWAgaXMgYmVnaW5uaW5nLhhMZWFzZWQYARxwYXJhX2lkuQIBGFBhcmFJZAABGGxlYXNlcgABMFQ6OkFjY291bnRJZAABMHBlcmlvZF9iZWdpbhABQExlYXNlUGVyaW9kT2Y8VD4AATBwZXJpb2RfY291bnQQAUBMZWFzZVBlcmlvZE9mPFQ+AAE4ZXh0cmFfcmVzZXJ2ZWQYATBCYWxhbmNlT2Y8VD4AATB0b3RhbF9hbW91bnQYATBCYWxhbmNlT2Y8VD4AAQw1AUEgcGFyYSBoYXMgd29uIHRoZSByaWdodCB0byBhIGNvbnRpbnVvdXMgc2V0IG9mIGxlYXNlIHBlcmlvZHMgYXMgYSBwYXJhY2hhaW4uRQFGaXJzdCBiYWxhbmNlIGlzIGFueSBleHRyYSBhbW91bnQgcmVzZXJ2ZWQgb24gdG9wIG9mIHRoZSBwYXJhJ3MgZXhpc3RpbmcgZGVwb3NpdC6wU2Vjb25kIGJhbGFuY2UgaXMgdGhlIHRvdGFsIGFtb3VudCByZXNlcnZlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQFCBBccG9sa2Fkb3RfcnVudGltZV9jb21tb24gYXVjdGlvbnMYcGFsbGV0FEV2ZW50BARUAAEcOEF1Y3Rpb25TdGFydGVkDAE0YXVjdGlvbl9pbmRleBABMEF1Y3Rpb25JbmRleAABMGxlYXNlX3BlcmlvZBABQExlYXNlUGVyaW9kT2Y8VD4AARhlbmRpbmcQAURCbG9ja051bWJlckZvcjxUPgAACEkBQW4gYXVjdGlvbiBzdGFydGVkLiBQcm92aWRlcyBpdHMgaW5kZXggYW5kIHRoZSBibG9jayBudW1iZXIgd2hlcmUgaXQgd2lsbCBiZWdpbiB0bxUBY2xvc2UgYW5kIHRoZSBmaXJzdCBsZWFzZSBwZXJpb2Qgb2YgdGhlIHF1YWRydXBsZXQgdGhhdCBpcyBhdWN0aW9uZWQuNEF1Y3Rpb25DbG9zZWQEATRhdWN0aW9uX2luZGV4EAEwQXVjdGlvbkluZGV4AAEEuEFuIGF1Y3Rpb24gZW5kZWQuIEFsbCBmdW5kcyBiZWNvbWUgdW5yZXNlcnZlZC4gUmVzZXJ2ZWQMARhiaWRkZXIAATBUOjpBY2NvdW50SWQAAThleHRyYV9yZXNlcnZlZBgBMEJhbGFuY2VPZjxUPgABMHRvdGFsX2Ftb3VudBgBMEJhbGFuY2VPZjxUPgACCEkBRnVuZHMgd2VyZSByZXNlcnZlZCBmb3IgYSB3aW5uaW5nIGJpZC4gRmlyc3QgYmFsYW5jZSBpcyB0aGUgZXh0cmEgYW1vdW50IHJlc2VydmVkLlBTZWNvbmQgaXMgdGhlIHRvdGFsLihVbnJlc2VydmVkCAEYYmlkZGVyAAEwVDo6QWNjb3VudElkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAMEKQFGdW5kcyB3ZXJlIHVucmVzZXJ2ZWQgc2luY2UgYmlkZGVyIGlzIG5vIGxvbmdlciBhY3RpdmUuIGBbYmlkZGVyLCBhbW91bnRdYEhSZXNlcnZlQ29uZmlzY2F0ZWQMARxwYXJhX2lkuQIBGFBhcmFJZAABGGxlYXNlcgABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgAECFUBU29tZW9uZSBhdHRlbXB0ZWQgdG8gbGVhc2UgdGhlIHNhbWUgc2xvdCB0d2ljZSBmb3IgYSBwYXJhY2hhaW4uIFRoZSBhbW91bnQgaXMgaGVsZCBpbrhyZXNlcnZlIGJ1dCBubyBwYXJhY2hhaW4gc2xvdCBoYXMgYmVlbiBsZWFzZWQuLEJpZEFjY2VwdGVkFAEYYmlkZGVyAAEwVDo6QWNjb3VudElkAAEccGFyYV9pZLkCARhQYXJhSWQAARhhbW91bnQYATBCYWxhbmNlT2Y8VD4AAShmaXJzdF9zbG90EAFATGVhc2VQZXJpb2RPZjxUPgABJGxhc3Rfc2xvdBABQExlYXNlUGVyaW9kT2Y8VD4ABQTIQSBuZXcgYmlkIGhhcyBiZWVuIGFjY2VwdGVkIGFzIHRoZSBjdXJyZW50IHdpbm5lci40V2lubmluZ09mZnNldAgBNGF1Y3Rpb25faW5kZXgQATBBdWN0aW9uSW5kZXgAATBibG9ja19udW1iZXIQAURCbG9ja051bWJlckZvcjxUPgAGCFkBVGhlIHdpbm5pbmcgb2Zmc2V0IHdhcyBjaG9zZW4gZm9yIGFuIGF1Y3Rpb24uIFRoaXMgd2lsbCBtYXAgaW50byB0aGUgYFdpbm5pbmdgIHN0b3JhZ2UQbWFwLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldAkIEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbiRjcm93ZGxvYW4YcGFsbGV0FEV2ZW50BARUAAEoHENyZWF0ZWQEARxwYXJhX2lkuQIBGFBhcmFJZAAABIxDcmVhdGUgYSBuZXcgY3Jvd2Rsb2FuaW5nIGNhbXBhaWduLixDb250cmlidXRlZAwBDHdobwABMFQ6OkFjY291bnRJZAABKGZ1bmRfaW5kZXi5AgEYUGFyYUlkAAEYYW1vdW50GAEwQmFsYW5jZU9mPFQ+AAEEcENvbnRyaWJ1dGVkIHRvIGEgY3Jvd2Qgc2FsZS4gV2l0aGRyZXcMAQx3aG8AATBUOjpBY2NvdW50SWQAAShmdW5kX2luZGV4uQIBGFBhcmFJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgACBJxXaXRoZHJldyBmdWxsIGJhbGFuY2Ugb2YgYSBjb250cmlidXRvci5EUGFydGlhbGx5UmVmdW5kZWQEARxwYXJhX2lkuQIBGFBhcmFJZAADCC0BVGhlIGxvYW5zIGluIGEgZnVuZCBoYXZlIGJlZW4gcGFydGlhbGx5IGRpc3NvbHZlZCwgaS5lLiB0aGVyZSBhcmUgc29tZSBsZWZ0tG92ZXIgY2hpbGQga2V5cyB0aGF0IHN0aWxsIG5lZWQgdG8gYmUga2lsbGVkLixBbGxSZWZ1bmRlZAQBHHBhcmFfaWS5AgEYUGFyYUlkAAQEnEFsbCBsb2FucyBpbiBhIGZ1bmQgaGF2ZSBiZWVuIHJlZnVuZGVkLiREaXNzb2x2ZWQEARxwYXJhX2lkuQIBGFBhcmFJZAAFBEhGdW5kIGlzIGRpc3NvbHZlZC48SGFuZGxlQmlkUmVzdWx0CAEccGFyYV9pZLkCARhQYXJhSWQAARhyZXN1bHSIAThEaXNwYXRjaFJlc3VsdAAGBPRUaGUgcmVzdWx0IG9mIHRyeWluZyB0byBzdWJtaXQgYSBuZXcgYmlkIHRvIHRoZSBTbG90cyBwYWxsZXQuGEVkaXRlZAQBHHBhcmFfaWS5AgEYUGFyYUlkAAcExFRoZSBjb25maWd1cmF0aW9uIHRvIGEgY3Jvd2Rsb2FuIGhhcyBiZWVuIGVkaXRlZC4sTWVtb1VwZGF0ZWQMAQx3aG8AATBUOjpBY2NvdW50SWQAARxwYXJhX2lkuQIBGFBhcmFJZAABEG1lbW80ARxWZWM8dTg+AAgEYEEgbWVtbyBoYXMgYmVlbiB1cGRhdGVkLjxBZGRlZFRvTmV3UmFpc2UEARxwYXJhX2lkuQIBGFBhcmFJZAAJBKBBIHBhcmFjaGFpbiBoYXMgYmVlbiBtb3ZlZCB0byBgTmV3UmFpc2VgBHxUaGUgYEV2ZW50YCBlbnVtIG9mIHRoaXMgcGFsbGV0DQgMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQURXZlbnQEBFQAARAgTWlncmF0ZWQMAQx0b3AQAQx1MzIAARRjaGlsZBABDHUzMgABHGNvbXB1dGURCAFATWlncmF0aW9uQ29tcHV0ZQAACDkBR2l2ZW4gbnVtYmVyIG9mIGAodG9wLCBjaGlsZClgIGtleXMgd2VyZSBtaWdyYXRlZCByZXNwZWN0aXZlbHksIHdpdGggdGhlIGdpdmVuKGBjb21wdXRlYC4cU2xhc2hlZAgBDHdobwABMFQ6OkFjY291bnRJZAABGGFtb3VudBgBMEJhbGFuY2VPZjxUPgABBLRTb21lIGFjY291bnQgZ290IHNsYXNoZWQgYnkgdGhlIGdpdmVuIGFtb3VudC5UQXV0b01pZ3JhdGlvbkZpbmlzaGVkAAIEhFRoZSBhdXRvIG1pZ3JhdGlvbiB0YXNrIGZpbmlzaGVkLhhIYWx0ZWQEARRlcnJvchUIASBFcnJvcjxUPgADBOxNaWdyYXRpb24gZ290IGhhbHRlZCBkdWUgdG8gYW4gZXJyb3Igb3IgbWlzcy1jb25maWd1cmF0aW9uLgRwSW5uZXIgZXZlbnRzIG9mIHRoaXMgcGFsbGV0LhEIDGxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb24YcGFsbGV0QE1pZ3JhdGlvbkNvbXB1dGUAAQgYU2lnbmVkAAAAEEF1dG8AAQAAFQgMbHBhbGxldF9zdGF0ZV90cmllX21pZ3JhdGlvbhhwYWxsZXQURXJyb3IEBFQAARg8TWF4U2lnbmVkTGltaXRzAAAEgE1heCBzaWduZWQgbGltaXRzIG5vdCByZXNwZWN0ZWQuKEtleVRvb0xvbmcAARy0QSBrZXkgd2FzIGxvbmdlciB0aGFuIHRoZSBjb25maWd1cmVkIG1heGltdW0uABEBVGhpcyBtZWFucyB0aGF0IHRoZSBtaWdyYXRpb24gaGFsdGVkIGF0IHRoZSBjdXJyZW50IFtgUHJvZ3Jlc3NgXSBhbmQBAWNhbiBiZSByZXN1bWVkIHdpdGggYSBsYXJnZXIgW2BjcmF0ZTo6Q29uZmlnOjpNYXhLZXlMZW5gXSB2YWx1ZS4hAVJldHJ5aW5nIHdpdGggdGhlIHNhbWUgW2BjcmF0ZTo6Q29uZmlnOjpNYXhLZXlMZW5gXSB2YWx1ZSB3aWxsIG5vdCB3b3JrLkUBVGhlIHZhbHVlIHNob3VsZCBvbmx5IGJlIGluY3JlYXNlZCB0byBhdm9pZCBhIHN0b3JhZ2UgbWlncmF0aW9uIGZvciB0aGUgY3VycmVudGx5kHN0b3JlZCBbYGNyYXRlOjpQcm9ncmVzczo6TGFzdEtleWBdLjhOb3RFbm91Z2hGdW5kcwACBJRzdWJtaXR0ZXIgZG9lcyBub3QgaGF2ZSBlbm91Z2ggZnVuZHMuKEJhZFdpdG5lc3MAAwRoQmFkIHdpdG5lc3MgZGF0YSBwcm92aWRlZC5kU2lnbmVkTWlncmF0aW9uTm90QWxsb3dlZAAEBCUBU2lnbmVkIG1pZ3JhdGlvbiBpcyBub3QgYWxsb3dlZCBiZWNhdXNlIHRoZSBtYXhpbXVtIGxpbWl0IGlzIG5vdCBzZXQgeWV0LjBCYWRDaGlsZFJvb3QABQRgQmFkIGNoaWxkIHJvb3QgcHJvdmlkZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LhkIDChwYWxsZXRfeGNtGHBhbGxldBRFdmVudAQEVAABYCRBdHRlbXB0ZWQEARxvdXRjb21lHQgBUHhjbTo6bGF0ZXN0OjpPdXRjb21lAAAEqEV4ZWN1dGlvbiBvZiBhbiBYQ00gbWVzc2FnZSB3YXMgYXR0ZW1wdGVkLhBTZW50EAEYb3JpZ2luMQEBIExvY2F0aW9uAAEsZGVzdGluYXRpb24xAQEgTG9jYXRpb24AARxtZXNzYWdlxQYBHFhjbTwoKT4AAShtZXNzYWdlX2lkBAEcWGNtSGFzaAABBFxBIFhDTSBtZXNzYWdlIHdhcyBzZW50LkhVbmV4cGVjdGVkUmVzcG9uc2UIARhvcmlnaW4xAQEgTG9jYXRpb24AASBxdWVyeV9pZCwBHFF1ZXJ5SWQAAgxZAVF1ZXJ5IHJlc3BvbnNlIHJlY2VpdmVkIHdoaWNoIGRvZXMgbm90IG1hdGNoIGEgcmVnaXN0ZXJlZCBxdWVyeS4gVGhpcyBtYXkgYmUgYmVjYXVzZSBhVQFtYXRjaGluZyBxdWVyeSB3YXMgbmV2ZXIgcmVnaXN0ZXJlZCwgaXQgbWF5IGJlIGJlY2F1c2UgaXQgaXMgYSBkdXBsaWNhdGUgcmVzcG9uc2UsIG9ycGJlY2F1c2UgdGhlIHF1ZXJ5IHRpbWVkIG91dC40UmVzcG9uc2VSZWFkeQgBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABIHJlc3BvbnNl5QYBIFJlc3BvbnNlAAMIXQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgaXMgcmVhZHkgZm9yIHRha2luZyB3aXRoIGB0YWtlX3Jlc3BvbnNlYC4gVGhlcmUgaXOAbm8gcmVnaXN0ZXJlZCBub3RpZmljYXRpb24gY2FsbC4gTm90aWZpZWQMASBxdWVyeV9pZCwBHFF1ZXJ5SWQAATBwYWxsZXRfaW5kZXgIAQh1OAABKGNhbGxfaW5kZXgIAQh1OAAECFkBUXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYW5kIHF1ZXJ5IGlzIHJlbW92ZWQuIFRoZSByZWdpc3RlcmVkIG5vdGlmaWNhdGlvbiBoYXOoYmVlbiBkaXNwYXRjaGVkIGFuZCBleGVjdXRlZCBzdWNjZXNzZnVsbHkuQE5vdGlmeU92ZXJ3ZWlnaHQUASBxdWVyeV9pZCwBHFF1ZXJ5SWQAATBwYWxsZXRfaW5kZXgIAQh1OAABKGNhbGxfaW5kZXgIAQh1OAABNGFjdHVhbF93ZWlnaHQkARhXZWlnaHQAAUxtYXhfYnVkZ2V0ZWRfd2VpZ2h0JAEYV2VpZ2h0AAUMSQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgcXVlcnkgaXMgcmVtb3ZlZC4gVGhlIHJlZ2lzdGVyZWQgbm90aWZpY2F0aW9uWQFjb3VsZCBub3QgYmUgZGlzcGF0Y2hlZCBiZWNhdXNlIHRoZSBkaXNwYXRjaCB3ZWlnaHQgaXMgZ3JlYXRlciB0aGFuIHRoZSBtYXhpbXVtIHdlaWdodORvcmlnaW5hbGx5IGJ1ZGdldGVkIGJ5IHRoaXMgcnVudGltZSBmb3IgdGhlIHF1ZXJ5IHJlc3VsdC5MTm90aWZ5RGlzcGF0Y2hFcnJvcgwBIHF1ZXJ5X2lkLAEcUXVlcnlJZAABMHBhbGxldF9pbmRleAgBCHU4AAEoY2FsbF9pbmRleAgBCHU4AAYIVQFRdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBhbmQgcXVlcnkgaXMgcmVtb3ZlZC4gVGhlcmUgd2FzIGEgZ2VuZXJhbCBlcnJvciB3aXRoiGRpc3BhdGNoaW5nIHRoZSBub3RpZmljYXRpb24gY2FsbC5ITm90aWZ5RGVjb2RlRmFpbGVkDAEgcXVlcnlfaWQsARxRdWVyeUlkAAEwcGFsbGV0X2luZGV4CAEIdTgAAShjYWxsX2luZGV4CAEIdTgABwxRAVF1ZXJ5IHJlc3BvbnNlIGhhcyBiZWVuIHJlY2VpdmVkIGFuZCBxdWVyeSBpcyByZW1vdmVkLiBUaGUgZGlzcGF0Y2ggd2FzIHVuYWJsZSB0byBiZVkBZGVjb2RlZCBpbnRvIGEgYENhbGxgOyB0aGlzIG1pZ2h0IGJlIGR1ZSB0byBkaXNwYXRjaCBmdW5jdGlvbiBoYXZpbmcgYSBzaWduYXR1cmUgd2hpY2iUaXMgbm90IGAob3JpZ2luLCBRdWVyeUlkLCBSZXNwb25zZSlgLkBJbnZhbGlkUmVzcG9uZGVyDAEYb3JpZ2luMQEBIExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkAAFEZXhwZWN0ZWRfbG9jYXRpb275BgFAT3B0aW9uPExvY2F0aW9uPgAIDFkBRXhwZWN0ZWQgcXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVjZWl2ZWQgYnV0IHRoZSBvcmlnaW4gbG9jYXRpb24gb2YgdGhlIHJlc3BvbnNlIGRvZXNVAW5vdCBtYXRjaCB0aGF0IGV4cGVjdGVkLiBUaGUgcXVlcnkgcmVtYWlucyByZWdpc3RlcmVkIGZvciBhIGxhdGVyLCB2YWxpZCwgcmVzcG9uc2UgdG9sYmUgcmVjZWl2ZWQgYW5kIGFjdGVkIHVwb24uXEludmFsaWRSZXNwb25kZXJWZXJzaW9uCAEYb3JpZ2luMQEBIExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkAAkcUQFFeHBlY3RlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBidXQgdGhlIGV4cGVjdGVkIG9yaWdpbiBsb2NhdGlvbiBwbGFjZWQgaW5NAXN0b3JhZ2UgYnkgdGhpcyBydW50aW1lIHByZXZpb3VzbHkgY2Fubm90IGJlIGRlY29kZWQuIFRoZSBxdWVyeSByZW1haW5zIHJlZ2lzdGVyZWQuAEEBVGhpcyBpcyB1bmV4cGVjdGVkIChzaW5jZSBhIGxvY2F0aW9uIHBsYWNlZCBpbiBzdG9yYWdlIGluIGEgcHJldmlvdXNseSBleGVjdXRpbmdNAXJ1bnRpbWUgc2hvdWxkIGJlIHJlYWRhYmxlIHByaW9yIHRvIHF1ZXJ5IHRpbWVvdXQpIGFuZCBkYW5nZXJvdXMgc2luY2UgdGhlIHBvc3NpYmx5WQF2YWxpZCByZXNwb25zZSB3aWxsIGJlIGRyb3BwZWQuIE1hbnVhbCBnb3Zlcm5hbmNlIGludGVydmVudGlvbiBpcyBwcm9iYWJseSBnb2luZyB0byBiZRxuZWVkZWQuNFJlc3BvbnNlVGFrZW4EASBxdWVyeV9pZCwBHFF1ZXJ5SWQACgTIUmVjZWl2ZWQgcXVlcnkgcmVzcG9uc2UgaGFzIGJlZW4gcmVhZCBhbmQgcmVtb3ZlZC40QXNzZXRzVHJhcHBlZAwBEGhhc2gwARBIMjU2AAEYb3JpZ2luMQEBIExvY2F0aW9uAAEYYXNzZXRzDQcBPFZlcnNpb25lZEFzc2V0cwALBLhTb21lIGFzc2V0cyBoYXZlIGJlZW4gcGxhY2VkIGluIGFuIGFzc2V0IHRyYXAuVFZlcnNpb25DaGFuZ2VOb3RpZmllZBABLGRlc3RpbmF0aW9uMQEBIExvY2F0aW9uAAEYcmVzdWx0EAEoWGNtVmVyc2lvbgABEGNvc3TRBgEYQXNzZXRzAAEobWVzc2FnZV9pZAQBHFhjbUhhc2gADAwlAUFuIFhDTSB2ZXJzaW9uIGNoYW5nZSBub3RpZmljYXRpb24gbWVzc2FnZSBoYXMgYmVlbiBhdHRlbXB0ZWQgdG8gYmUgc2VudC4A4FRoZSBjb3N0IG9mIHNlbmRpbmcgaXQgKGJvcm5lIGJ5IHRoZSBjaGFpbikgaXMgaW5jbHVkZWQuXFN1cHBvcnRlZFZlcnNpb25DaGFuZ2VkCAEgbG9jYXRpb24xAQEgTG9jYXRpb24AARx2ZXJzaW9uEAEoWGNtVmVyc2lvbgANCDkBVGhlIHN1cHBvcnRlZCB2ZXJzaW9uIG9mIGEgbG9jYXRpb24gaGFzIGJlZW4gY2hhbmdlZC4gVGhpcyBtaWdodCBiZSB0aHJvdWdoIGFuwGF1dG9tYXRpYyBub3RpZmljYXRpb24gb3IgYSBtYW51YWwgaW50ZXJ2ZW50aW9uLlBOb3RpZnlUYXJnZXRTZW5kRmFpbAwBIGxvY2F0aW9uMQEBIExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkAAEUZXJyb3KRBgEgWGNtRXJyb3IADghZAUEgZ2l2ZW4gbG9jYXRpb24gd2hpY2ggaGFkIGEgdmVyc2lvbiBjaGFuZ2Ugc3Vic2NyaXB0aW9uIHdhcyBkcm9wcGVkIG93aW5nIHRvIGFuIGVycm9yfHNlbmRpbmcgdGhlIG5vdGlmaWNhdGlvbiB0byBpdC5kTm90aWZ5VGFyZ2V0TWlncmF0aW9uRmFpbAgBIGxvY2F0aW9uaQEBRFZlcnNpb25lZExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkAA8IWQFBIGdpdmVuIGxvY2F0aW9uIHdoaWNoIGhhZCBhIHZlcnNpb24gY2hhbmdlIHN1YnNjcmlwdGlvbiB3YXMgZHJvcHBlZCBvd2luZyB0byBhbiBlcnJvcrRtaWdyYXRpbmcgdGhlIGxvY2F0aW9uIHRvIG91ciBuZXcgWENNIGZvcm1hdC5USW52YWxpZFF1ZXJpZXJWZXJzaW9uCAEYb3JpZ2luMQEBIExvY2F0aW9uAAEgcXVlcnlfaWQsARxRdWVyeUlkABAcVQFFeHBlY3RlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBidXQgdGhlIGV4cGVjdGVkIHF1ZXJpZXIgbG9jYXRpb24gcGxhY2VkIGluTQFzdG9yYWdlIGJ5IHRoaXMgcnVudGltZSBwcmV2aW91c2x5IGNhbm5vdCBiZSBkZWNvZGVkLiBUaGUgcXVlcnkgcmVtYWlucyByZWdpc3RlcmVkLgBBAVRoaXMgaXMgdW5leHBlY3RlZCAoc2luY2UgYSBsb2NhdGlvbiBwbGFjZWQgaW4gc3RvcmFnZSBpbiBhIHByZXZpb3VzbHkgZXhlY3V0aW5nTQFydW50aW1lIHNob3VsZCBiZSByZWFkYWJsZSBwcmlvciB0byBxdWVyeSB0aW1lb3V0KSBhbmQgZGFuZ2Vyb3VzIHNpbmNlIHRoZSBwb3NzaWJseVkBdmFsaWQgcmVzcG9uc2Ugd2lsbCBiZSBkcm9wcGVkLiBNYW51YWwgZ292ZXJuYW5jZSBpbnRlcnZlbnRpb24gaXMgcHJvYmFibHkgZ29pbmcgdG8gYmUcbmVlZGVkLjhJbnZhbGlkUXVlcmllchABGG9yaWdpbjEBASBMb2NhdGlvbgABIHF1ZXJ5X2lkLAEcUXVlcnlJZAABQGV4cGVjdGVkX3F1ZXJpZXIxAQEgTG9jYXRpb24AAVBtYXliZV9hY3R1YWxfcXVlcmllcvkGAUBPcHRpb248TG9jYXRpb24+ABEMXQFFeHBlY3RlZCBxdWVyeSByZXNwb25zZSBoYXMgYmVlbiByZWNlaXZlZCBidXQgdGhlIHF1ZXJpZXIgbG9jYXRpb24gb2YgdGhlIHJlc3BvbnNlIGRvZXNRAW5vdCBtYXRjaCB0aGUgZXhwZWN0ZWQuIFRoZSBxdWVyeSByZW1haW5zIHJlZ2lzdGVyZWQgZm9yIGEgbGF0ZXIsIHZhbGlkLCByZXNwb25zZSB0b2xiZSByZWNlaXZlZCBhbmQgYWN0ZWQgdXBvbi5QVmVyc2lvbk5vdGlmeVN0YXJ0ZWQMASxkZXN0aW5hdGlvbjEBASBMb2NhdGlvbgABEGNvc3TRBgEYQXNzZXRzAAEobWVzc2FnZV9pZAQBHFhjbUhhc2gAEghZAUEgcmVtb3RlIGhhcyByZXF1ZXN0ZWQgWENNIHZlcnNpb24gY2hhbmdlIG5vdGlmaWNhdGlvbiBmcm9tIHVzIGFuZCB3ZSBoYXZlIGhvbm9yZWQgaXQuHQFBIHZlcnNpb24gaW5mb3JtYXRpb24gbWVzc2FnZSBpcyBzZW50IHRvIHRoZW0gYW5kIGl0cyBjb3N0IGlzIGluY2x1ZGVkLlhWZXJzaW9uTm90aWZ5UmVxdWVzdGVkDAEsZGVzdGluYXRpb24xAQEgTG9jYXRpb24AARBjb3N00QYBGEFzc2V0cwABKG1lc3NhZ2VfaWQEARxYY21IYXNoABMEPQFXZSBoYXZlIHJlcXVlc3RlZCB0aGF0IGEgcmVtb3RlIGNoYWluIHNlbmQgdXMgWENNIHZlcnNpb24gY2hhbmdlIG5vdGlmaWNhdGlvbnMuYFZlcnNpb25Ob3RpZnlVbnJlcXVlc3RlZAwBLGRlc3RpbmF0aW9uMQEBIExvY2F0aW9uAAEQY29zdNEGARhBc3NldHMAAShtZXNzYWdlX2lkBAEcWGNtSGFzaAAUCCUBV2UgaGF2ZSByZXF1ZXN0ZWQgdGhhdCBhIHJlbW90ZSBjaGFpbiBzdG9wcyBzZW5kaW5nIHVzIFhDTSB2ZXJzaW9uIGNoYW5nZThub3RpZmljYXRpb25zLiBGZWVzUGFpZAgBGHBheWluZzEBASBMb2NhdGlvbgABEGZlZXPRBgEYQXNzZXRzABUEMQFGZWVzIHdlcmUgcGFpZCBmcm9tIGEgbG9jYXRpb24gZm9yIGFuIG9wZXJhdGlvbiAob2Z0ZW4gZm9yIHVzaW5nIGBTZW5kWGNtYCkuNEFzc2V0c0NsYWltZWQMARBoYXNoMAEQSDI1NgABGG9yaWdpbjEBASBMb2NhdGlvbgABGGFzc2V0cw0HATxWZXJzaW9uZWRBc3NldHMAFgTAU29tZSBhc3NldHMgaGF2ZSBiZWVuIGNsYWltZWQgZnJvbSBhbiBhc3NldCB0cmFwYFZlcnNpb25NaWdyYXRpb25GaW5pc2hlZAQBHHZlcnNpb24QAShYY21WZXJzaW9uABcEhEEgWENNIHZlcnNpb24gbWlncmF0aW9uIGZpbmlzaGVkLgR8VGhlIGBFdmVudGAgZW51bSBvZiB0aGlzIHBhbGxldB0IECxzdGFnaW5nX3hjbQh2NBh0cmFpdHMcT3V0Y29tZQABDCBDb21wbGV0ZQQBEHVzZWQkARhXZWlnaHQAAAAoSW5jb21wbGV0ZQgBEHVzZWQkARhXZWlnaHQAARRlcnJvcpEGARRFcnJvcgABABRFcnJvcgQBFGVycm9ykQYBFEVycm9yAAIAACEIDFBwYWxsZXRfbWVzc2FnZV9xdWV1ZRhwYWxsZXQURXZlbnQEBFQAARBAUHJvY2Vzc2luZ0ZhaWxlZAwBCGlkMAEQSDI1NgSUVGhlIGBibGFrZTJfMjU2YCBoYXNoIG9mIHRoZSBtZXNzYWdlLgEYb3JpZ2luSQcBSE1lc3NhZ2VPcmlnaW5PZjxUPgRkVGhlIHF1ZXVlIG9mIHRoZSBtZXNzYWdlLgEUZXJyb3IlCAFMUHJvY2Vzc01lc3NhZ2VFcnJvchBgVGhlIGVycm9yIHRoYXQgb2NjdXJyZWQuAEkBVGhpcyBlcnJvciBpcyBwcmV0dHkgb3BhcXVlLiBNb3JlIGZpbmUtZ3JhaW5lZCBlcnJvcnMgbmVlZCB0byBiZSBlbWl0dGVkIGFzIGV2ZW50c2hieSB0aGUgYE1lc3NhZ2VQcm9jZXNzb3JgLgAEVQFNZXNzYWdlIGRpc2NhcmRlZCBkdWUgdG8gYW4gZXJyb3IgaW4gdGhlIGBNZXNzYWdlUHJvY2Vzc29yYCAodXN1YWxseSBhIGZvcm1hdCBlcnJvcikuJFByb2Nlc3NlZBABCGlkMAEQSDI1NgSUVGhlIGBibGFrZTJfMjU2YCBoYXNoIG9mIHRoZSBtZXNzYWdlLgEYb3JpZ2luSQcBSE1lc3NhZ2VPcmlnaW5PZjxUPgRkVGhlIHF1ZXVlIG9mIHRoZSBtZXNzYWdlLgEsd2VpZ2h0X3VzZWQkARhXZWlnaHQEwEhvdyBtdWNoIHdlaWdodCB3YXMgdXNlZCB0byBwcm9jZXNzIHRoZSBtZXNzYWdlLgEcc3VjY2Vzc3gBEGJvb2wYiFdoZXRoZXIgdGhlIG1lc3NhZ2Ugd2FzIHByb2Nlc3NlZC4ASQFOb3RlIHRoYXQgdGhpcyBkb2VzIG5vdCBtZWFuIHRoYXQgdGhlIHVuZGVybHlpbmcgYE1lc3NhZ2VQcm9jZXNzb3JgIHdhcyBpbnRlcm5hbGx5NQFzdWNjZXNzZnVsLiBJdCAqc29sZWx5KiBtZWFucyB0aGF0IHRoZSBNUSBwYWxsZXQgd2lsbCB0cmVhdCB0aGlzIGFzIGEgc3VjY2Vzc00BY29uZGl0aW9uIGFuZCBkaXNjYXJkIHRoZSBtZXNzYWdlLiBBbnkgaW50ZXJuYWwgZXJyb3IgbmVlZHMgdG8gYmUgZW1pdHRlZCBhcyBldmVudHNoYnkgdGhlIGBNZXNzYWdlUHJvY2Vzc29yYC4BBFRNZXNzYWdlIGlzIHByb2Nlc3NlZC5IT3ZlcndlaWdodEVucXVldWVkEAEIaWQEASBbdTg7IDMyXQSUVGhlIGBibGFrZTJfMjU2YCBoYXNoIG9mIHRoZSBtZXNzYWdlLgEYb3JpZ2luSQcBSE1lc3NhZ2VPcmlnaW5PZjxUPgRkVGhlIHF1ZXVlIG9mIHRoZSBtZXNzYWdlLgEocGFnZV9pbmRleBABJFBhZ2VJbmRleARgVGhlIHBhZ2Ugb2YgdGhlIG1lc3NhZ2UuATRtZXNzYWdlX2luZGV4EAEcVDo6U2l6ZQSkVGhlIGluZGV4IG9mIHRoZSBtZXNzYWdlIHdpdGhpbiB0aGUgcGFnZS4CBIxNZXNzYWdlIHBsYWNlZCBpbiBvdmVyd2VpZ2h0IHF1ZXVlLihQYWdlUmVhcGVkCAEYb3JpZ2luSQcBSE1lc3NhZ2VPcmlnaW5PZjxUPgRYVGhlIHF1ZXVlIG9mIHRoZSBwYWdlLgEUaW5kZXgQASRQYWdlSW5kZXgEWFRoZSBpbmRleCBvZiB0aGUgcGFnZS4DBFRUaGlzIHBhZ2Ugd2FzIHJlYXBlZC4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQlCBA0ZnJhbWVfc3VwcG9ydBh0cmFpdHMgbWVzc2FnZXNMUHJvY2Vzc01lc3NhZ2VFcnJvcgABFCRCYWRGb3JtYXQAAAAcQ29ycnVwdAABACxVbnN1cHBvcnRlZAACAChPdmVyd2VpZ2h0BAAkARhXZWlnaHQAAwAUWWllbGQABAAAKQgMRHBhbGxldF9hc3NldF9yYXRlGHBhbGxldBRFdmVudAQEVAABDEBBc3NldFJhdGVDcmVhdGVkCAEoYXNzZXRfa2luZAUBATBUOjpBc3NldEtpbmQAARByYXRlVQcBJEZpeGVkVTEyOAAAAEBBc3NldFJhdGVSZW1vdmVkBAEoYXNzZXRfa2luZAUBATBUOjpBc3NldEtpbmQAAQBAQXNzZXRSYXRlVXBkYXRlZAwBKGFzc2V0X2tpbmQFAQEwVDo6QXNzZXRLaW5kAAEMb2xkVQcBJEZpeGVkVTEyOAABDG5ld1UHASRGaXhlZFUxMjgAAgAEfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQtCBBccG9sa2Fkb3RfcnVudGltZV9jb21tb25EaWRlbnRpdHlfbWlncmF0b3IYcGFsbGV0FEV2ZW50BARUAAEIOElkZW50aXR5UmVhcGVkBAEMd2hvAAEwVDo6QWNjb3VudElkAAAE4FRoZSBpZGVudGl0eSBhbmQgYWxsIHN1YiBhY2NvdW50cyB3ZXJlIHJlYXBlZCBmb3IgYHdob2AuOERlcG9zaXRVcGRhdGVkDAEMd2hvAAEwVDo6QWNjb3VudElkAAEgaWRlbnRpdHkYATBCYWxhbmNlT2Y8VD4AARBzdWJzGAEwQmFsYW5jZU9mPFQ+AAEIQQFUaGUgZGVwb3NpdHMgaGVsZCBmb3IgYHdob2Agd2VyZSB1cGRhdGVkLiBgaWRlbnRpdHlgIGlzIHRoZSBuZXcgZGVwb3NpdCBoZWxkIGZvch0BaWRlbnRpdHkgaW5mbywgYW5kIGBzdWJzYCBpcyB0aGUgbmV3IGRlcG9zaXQgaGVsZCBmb3IgdGhlIHN1Yi1hY2NvdW50cy4EfFRoZSBgRXZlbnRgIGVudW0gb2YgdGhpcyBwYWxsZXQxCAgwZnJhbWVfc3lzdGVtFFBoYXNlAAEMOEFwcGx5RXh0cmluc2ljBAAQAQx1MzIAAAAwRmluYWxpemF0aW9uAAEAOEluaXRpYWxpemF0aW9uAAIAADUIAAACgAA5CAgwZnJhbWVfc3lzdGVtWExhc3RSdW50aW1lVXBncmFkZUluZm8AAAgBMHNwZWNfdmVyc2lvbhUBAUxjb2RlYzo6Q29tcGFjdDx1MzI+AAEkc3BlY19uYW1lPQgBZHNwX3J1bnRpbWU6OlJ1bnRpbWVTdHJpbmcAAD0IAAAFAgBBCAgwZnJhbWVfc3lzdGVtYENvZGVVcGdyYWRlQXV0aG9yaXphdGlvbgQEVAAACAEkY29kZV9oYXNoMAEcVDo6SGFzaAABNGNoZWNrX3ZlcnNpb254ARBib29sAABFCAwwZnJhbWVfc3lzdGVtGGxpbWl0czBCbG9ja1dlaWdodHMAAAwBKGJhc2VfYmxvY2skARhXZWlnaHQAASRtYXhfYmxvY2skARhXZWlnaHQAASRwZXJfY2xhc3NJCAGEUGVyRGlzcGF0Y2hDbGFzczxXZWlnaHRzUGVyQ2xhc3M+AABJCAw0ZnJhbWVfc3VwcG9ydCBkaXNwYXRjaEBQZXJEaXNwYXRjaENsYXNzBARUAU0IAAwBGG5vcm1hbE0IAQRUAAEsb3BlcmF0aW9uYWxNCAEEVAABJG1hbmRhdG9yeU0IAQRUAABNCAwwZnJhbWVfc3lzdGVtGGxpbWl0czxXZWlnaHRzUGVyQ2xhc3MAABABOGJhc2VfZXh0cmluc2ljJAEYV2VpZ2h0AAE0bWF4X2V4dHJpbnNpY5UHAThPcHRpb248V2VpZ2h0PgABJG1heF90b3RhbJUHAThPcHRpb248V2VpZ2h0PgABIHJlc2VydmVklQcBOE9wdGlvbjxXZWlnaHQ+AABRCAwwZnJhbWVfc3lzdGVtGGxpbWl0cyxCbG9ja0xlbmd0aAAABAEMbWF4VQgBVFBlckRpc3BhdGNoQ2xhc3M8dTMyPgAAVQgMNGZyYW1lX3N1cHBvcnQgZGlzcGF0Y2hAUGVyRGlzcGF0Y2hDbGFzcwQEVAEQAAwBGG5vcm1hbBABBFQAASxvcGVyYXRpb25hbBABBFQAASRtYW5kYXRvcnkQAQRUAABZCAgoc3Bfd2VpZ2h0czxSdW50aW1lRGJXZWlnaHQAAAgBEHJlYWQsAQx1NjQAARR3cml0ZSwBDHU2NAAAXQgIKHNwX3ZlcnNpb244UnVudGltZVZlcnNpb24AACABJHNwZWNfbmFtZT0IATRSdW50aW1lU3RyaW5nAAEkaW1wbF9uYW1lPQgBNFJ1bnRpbWVTdHJpbmcAAURhdXRob3JpbmdfdmVyc2lvbhABDHUzMgABMHNwZWNfdmVyc2lvbhABDHUzMgABMGltcGxfdmVyc2lvbhABDHUzMgABEGFwaXNhCAEcQXBpc1ZlYwABTHRyYW5zYWN0aW9uX3ZlcnNpb24QAQx1MzIAATRzdGF0ZV92ZXJzaW9uCAEIdTgAAGEIBAxDb3cEBFQBZQgABABlCAAAAGUIAAACaQgAaQgAAAQIMQMQAG0IDDBmcmFtZV9zeXN0ZW0YcGFsbGV0FEVycm9yBARUAAEgPEludmFsaWRTcGVjTmFtZQAACBEBVGhlIG5hbWUgb2Ygc3BlY2lmaWNhdGlvbiBkb2VzIG5vdCBtYXRjaCBiZXR3ZWVuIHRoZSBjdXJyZW50IHJ1bnRpbWVQYW5kIHRoZSBuZXcgcnVudGltZS5oU3BlY1ZlcnNpb25OZWVkc1RvSW5jcmVhc2UAAQhBAVRoZSBzcGVjaWZpY2F0aW9uIHZlcnNpb24gaXMgbm90IGFsbG93ZWQgdG8gZGVjcmVhc2UgYmV0d2VlbiB0aGUgY3VycmVudCBydW50aW1lUGFuZCB0aGUgbmV3IHJ1bnRpbWUudEZhaWxlZFRvRXh0cmFjdFJ1bnRpbWVWZXJzaW9uAAIM7EZhaWxlZCB0byBleHRyYWN0IHRoZSBydW50aW1lIHZlcnNpb24gZnJvbSB0aGUgbmV3IHJ1bnRpbWUuAAkBRWl0aGVyIGNhbGxpbmcgYENvcmVfdmVyc2lvbmAgb3IgZGVjb2RpbmcgYFJ1bnRpbWVWZXJzaW9uYCBmYWlsZWQuTE5vbkRlZmF1bHRDb21wb3NpdGUAAwT8U3VpY2lkZSBjYWxsZWQgd2hlbiB0aGUgYWNjb3VudCBoYXMgbm9uLWRlZmF1bHQgY29tcG9zaXRlIGRhdGEuPE5vblplcm9SZWZDb3VudAAEBDUBVGhlcmUgaXMgYSBub24temVybyByZWZlcmVuY2UgY291bnQgcHJldmVudGluZyB0aGUgYWNjb3VudCBmcm9tIGJlaW5nIHB1cmdlZC4wQ2FsbEZpbHRlcmVkAAUE0FRoZSBvcmlnaW4gZmlsdGVyIHByZXZlbnQgdGhlIGNhbGwgdG8gYmUgZGlzcGF0Y2hlZC5ETm90aGluZ0F1dGhvcml6ZWQABgRYTm8gdXBncmFkZSBhdXRob3JpemVkLjBVbmF1dGhvcml6ZWQABwSUVGhlIHN1Ym1pdHRlZCBjb2RlIGlzIG5vdCBhdXRob3JpemVkLgRsRXJyb3IgZm9yIHRoZSBTeXN0ZW0gcGFsbGV0cQgMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAF1CARTAAAEAH0IARhWZWM8VD4AAHUIBBhPcHRpb24EBFQBeQgBCBBOb25lAAAAEFNvbWUEAHkIAAABAAB5CAhAcGFsbGV0X3NjaGVkdWxlciRTY2hlZHVsZWQUEE5hbWUBBBBDYWxsAZUBLEJsb2NrTnVtYmVyARA0UGFsbGV0c09yaWdpbgGpAiRBY2NvdW50SWQBAAAUASBtYXliZV9pZIQBME9wdGlvbjxOYW1lPgABIHByaW9yaXR5CAFIc2NoZWR1bGU6OlByaW9yaXR5AAEQY2FsbJUBARBDYWxsAAE4bWF5YmVfcGVyaW9kaWOxAQGUT3B0aW9uPHNjaGVkdWxlOjpQZXJpb2Q8QmxvY2tOdW1iZXI+PgABGG9yaWdpbqkCATRQYWxsZXRzT3JpZ2luAAB9CAAAAnUIAIEIDEBwYWxsZXRfc2NoZWR1bGVyGHBhbGxldBRFcnJvcgQEVAABFEBGYWlsZWRUb1NjaGVkdWxlAAAEZEZhaWxlZCB0byBzY2hlZHVsZSBhIGNhbGwgTm90Rm91bmQAAQR8Q2Fubm90IGZpbmQgdGhlIHNjaGVkdWxlZCBjYWxsLlxUYXJnZXRCbG9ja051bWJlckluUGFzdAACBKRHaXZlbiB0YXJnZXQgYmxvY2sgbnVtYmVyIGlzIGluIHRoZSBwYXN0LkhSZXNjaGVkdWxlTm9DaGFuZ2UAAwTwUmVzY2hlZHVsZSBmYWlsZWQgYmVjYXVzZSBpdCBkb2VzIG5vdCBjaGFuZ2Ugc2NoZWR1bGVkIHRpbWUuFE5hbWVkAAQE0EF0dGVtcHQgdG8gdXNlIGEgbm9uLW5hbWVkIGZ1bmN0aW9uIG9uIGEgbmFtZWQgdGFzay4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuhQgIPHBhbGxldF9wcmVpbWFnZUBPbGRSZXF1ZXN0U3RhdHVzCCRBY2NvdW50SWQBABxCYWxhbmNlARgBCCxVbnJlcXVlc3RlZAgBHGRlcG9zaXTBBAFQKEFjY291bnRJZCwgQmFsYW5jZSkAAQxsZW4QAQx1MzIAAAAkUmVxdWVzdGVkDAEcZGVwb3NpdIkIAXBPcHRpb248KEFjY291bnRJZCwgQmFsYW5jZSk+AAEUY291bnQQAQx1MzIAAQxsZW6NAgEsT3B0aW9uPHUzMj4AAQAAiQgEGE9wdGlvbgQEVAHBBAEIEE5vbmUAAAAQU29tZQQAwQQAAAEAAI0ICDxwYWxsZXRfcHJlaW1hZ2U0UmVxdWVzdFN0YXR1cwgkQWNjb3VudElkAQAYVGlja2V0AZEIAQgsVW5yZXF1ZXN0ZWQIARh0aWNrZXSVCAFMKEFjY291bnRJZCwgVGlja2V0KQABDGxlbhABDHUzMgAAACRSZXF1ZXN0ZWQMATBtYXliZV90aWNrZXSZCAFsT3B0aW9uPChBY2NvdW50SWQsIFRpY2tldCk+AAEUY291bnQQAQx1MzIAASRtYXliZV9sZW6NAgEsT3B0aW9uPHUzMj4AAQAAkQgUNGZyYW1lX3N1cHBvcnQYdHJhaXRzGHRva2VucyBmdW5naWJsZURIb2xkQ29uc2lkZXJhdGlvbhAEQQAERgAEUgAERAAABAAYAShGOjpCYWxhbmNlAACVCAAABAgAkQgAmQgEGE9wdGlvbgQEVAGVCAEIEE5vbmUAAAAQU29tZQQAlQgAAAEAAJ0IAAAECDAQAKEIDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAApQgMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQURXJyb3IEBFQAASAYVG9vQmlnAAAEoFByZWltYWdlIGlzIHRvbyBsYXJnZSB0byBzdG9yZSBvbi1jaGFpbi4wQWxyZWFkeU5vdGVkAAEEpFByZWltYWdlIGhhcyBhbHJlYWR5IGJlZW4gbm90ZWQgb24tY2hhaW4uNE5vdEF1dGhvcml6ZWQAAgTIVGhlIHVzZXIgaXMgbm90IGF1dGhvcml6ZWQgdG8gcGVyZm9ybSB0aGlzIGFjdGlvbi4gTm90Tm90ZWQAAwT8VGhlIHByZWltYWdlIGNhbm5vdCBiZSByZW1vdmVkIHNpbmNlIGl0IGhhcyBub3QgeWV0IGJlZW4gbm90ZWQuJFJlcXVlc3RlZAAEBAkBQSBwcmVpbWFnZSBtYXkgbm90IGJlIHJlbW92ZWQgd2hlbiB0aGVyZSBhcmUgb3V0c3RhbmRpbmcgcmVxdWVzdHMuME5vdFJlcXVlc3RlZAAFBC0BVGhlIHByZWltYWdlIHJlcXVlc3QgY2Fubm90IGJlIHJlbW92ZWQgc2luY2Ugbm8gb3V0c3RhbmRpbmcgcmVxdWVzdHMgZXhpc3QuHFRvb01hbnkABgRVAU1vcmUgdGhhbiBgTUFYX0hBU0hfVVBHUkFERV9CVUxLX0NPVU5UYCBoYXNoZXMgd2VyZSByZXF1ZXN0ZWQgdG8gYmUgdXBncmFkZWQgYXQgb25jZS4YVG9vRmV3AAcE5FRvbyBmZXcgaGFzaGVzIHdlcmUgcmVxdWVzdGVkIHRvIGJlIHVwZ3JhZGVkIChpLmUuIHplcm8pLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6pCAxMYm91bmRlZF9jb2xsZWN0aW9uc0B3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAa0IBFMAAAQAsQgBGFZlYzxUPgAArQgAAAQIyQEsALEIAAACrQgAtQgMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAEEBFMAAAQAuQgBGFZlYzxUPgAAuQgAAAIEAL0IBBhPcHRpb24EBFQBwQgBCBBOb25lAAAAEFNvbWUEAMEIAAABAADBCAxEc3BfY29uc2Vuc3VzX2JhYmUcZGlnZXN0cyRQcmVEaWdlc3QAAQwcUHJpbWFyeQQAxQgBQFByaW1hcnlQcmVEaWdlc3QAAQA4U2Vjb25kYXJ5UGxhaW4EAM0IAVxTZWNvbmRhcnlQbGFpblByZURpZ2VzdAACADBTZWNvbmRhcnlWUkYEANEIAVRTZWNvbmRhcnlWUkZQcmVEaWdlc3QAAwAAxQgMRHNwX2NvbnNlbnN1c19iYWJlHGRpZ2VzdHNAUHJpbWFyeVByZURpZ2VzdAAADAE8YXV0aG9yaXR5X2luZGV4EAFUc3VwZXI6OkF1dGhvcml0eUluZGV4AAEQc2xvdM0BARBTbG90AAE0dnJmX3NpZ25hdHVyZckIATBWcmZTaWduYXR1cmUAAMkIEBxzcF9jb3JlHHNyMjU1MTkMdnJmMFZyZlNpZ25hdHVyZQAACAEocHJlX291dHB1dAQBMFZyZlByZU91dHB1dAABFHByb29mdQIBIFZyZlByb29mAADNCAxEc3BfY29uc2Vuc3VzX2JhYmUcZGlnZXN0c1xTZWNvbmRhcnlQbGFpblByZURpZ2VzdAAACAE8YXV0aG9yaXR5X2luZGV4EAFUc3VwZXI6OkF1dGhvcml0eUluZGV4AAEQc2xvdM0BARBTbG90AADRCAxEc3BfY29uc2Vuc3VzX2JhYmUcZGlnZXN0c1RTZWNvbmRhcnlWUkZQcmVEaWdlc3QAAAwBPGF1dGhvcml0eV9pbmRleBABVHN1cGVyOjpBdXRob3JpdHlJbmRleAABEHNsb3TNAQEQU2xvdAABNHZyZl9zaWduYXR1cmXJCAEwVnJmU2lnbmF0dXJlAADVCAhEc3BfY29uc2Vuc3VzX2JhYmVYQmFiZUVwb2NoQ29uZmlndXJhdGlvbgAACAEEY9kBASgodTY0LCB1NjQpAAE0YWxsb3dlZF9zbG90c90BATBBbGxvd2VkU2xvdHMAANkIDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQB3QgEUwAABADhCAEYVmVjPFQ+AADdCAAABAgsEADhCAAAAt0IAOUIDCxwYWxsZXRfYmFiZRhwYWxsZXQURXJyb3IEBFQAARBgSW52YWxpZEVxdWl2b2NhdGlvblByb29mAAAEMQFBbiBlcXVpdm9jYXRpb24gcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuYEludmFsaWRLZXlPd25lcnNoaXBQcm9vZgABBDEBQSBrZXkgb3duZXJzaGlwIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLlhEdXBsaWNhdGVPZmZlbmNlUmVwb3J0AAIEFQFBIGdpdmVuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgdmFsaWQgYnV0IGFscmVhZHkgcHJldmlvdXNseSByZXBvcnRlZC5QSW52YWxpZENvbmZpZ3VyYXRpb24AAwSMU3VibWl0dGVkIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQu6QgAAAQMABh4AO0IDDhwYWxsZXRfaW5kaWNlcxhwYWxsZXQURXJyb3IEBFQAARQsTm90QXNzaWduZWQAAASMVGhlIGluZGV4IHdhcyBub3QgYWxyZWFkeSBhc3NpZ25lZC4gTm90T3duZXIAAQSkVGhlIGluZGV4IGlzIGFzc2lnbmVkIHRvIGFub3RoZXIgYWNjb3VudC4USW5Vc2UAAgRwVGhlIGluZGV4IHdhcyBub3QgYXZhaWxhYmxlLixOb3RUcmFuc2ZlcgADBMhUaGUgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBhY2NvdW50cyBhcmUgaWRlbnRpY2FsLiRQZXJtYW5lbnQABATQVGhlIGluZGV4IGlzIHBlcm1hbmVudCBhbmQgbWF5IG5vdCBiZSBmcmVlZC9jaGFuZ2VkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7xCAxMYm91bmRlZF9jb2xsZWN0aW9uc0B3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAfUIBFMAAAQA/QgBGFZlYzxUPgAA9QgMPHBhbGxldF9iYWxhbmNlcxR0eXBlcyxCYWxhbmNlTG9jawQcQmFsYW5jZQEYAAwBCGlkMQMBOExvY2tJZGVudGlmaWVyAAEYYW1vdW50GAEcQmFsYW5jZQABHHJlYXNvbnP5CAEcUmVhc29ucwAA+QgMPHBhbGxldF9iYWxhbmNlcxR0eXBlcxxSZWFzb25zAAEMDEZlZQAAABBNaXNjAAEADEFsbAACAAD9CAAAAvUIAAEJDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBBQkEUwAABAAJCQEYVmVjPFQ+AAAFCQw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzLFJlc2VydmVEYXRhCERSZXNlcnZlSWRlbnRpZmllcgExAxxCYWxhbmNlARgACAEIaWQxAwFEUmVzZXJ2ZUlkZW50aWZpZXIAARhhbW91bnQYARxCYWxhbmNlAAAJCQAAAgUJAA0JDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEQkEUwAABAAhCQEYVmVjPFQ+AAARCQw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzIElkQW1vdW50CAhJZAEVCRxCYWxhbmNlARgACAEIaWQVCQEISWQAARhhbW91bnQYARxCYWxhbmNlAAAVCQhAcG9sa2Fkb3RfcnVudGltZURSdW50aW1lSG9sZFJlYXNvbgABCCBQcmVpbWFnZQQAGQkBbHBhbGxldF9wcmVpbWFnZTo6SG9sZFJlYXNvbgAKAEhTdGF0ZVRyaWVNaWdyYXRpb24EAB0JAZxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb246OkhvbGRSZWFzb24AYgAAGQkMPHBhbGxldF9wcmVpbWFnZRhwYWxsZXQoSG9sZFJlYXNvbgABBCBQcmVpbWFnZQAAAAAdCQxscGFsbGV0X3N0YXRlX3RyaWVfbWlncmF0aW9uGHBhbGxldChIb2xkUmVhc29uAAEEPFNsYXNoRm9yTWlncmF0ZQAAAAAhCQAAAhEJACUJDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBKQkEUwAABAA1CQEYVmVjPFQ+AAApCQw8cGFsbGV0X2JhbGFuY2VzFHR5cGVzIElkQW1vdW50CAhJZAEtCRxCYWxhbmNlARgACAEIaWQtCQEISWQAARhhbW91bnQYARxCYWxhbmNlAAAtCQhAcG9sa2Fkb3RfcnVudGltZUxSdW50aW1lRnJlZXplUmVhc29uAAEEPE5vbWluYXRpb25Qb29scwQAMQkBlHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzOjpGcmVlemVSZWFzb24AJwAAMQkMXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzGHBhbGxldDBGcmVlemVSZWFzb24AAQQ4UG9vbE1pbkJhbGFuY2UAAAAANQkAAAIpCQA5CQw8cGFsbGV0X2JhbGFuY2VzGHBhbGxldBRFcnJvcggEVAAESQABMDhWZXN0aW5nQmFsYW5jZQAABJxWZXN0aW5nIGJhbGFuY2UgdG9vIGhpZ2ggdG8gc2VuZCB2YWx1ZS5UTGlxdWlkaXR5UmVzdHJpY3Rpb25zAAEEyEFjY291bnQgbGlxdWlkaXR5IHJlc3RyaWN0aW9ucyBwcmV2ZW50IHdpdGhkcmF3YWwuTEluc3VmZmljaWVudEJhbGFuY2UAAgR4QmFsYW5jZSB0b28gbG93IHRvIHNlbmQgdmFsdWUuSEV4aXN0ZW50aWFsRGVwb3NpdAADBOxWYWx1ZSB0b28gbG93IHRvIGNyZWF0ZSBhY2NvdW50IGR1ZSB0byBleGlzdGVudGlhbCBkZXBvc2l0LjRFeHBlbmRhYmlsaXR5AAQEkFRyYW5zZmVyL3BheW1lbnQgd291bGQga2lsbCBhY2NvdW50LlxFeGlzdGluZ1Zlc3RpbmdTY2hlZHVsZQAFBMxBIHZlc3Rpbmcgc2NoZWR1bGUgYWxyZWFkeSBleGlzdHMgZm9yIHRoaXMgYWNjb3VudC4sRGVhZEFjY291bnQABgSMQmVuZWZpY2lhcnkgYWNjb3VudCBtdXN0IHByZS1leGlzdC48VG9vTWFueVJlc2VydmVzAAcEuE51bWJlciBvZiBuYW1lZCByZXNlcnZlcyBleGNlZWQgYE1heFJlc2VydmVzYC4wVG9vTWFueUhvbGRzAAgE+E51bWJlciBvZiBob2xkcyBleGNlZWQgYFZhcmlhbnRDb3VudE9mPFQ6OlJ1bnRpbWVIb2xkUmVhc29uPmAuOFRvb01hbnlGcmVlemVzAAkEmE51bWJlciBvZiBmcmVlemVzIGV4Y2VlZCBgTWF4RnJlZXplc2AuTElzc3VhbmNlRGVhY3RpdmF0ZWQACgQBAVRoZSBpc3N1YW5jZSBjYW5ub3QgYmUgbW9kaWZpZWQgc2luY2UgaXQgaXMgYWxyZWFkeSBkZWFjdGl2YXRlZC4kRGVsdGFaZXJvAAsEZFRoZSBkZWx0YSBjYW5ub3QgYmUgemVyby4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuPQkIaHBhbGxldF90cmFuc2FjdGlvbl9wYXltZW50IFJlbGVhc2VzAAEIJFYxQW5jaWVudAAAAAhWMgABAABBCQg4cGFsbGV0X3N0YWtpbmc0U3Rha2luZ0xlZGdlcgQEVAAAFAEUc3Rhc2gAATBUOjpBY2NvdW50SWQAARR0b3RhbPQBMEJhbGFuY2VPZjxUPgABGGFjdGl2ZfQBMEJhbGFuY2VPZjxUPgABJHVubG9ja2luZy0CAfBCb3VuZGVkVmVjPFVubG9ja0NodW5rPEJhbGFuY2VPZjxUPj4sIFQ6Ok1heFVubG9ja2luZ0NodW5rcz4AAVhsZWdhY3lfY2xhaW1lZF9yZXdhcmRzRQkBlEJvdW5kZWRWZWM8RXJhSW5kZXgsIFQ6Okhpc3RvcnlEZXB0aD4AAEUJDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEARTAAAEAAkCARhWZWM8VD4AAEkJCDhwYWxsZXRfc3Rha2luZyxOb21pbmF0aW9ucwQEVAAADAEcdGFyZ2V0c00JAbRCb3VuZGVkVmVjPFQ6OkFjY291bnRJZCwgTWF4Tm9taW5hdGlvbnNPZjxUPj4AATBzdWJtaXR0ZWRfaW4QASBFcmFJbmRleAABKHN1cHByZXNzZWR4ARBib29sAABNCQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABAD1AQEYVmVjPFQ+AABRCQg4cGFsbGV0X3N0YWtpbmc0QWN0aXZlRXJhSW5mbwAACAEUaW5kZXgQASBFcmFJbmRleAABFHN0YXJ0VQkBLE9wdGlvbjx1NjQ+AABVCQQYT3B0aW9uBARUASwBCBBOb25lAAAAEFNvbWUEACwAAAEAAFkJAAAECBAAAF0JCChzcF9zdGFraW5nVFBhZ2VkRXhwb3N1cmVNZXRhZGF0YQQcQmFsYW5jZQEYABABFHRvdGFs9AEcQmFsYW5jZQABDG93bvQBHEJhbGFuY2UAATxub21pbmF0b3JfY291bnQQAQx1MzIAAShwYWdlX2NvdW50EAEQUGFnZQAAYQkAAAQMEAAQAGUJCChzcF9zdGFraW5nMEV4cG9zdXJlUGFnZQgkQWNjb3VudElkAQAcQmFsYW5jZQEYAAgBKHBhZ2VfdG90YWz0ARxCYWxhbmNlAAEYb3RoZXJz+AGsVmVjPEluZGl2aWR1YWxFeHBvc3VyZTxBY2NvdW50SWQsIEJhbGFuY2U+PgAAaQkIOHBhbGxldF9zdGFraW5nPEVyYVJld2FyZFBvaW50cwQkQWNjb3VudElkAQAACAEUdG90YWwQASxSZXdhcmRQb2ludAABKGluZGl2aWR1YWxtCQGAQlRyZWVNYXA8QWNjb3VudElkLCBSZXdhcmRQb2ludD4AAG0JBCBCVHJlZU1hcAgESwEABFYBEAAEAHEJAAAAcQkAAAJ1CQB1CQAABAgAEAB5CQAAAn0JAH0JCDhwYWxsZXRfc3Rha2luZzhVbmFwcGxpZWRTbGFzaAgkQWNjb3VudElkAQAcQmFsYW5jZQEYABQBJHZhbGlkYXRvcgABJEFjY291bnRJZAABDG93bhgBHEJhbGFuY2UAARhvdGhlcnO9BAFkVmVjPChBY2NvdW50SWQsIEJhbGFuY2UpPgABJHJlcG9ydGVyc/UBAThWZWM8QWNjb3VudElkPgABGHBheW91dBgBHEJhbGFuY2UAAIEJAAAECKwYAIUJDDhwYWxsZXRfc3Rha2luZyBzbGFzaGluZzRTbGFzaGluZ1NwYW5zAAAQAShzcGFuX2luZGV4EAEkU3BhbkluZGV4AAEobGFzdF9zdGFydBABIEVyYUluZGV4AAFIbGFzdF9ub256ZXJvX3NsYXNoEAEgRXJhSW5kZXgAARRwcmlvcgkCATRWZWM8RXJhSW5kZXg+AACJCQw4cGFsbGV0X3N0YWtpbmcgc2xhc2hpbmcoU3BhblJlY29yZAQcQmFsYW5jZQEYAAgBHHNsYXNoZWQYARxCYWxhbmNlAAEgcGFpZF9vdXQYARxCYWxhbmNlAACNCQAAApEJAJEJAAAECBB4AJUJEDhwYWxsZXRfc3Rha2luZxhwYWxsZXQYcGFsbGV0FEVycm9yBARUAAFwNE5vdENvbnRyb2xsZXIAAARkTm90IGEgY29udHJvbGxlciBhY2NvdW50LiBOb3RTdGFzaAABBFBOb3QgYSBzdGFzaCBhY2NvdW50LjRBbHJlYWR5Qm9uZGVkAAIEYFN0YXNoIGlzIGFscmVhZHkgYm9uZGVkLjRBbHJlYWR5UGFpcmVkAAMEdENvbnRyb2xsZXIgaXMgYWxyZWFkeSBwYWlyZWQuMEVtcHR5VGFyZ2V0cwAEBGBUYXJnZXRzIGNhbm5vdCBiZSBlbXB0eS44RHVwbGljYXRlSW5kZXgABQRARHVwbGljYXRlIGluZGV4LkRJbnZhbGlkU2xhc2hJbmRleAAGBIRTbGFzaCByZWNvcmQgaW5kZXggb3V0IG9mIGJvdW5kcy5ASW5zdWZmaWNpZW50Qm9uZAAHDFkBQ2Fubm90IGhhdmUgYSB2YWxpZGF0b3Igb3Igbm9taW5hdG9yIHJvbGUsIHdpdGggdmFsdWUgbGVzcyB0aGFuIHRoZSBtaW5pbXVtIGRlZmluZWQgYnk9AWdvdmVybmFuY2UgKHNlZSBgTWluVmFsaWRhdG9yQm9uZGAgYW5kIGBNaW5Ob21pbmF0b3JCb25kYCkuIElmIHVuYm9uZGluZyBpcyB0aGUVAWludGVudGlvbiwgYGNoaWxsYCBmaXJzdCB0byByZW1vdmUgb25lJ3Mgcm9sZSBhcyB2YWxpZGF0b3Ivbm9taW5hdG9yLjBOb01vcmVDaHVua3MACASQQ2FuIG5vdCBzY2hlZHVsZSBtb3JlIHVubG9jayBjaHVua3MuNE5vVW5sb2NrQ2h1bmsACQSgQ2FuIG5vdCByZWJvbmQgd2l0aG91dCB1bmxvY2tpbmcgY2h1bmtzLjBGdW5kZWRUYXJnZXQACgTIQXR0ZW1wdGluZyB0byB0YXJnZXQgYSBzdGFzaCB0aGF0IHN0aWxsIGhhcyBmdW5kcy5ISW52YWxpZEVyYVRvUmV3YXJkAAsEWEludmFsaWQgZXJhIHRvIHJld2FyZC5oSW52YWxpZE51bWJlck9mTm9taW5hdGlvbnMADAR4SW52YWxpZCBudW1iZXIgb2Ygbm9taW5hdGlvbnMuSE5vdFNvcnRlZEFuZFVuaXF1ZQANBIBJdGVtcyBhcmUgbm90IHNvcnRlZCBhbmQgdW5pcXVlLjhBbHJlYWR5Q2xhaW1lZAAOBAkBUmV3YXJkcyBmb3IgdGhpcyBlcmEgaGF2ZSBhbHJlYWR5IGJlZW4gY2xhaW1lZCBmb3IgdGhpcyB2YWxpZGF0b3IuLEludmFsaWRQYWdlAA8EhE5vIG5vbWluYXRvcnMgZXhpc3Qgb24gdGhpcyBwYWdlLlRJbmNvcnJlY3RIaXN0b3J5RGVwdGgAEATASW5jb3JyZWN0IHByZXZpb3VzIGhpc3RvcnkgZGVwdGggaW5wdXQgcHJvdmlkZWQuWEluY29ycmVjdFNsYXNoaW5nU3BhbnMAEQSwSW5jb3JyZWN0IG51bWJlciBvZiBzbGFzaGluZyBzcGFucyBwcm92aWRlZC4gQmFkU3RhdGUAEgQ5AUludGVybmFsIHN0YXRlIGhhcyBiZWNvbWUgc29tZWhvdyBjb3JydXB0ZWQgYW5kIHRoZSBvcGVyYXRpb24gY2Fubm90IGNvbnRpbnVlLjhUb29NYW55VGFyZ2V0cwATBJRUb28gbWFueSBub21pbmF0aW9uIHRhcmdldHMgc3VwcGxpZWQuJEJhZFRhcmdldAAUBD0BQSBub21pbmF0aW9uIHRhcmdldCB3YXMgc3VwcGxpZWQgdGhhdCB3YXMgYmxvY2tlZCBvciBvdGhlcndpc2Ugbm90IGEgdmFsaWRhdG9yLkBDYW5ub3RDaGlsbE90aGVyABUEVQFUaGUgdXNlciBoYXMgZW5vdWdoIGJvbmQgYW5kIHRodXMgY2Fubm90IGJlIGNoaWxsZWQgZm9yY2VmdWxseSBieSBhbiBleHRlcm5hbCBwZXJzb24uRFRvb01hbnlOb21pbmF0b3JzABYITQFUaGVyZSBhcmUgdG9vIG1hbnkgbm9taW5hdG9ycyBpbiB0aGUgc3lzdGVtLiBHb3Zlcm5hbmNlIG5lZWRzIHRvIGFkanVzdCB0aGUgc3Rha2luZ7RzZXR0aW5ncyB0byBrZWVwIHRoaW5ncyBzYWZlIGZvciB0aGUgcnVudGltZS5EVG9vTWFueVZhbGlkYXRvcnMAFwhVAVRoZXJlIGFyZSB0b28gbWFueSB2YWxpZGF0b3IgY2FuZGlkYXRlcyBpbiB0aGUgc3lzdGVtLiBHb3Zlcm5hbmNlIG5lZWRzIHRvIGFkanVzdCB0aGXUc3Rha2luZyBzZXR0aW5ncyB0byBrZWVwIHRoaW5ncyBzYWZlIGZvciB0aGUgcnVudGltZS5AQ29tbWlzc2lvblRvb0xvdwAYBOBDb21taXNzaW9uIGlzIHRvbyBsb3cuIE11c3QgYmUgYXQgbGVhc3QgYE1pbkNvbW1pc3Npb25gLixCb3VuZE5vdE1ldAAZBFhTb21lIGJvdW5kIGlzIG5vdCBtZXQuUENvbnRyb2xsZXJEZXByZWNhdGVkABoEAQFVc2VkIHdoZW4gYXR0ZW1wdGluZyB0byB1c2UgZGVwcmVjYXRlZCBjb250cm9sbGVyIGFjY291bnQgbG9naWMuTENhbm5vdFJlc3RvcmVMZWRnZXIAGwRYQ2Fubm90IHJlc2V0IGEgbGVkZ2VyLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC6ZCQwoc3Bfc3Rha2luZxxvZmZlbmNlOE9mZmVuY2VEZXRhaWxzCCBSZXBvcnRlcgEAIE9mZmVuZGVyAewACAEgb2ZmZW5kZXLsASBPZmZlbmRlcgABJHJlcG9ydGVyc/UBATRWZWM8UmVwb3J0ZXI+AACdCQAABAjANAChCQAAAqUJAKUJAAAECAA9AgCpCQAABAitCTQArQkMHHNwX2NvcmUYY3J5cHRvJEtleVR5cGVJZAAABABEARxbdTg7IDRdAACxCQw4cGFsbGV0X3Nlc3Npb24YcGFsbGV0FEVycm9yBARUAAEUMEludmFsaWRQcm9vZgAABGBJbnZhbGlkIG93bmVyc2hpcCBwcm9vZi5cTm9Bc3NvY2lhdGVkVmFsaWRhdG9ySWQAAQScTm8gYXNzb2NpYXRlZCB2YWxpZGF0b3IgSUQgZm9yIGFjY291bnQuNER1cGxpY2F0ZWRLZXkAAgRkUmVnaXN0ZXJlZCBkdXBsaWNhdGUga2V5LhhOb0tleXMAAwSkTm8ga2V5cyBhcmUgYXNzb2NpYXRlZCB3aXRoIHRoaXMgYWNjb3VudC4kTm9BY2NvdW50AAQEGQFLZXkgc2V0dGluZyBhY2NvdW50IGlzIG5vdCBsaXZlLCBzbyBpdCdzIGltcG9zc2libGUgdG8gYXNzb2NpYXRlIGtleXMuBHRFcnJvciBmb3IgdGhlIHNlc3Npb24gcGFsbGV0LrUJCDhwYWxsZXRfZ3JhbmRwYSxTdG9yZWRTdGF0ZQQETgEQARAQTGl2ZQAAADBQZW5kaW5nUGF1c2UIATBzY2hlZHVsZWRfYXQQAQROAAEUZGVsYXkQAQROAAEAGFBhdXNlZAACADRQZW5kaW5nUmVzdW1lCAEwc2NoZWR1bGVkX2F0EAEETgABFGRlbGF5EAEETgADAAC5CQg4cGFsbGV0X2dyYW5kcGFMU3RvcmVkUGVuZGluZ0NoYW5nZQgETgEQFExpbWl0AAAQATBzY2hlZHVsZWRfYXQQAQROAAEUZGVsYXkQAQROAAFAbmV4dF9hdXRob3JpdGllc70JAWxCb3VuZGVkQXV0aG9yaXR5TGlzdDxMaW1pdD4AARhmb3JjZWSNAgEkT3B0aW9uPE4+AAC9CQxMYm91bmRlZF9jb2xsZWN0aW9uc0B3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAdAEUwAABADMARhWZWM8VD4AAMEJDDhwYWxsZXRfZ3JhbmRwYRhwYWxsZXQURXJyb3IEBFQAARwsUGF1c2VGYWlsZWQAAAgFAUF0dGVtcHQgdG8gc2lnbmFsIEdSQU5EUEEgcGF1c2Ugd2hlbiB0aGUgYXV0aG9yaXR5IHNldCBpc24ndCBsaXZlpChlaXRoZXIgcGF1c2VkIG9yIGFscmVhZHkgcGVuZGluZyBwYXVzZSkuMFJlc3VtZUZhaWxlZAABCBEBQXR0ZW1wdCB0byBzaWduYWwgR1JBTkRQQSByZXN1bWUgd2hlbiB0aGUgYXV0aG9yaXR5IHNldCBpc24ndCBwYXVzZWSgKGVpdGhlciBsaXZlIG9yIGFscmVhZHkgcGVuZGluZyByZXN1bWUpLjRDaGFuZ2VQZW5kaW5nAAIE6EF0dGVtcHQgdG8gc2lnbmFsIEdSQU5EUEEgY2hhbmdlIHdpdGggb25lIGFscmVhZHkgcGVuZGluZy4cVG9vU29vbgADBLxDYW5ub3Qgc2lnbmFsIGZvcmNlZCBjaGFuZ2Ugc28gc29vbiBhZnRlciBsYXN0LmBJbnZhbGlkS2V5T3duZXJzaGlwUHJvb2YABAQxAUEga2V5IG93bmVyc2hpcCBwcm9vZiBwcm92aWRlZCBhcyBwYXJ0IG9mIGFuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgaW52YWxpZC5gSW52YWxpZEVxdWl2b2NhdGlvblByb29mAAUEMQFBbiBlcXVpdm9jYXRpb24gcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuWER1cGxpY2F0ZU9mZmVuY2VSZXBvcnQABgQVAUEgZ2l2ZW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyB2YWxpZCBidXQgYWxyZWFkeSBwcmV2aW91c2x5IHJlcG9ydGVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7FCQxMYm91bmRlZF9jb2xsZWN0aW9uc0B3ZWFrX2JvdW5kZWRfdmVjOFdlYWtCb3VuZGVkVmVjCARUAUkCBFMAAAQAyQkBGFZlYzxUPgAAyQkAAAJJAgDNCQg8cGFsbGV0X3RyZWFzdXJ5IFByb3Bvc2FsCCRBY2NvdW50SWQBABxCYWxhbmNlARgAEAEgcHJvcG9zZXIAASRBY2NvdW50SWQAARR2YWx1ZRgBHEJhbGFuY2UAASxiZW5lZmljaWFyeQABJEFjY291bnRJZAABEGJvbmQYARxCYWxhbmNlAADRCQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUARAEUwAABAAJAgEYVmVjPFQ+AADVCQg8cGFsbGV0X3RyZWFzdXJ5LFNwZW5kU3RhdHVzFCRBc3NldEtpbmQBBQEwQXNzZXRCYWxhbmNlARgsQmVuZWZpY2lhcnkBaQEsQmxvY2tOdW1iZXIBECRQYXltZW50SWQBLAAYAShhc3NldF9raW5kBQEBJEFzc2V0S2luZAABGGFtb3VudBgBMEFzc2V0QmFsYW5jZQABLGJlbmVmaWNpYXJ5aQEBLEJlbmVmaWNpYXJ5AAEodmFsaWRfZnJvbRABLEJsb2NrTnVtYmVyAAEkZXhwaXJlX2F0EAEsQmxvY2tOdW1iZXIAARhzdGF0dXPZCQFcUGF5bWVudFN0YXRlPFBheW1lbnRJZD4AANkJCDxwYWxsZXRfdHJlYXN1cnkwUGF5bWVudFN0YXRlBAhJZAEsAQwcUGVuZGluZwAAACRBdHRlbXB0ZWQEAQhpZCwBCElkAAEAGEZhaWxlZAACAADdCQw0c3BfYXJpdGhtZXRpYyhwZXJfdGhpbmdzHFBlcm1pbGwAAAQAEAEMdTMyAADhCQg0ZnJhbWVfc3VwcG9ydCBQYWxsZXRJZAAABAAxAwEcW3U4OyA4XQAA5QkMPHBhbGxldF90cmVhc3VyeRhwYWxsZXQURXJyb3IIBFQABEkAATBwSW5zdWZmaWNpZW50UHJvcG9zZXJzQmFsYW5jZQAABHhQcm9wb3NlcidzIGJhbGFuY2UgaXMgdG9vIGxvdy4wSW52YWxpZEluZGV4AAEErE5vIHByb3Bvc2FsLCBib3VudHkgb3Igc3BlbmQgYXQgdGhhdCBpbmRleC5AVG9vTWFueUFwcHJvdmFscwACBIBUb28gbWFueSBhcHByb3ZhbHMgaW4gdGhlIHF1ZXVlLlhJbnN1ZmZpY2llbnRQZXJtaXNzaW9uAAMIRQFUaGUgc3BlbmQgb3JpZ2luIGlzIHZhbGlkIGJ1dCB0aGUgYW1vdW50IGl0IGlzIGFsbG93ZWQgdG8gc3BlbmQgaXMgbG93ZXIgdGhhbiB0aGVMYW1vdW50IHRvIGJlIHNwZW50LkxQcm9wb3NhbE5vdEFwcHJvdmVkAAQEfFByb3Bvc2FsIGhhcyBub3QgYmVlbiBhcHByb3ZlZC5YRmFpbGVkVG9Db252ZXJ0QmFsYW5jZQAFBFEBVGhlIGJhbGFuY2Ugb2YgdGhlIGFzc2V0IGtpbmQgaXMgbm90IGNvbnZlcnRpYmxlIHRvIHRoZSBiYWxhbmNlIG9mIHRoZSBuYXRpdmUgYXNzZXQuMFNwZW5kRXhwaXJlZAAGBLBUaGUgc3BlbmQgaGFzIGV4cGlyZWQgYW5kIGNhbm5vdCBiZSBjbGFpbWVkLixFYXJseVBheW91dAAHBKRUaGUgc3BlbmQgaXMgbm90IHlldCBlbGlnaWJsZSBmb3IgcGF5b3V0LkBBbHJlYWR5QXR0ZW1wdGVkAAgEnFRoZSBwYXltZW50IGhhcyBhbHJlYWR5IGJlZW4gYXR0ZW1wdGVkLixQYXlvdXRFcnJvcgAJBMxUaGVyZSB3YXMgc29tZSBpc3N1ZSB3aXRoIHRoZSBtZWNoYW5pc20gb2YgcGF5bWVudC4wTm90QXR0ZW1wdGVkAAoEpFRoZSBwYXlvdXQgd2FzIG5vdCB5ZXQgYXR0ZW1wdGVkL2NsYWltZWQuMEluY29uY2x1c2l2ZQALBMRUaGUgcGF5bWVudCBoYXMgbmVpdGhlciBmYWlsZWQgbm9yIHN1Y2NlZWRlZCB5ZXQuBHhFcnJvciBmb3IgdGhlIHRyZWFzdXJ5IHBhbGxldC7pCQAABAgAkQEA7QkMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxB2b3RlGFZvdGluZxQcQmFsYW5jZQEYJEFjY291bnRJZAEALEJsb2NrTnVtYmVyARAkUG9sbEluZGV4ARAgTWF4Vm90ZXMAAQgcQ2FzdGluZwQA8QkByENhc3Rpbmc8QmFsYW5jZSwgQmxvY2tOdW1iZXIsIFBvbGxJbmRleCwgTWF4Vm90ZXM+AAAAKERlbGVnYXRpbmcEAAkKAaxEZWxlZ2F0aW5nPEJhbGFuY2UsIEFjY291bnRJZCwgQmxvY2tOdW1iZXI+AAEAAPEJDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcQdm90ZRxDYXN0aW5nEBxCYWxhbmNlARgsQmxvY2tOdW1iZXIBECRQb2xsSW5kZXgBECBNYXhWb3RlcwAADAEUdm90ZXP1CQHcQm91bmRlZFZlYzwoUG9sbEluZGV4LCBBY2NvdW50Vm90ZTxCYWxhbmNlPiksIE1heFZvdGVzPgABLGRlbGVnYXRpb25zAQoBUERlbGVnYXRpb25zPEJhbGFuY2U+AAEUcHJpb3IFCgF8UHJpb3JMb2NrPEJsb2NrTnVtYmVyLCBCYWxhbmNlPgAA9QkMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAH5CQRTAAAEAP0JARhWZWM8VD4AAPkJAAAECBCVAgD9CQAAAvkJAAEKDGBwYWxsZXRfY29udmljdGlvbl92b3RpbmcUdHlwZXMsRGVsZWdhdGlvbnMEHEJhbGFuY2UBGAAIARR2b3RlcxgBHEJhbGFuY2UAARxjYXBpdGFsGAEcQmFsYW5jZQAABQoMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxB2b3RlJFByaW9yTG9jawgsQmxvY2tOdW1iZXIBEBxCYWxhbmNlARgACAAQASxCbG9ja051bWJlcgAAGAEcQmFsYW5jZQAACQoMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxB2b3RlKERlbGVnYXRpbmcMHEJhbGFuY2UBGCRBY2NvdW50SWQBACxCbG9ja051bWJlcgEQABQBHGJhbGFuY2UYARxCYWxhbmNlAAEYdGFyZ2V0AAEkQWNjb3VudElkAAEoY29udmljdGlvbp0CAShDb252aWN0aW9uAAEsZGVsZWdhdGlvbnMBCgFQRGVsZWdhdGlvbnM8QmFsYW5jZT4AARRwcmlvcgUKAXxQcmlvckxvY2s8QmxvY2tOdW1iZXIsIEJhbGFuY2U+AAANCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAREKBFMAAAQAFQoBGFZlYzxUPgAAEQoAAAQIkQEYABUKAAACEQoAGQoMYHBhbGxldF9jb252aWN0aW9uX3ZvdGluZxhwYWxsZXQURXJyb3IIBFQABEkAATAoTm90T25nb2luZwAABFBQb2xsIGlzIG5vdCBvbmdvaW5nLiBOb3RWb3RlcgABBKxUaGUgZ2l2ZW4gYWNjb3VudCBkaWQgbm90IHZvdGUgb24gdGhlIHBvbGwuME5vUGVybWlzc2lvbgACBMhUaGUgYWN0b3IgaGFzIG5vIHBlcm1pc3Npb24gdG8gY29uZHVjdCB0aGUgYWN0aW9uLjxOb1Blcm1pc3Npb25ZZXQAAwRZAVRoZSBhY3RvciBoYXMgbm8gcGVybWlzc2lvbiB0byBjb25kdWN0IHRoZSBhY3Rpb24gcmlnaHQgbm93IGJ1dCB3aWxsIGRvIGluIHRoZSBmdXR1cmUuREFscmVhZHlEZWxlZ2F0aW5nAAQEiFRoZSBhY2NvdW50IGlzIGFscmVhZHkgZGVsZWdhdGluZy40QWxyZWFkeVZvdGluZwAFCFUBVGhlIGFjY291bnQgY3VycmVudGx5IGhhcyB2b3RlcyBhdHRhY2hlZCB0byBpdCBhbmQgdGhlIG9wZXJhdGlvbiBjYW5ub3Qgc3VjY2VlZCB1bnRpbOh0aGVzZSBhcmUgcmVtb3ZlZCwgZWl0aGVyIHRocm91Z2ggYHVudm90ZWAgb3IgYHJlYXBfdm90ZWAuREluc3VmZmljaWVudEZ1bmRzAAYE/FRvbyBoaWdoIGEgYmFsYW5jZSB3YXMgcHJvdmlkZWQgdGhhdCB0aGUgYWNjb3VudCBjYW5ub3QgYWZmb3JkLjROb3REZWxlZ2F0aW5nAAcEoFRoZSBhY2NvdW50IGlzIG5vdCBjdXJyZW50bHkgZGVsZWdhdGluZy4gTm9uc2Vuc2UACASURGVsZWdhdGlvbiB0byBvbmVzZWxmIG1ha2VzIG5vIHNlbnNlLjxNYXhWb3Rlc1JlYWNoZWQACQSATWF4aW11bSBudW1iZXIgb2Ygdm90ZXMgcmVhY2hlZC4sQ2xhc3NOZWVkZWQACgQ5AVRoZSBjbGFzcyBtdXN0IGJlIHN1cHBsaWVkIHNpbmNlIGl0IGlzIG5vdCBlYXNpbHkgZGV0ZXJtaW5hYmxlIGZyb20gdGhlIHN0YXRlLiBCYWRDbGFzcwALBIRUaGUgY2xhc3MgSUQgc3VwcGxpZWQgaXMgaW52YWxpZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuHQoMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXM4UmVmZXJlbmR1bUluZm8gHFRyYWNrSWQBkQE0UnVudGltZU9yaWdpbgGpAhhNb21lbnQBEBBDYWxsAZUBHEJhbGFuY2UBGBRUYWxseQGFByRBY2NvdW50SWQBADxTY2hlZHVsZUFkZHJlc3MBgAEYHE9uZ29pbmcEACEKAY0BUmVmZXJlbmR1bVN0YXR1czxUcmFja0lkLCBSdW50aW1lT3JpZ2luLCBNb21lbnQsIENhbGwsIEJhbGFuY2UsIFRhbGx5LApBY2NvdW50SWQsIFNjaGVkdWxlQWRkcmVzcyw+AAAAIEFwcHJvdmVkDAAQARhNb21lbnQAACkKAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAKQoBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAEAIFJlamVjdGVkDAAQARhNb21lbnQAACkKAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAAKQoBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAIAJENhbmNlbGxlZAwAEAEYTW9tZW50AAApCgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AACkKAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgADACBUaW1lZE91dAwAEAEYTW9tZW50AAApCgGMT3B0aW9uPERlcG9zaXQ8QWNjb3VudElkLCBCYWxhbmNlPj4AACkKAYxPcHRpb248RGVwb3NpdDxBY2NvdW50SWQsIEJhbGFuY2U+PgAEABhLaWxsZWQEABABGE1vbWVudAAFAAAhCgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlc0BSZWZlcmVuZHVtU3RhdHVzIBxUcmFja0lkAZEBNFJ1bnRpbWVPcmlnaW4BqQIYTW9tZW50ARAQQ2FsbAGVARxCYWxhbmNlARgUVGFsbHkBhQckQWNjb3VudElkAQA8U2NoZWR1bGVBZGRyZXNzAYAALAEUdHJhY2uRAQEcVHJhY2tJZAABGG9yaWdpbqkCATRSdW50aW1lT3JpZ2luAAEgcHJvcG9zYWyVAQEQQ2FsbAABJGVuYWN0bWVudMUCAVBEaXNwYXRjaFRpbWU8TW9tZW50PgABJHN1Ym1pdHRlZBABGE1vbWVudAABSHN1Ym1pc3Npb25fZGVwb3NpdCUKAWxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4AAUBkZWNpc2lvbl9kZXBvc2l0KQoBjE9wdGlvbjxEZXBvc2l0PEFjY291bnRJZCwgQmFsYW5jZT4+AAEgZGVjaWRpbmctCgF4T3B0aW9uPERlY2lkaW5nU3RhdHVzPE1vbWVudD4+AAEUdGFsbHmFBwEUVGFsbHkAASBpbl9xdWV1ZXgBEGJvb2wAARRhbGFybTUKAYRPcHRpb248KE1vbWVudCwgU2NoZWR1bGVBZGRyZXNzKT4AACUKDEBwYWxsZXRfcmVmZXJlbmRhFHR5cGVzHERlcG9zaXQIJEFjY291bnRJZAEAHEJhbGFuY2UBGAAIAQx3aG8AASRBY2NvdW50SWQAARhhbW91bnQYARxCYWxhbmNlAAApCgQYT3B0aW9uBARUASUKAQgQTm9uZQAAABBTb21lBAAlCgAAAQAALQoEGE9wdGlvbgQEVAExCgEIEE5vbmUAAAAQU29tZQQAMQoAAAEAADEKDEBwYWxsZXRfcmVmZXJlbmRhFHR5cGVzOERlY2lkaW5nU3RhdHVzBCxCbG9ja051bWJlcgEQAAgBFHNpbmNlEAEsQmxvY2tOdW1iZXIAAShjb25maXJtaW5njQIBTE9wdGlvbjxCbG9ja051bWJlcj4AADUKBBhPcHRpb24EBFQBOQoBCBBOb25lAAAAEFNvbWUEADkKAAABAAA5CgAABAgQgAA9CgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAUEKBFMAAAQARQoBGFZlYzxUPgAAQQoAAAQIEBgARQoAAAJBCgBJCgAAAk0KAE0KAAAECJEBUQoAUQoMQHBhbGxldF9yZWZlcmVuZGEUdHlwZXMkVHJhY2tJbmZvCBxCYWxhbmNlARgYTW9tZW50ARAAJAEQbmFtZT0IATAmJ3N0YXRpYyBzdHIAATBtYXhfZGVjaWRpbmcQAQx1MzIAAUBkZWNpc2lvbl9kZXBvc2l0GAEcQmFsYW5jZQABOHByZXBhcmVfcGVyaW9kEAEYTW9tZW50AAE8ZGVjaXNpb25fcGVyaW9kEAEYTW9tZW50AAE4Y29uZmlybV9wZXJpb2QQARhNb21lbnQAAVBtaW5fZW5hY3RtZW50X3BlcmlvZBABGE1vbWVudAABMG1pbl9hcHByb3ZhbFUKARRDdXJ2ZQABLG1pbl9zdXBwb3J0VQoBFEN1cnZlAABVCgxAcGFsbGV0X3JlZmVyZW5kYRR0eXBlcxRDdXJ2ZQABDEBMaW5lYXJEZWNyZWFzaW5nDAEYbGVuZ3RorAEcUGVyYmlsbAABFGZsb29yrAEcUGVyYmlsbAABEGNlaWysARxQZXJiaWxsAAAARFN0ZXBwZWREZWNyZWFzaW5nEAEUYmVnaW6sARxQZXJiaWxsAAEMZW5krAEcUGVyYmlsbAABEHN0ZXCsARxQZXJiaWxsAAEYcGVyaW9krAEcUGVyYmlsbAABAChSZWNpcHJvY2FsDAEYZmFjdG9yWQoBIEZpeGVkSTY0AAEgeF9vZmZzZXRZCgEgRml4ZWRJNjQAASB5X29mZnNldFkKASBGaXhlZEk2NAACAABZCgw0c3BfYXJpdGhtZXRpYyxmaXhlZF9wb2ludCBGaXhlZEk2NAAABABdCgEMaTY0AABdCgAABQwAYQoMQHBhbGxldF9yZWZlcmVuZGEYcGFsbGV0FEVycm9yCARUAARJAAE0KE5vdE9uZ29pbmcAAARoUmVmZXJlbmR1bSBpcyBub3Qgb25nb2luZy4oSGFzRGVwb3NpdAABBLhSZWZlcmVuZHVtJ3MgZGVjaXNpb24gZGVwb3NpdCBpcyBhbHJlYWR5IHBhaWQuIEJhZFRyYWNrAAIEnFRoZSB0cmFjayBpZGVudGlmaWVyIGdpdmVuIHdhcyBpbnZhbGlkLhBGdWxsAAMEMQFUaGVyZSBhcmUgYWxyZWFkeSBhIGZ1bGwgY29tcGxlbWVudCBvZiByZWZlcmVuZGEgaW4gcHJvZ3Jlc3MgZm9yIHRoaXMgdHJhY2suKFF1ZXVlRW1wdHkABASAVGhlIHF1ZXVlIG9mIHRoZSB0cmFjayBpcyBlbXB0eS40QmFkUmVmZXJlbmR1bQAFBORUaGUgcmVmZXJlbmR1bSBpbmRleCBwcm92aWRlZCBpcyBpbnZhbGlkIGluIHRoaXMgY29udGV4dC4sTm90aGluZ1RvRG8ABgSsVGhlcmUgd2FzIG5vdGhpbmcgdG8gZG8gaW4gdGhlIGFkdmFuY2VtZW50LhxOb1RyYWNrAAcEoE5vIHRyYWNrIGV4aXN0cyBmb3IgdGhlIHByb3Bvc2FsIG9yaWdpbi4oVW5maW5pc2hlZAAIBAEBQW55IGRlcG9zaXQgY2Fubm90IGJlIHJlZnVuZGVkIHVudGlsIGFmdGVyIHRoZSBkZWNpc2lvbiBpcyBvdmVyLjBOb1Blcm1pc3Npb24ACQSoVGhlIGRlcG9zaXQgcmVmdW5kZXIgaXMgbm90IHRoZSBkZXBvc2l0b3IuJE5vRGVwb3NpdAAKBMxUaGUgZGVwb3NpdCBjYW5ub3QgYmUgcmVmdW5kZWQgc2luY2Ugbm9uZSB3YXMgbWFkZS4kQmFkU3RhdHVzAAsE0FRoZSByZWZlcmVuZHVtIHN0YXR1cyBpcyBpbnZhbGlkIGZvciB0aGlzIG9wZXJhdGlvbi5AUHJlaW1hZ2VOb3RFeGlzdAAMBHBUaGUgcHJlaW1hZ2UgZG9lcyBub3QgZXhpc3QuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LmUKDEBwYWxsZXRfd2hpdGVsaXN0GHBhbGxldBRFcnJvcgQEVAABFExVbmF2YWlsYWJsZVByZUltYWdlAAAEyFRoZSBwcmVpbWFnZSBvZiB0aGUgY2FsbCBoYXNoIGNvdWxkIG5vdCBiZSBsb2FkZWQuPFVuZGVjb2RhYmxlQ2FsbAABBHhUaGUgY2FsbCBjb3VsZCBub3QgYmUgZGVjb2RlZC5gSW52YWxpZENhbGxXZWlnaHRXaXRuZXNzAAIE7FRoZSB3ZWlnaHQgb2YgdGhlIGRlY29kZWQgY2FsbCB3YXMgaGlnaGVyIHRoYW4gdGhlIHdpdG5lc3MuUENhbGxJc05vdFdoaXRlbGlzdGVkAAMEdFRoZSBjYWxsIHdhcyBub3Qgd2hpdGVsaXN0ZWQuWENhbGxBbHJlYWR5V2hpdGVsaXN0ZWQABASgVGhlIGNhbGwgd2FzIGFscmVhZHkgd2hpdGVsaXN0ZWQ7IE5vLU9wLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5pChBccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zGHBhbGxldBRFcnJvcgQEVAABGGBJbnZhbGlkRXRoZXJldW1TaWduYXR1cmUAAARsSW52YWxpZCBFdGhlcmV1bSBzaWduYXR1cmUuQFNpZ25lckhhc05vQ2xhaW0AAQR4RXRoZXJldW0gYWRkcmVzcyBoYXMgbm8gY2xhaW0uQFNlbmRlckhhc05vQ2xhaW0AAgSwQWNjb3VudCBJRCBzZW5kaW5nIHRyYW5zYWN0aW9uIGhhcyBubyBjbGFpbS4wUG90VW5kZXJmbG93AAMISQFUaGVyZSdzIG5vdCBlbm91Z2ggaW4gdGhlIHBvdCB0byBwYXkgb3V0IHNvbWUgdW52ZXN0ZWQgYW1vdW50LiBHZW5lcmFsbHkgaW1wbGllcyBhMGxvZ2ljIGVycm9yLkBJbnZhbGlkU3RhdGVtZW50AAQEkEEgbmVlZGVkIHN0YXRlbWVudCB3YXMgbm90IGluY2x1ZGVkLkxWZXN0ZWRCYWxhbmNlRXhpc3RzAAUEpFRoZSBhY2NvdW50IGFscmVhZHkgaGFzIGEgdmVzdGVkIGJhbGFuY2UuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Lm0KDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQB9QIEUwAABABxCgEYVmVjPFQ+AABxCgAAAvUCAHUKCDhwYWxsZXRfdmVzdGluZyBSZWxlYXNlcwABCAhWMAAAAAhWMQABAAB5Cgw4cGFsbGV0X3Zlc3RpbmcYcGFsbGV0FEVycm9yBARUAAEUKE5vdFZlc3RpbmcAAASEVGhlIGFjY291bnQgZ2l2ZW4gaXMgbm90IHZlc3RpbmcuVEF0TWF4VmVzdGluZ1NjaGVkdWxlcwABCCUBVGhlIGFjY291bnQgYWxyZWFkeSBoYXMgYE1heFZlc3RpbmdTY2hlZHVsZXNgIGNvdW50IG9mIHNjaGVkdWxlcyBhbmQgdGh1c1EBY2Fubm90IGFkZCBhbm90aGVyIG9uZS4gQ29uc2lkZXIgbWVyZ2luZyBleGlzdGluZyBzY2hlZHVsZXMgaW4gb3JkZXIgdG8gYWRkIGFub3RoZXIuJEFtb3VudExvdwACBAUBQW1vdW50IGJlaW5nIHRyYW5zZmVycmVkIGlzIHRvbyBsb3cgdG8gY3JlYXRlIGEgdmVzdGluZyBzY2hlZHVsZS5gU2NoZWR1bGVJbmRleE91dE9mQm91bmRzAAME0EFuIGluZGV4IHdhcyBvdXQgb2YgYm91bmRzIG9mIHRoZSB2ZXN0aW5nIHNjaGVkdWxlcy5USW52YWxpZFNjaGVkdWxlUGFyYW1zAAQEDQFGYWlsZWQgdG8gY3JlYXRlIGEgbmV3IHNjaGVkdWxlIGJlY2F1c2Ugc29tZSBwYXJhbWV0ZXIgd2FzIGludmFsaWQuBHRFcnJvciBmb3IgdGhlIHZlc3RpbmcgcGFsbGV0Ln0KDDhwYWxsZXRfdXRpbGl0eRhwYWxsZXQURXJyb3IEBFQAAQQwVG9vTWFueUNhbGxzAAAEXFRvbyBtYW55IGNhbGxzIGJhdGNoZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LoEKAAAECIUKlQoAhQoMPHBhbGxldF9pZGVudGl0eRR0eXBlczBSZWdpc3RyYXRpb24MHEJhbGFuY2UBGDRNYXhKdWRnZW1lbnRzADBJZGVudGl0eUluZm8BBQMADAEoanVkZ2VtZW50c4kKAfxCb3VuZGVkVmVjPChSZWdpc3RyYXJJbmRleCwgSnVkZ2VtZW50PEJhbGFuY2U+KSwgTWF4SnVkZ2VtZW50cz4AARxkZXBvc2l0GAEcQmFsYW5jZQABEGluZm8FAwEwSWRlbnRpdHlJbmZvAACJCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAY0KBFMAAAQAkQoBGFZlYzxUPgAAjQoAAAQIEJkDAJEKAAACjQoAlQoEGE9wdGlvbgQEVAGtAwEIEE5vbmUAAAAQU29tZQQArQMAAAEAAJkKAAAECBidCgCdCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABAD1AQEYVmVjPFQ+AAChCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAaUKBFMAAAQArQoBGFZlYzxUPgAApQoEGE9wdGlvbgQEVAGpCgEIEE5vbmUAAAAQU29tZQQAqQoAAAEAAKkKDDxwYWxsZXRfaWRlbnRpdHkUdHlwZXM0UmVnaXN0cmFySW5mbwwcQmFsYW5jZQEYJEFjY291bnRJZAEAHElkRmllbGQBLAAMARxhY2NvdW50AAEkQWNjb3VudElkAAEMZmVlGAEcQmFsYW5jZQABGGZpZWxkcywBHElkRmllbGQAAK0KAAACpQoAsQoMPHBhbGxldF9pZGVudGl0eRR0eXBlc0xBdXRob3JpdHlQcm9wZXJ0aWVzBBhTdWZmaXgBtQoACAEYc3VmZml4tQoBGFN1ZmZpeAABKGFsbG9jYXRpb24QAShBbGxvY2F0aW9uAAC1CgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AALkKDDxwYWxsZXRfaWRlbnRpdHkYcGFsbGV0FEVycm9yBARUAAFoSFRvb01hbnlTdWJBY2NvdW50cwAABFxUb28gbWFueSBzdWJzLWFjY291bnRzLiBOb3RGb3VuZAABBFBBY2NvdW50IGlzbid0IGZvdW5kLiBOb3ROYW1lZAACBFBBY2NvdW50IGlzbid0IG5hbWVkLihFbXB0eUluZGV4AAMEMEVtcHR5IGluZGV4LihGZWVDaGFuZ2VkAAQEPEZlZSBpcyBjaGFuZ2VkLihOb0lkZW50aXR5AAUESE5vIGlkZW50aXR5IGZvdW5kLjxTdGlja3lKdWRnZW1lbnQABgREU3RpY2t5IGp1ZGdlbWVudC44SnVkZ2VtZW50R2l2ZW4ABwRASnVkZ2VtZW50IGdpdmVuLkBJbnZhbGlkSnVkZ2VtZW50AAgESEludmFsaWQganVkZ2VtZW50LjBJbnZhbGlkSW5kZXgACQRUVGhlIGluZGV4IGlzIGludmFsaWQuNEludmFsaWRUYXJnZXQACgRYVGhlIHRhcmdldCBpcyBpbnZhbGlkLkRUb29NYW55UmVnaXN0cmFycwALBOhNYXhpbXVtIGFtb3VudCBvZiByZWdpc3RyYXJzIHJlYWNoZWQuIENhbm5vdCBhZGQgYW55IG1vcmUuOEFscmVhZHlDbGFpbWVkAAwEcEFjY291bnQgSUQgaXMgYWxyZWFkeSBuYW1lZC4YTm90U3ViAA0EcFNlbmRlciBpcyBub3QgYSBzdWItYWNjb3VudC4gTm90T3duZWQADgSIU3ViLWFjY291bnQgaXNuJ3Qgb3duZWQgYnkgc2VuZGVyLnRKdWRnZW1lbnRGb3JEaWZmZXJlbnRJZGVudGl0eQAPBNBUaGUgcHJvdmlkZWQganVkZ2VtZW50IHdhcyBmb3IgYSBkaWZmZXJlbnQgaWRlbnRpdHkuWEp1ZGdlbWVudFBheW1lbnRGYWlsZWQAEAT4RXJyb3IgdGhhdCBvY2N1cnMgd2hlbiB0aGVyZSBpcyBhbiBpc3N1ZSBwYXlpbmcgZm9yIGp1ZGdlbWVudC40SW52YWxpZFN1ZmZpeAARBIBUaGUgcHJvdmlkZWQgc3VmZml4IGlzIHRvbyBsb25nLlBOb3RVc2VybmFtZUF1dGhvcml0eQASBOBUaGUgc2VuZGVyIGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbiB0byBpc3N1ZSBhIHVzZXJuYW1lLjBOb0FsbG9jYXRpb24AEwTEVGhlIGF1dGhvcml0eSBjYW5ub3QgYWxsb2NhdGUgYW55IG1vcmUgdXNlcm5hbWVzLkBJbnZhbGlkU2lnbmF0dXJlABQEqFRoZSBzaWduYXR1cmUgb24gYSB1c2VybmFtZSB3YXMgbm90IHZhbGlkLkRSZXF1aXJlc1NpZ25hdHVyZQAVBAkBU2V0dGluZyB0aGlzIHVzZXJuYW1lIHJlcXVpcmVzIGEgc2lnbmF0dXJlLCBidXQgbm9uZSB3YXMgcHJvdmlkZWQuPEludmFsaWRVc2VybmFtZQAWBLBUaGUgdXNlcm5hbWUgZG9lcyBub3QgbWVldCB0aGUgcmVxdWlyZW1lbnRzLjRVc2VybmFtZVRha2VuABcEeFRoZSB1c2VybmFtZSBpcyBhbHJlYWR5IHRha2VuLihOb1VzZXJuYW1lABgEmFRoZSByZXF1ZXN0ZWQgdXNlcm5hbWUgZG9lcyBub3QgZXhpc3QuKE5vdEV4cGlyZWQAGQQtAVRoZSB1c2VybmFtZSBjYW5ub3QgYmUgZm9yY2VmdWxseSByZW1vdmVkIGJlY2F1c2UgaXQgY2FuIHN0aWxsIGJlIGFjY2VwdGVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC69CgAABAjBChgAwQoMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHFCgRTAAAEAMkKARhWZWM8VD4AAMUKCDBwYWxsZXRfcHJveHk8UHJveHlEZWZpbml0aW9uDCRBY2NvdW50SWQBACRQcm94eVR5cGUBuQMsQmxvY2tOdW1iZXIBEAAMASBkZWxlZ2F0ZQABJEFjY291bnRJZAABKHByb3h5X3R5cGW5AwEkUHJveHlUeXBlAAEUZGVsYXkQASxCbG9ja051bWJlcgAAyQoAAALFCgDNCgAABAjRChgA0QoMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHVCgRTAAAEANkKARhWZWM8VD4AANUKCDBwYWxsZXRfcHJveHkwQW5ub3VuY2VtZW50DCRBY2NvdW50SWQBABBIYXNoATAsQmxvY2tOdW1iZXIBEAAMARByZWFsAAEkQWNjb3VudElkAAEkY2FsbF9oYXNoMAEQSGFzaAABGGhlaWdodBABLEJsb2NrTnVtYmVyAADZCgAAAtUKAN0KDDBwYWxsZXRfcHJveHkYcGFsbGV0FEVycm9yBARUAAEgHFRvb01hbnkAAAQhAVRoZXJlIGFyZSB0b28gbWFueSBwcm94aWVzIHJlZ2lzdGVyZWQgb3IgdG9vIG1hbnkgYW5ub3VuY2VtZW50cyBwZW5kaW5nLiBOb3RGb3VuZAABBHRQcm94eSByZWdpc3RyYXRpb24gbm90IGZvdW5kLiBOb3RQcm94eQACBMxTZW5kZXIgaXMgbm90IGEgcHJveHkgb2YgdGhlIGFjY291bnQgdG8gYmUgcHJveGllZC4sVW5wcm94eWFibGUAAwQhAUEgY2FsbCB3aGljaCBpcyBpbmNvbXBhdGlibGUgd2l0aCB0aGUgcHJveHkgdHlwZSdzIGZpbHRlciB3YXMgYXR0ZW1wdGVkLiREdXBsaWNhdGUABARsQWNjb3VudCBpcyBhbHJlYWR5IGEgcHJveHkuME5vUGVybWlzc2lvbgAFBBUBQ2FsbCBtYXkgbm90IGJlIG1hZGUgYnkgcHJveHkgYmVjYXVzZSBpdCBtYXkgZXNjYWxhdGUgaXRzIHByaXZpbGVnZXMuLFVuYW5ub3VuY2VkAAYE0EFubm91bmNlbWVudCwgaWYgbWFkZSBhdCBhbGwsIHdhcyBtYWRlIHRvbyByZWNlbnRseS4sTm9TZWxmUHJveHkABwRkQ2Fubm90IGFkZCBzZWxmIGFzIHByb3h5LgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7hCgAABAgABADlCgg8cGFsbGV0X211bHRpc2lnIE11bHRpc2lnECxCbG9ja051bWJlcgEQHEJhbGFuY2UBGCRBY2NvdW50SWQBADBNYXhBcHByb3ZhbHMAABABEHdoZW7FAwFYVGltZXBvaW50PEJsb2NrTnVtYmVyPgABHGRlcG9zaXQYARxCYWxhbmNlAAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEkYXBwcm92YWxz6QoBjEJvdW5kZWRWZWM8QWNjb3VudElkLCBNYXhBcHByb3ZhbHM+AADpCgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQAEUwAABAD1AQEYVmVjPFQ+AADtCgw8cGFsbGV0X211bHRpc2lnGHBhbGxldBRFcnJvcgQEVAABOEBNaW5pbXVtVGhyZXNob2xkAAAEfFRocmVzaG9sZCBtdXN0IGJlIDIgb3IgZ3JlYXRlci48QWxyZWFkeUFwcHJvdmVkAAEErENhbGwgaXMgYWxyZWFkeSBhcHByb3ZlZCBieSB0aGlzIHNpZ25hdG9yeS5ETm9BcHByb3ZhbHNOZWVkZWQAAgScQ2FsbCBkb2Vzbid0IG5lZWQgYW55IChtb3JlKSBhcHByb3ZhbHMuRFRvb0Zld1NpZ25hdG9yaWVzAAMEqFRoZXJlIGFyZSB0b28gZmV3IHNpZ25hdG9yaWVzIGluIHRoZSBsaXN0LkhUb29NYW55U2lnbmF0b3JpZXMABASsVGhlcmUgYXJlIHRvbyBtYW55IHNpZ25hdG9yaWVzIGluIHRoZSBsaXN0LlRTaWduYXRvcmllc091dE9mT3JkZXIABQQNAVRoZSBzaWduYXRvcmllcyB3ZXJlIHByb3ZpZGVkIG91dCBvZiBvcmRlcjsgdGhleSBzaG91bGQgYmUgb3JkZXJlZC5MU2VuZGVySW5TaWduYXRvcmllcwAGBA0BVGhlIHNlbmRlciB3YXMgY29udGFpbmVkIGluIHRoZSBvdGhlciBzaWduYXRvcmllczsgaXQgc2hvdWxkbid0IGJlLiBOb3RGb3VuZAAHBNxNdWx0aXNpZyBvcGVyYXRpb24gbm90IGZvdW5kIHdoZW4gYXR0ZW1wdGluZyB0byBjYW5jZWwuIE5vdE93bmVyAAgELQFPbmx5IHRoZSBhY2NvdW50IHRoYXQgb3JpZ2luYWxseSBjcmVhdGVkIHRoZSBtdWx0aXNpZyBpcyBhYmxlIHRvIGNhbmNlbCBpdC4sTm9UaW1lcG9pbnQACQQdAU5vIHRpbWVwb2ludCB3YXMgZ2l2ZW4sIHlldCB0aGUgbXVsdGlzaWcgb3BlcmF0aW9uIGlzIGFscmVhZHkgdW5kZXJ3YXkuOFdyb25nVGltZXBvaW50AAoELQFBIGRpZmZlcmVudCB0aW1lcG9pbnQgd2FzIGdpdmVuIHRvIHRoZSBtdWx0aXNpZyBvcGVyYXRpb24gdGhhdCBpcyB1bmRlcndheS5MVW5leHBlY3RlZFRpbWVwb2ludAALBPRBIHRpbWVwb2ludCB3YXMgZ2l2ZW4sIHlldCBubyBtdWx0aXNpZyBvcGVyYXRpb24gaXMgdW5kZXJ3YXkuPE1heFdlaWdodFRvb0xvdwAMBNBUaGUgbWF4aW11bSB3ZWlnaHQgaW5mb3JtYXRpb24gcHJvdmlkZWQgd2FzIHRvbyBsb3cuNEFscmVhZHlTdG9yZWQADQSgVGhlIGRhdGEgdG8gYmUgc3RvcmVkIGlzIGFscmVhZHkgc3RvcmVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7xCgg8cGFsbGV0X2JvdW50aWVzGEJvdW50eQwkQWNjb3VudElkAQAcQmFsYW5jZQEYLEJsb2NrTnVtYmVyARAAGAEgcHJvcG9zZXIAASRBY2NvdW50SWQAARR2YWx1ZRgBHEJhbGFuY2UAAQxmZWUYARxCYWxhbmNlAAE8Y3VyYXRvcl9kZXBvc2l0GAEcQmFsYW5jZQABEGJvbmQYARxCYWxhbmNlAAEYc3RhdHVz9QoBkEJvdW50eVN0YXR1czxBY2NvdW50SWQsIEJsb2NrTnVtYmVyPgAA9QoIPHBhbGxldF9ib3VudGllczBCb3VudHlTdGF0dXMIJEFjY291bnRJZAEALEJsb2NrTnVtYmVyARABGCBQcm9wb3NlZAAAACBBcHByb3ZlZAABABhGdW5kZWQAAgA8Q3VyYXRvclByb3Bvc2VkBAEcY3VyYXRvcgABJEFjY291bnRJZAADABhBY3RpdmUIARxjdXJhdG9yAAEkQWNjb3VudElkAAEodXBkYXRlX2R1ZRABLEJsb2NrTnVtYmVyAAQANFBlbmRpbmdQYXlvdXQMARxjdXJhdG9yAAEkQWNjb3VudElkAAEsYmVuZWZpY2lhcnkAASRBY2NvdW50SWQAASR1bmxvY2tfYXQQASxCbG9ja051bWJlcgAFAAD5CgxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAP0KDDxwYWxsZXRfYm91bnRpZXMYcGFsbGV0FEVycm9yCARUAARJAAEscEluc3VmZmljaWVudFByb3Bvc2Vyc0JhbGFuY2UAAAR4UHJvcG9zZXIncyBiYWxhbmNlIGlzIHRvbyBsb3cuMEludmFsaWRJbmRleAABBJBObyBwcm9wb3NhbCBvciBib3VudHkgYXQgdGhhdCBpbmRleC4wUmVhc29uVG9vQmlnAAIEhFRoZSByZWFzb24gZ2l2ZW4gaXMganVzdCB0b28gYmlnLkBVbmV4cGVjdGVkU3RhdHVzAAMEgFRoZSBib3VudHkgc3RhdHVzIGlzIHVuZXhwZWN0ZWQuOFJlcXVpcmVDdXJhdG9yAAQEXFJlcXVpcmUgYm91bnR5IGN1cmF0b3IuMEludmFsaWRWYWx1ZQAFBFRJbnZhbGlkIGJvdW50eSB2YWx1ZS4oSW52YWxpZEZlZQAGBExJbnZhbGlkIGJvdW50eSBmZWUuNFBlbmRpbmdQYXlvdXQABwhsQSBib3VudHkgcGF5b3V0IGlzIHBlbmRpbmcu+FRvIGNhbmNlbCB0aGUgYm91bnR5LCB5b3UgbXVzdCB1bmFzc2lnbiBhbmQgc2xhc2ggdGhlIGN1cmF0b3IuJFByZW1hdHVyZQAIBEUBVGhlIGJvdW50aWVzIGNhbm5vdCBiZSBjbGFpbWVkL2Nsb3NlZCBiZWNhdXNlIGl0J3Mgc3RpbGwgaW4gdGhlIGNvdW50ZG93biBwZXJpb2QuUEhhc0FjdGl2ZUNoaWxkQm91bnR5AAkEBQFUaGUgYm91bnR5IGNhbm5vdCBiZSBjbG9zZWQgYmVjYXVzZSBpdCBoYXMgYWN0aXZlIGNoaWxkIGJvdW50aWVzLjRUb29NYW55UXVldWVkAAoEmFRvbyBtYW55IGFwcHJvdmFscyBhcmUgYWxyZWFkeSBxdWV1ZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LgELCFRwYWxsZXRfY2hpbGRfYm91bnRpZXMsQ2hpbGRCb3VudHkMJEFjY291bnRJZAEAHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQABQBNHBhcmVudF9ib3VudHkQASxCb3VudHlJbmRleAABFHZhbHVlGAEcQmFsYW5jZQABDGZlZRgBHEJhbGFuY2UAATxjdXJhdG9yX2RlcG9zaXQYARxCYWxhbmNlAAEYc3RhdHVzBQsBpENoaWxkQm91bnR5U3RhdHVzPEFjY291bnRJZCwgQmxvY2tOdW1iZXI+AAAFCwhUcGFsbGV0X2NoaWxkX2JvdW50aWVzRENoaWxkQm91bnR5U3RhdHVzCCRBY2NvdW50SWQBACxCbG9ja051bWJlcgEQARAUQWRkZWQAAAA8Q3VyYXRvclByb3Bvc2VkBAEcY3VyYXRvcgABJEFjY291bnRJZAABABhBY3RpdmUEARxjdXJhdG9yAAEkQWNjb3VudElkAAIANFBlbmRpbmdQYXlvdXQMARxjdXJhdG9yAAEkQWNjb3VudElkAAEsYmVuZWZpY2lhcnkAASRBY2NvdW50SWQAASR1bmxvY2tfYXQQASxCbG9ja051bWJlcgADAAAJCwxUcGFsbGV0X2NoaWxkX2JvdW50aWVzGHBhbGxldBRFcnJvcgQEVAABDFRQYXJlbnRCb3VudHlOb3RBY3RpdmUAAASkVGhlIHBhcmVudCBib3VudHkgaXMgbm90IGluIGFjdGl2ZSBzdGF0ZS5kSW5zdWZmaWNpZW50Qm91bnR5QmFsYW5jZQABBORUaGUgYm91bnR5IGJhbGFuY2UgaXMgbm90IGVub3VnaCB0byBhZGQgbmV3IGNoaWxkLWJvdW50eS5QVG9vTWFueUNoaWxkQm91bnRpZXMAAgQNAU51bWJlciBvZiBjaGlsZCBib3VudGllcyBleGNlZWRzIGxpbWl0IGBNYXhBY3RpdmVDaGlsZEJvdW50eUNvdW50YC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuDQsIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZTRSZWFkeVNvbHV0aW9uCCRBY2NvdW50SWQAKE1heFdpbm5lcnMAAAwBIHN1cHBvcnRzEQsBmEJvdW5kZWRTdXBwb3J0czxBY2NvdW50SWQsIE1heFdpbm5lcnM+AAEUc2NvcmWlBAE0RWxlY3Rpb25TY29yZQABHGNvbXB1dGXBBwE8RWxlY3Rpb25Db21wdXRlAAARCwxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAbUEBFMAAAQAsQQBGFZlYzxUPgAAFQsIkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZTRSb3VuZFNuYXBzaG90CCRBY2NvdW50SWQBADBEYXRhUHJvdmlkZXIBGQsACAEYdm90ZXJzHQsBRFZlYzxEYXRhUHJvdmlkZXI+AAEcdGFyZ2V0c/UBAThWZWM8QWNjb3VudElkPgAAGQsAAAQMACxNCQAdCwAAAhkLACELDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBJQsEUwAABAApCwEYVmVjPFQ+AAAlCwAABAylBBAQACkLAAACJQsALQsMkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZRhzaWduZWRAU2lnbmVkU3VibWlzc2lvbgwkQWNjb3VudElkAQAcQmFsYW5jZQEYIFNvbHV0aW9uAdkDABABDHdobwABJEFjY291bnRJZAABHGRlcG9zaXQYARxCYWxhbmNlAAEwcmF3X3NvbHV0aW9u1QMBVFJhd1NvbHV0aW9uPFNvbHV0aW9uPgABIGNhbGxfZmVlGAEcQmFsYW5jZQAAMQsMkHBhbGxldF9lbGVjdGlvbl9wcm92aWRlcl9tdWx0aV9waGFzZRhwYWxsZXQURXJyb3IEBFQAATxoUHJlRGlzcGF0Y2hFYXJseVN1Ym1pc3Npb24AAARkU3VibWlzc2lvbiB3YXMgdG9vIGVhcmx5LmxQcmVEaXNwYXRjaFdyb25nV2lubmVyQ291bnQAAQSIV3JvbmcgbnVtYmVyIG9mIHdpbm5lcnMgcHJlc2VudGVkLmRQcmVEaXNwYXRjaFdlYWtTdWJtaXNzaW9uAAIEkFN1Ym1pc3Npb24gd2FzIHRvbyB3ZWFrLCBzY29yZS13aXNlLjxTaWduZWRRdWV1ZUZ1bGwAAwRJAVRoZSBxdWV1ZSB3YXMgZnVsbCwgYW5kIHRoZSBzb2x1dGlvbiB3YXMgbm90IGJldHRlciB0aGFuIGFueSBvZiB0aGUgZXhpc3Rpbmcgb25lcy5YU2lnbmVkQ2Fubm90UGF5RGVwb3NpdAAEBJRUaGUgb3JpZ2luIGZhaWxlZCB0byBwYXkgdGhlIGRlcG9zaXQuUFNpZ25lZEludmFsaWRXaXRuZXNzAAUEoFdpdG5lc3MgZGF0YSB0byBkaXNwYXRjaGFibGUgaXMgaW52YWxpZC5MU2lnbmVkVG9vTXVjaFdlaWdodAAGBLhUaGUgc2lnbmVkIHN1Ym1pc3Npb24gY29uc3VtZXMgdG9vIG11Y2ggd2VpZ2h0PE9jd0NhbGxXcm9uZ0VyYQAHBJhPQ1cgc3VibWl0dGVkIHNvbHV0aW9uIGZvciB3cm9uZyByb3VuZFxNaXNzaW5nU25hcHNob3RNZXRhZGF0YQAIBKhTbmFwc2hvdCBtZXRhZGF0YSBzaG91bGQgZXhpc3QgYnV0IGRpZG4ndC5YSW52YWxpZFN1Ym1pc3Npb25JbmRleAAJBNBgU2VsZjo6aW5zZXJ0X3N1Ym1pc3Npb25gIHJldHVybmVkIGFuIGludmFsaWQgaW5kZXguOENhbGxOb3RBbGxvd2VkAAoEmFRoZSBjYWxsIGlzIG5vdCBhbGxvd2VkIGF0IHRoaXMgcG9pbnQuOEZhbGxiYWNrRmFpbGVkAAsETFRoZSBmYWxsYmFjayBmYWlsZWQsQm91bmROb3RNZXQADARIU29tZSBib3VuZCBub3QgbWV0OFRvb01hbnlXaW5uZXJzAA0EnFN1Ym1pdHRlZCBzb2x1dGlvbiBoYXMgdG9vIG1hbnkgd2lubmVyc2RQcmVEaXNwYXRjaERpZmZlcmVudFJvdW5kAA4EtFN1bWlzc2lvbiB3YXMgcHJlcGFyZWQgZm9yIGEgZGlmZmVyZW50IHJvdW5kLgQNAUVycm9yIG9mIHRoZSBwYWxsZXQgdGhhdCBjYW4gYmUgcmV0dXJuZWQgaW4gcmVzcG9uc2UgdG8gZGlzcGF0Y2hlcy41CwxAcGFsbGV0X2JhZ3NfbGlzdBBsaXN0EE5vZGUIBFQABEkAABQBCGlkAAEwVDo6QWNjb3VudElkAAEQcHJldiECAVBPcHRpb248VDo6QWNjb3VudElkPgABEG5leHQhAgFQT3B0aW9uPFQ6OkFjY291bnRJZD4AASRiYWdfdXBwZXIsASBUOjpTY29yZQABFHNjb3JlLAEgVDo6U2NvcmUAADkLDEBwYWxsZXRfYmFnc19saXN0EGxpc3QMQmFnCARUAARJAAAIARBoZWFkIQIBUE9wdGlvbjxUOjpBY2NvdW50SWQ+AAEQdGFpbCECAVBPcHRpb248VDo6QWNjb3VudElkPgAAPQsAAAIsAEELDEBwYWxsZXRfYmFnc19saXN0GHBhbGxldBRFcnJvcggEVAAESQABBBBMaXN0BABFCwEkTGlzdEVycm9yAAAEtEEgZXJyb3IgaW4gdGhlIGxpc3QgaW50ZXJmYWNlIGltcGxlbWVudGF0aW9uLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5FCwxAcGFsbGV0X2JhZ3NfbGlzdBBsaXN0JExpc3RFcnJvcgABECREdXBsaWNhdGUAAAAoTm90SGVhdmllcgABADBOb3RJblNhbWVCYWcAAgAwTm9kZU5vdEZvdW5kAAMAAEkLCFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyhQb29sTWVtYmVyBARUAAAQARxwb29sX2lkEAEYUG9vbElkAAEYcG9pbnRzGAEwQmFsYW5jZU9mPFQ+AAFwbGFzdF9yZWNvcmRlZF9yZXdhcmRfY291bnRlclUHAUBUOjpSZXdhcmRDb3VudGVyAAE4dW5ib25kaW5nX2VyYXNNCwHgQm91bmRlZEJUcmVlTWFwPEVyYUluZGV4LCBCYWxhbmNlT2Y8VD4sIFQ6Ok1heFVuYm9uZGluZz4AAE0LDExib3VuZGVkX2NvbGxlY3Rpb25zRGJvdW5kZWRfYnRyZWVfbWFwPEJvdW5kZWRCVHJlZU1hcAwESwEQBFYBGARTAAAEAFELAThCVHJlZU1hcDxLLCBWPgAAUQsEIEJUcmVlTWFwCARLARAEVgEYAAQARQoAAABVCwhccGFsbGV0X25vbWluYXRpb25fcG9vbHM8Qm9uZGVkUG9vbElubmVyBARUAAAUAShjb21taXNzaW9uWQsBNENvbW1pc3Npb248VD4AAThtZW1iZXJfY291bnRlchABDHUzMgABGHBvaW50cxgBMEJhbGFuY2VPZjxUPgABFHJvbGVzZQsBXFBvb2xSb2xlczxUOjpBY2NvdW50SWQ+AAEUc3RhdGXRBAEkUG9vbFN0YXRlAABZCwhccGFsbGV0X25vbWluYXRpb25fcG9vbHMoQ29tbWlzc2lvbgQEVAAAFAEcY3VycmVudOkEAXxPcHRpb248KFBlcmJpbGwsIFQ6OkFjY291bnRJZCk+AAEMbWF4XQsBPE9wdGlvbjxQZXJiaWxsPgABLGNoYW5nZV9yYXRlYQsBvE9wdGlvbjxDb21taXNzaW9uQ2hhbmdlUmF0ZTxCbG9ja051bWJlckZvcjxUPj4+AAE0dGhyb3R0bGVfZnJvbY0CAWRPcHRpb248QmxvY2tOdW1iZXJGb3I8VD4+AAFAY2xhaW1fcGVybWlzc2lvbvUEAbxPcHRpb248Q29tbWlzc2lvbkNsYWltUGVybWlzc2lvbjxUOjpBY2NvdW50SWQ+PgAAXQsEGE9wdGlvbgQEVAGsAQgQTm9uZQAAABBTb21lBACsAAABAABhCwQYT3B0aW9uBARUAfEEAQgQTm9uZQAAABBTb21lBADxBAAAAQAAZQsIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzJFBvb2xSb2xlcwQkQWNjb3VudElkAQAAEAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEQcm9vdCECAURPcHRpb248QWNjb3VudElkPgABJG5vbWluYXRvciECAURPcHRpb248QWNjb3VudElkPgABHGJvdW5jZXIhAgFET3B0aW9uPEFjY291bnRJZD4AAGkLCFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyhSZXdhcmRQb29sBARUAAAUAXBsYXN0X3JlY29yZGVkX3Jld2FyZF9jb3VudGVyVQcBQFQ6OlJld2FyZENvdW50ZXIAAWxsYXN0X3JlY29yZGVkX3RvdGFsX3BheW91dHMYATBCYWxhbmNlT2Y8VD4AAVR0b3RhbF9yZXdhcmRzX2NsYWltZWQYATBCYWxhbmNlT2Y8VD4AAWB0b3RhbF9jb21taXNzaW9uX3BlbmRpbmcYATBCYWxhbmNlT2Y8VD4AAWB0b3RhbF9jb21taXNzaW9uX2NsYWltZWQYATBCYWxhbmNlT2Y8VD4AAG0LCFxwYWxsZXRfbm9taW5hdGlvbl9wb29scyBTdWJQb29scwQEVAAACAEYbm9fZXJhcQsBNFVuYm9uZFBvb2w8VD4AASB3aXRoX2VyYXULAQEBQm91bmRlZEJUcmVlTWFwPEVyYUluZGV4LCBVbmJvbmRQb29sPFQ+LCBUb3RhbFVuYm9uZGluZ1Bvb2xzPFQ+PgAAcQsIXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzKFVuYm9uZFBvb2wEBFQAAAgBGHBvaW50cxgBMEJhbGFuY2VPZjxUPgABHGJhbGFuY2UYATBCYWxhbmNlT2Y8VD4AAHULDExib3VuZGVkX2NvbGxlY3Rpb25zRGJvdW5kZWRfYnRyZWVfbWFwPEJvdW5kZWRCVHJlZU1hcAwESwEQBFYBcQsEUwAABAB5CwE4QlRyZWVNYXA8SywgVj4AAHkLBCBCVHJlZU1hcAgESwEQBFYBcQsABAB9CwAAAH0LAAACgQsAgQsAAAQIEHELAIULDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBCARTAAAEADQBGFZlYzxUPgAAiQsMXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzGHBhbGxldBRFcnJvcgQEVAABgDBQb29sTm90Rm91bmQAAASIQSAoYm9uZGVkKSBwb29sIGlkIGRvZXMgbm90IGV4aXN0LkhQb29sTWVtYmVyTm90Rm91bmQAAQRsQW4gYWNjb3VudCBpcyBub3QgYSBtZW1iZXIuSFJld2FyZFBvb2xOb3RGb3VuZAACBCEBQSByZXdhcmQgcG9vbCBkb2VzIG5vdCBleGlzdC4gSW4gYWxsIGNhc2VzIHRoaXMgaXMgYSBzeXN0ZW0gbG9naWMgZXJyb3IuQFN1YlBvb2xzTm90Rm91bmQAAwRoQSBzdWIgcG9vbCBkb2VzIG5vdCBleGlzdC5kQWNjb3VudEJlbG9uZ3NUb090aGVyUG9vbAAECE0BQW4gYWNjb3VudCBpcyBhbHJlYWR5IGRlbGVnYXRpbmcgaW4gYW5vdGhlciBwb29sLiBBbiBhY2NvdW50IG1heSBvbmx5IGJlbG9uZyB0byBvbmU8cG9vbCBhdCBhIHRpbWUuOEZ1bGx5VW5ib25kaW5nAAUIPQFUaGUgbWVtYmVyIGlzIGZ1bGx5IHVuYm9uZGVkIChhbmQgdGh1cyBjYW5ub3QgYWNjZXNzIHRoZSBib25kZWQgYW5kIHJld2FyZCBwb29sqGFueW1vcmUgdG8sIGZvciBleGFtcGxlLCBjb2xsZWN0IHJld2FyZHMpLkRNYXhVbmJvbmRpbmdMaW1pdAAGBAkBVGhlIG1lbWJlciBjYW5ub3QgdW5ib25kIGZ1cnRoZXIgY2h1bmtzIGR1ZSB0byByZWFjaGluZyB0aGUgbGltaXQuRENhbm5vdFdpdGhkcmF3QW55AAcETQFOb25lIG9mIHRoZSBmdW5kcyBjYW4gYmUgd2l0aGRyYXduIHlldCBiZWNhdXNlIHRoZSBib25kaW5nIGR1cmF0aW9uIGhhcyBub3QgcGFzc2VkLkRNaW5pbXVtQm9uZE5vdE1ldAAIFCkBVGhlIGFtb3VudCBkb2VzIG5vdCBtZWV0IHRoZSBtaW5pbXVtIGJvbmQgdG8gZWl0aGVyIGpvaW4gb3IgY3JlYXRlIGEgcG9vbC4AVQFUaGUgZGVwb3NpdG9yIGNhbiBuZXZlciB1bmJvbmQgdG8gYSB2YWx1ZSBsZXNzIHRoYW4gYFBhbGxldDo6ZGVwb3NpdG9yX21pbl9ib25kYC4gVGhlXQFjYWxsZXIgZG9lcyBub3QgaGF2ZSBub21pbmF0aW5nIHBlcm1pc3Npb25zIGZvciB0aGUgcG9vbC4gTWVtYmVycyBjYW4gbmV2ZXIgdW5ib25kIHRvIGFodmFsdWUgYmVsb3cgYE1pbkpvaW5Cb25kYC4wT3ZlcmZsb3dSaXNrAAkEIQFUaGUgdHJhbnNhY3Rpb24gY291bGQgbm90IGJlIGV4ZWN1dGVkIGR1ZSB0byBvdmVyZmxvdyByaXNrIGZvciB0aGUgcG9vbC40Tm90RGVzdHJveWluZwAKCF0BQSBwb29sIG11c3QgYmUgaW4gW2BQb29sU3RhdGU6OkRlc3Ryb3lpbmdgXSBpbiBvcmRlciBmb3IgdGhlIGRlcG9zaXRvciB0byB1bmJvbmQgb3IgZm9yuG90aGVyIG1lbWJlcnMgdG8gYmUgcGVybWlzc2lvbmxlc3NseSB1bmJvbmRlZC4wTm90Tm9taW5hdG9yAAsE9FRoZSBjYWxsZXIgZG9lcyBub3QgaGF2ZSBub21pbmF0aW5nIHBlcm1pc3Npb25zIGZvciB0aGUgcG9vbC5UTm90S2lja2VyT3JEZXN0cm95aW5nAAwEPQFFaXRoZXIgYSkgdGhlIGNhbGxlciBjYW5ub3QgbWFrZSBhIHZhbGlkIGtpY2sgb3IgYikgdGhlIHBvb2wgaXMgbm90IGRlc3Ryb3lpbmcuHE5vdE9wZW4ADQRwVGhlIHBvb2wgaXMgbm90IG9wZW4gdG8gam9pbiBNYXhQb29scwAOBIRUaGUgc3lzdGVtIGlzIG1heGVkIG91dCBvbiBwb29scy44TWF4UG9vbE1lbWJlcnMADwScVG9vIG1hbnkgbWVtYmVycyBpbiB0aGUgcG9vbCBvciBzeXN0ZW0uRENhbk5vdENoYW5nZVN0YXRlABAEiFRoZSBwb29scyBzdGF0ZSBjYW5ub3QgYmUgY2hhbmdlZC5URG9lc05vdEhhdmVQZXJtaXNzaW9uABEEuFRoZSBjYWxsZXIgZG9lcyBub3QgaGF2ZSBhZGVxdWF0ZSBwZXJtaXNzaW9ucy5UTWV0YWRhdGFFeGNlZWRzTWF4TGVuABIErE1ldGFkYXRhIGV4Y2VlZHMgW2BDb25maWc6Ok1heE1ldGFkYXRhTGVuYF0kRGVmZW5zaXZlBACNCwE4RGVmZW5zaXZlRXJyb3IAEwgxAVNvbWUgZXJyb3Igb2NjdXJyZWQgdGhhdCBzaG91bGQgbmV2ZXIgaGFwcGVuLiBUaGlzIHNob3VsZCBiZSByZXBvcnRlZCB0byB0aGUwbWFpbnRhaW5lcnMunFBhcnRpYWxVbmJvbmROb3RBbGxvd2VkUGVybWlzc2lvbmxlc3NseQAUBLxQYXJ0aWFsIHVuYm9uZGluZyBub3cgYWxsb3dlZCBwZXJtaXNzaW9ubGVzc2x5LlxNYXhDb21taXNzaW9uUmVzdHJpY3RlZAAVBB0BVGhlIHBvb2wncyBtYXggY29tbWlzc2lvbiBjYW5ub3QgYmUgc2V0IGhpZ2hlciB0aGFuIHRoZSBleGlzdGluZyB2YWx1ZS5gQ29tbWlzc2lvbkV4Y2VlZHNNYXhpbXVtABYE7FRoZSBzdXBwbGllZCBjb21taXNzaW9uIGV4Y2VlZHMgdGhlIG1heCBhbGxvd2VkIGNvbW1pc3Npb24ueENvbW1pc3Npb25FeGNlZWRzR2xvYmFsTWF4aW11bQAXBOhUaGUgc3VwcGxpZWQgY29tbWlzc2lvbiBleGNlZWRzIGdsb2JhbCBtYXhpbXVtIGNvbW1pc3Npb24uZENvbW1pc3Npb25DaGFuZ2VUaHJvdHRsZWQAGAQJAU5vdCBlbm91Z2ggYmxvY2tzIGhhdmUgc3VycGFzc2VkIHNpbmNlIHRoZSBsYXN0IGNvbW1pc3Npb24gdXBkYXRlLnhDb21taXNzaW9uQ2hhbmdlUmF0ZU5vdEFsbG93ZWQAGQQBAVRoZSBzdWJtaXR0ZWQgY2hhbmdlcyB0byBjb21taXNzaW9uIGNoYW5nZSByYXRlIGFyZSBub3QgYWxsb3dlZC5MTm9QZW5kaW5nQ29tbWlzc2lvbgAaBKBUaGVyZSBpcyBubyBwZW5kaW5nIGNvbW1pc3Npb24gdG8gY2xhaW0uWE5vQ29tbWlzc2lvbkN1cnJlbnRTZXQAGwSMTm8gY29tbWlzc2lvbiBjdXJyZW50IGhhcyBiZWVuIHNldC4sUG9vbElkSW5Vc2UAHARkUG9vbCBpZCBjdXJyZW50bHkgaW4gdXNlLjRJbnZhbGlkUG9vbElkAB0EnFBvb2wgaWQgcHJvdmlkZWQgaXMgbm90IGNvcnJlY3QvdXNhYmxlLkxCb25kRXh0cmFSZXN0cmljdGVkAB4E/EJvbmRpbmcgZXh0cmEgaXMgcmVzdHJpY3RlZCB0byB0aGUgZXhhY3QgcGVuZGluZyByZXdhcmQgYW1vdW50LjxOb3RoaW5nVG9BZGp1c3QAHwSwTm8gaW1iYWxhbmNlIGluIHRoZSBFRCBkZXBvc2l0IGZvciB0aGUgcG9vbC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQujQsMXHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzGHBhbGxldDhEZWZlbnNpdmVFcnJvcgABFGhOb3RFbm91Z2hTcGFjZUluVW5ib25kUG9vbAAAADBQb29sTm90Rm91bmQAAQBIUmV3YXJkUG9vbE5vdEZvdW5kAAIAQFN1YlBvb2xzTm90Rm91bmQAAwBwQm9uZGVkU3Rhc2hLaWxsZWRQcmVtYXR1cmVseQAEAACRCwxMcGFsbGV0X2Zhc3RfdW5zdGFrZRR0eXBlczhVbnN0YWtlUmVxdWVzdAQEVAAACAEcc3Rhc2hlc5ULAdhCb3VuZGVkVmVjPChUOjpBY2NvdW50SWQsIEJhbGFuY2VPZjxUPiksIFQ6OkJhdGNoU2l6ZT4AARxjaGVja2VkmQsBkEJvdW5kZWRWZWM8RXJhSW5kZXgsIE1heENoZWNraW5nPFQ+PgAAlQsMTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAHBBARTAAAEAL0EARhWZWM8VD4AAJkLDExib3VuZGVkX2NvbGxlY3Rpb25zLGJvdW5kZWRfdmVjKEJvdW5kZWRWZWMIBFQBEARTAAAEAAkCARhWZWM8VD4AAJ0LDExwYWxsZXRfZmFzdF91bnN0YWtlGHBhbGxldBRFcnJvcgQEVAABGDROb3RDb250cm9sbGVyAAAMuFRoZSBwcm92aWRlZCBDb250cm9sbGVyIGFjY291bnQgd2FzIG5vdCBmb3VuZC4AwFRoaXMgbWVhbnMgdGhhdCB0aGUgZ2l2ZW4gYWNjb3VudCBpcyBub3QgYm9uZGVkLjRBbHJlYWR5UXVldWVkAAEErFRoZSBib25kZWQgYWNjb3VudCBoYXMgYWxyZWFkeSBiZWVuIHF1ZXVlZC44Tm90RnVsbHlCb25kZWQAAgS8VGhlIGJvbmRlZCBhY2NvdW50IGhhcyBhY3RpdmUgdW5sb2NraW5nIGNodW5rcy4kTm90UXVldWVkAAMEtFRoZSBwcm92aWRlZCB1bi1zdGFrZXIgaXMgbm90IGluIHRoZSBgUXVldWVgLixBbHJlYWR5SGVhZAAEBAUBVGhlIHByb3ZpZGVkIHVuLXN0YWtlciBpcyBhbHJlYWR5IGluIEhlYWQsIGFuZCBjYW5ub3QgZGVyZWdpc3Rlci44Q2FsbE5vdEFsbG93ZWQABQQdAVRoZSBjYWxsIGlzIG5vdCBhbGxvd2VkIGF0IHRoaXMgcG9pbnQgYmVjYXVzZSB0aGUgcGFsbGV0IGlzIG5vdCBhY3RpdmUuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LqELDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnM0Y29uZmlndXJhdGlvbkRIb3N0Q29uZmlndXJhdGlvbgQsQmxvY2tOdW1iZXIBEAC0ATRtYXhfY29kZV9zaXplEAEMdTMyAAFIbWF4X2hlYWRfZGF0YV9zaXplEAEMdTMyAAFYbWF4X3Vwd2FyZF9xdWV1ZV9jb3VudBABDHUzMgABVG1heF91cHdhcmRfcXVldWVfc2l6ZRABDHUzMgABXG1heF91cHdhcmRfbWVzc2FnZV9zaXplEAEMdTMyAAGQbWF4X3Vwd2FyZF9tZXNzYWdlX251bV9wZXJfY2FuZGlkYXRlEAEMdTMyAAGIaHJtcF9tYXhfbWVzc2FnZV9udW1fcGVyX2NhbmRpZGF0ZRABDHUzMgABbHZhbGlkYXRpb25fdXBncmFkZV9jb29sZG93bhABLEJsb2NrTnVtYmVyAAFgdmFsaWRhdGlvbl91cGdyYWRlX2RlbGF5EAEsQmxvY2tOdW1iZXIAAVBhc3luY19iYWNraW5nX3BhcmFtcwUFAUhBc3luY0JhY2tpbmdQYXJhbXMAATBtYXhfcG92X3NpemUQAQx1MzIAAWRtYXhfZG93bndhcmRfbWVzc2FnZV9zaXplEAEMdTMyAAGQaHJtcF9tYXhfcGFyYWNoYWluX291dGJvdW5kX2NoYW5uZWxzEAEMdTMyAAFMaHJtcF9zZW5kZXJfZGVwb3NpdBgBHEJhbGFuY2UAAVhocm1wX3JlY2lwaWVudF9kZXBvc2l0GAEcQmFsYW5jZQABZGhybXBfY2hhbm5lbF9tYXhfY2FwYWNpdHkQAQx1MzIAAWxocm1wX2NoYW5uZWxfbWF4X3RvdGFsX3NpemUQAQx1MzIAAYxocm1wX21heF9wYXJhY2hhaW5faW5ib3VuZF9jaGFubmVscxABDHUzMgABdGhybXBfY2hhbm5lbF9tYXhfbWVzc2FnZV9zaXplEAEMdTMyAAE8ZXhlY3V0b3JfcGFyYW1zCQUBOEV4ZWN1dG9yUGFyYW1zAAFUY29kZV9yZXRlbnRpb25fcGVyaW9kEAEsQmxvY2tOdW1iZXIAAThjb3JldGltZV9jb3JlcxABDHUzMgABRG9uX2RlbWFuZF9yZXRyaWVzEAEMdTMyAAFgb25fZGVtYW5kX3F1ZXVlX21heF9zaXplEAEMdTMyAAGIb25fZGVtYW5kX3RhcmdldF9xdWV1ZV91dGlsaXphdGlvbqwBHFBlcmJpbGwAAWRvbl9kZW1hbmRfZmVlX3ZhcmlhYmlsaXR5rAEcUGVyYmlsbAABSG9uX2RlbWFuZF9iYXNlX2ZlZRgBHEJhbGFuY2UAATRvbl9kZW1hbmRfdHRsEAEsQmxvY2tOdW1iZXIAAWBncm91cF9yb3RhdGlvbl9mcmVxdWVuY3kQASxCbG9ja051bWJlcgABZHBhcmFzX2F2YWlsYWJpbGl0eV9wZXJpb2QQASxCbG9ja051bWJlcgABUHNjaGVkdWxpbmdfbG9va2FoZWFkEAEMdTMyAAFcbWF4X3ZhbGlkYXRvcnNfcGVyX2NvcmWNAgEsT3B0aW9uPHUzMj4AAThtYXhfdmFsaWRhdG9yc40CASxPcHRpb248dTMyPgABOGRpc3B1dGVfcGVyaW9kEAEwU2Vzc2lvbkluZGV4AAGkZGlzcHV0ZV9wb3N0X2NvbmNsdXNpb25fYWNjZXB0YW5jZV9wZXJpb2QQASxCbG9ja051bWJlcgABNG5vX3Nob3dfc2xvdHMQAQx1MzIAAUBuX2RlbGF5X3RyYW5jaGVzEAEMdTMyAAFoemVyb3RoX2RlbGF5X3RyYW5jaGVfd2lkdGgQAQx1MzIAAUBuZWVkZWRfYXBwcm92YWxzEAEMdTMyAAFgcmVsYXlfdnJmX21vZHVsb19zYW1wbGVzEAEMdTMyAAE4cHZmX3ZvdGluZ190dGwQATBTZXNzaW9uSW5kZXgAAYBtaW5pbXVtX3ZhbGlkYXRpb25fdXBncmFkZV9kZWxheRABLEJsb2NrTnVtYmVyAAFUbWluaW11bV9iYWNraW5nX3ZvdGVzEAEMdTMyAAE0bm9kZV9mZWF0dXJlcz0FATBOb2RlRmVhdHVyZXMAAVhhcHByb3ZhbF92b3RpbmdfcGFyYW1zHQUBUEFwcHJvdmFsVm90aW5nUGFyYW1zAAClCwAAAqkLAKkLAAAECBChCwCtCxBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zNGNvbmZpZ3VyYXRpb24YcGFsbGV0FEVycm9yBARUAAEEPEludmFsaWROZXdWYWx1ZQAABNxUaGUgbmV3IHZhbHVlIGZvciBhIGNvbmZpZ3VyYXRpb24gcGFyYW1ldGVyIGlzIGludmFsaWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LrELAAACRQUAtQsAAAJBAgC5CwxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zGHNoYXJlZGhBbGxvd2VkUmVsYXlQYXJlbnRzVHJhY2tlcggQSGFzaAEwLEJsb2NrTnVtYmVyARAACAEYYnVmZmVyvQsBWFZlY0RlcXVlPChIYXNoLCBIYXNoKT4AATRsYXRlc3RfbnVtYmVyEAEsQmxvY2tOdW1iZXIAAL0LAAACwQsAwQsAAAQIMDAAxQsMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRpbmNsdXNpb25oQXZhaWxhYmlsaXR5Qml0ZmllbGRSZWNvcmQEBE4BEAAIASBiaXRmaWVsZDkFAVBBdmFpbGFiaWxpdHlCaXRmaWVsZAABMHN1Ym1pdHRlZF9hdBABBE4AAMkLDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMkaW5jbHVzaW9ucENhbmRpZGF0ZVBlbmRpbmdBdmFpbGFiaWxpdHkIBEgBMAROARAAIAEQY29yZeEHASRDb3JlSW5kZXgAARBoYXNomQUBNENhbmRpZGF0ZUhhc2gAAShkZXNjcmlwdG9yWQUBWENhbmRpZGF0ZURlc2NyaXB0b3I8SD4AAUhhdmFpbGFiaWxpdHlfdm90ZXM9BQFgQml0VmVjPHU4LCBCaXRPcmRlckxzYjA+AAEcYmFja2Vycz0FAWBCaXRWZWM8dTgsIEJpdE9yZGVyTHNiMD4AAUxyZWxheV9wYXJlbnRfbnVtYmVyEAEETgABQGJhY2tlZF9pbl9udW1iZXIQAQROAAE0YmFja2luZ19ncm91cOUHAShHcm91cEluZGV4AADNCxBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJGluY2x1c2lvbhhwYWxsZXQURXJyb3IEBFQAAXSMVW5zb3J0ZWRPckR1cGxpY2F0ZVZhbGlkYXRvckluZGljZXMAAAToVmFsaWRhdG9yIGluZGljZXMgYXJlIG91dCBvZiBvcmRlciBvciBjb250YWlucyBkdXBsaWNhdGVzLphVbnNvcnRlZE9yRHVwbGljYXRlRGlzcHV0ZVN0YXRlbWVudFNldAABBPhEaXNwdXRlIHN0YXRlbWVudCBzZXRzIGFyZSBvdXQgb2Ygb3JkZXIgb3IgY29udGFpbiBkdXBsaWNhdGVzLoxVbnNvcnRlZE9yRHVwbGljYXRlQmFja2VkQ2FuZGlkYXRlcwACBBkBQmFja2VkIGNhbmRpZGF0ZXMgYXJlIG91dCBvZiBvcmRlciAoY29yZSBpbmRleCkgb3IgY29udGFpbiBkdXBsaWNhdGVzLlRVbmV4cGVjdGVkUmVsYXlQYXJlbnQAAwQpAUEgZGlmZmVyZW50IHJlbGF5IHBhcmVudCB3YXMgcHJvdmlkZWQgY29tcGFyZWQgdG8gdGhlIG9uLWNoYWluIHN0b3JlZCBvbmUuRFdyb25nQml0ZmllbGRTaXplAAQEqEF2YWlsYWJpbGl0eSBiaXRmaWVsZCBoYXMgdW5leHBlY3RlZCBzaXplLkBCaXRmaWVsZEFsbFplcm9zAAUEgEJpdGZpZWxkIGNvbnNpc3RzIG9mIHplcm9zIG9ubHkucEJpdGZpZWxkRHVwbGljYXRlT3JVbm9yZGVyZWQABgRNAU11bHRpcGxlIGJpdGZpZWxkcyBzdWJtaXR0ZWQgYnkgc2FtZSB2YWxpZGF0b3Igb3IgdmFsaWRhdG9ycyBvdXQgb2Ygb3JkZXIgYnkgaW5kZXguZFZhbGlkYXRvckluZGV4T3V0T2ZCb3VuZHMABwR4VmFsaWRhdG9yIGluZGV4IG91dCBvZiBib3VuZHMuYEludmFsaWRCaXRmaWVsZFNpZ25hdHVyZQAIBERJbnZhbGlkIHNpZ25hdHVyZVBVbnNjaGVkdWxlZENhbmRpZGF0ZQAJBKxDYW5kaWRhdGUgc3VibWl0dGVkIGJ1dCBwYXJhIG5vdCBzY2hlZHVsZWQugENhbmRpZGF0ZVNjaGVkdWxlZEJlZm9yZVBhcmFGcmVlAAoEMQFDYW5kaWRhdGUgc2NoZWR1bGVkIGRlc3BpdGUgcGVuZGluZyBjYW5kaWRhdGUgYWxyZWFkeSBleGlzdGluZyBmb3IgdGhlIHBhcmEuTFNjaGVkdWxlZE91dE9mT3JkZXIACwR0U2NoZWR1bGVkIGNvcmVzIG91dCBvZiBvcmRlci5ASGVhZERhdGFUb29MYXJnZQAMBKRIZWFkIGRhdGEgZXhjZWVkcyB0aGUgY29uZmlndXJlZCBtYXhpbXVtLlBQcmVtYXR1cmVDb2RlVXBncmFkZQANBGRDb2RlIHVwZ3JhZGUgcHJlbWF0dXJlbHkuPE5ld0NvZGVUb29MYXJnZQAOBGBPdXRwdXQgY29kZSBpcyB0b28gbGFyZ2VURGlzYWxsb3dlZFJlbGF5UGFyZW50AA8I7FRoZSBjYW5kaWRhdGUncyByZWxheS1wYXJlbnQgd2FzIG5vdCBhbGxvd2VkLiBFaXRoZXIgaXQgd2FzJQFub3QgcmVjZW50IGVub3VnaCBvciBpdCBkaWRuJ3QgYWR2YW5jZSBiYXNlZCBvbiB0aGUgbGFzdCBwYXJhY2hhaW4gYmxvY2suREludmFsaWRBc3NpZ25tZW50ABAIFQFGYWlsZWQgdG8gY29tcHV0ZSBncm91cCBpbmRleCBmb3IgdGhlIGNvcmU6IGVpdGhlciBpdCdzIG91dCBvZiBib3VuZHPob3IgdGhlIHJlbGF5IHBhcmVudCBkb2Vzbid0IGJlbG9uZyB0byB0aGUgY3VycmVudCBzZXNzaW9uLkRJbnZhbGlkR3JvdXBJbmRleAARBJxJbnZhbGlkIGdyb3VwIGluZGV4IGluIGNvcmUgYXNzaWdubWVudC5MSW5zdWZmaWNpZW50QmFja2luZwASBJBJbnN1ZmZpY2llbnQgKG5vbi1tYWpvcml0eSkgYmFja2luZy44SW52YWxpZEJhY2tpbmcAEwTkSW52YWxpZCAoYmFkIHNpZ25hdHVyZSwgdW5rbm93biB2YWxpZGF0b3IsIGV0Yy4pIGJhY2tpbmcuRE5vdENvbGxhdG9yU2lnbmVkABQEaENvbGxhdG9yIGRpZCBub3Qgc2lnbiBQb1YuaFZhbGlkYXRpb25EYXRhSGFzaE1pc21hdGNoABUExFRoZSB2YWxpZGF0aW9uIGRhdGEgaGFzaCBkb2VzIG5vdCBtYXRjaCBleHBlY3RlZC6ASW5jb3JyZWN0RG93bndhcmRNZXNzYWdlSGFuZGxpbmcAFgTYVGhlIGRvd253YXJkIG1lc3NhZ2UgcXVldWUgaXMgbm90IHByb2Nlc3NlZCBjb3JyZWN0bHkuVEludmFsaWRVcHdhcmRNZXNzYWdlcwAXBB0BQXQgbGVhc3Qgb25lIHVwd2FyZCBtZXNzYWdlIHNlbnQgZG9lcyBub3QgcGFzcyB0aGUgYWNjZXB0YW5jZSBjcml0ZXJpYS5gSHJtcFdhdGVybWFya01pc2hhbmRsaW5nABgEEQFUaGUgY2FuZGlkYXRlIGRpZG4ndCBmb2xsb3cgdGhlIHJ1bGVzIG9mIEhSTVAgd2F0ZXJtYXJrIGFkdmFuY2VtZW50LkxJbnZhbGlkT3V0Ym91bmRIcm1wABkE1FRoZSBIUk1QIG1lc3NhZ2VzIHNlbnQgYnkgdGhlIGNhbmRpZGF0ZSBpcyBub3QgdmFsaWQuZEludmFsaWRWYWxpZGF0aW9uQ29kZUhhc2gAGgTcVGhlIHZhbGlkYXRpb24gY29kZSBoYXNoIG9mIHRoZSBjYW5kaWRhdGUgaXMgbm90IHZhbGlkLkBQYXJhSGVhZE1pc21hdGNoABsIVQFUaGUgYHBhcmFfaGVhZGAgaGFzaCBpbiB0aGUgY2FuZGlkYXRlIGRlc2NyaXB0b3IgZG9lc24ndCBtYXRjaCB0aGUgaGFzaCBvZiB0aGUgYWN0dWFsdHBhcmEgaGVhZCBpbiB0aGUgY29tbWl0bWVudHMubEJpdGZpZWxkUmVmZXJlbmNlc0ZyZWVkQ29yZQAcDKBBIGJpdGZpZWxkIHRoYXQgcmVmZXJlbmNlcyBhIGZyZWVkIGNvcmUsuGVpdGhlciBpbnRlbnRpb25hbGx5IG9yIGFzIHBhcnQgb2YgYSBjb25jbHVkZWRAaW52YWxpZCBkaXNwdXRlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7RCwxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NkxTY3JhcGVkT25DaGFpblZvdGVzBARIATAADAEcc2Vzc2lvbhABMFNlc3Npb25JbmRleAABgGJhY2tpbmdfdmFsaWRhdG9yc19wZXJfY2FuZGlkYXRl1QsBHQFWZWM8KENhbmRpZGF0ZVJlY2VpcHQ8SD4sIFZlYzwoVmFsaWRhdG9ySW5kZXgsIFZhbGlkaXR5QXR0ZXN0YXRpb24pPikKPgABIGRpc3B1dGVzkQUBYE11bHRpRGlzcHV0ZVN0YXRlbWVudFNldAAA1QsAAALZCwDZCwAABAjdB90LAN0LAAAC4QsA4QsAAAQIRQWNBQDlCxBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zOHBhcmFzX2luaGVyZW50GHBhbGxldBRFcnJvcgQEVAABJGRUb29NYW55SW5jbHVzaW9uSW5oZXJlbnRzAAAEzEluY2x1c2lvbiBpbmhlcmVudCBjYWxsZWQgbW9yZSB0aGFuIG9uY2UgcGVyIGJsb2NrLkxJbnZhbGlkUGFyZW50SGVhZGVyAAEIVQFUaGUgaGFzaCBvZiB0aGUgc3VibWl0dGVkIHBhcmVudCBoZWFkZXIgZG9lc24ndCBjb3JyZXNwb25kIHRvIHRoZSBzYXZlZCBibG9jayBoYXNoIG9mLHRoZSBwYXJlbnQuZENhbmRpZGF0ZUNvbmNsdWRlZEludmFsaWQAAgS4RGlzcHV0ZWQgY2FuZGlkYXRlIHRoYXQgd2FzIGNvbmNsdWRlZCBpbnZhbGlkLkhJbmhlcmVudE92ZXJ3ZWlnaHQAAwQJAVRoZSBkYXRhIGdpdmVuIHRvIHRoZSBpbmhlcmVudCB3aWxsIHJlc3VsdCBpbiBhbiBvdmVyd2VpZ2h0IGJsb2NrLpREaXNwdXRlU3RhdGVtZW50c1Vuc29ydGVkT3JEdXBsaWNhdGVzAAQEvFRoZSBvcmRlcmluZyBvZiBkaXNwdXRlIHN0YXRlbWVudHMgd2FzIGludmFsaWQuOERpc3B1dGVJbnZhbGlkAAUEgEEgZGlzcHV0ZSBzdGF0ZW1lbnQgd2FzIGludmFsaWQuQEJhY2tlZEJ5RGlzYWJsZWQABgS4QSBjYW5kaWRhdGUgd2FzIGJhY2tlZCBieSBhIGRpc2FibGVkIHZhbGlkYXRvclxCYWNrZWRPblVuc2NoZWR1bGVkQ29yZQAHBAEBQSBjYW5kaWRhdGUgd2FzIGJhY2tlZCBldmVuIHRob3VnaCB0aGUgcGFyYWlkIHdhcyBub3Qgc2NoZWR1bGVkLlBVbnNjaGVkdWxlZENhbmRpZGF0ZQAIBHRUb28gbWFueSBjYW5kaWRhdGVzIHN1cHBsaWVkLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7pCwAAArELAO0LAAAC8QsA8QsQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRzY2hlZHVsZXIYcGFsbGV0MENvcmVPY2N1cGllZAQETgEQAQgQRnJlZQAAABRQYXJhcwQA9QsBNFBhcmFzRW50cnk8Tj4AAQAA9QsQbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucyRzY2hlZHVsZXIYcGFsbGV0KFBhcmFzRW50cnkEBE4BEAAMAShhc3NpZ25tZW50+QsBKEFzc2lnbm1lbnQAAVRhdmFpbGFiaWxpdHlfdGltZW91dHMQAQx1MzIAAQx0dGwQAQROAAD5CxBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zJHNjaGVkdWxlchhjb21tb24oQXNzaWdubWVudAABCBBQb29sCAEccGFyYV9pZLkCARhQYXJhSWQAAShjb3JlX2luZGV44QcBJENvcmVJbmRleAAAABBCdWxrBAC5AgEYUGFyYUlkAAEAAP0LBCBCVHJlZU1hcAgESwHhBwRWAQEMAAQABQwAAAABDAAAAvULAAUMAAACCQwACQwAAAQI4QcBDAANDAxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzXFB2ZkNoZWNrQWN0aXZlVm90ZVN0YXRlBCxCbG9ja051bWJlcgEQABQBMHZvdGVzX2FjY2VwdD0FAWBCaXRWZWM8dTgsIEJpdE9yZGVyTHNiMD4AATB2b3Rlc19yZWplY3Q9BQFgQml0VmVjPHU4LCBCaXRPcmRlckxzYjA+AAEMYWdlEAEwU2Vzc2lvbkluZGV4AAEoY3JlYXRlZF9hdBABLEJsb2NrTnVtYmVyAAEYY2F1c2VzEQwBfFZlYzxQdmZDaGVja0NhdXNlPEJsb2NrTnVtYmVyPj4AABEMAAACFQwAFQwMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhczRQdmZDaGVja0NhdXNlBCxCbG9ja051bWJlcgEQAQgoT25ib2FyZGluZwQAuQIBGFBhcmFJZAAAABxVcGdyYWRlDAEIaWS5AgEYUGFyYUlkAAEsaW5jbHVkZWRfYXQQASxCbG9ja051bWJlcgABMHNldF9nb19haGVhZBkMAShTZXRHb0FoZWFkAAEAABkMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXMoU2V0R29BaGVhZAABCAxZZXMAAAAITm8AAQAAHQwAAAJlBQAhDAAAArkCACUMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMUcGFyYXM0UGFyYUxpZmVjeWNsZQABHChPbmJvYXJkaW5nAAAAKFBhcmF0aHJlYWQAAQAkUGFyYWNoYWluAAIATFVwZ3JhZGluZ1BhcmF0aHJlYWQAAwBQRG93bmdyYWRpbmdQYXJhY2hhaW4ABABUT2ZmYm9hcmRpbmdQYXJhdGhyZWFkAAUAUE9mZmJvYXJkaW5nUGFyYWNoYWluAAYAACkMAAAECLkCEAAtDAxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzQFBhcmFQYXN0Q29kZU1ldGEEBE4BEAAIATR1cGdyYWRlX3RpbWVzMQwBYFZlYzxSZXBsYWNlbWVudFRpbWVzPE4+PgABLGxhc3RfcHJ1bmVkjQIBJE9wdGlvbjxOPgAAMQwAAAI1DAA1DAxscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzQFJlcGxhY2VtZW50VGltZXMEBE4BEAAIASxleHBlY3RlZF9hdBABBE4AATBhY3RpdmF0ZWRfYXQQAQROAAA5DAAAAikMAD0MDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2OFVwZ3JhZGVHb0FoZWFkAAEIFEFib3J0AAAAHEdvQWhlYWQAAQAAQQwMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZIVXBncmFkZVJlc3RyaWN0aW9uAAEEHFByZXNlbnQAAAAARQwMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxRwYXJhczxQYXJhR2VuZXNpc0FyZ3MAAAwBMGdlbmVzaXNfaGVhZIUFASBIZWFkRGF0YQABPHZhbGlkYXRpb25fY29kZYEFAThWYWxpZGF0aW9uQ29kZQABJHBhcmFfa2luZHgBIFBhcmFLaW5kAABJDBBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zFHBhcmFzGHBhbGxldBRFcnJvcgQEVAABMDROb3RSZWdpc3RlcmVkAAAElFBhcmEgaXMgbm90IHJlZ2lzdGVyZWQgaW4gb3VyIHN5c3RlbS40Q2Fubm90T25ib2FyZAABBBUBUGFyYSBjYW5ub3QgYmUgb25ib2FyZGVkIGJlY2F1c2UgaXQgaXMgYWxyZWFkeSB0cmFja2VkIGJ5IG91ciBzeXN0ZW0uOENhbm5vdE9mZmJvYXJkAAIEnFBhcmEgY2Fubm90IGJlIG9mZmJvYXJkZWQgYXQgdGhpcyB0aW1lLjRDYW5ub3RVcGdyYWRlAAME1FBhcmEgY2Fubm90IGJlIHVwZ3JhZGVkIHRvIGEgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4uPENhbm5vdERvd25ncmFkZQAEBNBQYXJhIGNhbm5vdCBiZSBkb3duZ3JhZGVkIHRvIGFuIG9uLWRlbWFuZCBwYXJhY2hhaW4uWFB2ZkNoZWNrU3RhdGVtZW50U3RhbGUABQSwVGhlIHN0YXRlbWVudCBmb3IgUFZGIHByZS1jaGVja2luZyBpcyBzdGFsZS5cUHZmQ2hlY2tTdGF0ZW1lbnRGdXR1cmUABgTsVGhlIHN0YXRlbWVudCBmb3IgUFZGIHByZS1jaGVja2luZyBpcyBmb3IgYSBmdXR1cmUgc2Vzc2lvbi6EUHZmQ2hlY2tWYWxpZGF0b3JJbmRleE91dE9mQm91bmRzAAcEpENsYWltZWQgdmFsaWRhdG9yIGluZGV4IGlzIG91dCBvZiBib3VuZHMuYFB2ZkNoZWNrSW52YWxpZFNpZ25hdHVyZQAIBMhUaGUgc2lnbmF0dXJlIGZvciB0aGUgUFZGIHByZS1jaGVja2luZyBpcyBpbnZhbGlkLkhQdmZDaGVja0RvdWJsZVZvdGUACQSwVGhlIGdpdmVuIHZhbGlkYXRvciBhbHJlYWR5IGhhcyBjYXN0IGEgdm90ZS5YUHZmQ2hlY2tTdWJqZWN0SW52YWxpZAAKBPRUaGUgZ2l2ZW4gUFZGIGRvZXMgbm90IGV4aXN0IGF0IHRoZSBtb21lbnQgb2YgcHJvY2VzcyBhIHZvdGUuRENhbm5vdFVwZ3JhZGVDb2RlAAsEzFBhcmFjaGFpbiBjYW5ub3QgY3VycmVudGx5IHNjaGVkdWxlIGEgY29kZSB1cGdyYWRlLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC5NDAAAAlEMAFEMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMsaW5pdGlhbGl6ZXJUQnVmZmVyZWRTZXNzaW9uQ2hhbmdlAAAMASh2YWxpZGF0b3JztQsBQFZlYzxWYWxpZGF0b3JJZD4AARhxdWV1ZWS1CwFAVmVjPFZhbGlkYXRvcklkPgABNHNlc3Npb25faW5kZXgQATBTZXNzaW9uSW5kZXgAAFUMAAACWQwAWQwIYHBvbGthZG90X2NvcmVfcHJpbWl0aXZlc1hJbmJvdW5kRG93bndhcmRNZXNzYWdlBCxCbG9ja051bWJlcgEQAAgBHHNlbnRfYXQQASxCbG9ja051bWJlcgABDG1zZzQBPERvd253YXJkTWVzc2FnZQAAXQwMbHBvbGthZG90X3J1bnRpbWVfcGFyYWNoYWlucxBocm1wWEhybXBPcGVuQ2hhbm5lbFJlcXVlc3QAABgBJGNvbmZpcm1lZHgBEGJvb2wAARBfYWdlEAEwU2Vzc2lvbkluZGV4AAE4c2VuZGVyX2RlcG9zaXQYARxCYWxhbmNlAAFAbWF4X21lc3NhZ2Vfc2l6ZRABDHUzMgABMG1heF9jYXBhY2l0eRABDHUzMgABOG1heF90b3RhbF9zaXplEAEMdTMyAABhDAAAAsUFAGUMDGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcCxIcm1wQ2hhbm5lbAAAIAEwbWF4X2NhcGFjaXR5EAEMdTMyAAE4bWF4X3RvdGFsX3NpemUQAQx1MzIAAUBtYXhfbWVzc2FnZV9zaXplEAEMdTMyAAEkbXNnX2NvdW50EAEMdTMyAAEodG90YWxfc2l6ZRABDHUzMgABIG1xY19oZWFkyQIBME9wdGlvbjxIYXNoPgABOHNlbmRlcl9kZXBvc2l0GAEcQmFsYW5jZQABRHJlY2lwaWVudF9kZXBvc2l0GAEcQmFsYW5jZQAAaQwAAAJtDABtDAhgcG9sa2Fkb3RfY29yZV9wcmltaXRpdmVzSEluYm91bmRIcm1wTWVzc2FnZQQsQmxvY2tOdW1iZXIBEAAIARxzZW50X2F0EAEsQmxvY2tOdW1iZXIAARBkYXRhNAFQc3Bfc3RkOjp2ZWM6OlZlYzx1OD4AAHEMAAACdQwAdQwAAAQIECEMAHkMEGxwb2xrYWRvdF9ydW50aW1lX3BhcmFjaGFpbnMQaHJtcBhwYWxsZXQURXJyb3IEBFQAAVBUT3BlbkhybXBDaGFubmVsVG9TZWxmAAAExFRoZSBzZW5kZXIgdHJpZWQgdG8gb3BlbiBhIGNoYW5uZWwgdG8gdGhlbXNlbHZlcy58T3BlbkhybXBDaGFubmVsSW52YWxpZFJlY2lwaWVudAABBIhUaGUgcmVjaXBpZW50IGlzIG5vdCBhIHZhbGlkIHBhcmEubE9wZW5Icm1wQ2hhbm5lbFplcm9DYXBhY2l0eQACBHxUaGUgcmVxdWVzdGVkIGNhcGFjaXR5IGlzIHplcm8ujE9wZW5Icm1wQ2hhbm5lbENhcGFjaXR5RXhjZWVkc0xpbWl0AAMEwFRoZSByZXF1ZXN0ZWQgY2FwYWNpdHkgZXhjZWVkcyB0aGUgZ2xvYmFsIGxpbWl0LnhPcGVuSHJtcENoYW5uZWxaZXJvTWVzc2FnZVNpemUABASgVGhlIHJlcXVlc3RlZCBtYXhpbXVtIG1lc3NhZ2Ugc2l6ZSBpcyAwLphPcGVuSHJtcENoYW5uZWxNZXNzYWdlU2l6ZUV4Y2VlZHNMaW1pdAAFBCkBVGhlIG9wZW4gcmVxdWVzdCByZXF1ZXN0ZWQgdGhlIG1lc3NhZ2Ugc2l6ZSB0aGF0IGV4Y2VlZHMgdGhlIGdsb2JhbCBsaW1pdC5wT3BlbkhybXBDaGFubmVsQWxyZWFkeUV4aXN0cwAGBGhUaGUgY2hhbm5lbCBhbHJlYWR5IGV4aXN0c3xPcGVuSHJtcENoYW5uZWxBbHJlYWR5UmVxdWVzdGVkAAcE0FRoZXJlIGlzIGFscmVhZHkgYSByZXF1ZXN0IHRvIG9wZW4gdGhlIHNhbWUgY2hhbm5lbC5wT3BlbkhybXBDaGFubmVsTGltaXRFeGNlZWRlZAAIBB0BVGhlIHNlbmRlciBhbHJlYWR5IGhhcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgYWxsb3dlZCBvdXRib3VuZCBjaGFubmVscy5wQWNjZXB0SHJtcENoYW5uZWxEb2VzbnRFeGlzdAAJBOBUaGUgY2hhbm5lbCBmcm9tIHRoZSBzZW5kZXIgdG8gdGhlIG9yaWdpbiBkb2Vzbid0IGV4aXN0LoRBY2NlcHRIcm1wQ2hhbm5lbEFscmVhZHlDb25maXJtZWQACgSEVGhlIGNoYW5uZWwgaXMgYWxyZWFkeSBjb25maXJtZWQueEFjY2VwdEhybXBDaGFubmVsTGltaXRFeGNlZWRlZAALBCUBVGhlIHJlY2lwaWVudCBhbHJlYWR5IGhhcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgYWxsb3dlZCBpbmJvdW5kIGNoYW5uZWxzLnBDbG9zZUhybXBDaGFubmVsVW5hdXRob3JpemVkAAwEVQFUaGUgb3JpZ2luIHRyaWVzIHRvIGNsb3NlIGEgY2hhbm5lbCB3aGVyZSBpdCBpcyBuZWl0aGVyIHRoZSBzZW5kZXIgbm9yIHRoZSByZWNpcGllbnQubENsb3NlSHJtcENoYW5uZWxEb2VzbnRFeGlzdAANBJxUaGUgY2hhbm5lbCB0byBiZSBjbG9zZWQgZG9lc24ndCBleGlzdC58Q2xvc2VIcm1wQ2hhbm5lbEFscmVhZHlVbmRlcndheQAOBLxUaGUgY2hhbm5lbCBjbG9zZSByZXF1ZXN0IGlzIGFscmVhZHkgcmVxdWVzdGVkLoRDYW5jZWxIcm1wT3BlbkNoYW5uZWxVbmF1dGhvcml6ZWQADwRdAUNhbmNlbGluZyBpcyByZXF1ZXN0ZWQgYnkgbmVpdGhlciB0aGUgc2VuZGVyIG5vciByZWNpcGllbnQgb2YgdGhlIG9wZW4gY2hhbm5lbCByZXF1ZXN0LmhPcGVuSHJtcENoYW5uZWxEb2VzbnRFeGlzdAAQBHxUaGUgb3BlbiByZXF1ZXN0IGRvZXNuJ3QgZXhpc3QufE9wZW5Icm1wQ2hhbm5lbEFscmVhZHlDb25maXJtZWQAEQQtAUNhbm5vdCBjYW5jZWwgYW4gSFJNUCBvcGVuIGNoYW5uZWwgcmVxdWVzdCBiZWNhdXNlIGl0IGlzIGFscmVhZHkgY29uZmlybWVkLjBXcm9uZ1dpdG5lc3MAEgSMVGhlIHByb3ZpZGVkIHdpdG5lc3MgZGF0YSBpcyB3cm9uZy5wQ2hhbm5lbENyZWF0aW9uTm90QXV0aG9yaXplZAATBOhUaGUgY2hhbm5lbCBiZXR3ZWVuIHRoZXNlIHR3byBjaGFpbnMgY2Fubm90IGJlIGF1dGhvcml6ZWQuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0Ln0MAAACRQIAgQwMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYsU2Vzc2lvbkluZm8AADQBYGFjdGl2ZV92YWxpZGF0b3JfaW5kaWNlc7ELAUxWZWM8VmFsaWRhdG9ySW5kZXg+AAEscmFuZG9tX3NlZWQEASBbdTg7IDMyXQABOGRpc3B1dGVfcGVyaW9kEAEwU2Vzc2lvbkluZGV4AAEodmFsaWRhdG9yc4UMAZxJbmRleGVkVmVjPFZhbGlkYXRvckluZGV4LCBWYWxpZGF0b3JJZD4AAThkaXNjb3Zlcnlfa2V5c8kJAWRWZWM8QXV0aG9yaXR5RGlzY292ZXJ5SWQ+AAE8YXNzaWdubWVudF9rZXlzfQwBRFZlYzxBc3NpZ25tZW50SWQ+AAFAdmFsaWRhdG9yX2dyb3Vwc4kMAaxJbmRleGVkVmVjPEdyb3VwSW5kZXgsIFZlYzxWYWxpZGF0b3JJbmRleD4+AAEcbl9jb3JlcxABDHUzMgABaHplcm90aF9kZWxheV90cmFuY2hlX3dpZHRoEAEMdTMyAAFgcmVsYXlfdnJmX21vZHVsb19zYW1wbGVzEAEMdTMyAAFAbl9kZWxheV90cmFuY2hlcxABDHUzMgABNG5vX3Nob3dfc2xvdHMQAQx1MzIAAUBuZWVkZWRfYXBwcm92YWxzEAEMdTMyAACFDAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NihJbmRleGVkVmVjCARLAUUFBFYBQQIABAC1CwEYVmVjPFY+AACJDAxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NihJbmRleGVkVmVjCARLAeUHBFYBsQsABADpCwEYVmVjPFY+AACNDAAABAgQmQUAkQwMTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYwRGlzcHV0ZVN0YXRlBAROARAAEAE4dmFsaWRhdG9yc19mb3I9BQF8Qml0VmVjPHU4LCBiaXR2ZWM6Om9yZGVyOjpMc2IwPgABSHZhbGlkYXRvcnNfYWdhaW5zdD0FAXxCaXRWZWM8dTgsIGJpdHZlYzo6b3JkZXI6OkxzYjA+AAEUc3RhcnQQAQROAAEwY29uY2x1ZGVkX2F0jQIBJE9wdGlvbjxOPgAAlQwEIEJUcmVlU2V0BARUAUUFAAQAsQsAAACZDBBscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGRpc3B1dGVzGHBhbGxldBRFcnJvcgQEVAABJHREdXBsaWNhdGVEaXNwdXRlU3RhdGVtZW50U2V0cwAABKhEdXBsaWNhdGUgZGlzcHV0ZSBzdGF0ZW1lbnQgc2V0cyBwcm92aWRlZC5cQW5jaWVudERpc3B1dGVTdGF0ZW1lbnQAAQSMQW5jaWVudCBkaXNwdXRlIHN0YXRlbWVudCBwcm92aWRlZC5kVmFsaWRhdG9ySW5kZXhPdXRPZkJvdW5kcwACBOhWYWxpZGF0b3IgaW5kZXggb24gc3RhdGVtZW50IGlzIG91dCBvZiBib3VuZHMgZm9yIHNlc3Npb24uQEludmFsaWRTaWduYXR1cmUAAwR8SW52YWxpZCBzaWduYXR1cmUgb24gc3RhdGVtZW50LkhEdXBsaWNhdGVTdGF0ZW1lbnQABATMVmFsaWRhdG9yIHZvdGUgc3VibWl0dGVkIG1vcmUgdGhhbiBvbmNlIHRvIGRpc3B1dGUuSFNpbmdsZVNpZGVkRGlzcHV0ZQAFBMRBIGRpc3B1dGUgd2hlcmUgdGhlcmUgYXJlIG9ubHkgdm90ZXMgb24gb25lIHNpZGUuPE1hbGljaW91c0JhY2tlcgAGBJxBIGRpc3B1dGUgdm90ZSBmcm9tIGEgbWFsaWNpb3VzIGJhY2tlci5MTWlzc2luZ0JhY2tpbmdWb3RlcwAHBOBObyBiYWNraW5nIHZvdGVzIHdlcmUgcHJvdmlkZXMgYWxvbmcgZGlzcHV0ZSBzdGF0ZW1lbnRzLkhVbmNvbmZpcm1lZERpc3B1dGUACASwVW5jb25maXJtZWQgZGlzcHV0ZSBzdGF0ZW1lbnQgc2V0cyBwcm92aWRlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQunQwQTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYgc2xhc2hpbmc4UGVuZGluZ1NsYXNoZXMAAAgBEGtleXOhDAGUQlRyZWVNYXA8VmFsaWRhdG9ySW5kZXgsIFZhbGlkYXRvcklkPgABEGtpbmTZBQFMU2xhc2hpbmdPZmZlbmNlS2luZAAAoQwEIEJUcmVlTWFwCARLAUUFBFYBQQIABAClDAAAAKUMAAACqQwAqQwAAAQIRQVBAgCtDBRscG9sa2Fkb3RfcnVudGltZV9wYXJhY2hhaW5zIGRpc3B1dGVzIHNsYXNoaW5nGHBhbGxldBRFcnJvcgQEVAABGGBJbnZhbGlkS2V5T3duZXJzaGlwUHJvb2YAAASMVGhlIGtleSBvd25lcnNoaXAgcHJvb2YgaXMgaW52YWxpZC5MSW52YWxpZFNlc3Npb25JbmRleAABBKBUaGUgc2Vzc2lvbiBpbmRleCBpcyB0b28gb2xkIG9yIGludmFsaWQuUEludmFsaWRDYW5kaWRhdGVIYXNoAAIEeFRoZSBjYW5kaWRhdGUgaGFzaCBpcyBpbnZhbGlkLlRJbnZhbGlkVmFsaWRhdG9ySW5kZXgAAwgBAVRoZXJlIGlzIG5vIHBlbmRpbmcgc2xhc2ggZm9yIHRoZSBnaXZlbiB2YWxpZGF0b3IgaW5kZXggYW5kIHRpbWUUc2xvdC5gVmFsaWRhdG9ySW5kZXhJZE1pc21hdGNoAAQE0FRoZSB2YWxpZGF0b3IgaW5kZXggZG9lcyBub3QgbWF0Y2ggdGhlIHZhbGlkYXRvciBpZC5cRHVwbGljYXRlU2xhc2hpbmdSZXBvcnQABQQNAVRoZSBnaXZlbiBzbGFzaGluZyByZXBvcnQgaXMgdmFsaWQgYnV0IGFscmVhZHkgcHJldmlvdXNseSByZXBvcnRlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQusQwMXHBvbGthZG90X3J1bnRpbWVfY29tbW9uPHBhcmFzX3JlZ2lzdHJhciBQYXJhSW5mbwgcQWNjb3VudAEAHEJhbGFuY2UBGAAMARxtYW5hZ2VyAAEcQWNjb3VudAABHGRlcG9zaXQYARxCYWxhbmNlAAEYbG9ja2VktQwBME9wdGlvbjxib29sPgAAtQwEGE9wdGlvbgQEVAF4AQgQTm9uZQAAABBTb21lBAB4AAABAAC5DBBccG9sa2Fkb3RfcnVudGltZV9jb21tb248cGFyYXNfcmVnaXN0cmFyGHBhbGxldBRFcnJvcgQEVAABODROb3RSZWdpc3RlcmVkAAAEZFRoZSBJRCBpcyBub3QgcmVnaXN0ZXJlZC5EQWxyZWFkeVJlZ2lzdGVyZWQAAQR0VGhlIElEIGlzIGFscmVhZHkgcmVnaXN0ZXJlZC4gTm90T3duZXIAAgScVGhlIGNhbGxlciBpcyBub3QgdGhlIG93bmVyIG9mIHRoaXMgSWQuMENvZGVUb29MYXJnZQADBFxJbnZhbGlkIHBhcmEgY29kZSBzaXplLkBIZWFkRGF0YVRvb0xhcmdlAAQEcEludmFsaWQgcGFyYSBoZWFkIGRhdGEgc2l6ZS4wTm90UGFyYWNoYWluAAUEYFBhcmEgaXMgbm90IGEgUGFyYWNoYWluLjROb3RQYXJhdGhyZWFkAAYEvFBhcmEgaXMgbm90IGEgUGFyYXRocmVhZCAob24tZGVtYW5kIHBhcmFjaGFpbikuQENhbm5vdERlcmVnaXN0ZXIABwRYQ2Fubm90IGRlcmVnaXN0ZXIgcGFyYTxDYW5ub3REb3duZ3JhZGUACAQtAUNhbm5vdCBzY2hlZHVsZSBkb3duZ3JhZGUgb2YgbGVhc2UgaG9sZGluZyBwYXJhY2hhaW4gdG8gb24tZGVtYW5kIHBhcmFjaGFpbjRDYW5ub3RVcGdyYWRlAAkEJQFDYW5ub3Qgc2NoZWR1bGUgdXBncmFkZSBvZiBvbi1kZW1hbmQgcGFyYWNoYWluIHRvIGxlYXNlIGhvbGRpbmcgcGFyYWNoYWluKFBhcmFMb2NrZWQACghJAVBhcmEgaXMgbG9ja2VkIGZyb20gbWFuaXB1bGF0aW9uIGJ5IHRoZSBtYW5hZ2VyLiBNdXN0IHVzZSBwYXJhY2hhaW4gb3IgcmVsYXkgY2hhaW4sZ292ZXJuYW5jZS4sTm90UmVzZXJ2ZWQACwTQVGhlIElEIGdpdmVuIGZvciByZWdpc3RyYXRpb24gaGFzIG5vdCBiZWVuIHJlc2VydmVkLiRFbXB0eUNvZGUADATUUmVnaXN0ZXJpbmcgcGFyYWNoYWluIHdpdGggZW1wdHkgY29kZSBpcyBub3QgYWxsb3dlZC4oQ2Fubm90U3dhcAANCFEBQ2Fubm90IHBlcmZvcm0gYSBwYXJhY2hhaW4gc2xvdCAvIGxpZmVjeWNsZSBzd2FwLiBDaGVjayB0aGF0IHRoZSBzdGF0ZSBvZiBib3RoIHBhcmFzhGFyZSBjb3JyZWN0IGZvciB0aGUgc3dhcCB0byB3b3JrLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC69DAAAAokIAMEMEFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbhRzbG90cxhwYWxsZXQURXJyb3IEBFQAAQhEUGFyYU5vdE9uYm9hcmRpbmcAAASMVGhlIHBhcmFjaGFpbiBJRCBpcyBub3Qgb25ib2FyZGluZy4oTGVhc2VFcnJvcgABBIhUaGVyZSB3YXMgYW4gZXJyb3Igd2l0aCB0aGUgbGVhc2UuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LsUMAAAECAC5AgDJDAAAAyQAAADNDADNDAQYT3B0aW9uBARUAdEMAQgQTm9uZQAAABBTb21lBADRDAAAAQAA0QwAAAQMALkCGADVDBBccG9sa2Fkb3RfcnVudGltZV9jb21tb24gYXVjdGlvbnMYcGFsbGV0FEVycm9yBARUAAEcREF1Y3Rpb25JblByb2dyZXNzAAAEkFRoaXMgYXVjdGlvbiBpcyBhbHJlYWR5IGluIHByb2dyZXNzLkRMZWFzZVBlcmlvZEluUGFzdAABBIBUaGUgbGVhc2UgcGVyaW9kIGlzIGluIHRoZSBwYXN0LkRQYXJhTm90UmVnaXN0ZXJlZAACBFhQYXJhIGlzIG5vdCByZWdpc3RlcmVkRE5vdEN1cnJlbnRBdWN0aW9uAAMEWE5vdCBhIGN1cnJlbnQgYXVjdGlvbi4oTm90QXVjdGlvbgAEBDxOb3QgYW4gYXVjdGlvbi4wQXVjdGlvbkVuZGVkAAUEaEF1Y3Rpb24gaGFzIGFscmVhZHkgZW5kZWQuQEFscmVhZHlMZWFzZWRPdXQABgTYVGhlIHBhcmEgaXMgYWxyZWFkeSBsZWFzZWQgb3V0IGZvciBwYXJ0IG9mIHRoaXMgcmFuZ2UuBIBUaGUgYEVycm9yYCBlbnVtIG9mIHRoaXMgcGFsbGV0LtkMDFxwb2xrYWRvdF9ydW50aW1lX2NvbW1vbiRjcm93ZGxvYW4gRnVuZEluZm8QJEFjY291bnRJZAEAHEJhbGFuY2UBGCxCbG9ja051bWJlcgEQLExlYXNlUGVyaW9kARAAKAEkZGVwb3NpdG9yAAEkQWNjb3VudElkAAEgdmVyaWZpZXLxBQFMT3B0aW9uPE11bHRpU2lnbmVyPgABHGRlcG9zaXQYARxCYWxhbmNlAAEYcmFpc2VkGAEcQmFsYW5jZQABDGVuZBABLEJsb2NrTnVtYmVyAAEMY2FwGAEcQmFsYW5jZQABRGxhc3RfY29udHJpYnV0aW9u3QwBdExhc3RDb250cmlidXRpb248QmxvY2tOdW1iZXI+AAEwZmlyc3RfcGVyaW9kEAEsTGVhc2VQZXJpb2QAASxsYXN0X3BlcmlvZBABLExlYXNlUGVyaW9kAAEoZnVuZF9pbmRleBABJEZ1bmRJbmRleAAA3QwMXHBvbGthZG90X3J1bnRpbWVfY29tbW9uJGNyb3dkbG9hbkBMYXN0Q29udHJpYnV0aW9uBCxCbG9ja051bWJlcgEQAQwUTmV2ZXIAAAAkUHJlRW5kaW5nBAAQAQx1MzIAAQAYRW5kaW5nBAAQASxCbG9ja051bWJlcgACAADhDBBccG9sa2Fkb3RfcnVudGltZV9jb21tb24kY3Jvd2Rsb2FuGHBhbGxldBRFcnJvcgQEVAABXERGaXJzdFBlcmlvZEluUGFzdAAABPRUaGUgY3VycmVudCBsZWFzZSBwZXJpb2QgaXMgbW9yZSB0aGFuIHRoZSBmaXJzdCBsZWFzZSBwZXJpb2QuZEZpcnN0UGVyaW9kVG9vRmFySW5GdXR1cmUAAQQRAVRoZSBmaXJzdCBsZWFzZSBwZXJpb2QgbmVlZHMgdG8gYXQgbGVhc3QgYmUgbGVzcyB0aGFuIDMgYG1heF92YWx1ZWAubExhc3RQZXJpb2RCZWZvcmVGaXJzdFBlcmlvZAACBOhMYXN0IGxlYXNlIHBlcmlvZCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBmaXJzdCBsZWFzZSBwZXJpb2QuYExhc3RQZXJpb2RUb29GYXJJbkZ1dHVyZQADBC0BVGhlIGxhc3QgbGVhc2UgcGVyaW9kIGNhbm5vdCBiZSBtb3JlIHRoYW4gMyBwZXJpb2RzIGFmdGVyIHRoZSBmaXJzdCBwZXJpb2QuPENhbm5vdEVuZEluUGFzdAAEBEUBVGhlIGNhbXBhaWduIGVuZHMgYmVmb3JlIHRoZSBjdXJyZW50IGJsb2NrIG51bWJlci4gVGhlIGVuZCBtdXN0IGJlIGluIHRoZSBmdXR1cmUuREVuZFRvb0ZhckluRnV0dXJlAAUEwFRoZSBlbmQgZGF0ZSBmb3IgdGhpcyBjcm93ZGxvYW4gaXMgbm90IHNlbnNpYmxlLiBPdmVyZmxvdwAGBFhUaGVyZSB3YXMgYW4gb3ZlcmZsb3cuUENvbnRyaWJ1dGlvblRvb1NtYWxsAAcE6FRoZSBjb250cmlidXRpb24gd2FzIGJlbG93IHRoZSBtaW5pbXVtLCBgTWluQ29udHJpYnV0aW9uYC40SW52YWxpZFBhcmFJZAAIBExJbnZhbGlkIGZ1bmQgaW5kZXguLENhcEV4Y2VlZGVkAAkEkENvbnRyaWJ1dGlvbnMgZXhjZWVkIG1heGltdW0gYW1vdW50LlhDb250cmlidXRpb25QZXJpb2RPdmVyAAoEqFRoZSBjb250cmlidXRpb24gcGVyaW9kIGhhcyBhbHJlYWR5IGVuZGVkLjRJbnZhbGlkT3JpZ2luAAsEjFRoZSBvcmlnaW4gb2YgdGhpcyBjYWxsIGlzIGludmFsaWQuME5vdFBhcmFjaGFpbgAMBMhUaGlzIGNyb3dkbG9hbiBkb2VzIG5vdCBjb3JyZXNwb25kIHRvIGEgcGFyYWNoYWluLixMZWFzZUFjdGl2ZQANBBUBVGhpcyBwYXJhY2hhaW4gbGVhc2UgaXMgc3RpbGwgYWN0aXZlIGFuZCByZXRpcmVtZW50IGNhbm5vdCB5ZXQgYmVnaW4uQEJpZE9yTGVhc2VBY3RpdmUADgQxAVRoaXMgcGFyYWNoYWluJ3MgYmlkIG9yIGxlYXNlIGlzIHN0aWxsIGFjdGl2ZSBhbmQgd2l0aGRyYXcgY2Fubm90IHlldCBiZWdpbi4wRnVuZE5vdEVuZGVkAA8EgFRoZSBjcm93ZGxvYW4gaGFzIG5vdCB5ZXQgZW5kZWQuPE5vQ29udHJpYnV0aW9ucwAQBNBUaGVyZSBhcmUgbm8gY29udHJpYnV0aW9ucyBzdG9yZWQgaW4gdGhpcyBjcm93ZGxvYW4uSE5vdFJlYWR5VG9EaXNzb2x2ZQARCFUBVGhlIGNyb3dkbG9hbiBpcyBub3QgcmVhZHkgdG8gZGlzc29sdmUuIFBvdGVudGlhbGx5IHN0aWxsIGhhcyBhIHNsb3Qgb3IgaW4gcmV0aXJlbWVudBxwZXJpb2QuQEludmFsaWRTaWduYXR1cmUAEgRISW52YWxpZCBzaWduYXR1cmUuME1lbW9Ub29MYXJnZQATBHxUaGUgcHJvdmlkZWQgbWVtbyBpcyB0b28gbGFyZ2UuREFscmVhZHlJbk5ld1JhaXNlABQEhFRoZSBmdW5kIGlzIGFscmVhZHkgaW4gYE5ld1JhaXNlYEhWcmZEZWxheUluUHJvZ3Jlc3MAFQS0Tm8gY29udHJpYnV0aW9ucyBhbGxvd2VkIGR1cmluZyB0aGUgVlJGIGRlbGF5NE5vTGVhc2VQZXJpb2QAFgQtAUEgbGVhc2UgcGVyaW9kIGhhcyBub3Qgc3RhcnRlZCB5ZXQsIGR1ZSB0byBhbiBvZmZzZXQgaW4gdGhlIHN0YXJ0aW5nIGJsb2NrLgSAVGhlIGBFcnJvcmAgZW51bSBvZiB0aGlzIHBhbGxldC7lDAwocGFsbGV0X3hjbRhwYWxsZXQsUXVlcnlTdGF0dXMELEJsb2NrTnVtYmVyARABDBxQZW5kaW5nEAEkcmVzcG9uZGVyaQEBRFZlcnNpb25lZExvY2F0aW9uAAFMbWF5YmVfbWF0Y2hfcXVlcmllcukMAWRPcHRpb248VmVyc2lvbmVkTG9jYXRpb24+AAEwbWF5YmVfbm90aWZ57QwBQE9wdGlvbjwodTgsIHU4KT4AARx0aW1lb3V0EAEsQmxvY2tOdW1iZXIAAAA8VmVyc2lvbk5vdGlmaWVyCAEYb3JpZ2luaQEBRFZlcnNpb25lZExvY2F0aW9uAAEkaXNfYWN0aXZleAEQYm9vbAABABRSZWFkeQgBIHJlc3BvbnNl9QwBRFZlcnNpb25lZFJlc3BvbnNlAAEIYXQQASxCbG9ja051bWJlcgACAADpDAQYT3B0aW9uBARUAWkBAQgQTm9uZQAAABBTb21lBABpAQAAAQAA7QwEGE9wdGlvbgQEVAHxDAEIEE5vbmUAAAAQU29tZQQA8QwAAAEAAPEMAAAECAgIAPUMCAx4Y21EVmVyc2lvbmVkUmVzcG9uc2UAAQwIVjIEAD0GATB2Mjo6UmVzcG9uc2UAAgAIVjMEAIUGATB2Mzo6UmVzcG9uc2UAAwAIVjQEAOUGATB2NDo6UmVzcG9uc2UABAAA+QwAAAQIEGkBAP0MAAAEDCwkEAABDQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQUNBFMAAAQACQ0BGFZlYzxUPgAABQ0AAAQIaQEQAAkNAAACBQ0ADQ0MKHBhbGxldF94Y20YcGFsbGV0VFZlcnNpb25NaWdyYXRpb25TdGFnZQABEFxNaWdyYXRlU3VwcG9ydGVkVmVyc2lvbgAAAFxNaWdyYXRlVmVyc2lvbk5vdGlmaWVycwABAFBOb3RpZnlDdXJyZW50VGFyZ2V0cwQAEQ0BPE9wdGlvbjxWZWM8dTg+PgACAGhNaWdyYXRlQW5kTm90aWZ5T2xkVGFyZ2V0cwADAAARDQQYT3B0aW9uBARUATQBCBBOb25lAAAAEFNvbWUEADQAAAEAABUNAAAEDBAAQQcAGQ0MKHBhbGxldF94Y20YcGFsbGV0aFJlbW90ZUxvY2tlZEZ1bmdpYmxlUmVjb3JkCEhDb25zdW1lcklkZW50aWZpZXIBjDBNYXhDb25zdW1lcnMAABABGGFtb3VudBgBEHUxMjgAARRvd25lcmkBAURWZXJzaW9uZWRMb2NhdGlvbgABGGxvY2tlcmkBAURWZXJzaW9uZWRMb2NhdGlvbgABJGNvbnN1bWVycx0NAdBCb3VuZGVkVmVjPChDb25zdW1lcklkZW50aWZpZXIsIHUxMjgpLCBNYXhDb25zdW1lcnM+AAAdDQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUASENBFMAAAQAJQ0BGFZlYzxUPgAAIQ0AAAQIjBgAJQ0AAAIhDQApDQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAS0NBFMAAAQAMQ0BGFZlYzxUPgAALQ0AAAQIGGkBADENAAACLQ0ANQ0MKHBhbGxldF94Y20YcGFsbGV0FEVycm9yBARUAAFkLFVucmVhY2hhYmxlAAAIXQFUaGUgZGVzaXJlZCBkZXN0aW5hdGlvbiB3YXMgdW5yZWFjaGFibGUsIGdlbmVyYWxseSBiZWNhdXNlIHRoZXJlIGlzIGEgbm8gd2F5IG9mIHJvdXRpbmcYdG8gaXQuLFNlbmRGYWlsdXJlAAEIQQFUaGVyZSB3YXMgc29tZSBvdGhlciBpc3N1ZSAoaS5lLiBub3QgdG8gZG8gd2l0aCByb3V0aW5nKSBpbiBzZW5kaW5nIHRoZSBtZXNzYWdlLshQZXJoYXBzIGEgbGFjayBvZiBzcGFjZSBmb3IgYnVmZmVyaW5nIHRoZSBtZXNzYWdlLiBGaWx0ZXJlZAACBJxUaGUgbWVzc2FnZSBleGVjdXRpb24gZmFpbHMgdGhlIGZpbHRlci5IVW53ZWlnaGFibGVNZXNzYWdlAAMEtFRoZSBtZXNzYWdlJ3Mgd2VpZ2h0IGNvdWxkIG5vdCBiZSBkZXRlcm1pbmVkLmBEZXN0aW5hdGlvbk5vdEludmVydGlibGUABATcVGhlIGRlc3RpbmF0aW9uIGBMb2NhdGlvbmAgcHJvdmlkZWQgY2Fubm90IGJlIGludmVydGVkLhRFbXB0eQAFBIBUaGUgYXNzZXRzIHRvIGJlIHNlbnQgYXJlIGVtcHR5LjhDYW5ub3RSZWFuY2hvcgAGBDUBQ291bGQgbm90IHJlLWFuY2hvciB0aGUgYXNzZXRzIHRvIGRlY2xhcmUgdGhlIGZlZXMgZm9yIHRoZSBkZXN0aW5hdGlvbiBjaGFpbi40VG9vTWFueUFzc2V0cwAHBMRUb28gbWFueSBhc3NldHMgaGF2ZSBiZWVuIGF0dGVtcHRlZCBmb3IgdHJhbnNmZXIuNEludmFsaWRPcmlnaW4ACAR4T3JpZ2luIGlzIGludmFsaWQgZm9yIHNlbmRpbmcuKEJhZFZlcnNpb24ACQQhAVRoZSB2ZXJzaW9uIG9mIHRoZSBgVmVyc2lvbmVkYCB2YWx1ZSB1c2VkIGlzIG5vdCBhYmxlIHRvIGJlIGludGVycHJldGVkLixCYWRMb2NhdGlvbgAKCEEBVGhlIGdpdmVuIGxvY2F0aW9uIGNvdWxkIG5vdCBiZSB1c2VkIChlLmcuIGJlY2F1c2UgaXQgY2Fubm90IGJlIGV4cHJlc3NlZCBpbiB0aGVgZGVzaXJlZCB2ZXJzaW9uIG9mIFhDTSkuOE5vU3Vic2NyaXB0aW9uAAsEvFRoZSByZWZlcmVuY2VkIHN1YnNjcmlwdGlvbiBjb3VsZCBub3QgYmUgZm91bmQuREFscmVhZHlTdWJzY3JpYmVkAAwEEQFUaGUgbG9jYXRpb24gaXMgaW52YWxpZCBzaW5jZSBpdCBhbHJlYWR5IGhhcyBhIHN1YnNjcmlwdGlvbiBmcm9tIHVzLlhDYW5ub3RDaGVja091dFRlbGVwb3J0AA0EKQFDb3VsZCBub3QgY2hlY2stb3V0IHRoZSBhc3NldHMgZm9yIHRlbGVwb3J0YXRpb24gdG8gdGhlIGRlc3RpbmF0aW9uIGNoYWluLihMb3dCYWxhbmNlAA4EQQFUaGUgb3duZXIgZG9lcyBub3Qgb3duIChhbGwpIG9mIHRoZSBhc3NldCB0aGF0IHRoZXkgd2lzaCB0byBkbyB0aGUgb3BlcmF0aW9uIG9uLjBUb29NYW55TG9ja3MADwTAVGhlIGFzc2V0IG93bmVyIGhhcyB0b28gbWFueSBsb2NrcyBvbiB0aGUgYXNzZXQuTEFjY291bnROb3RTb3ZlcmVpZ24AEAQxAVRoZSBnaXZlbiBhY2NvdW50IGlzIG5vdCBhbiBpZGVudGlmaWFibGUgc292ZXJlaWduIGFjY291bnQgZm9yIGFueSBsb2NhdGlvbi4oRmVlc05vdE1ldAARBCkBVGhlIG9wZXJhdGlvbiByZXF1aXJlZCBmZWVzIHRvIGJlIHBhaWQgd2hpY2ggdGhlIGluaXRpYXRvciBjb3VsZCBub3QgbWVldC4wTG9ja05vdEZvdW5kABIE9EEgcmVtb3RlIGxvY2sgd2l0aCB0aGUgY29ycmVzcG9uZGluZyBkYXRhIGNvdWxkIG5vdCBiZSBmb3VuZC4USW5Vc2UAEwRJAVRoZSB1bmxvY2sgb3BlcmF0aW9uIGNhbm5vdCBzdWNjZWVkIGJlY2F1c2UgdGhlcmUgYXJlIHN0aWxsIGNvbnN1bWVycyBvZiB0aGUgbG9jay5cSW52YWxpZEFzc2V0Tm90Q29uY3JldGUAFARsSW52YWxpZCBub24tY29uY3JldGUgYXNzZXQuaEludmFsaWRBc3NldFVua25vd25SZXNlcnZlABUE8EludmFsaWQgYXNzZXQsIHJlc2VydmUgY2hhaW4gY291bGQgbm90IGJlIGRldGVybWluZWQgZm9yIGl0LnhJbnZhbGlkQXNzZXRVbnN1cHBvcnRlZFJlc2VydmUAFgRFAUludmFsaWQgYXNzZXQsIGRvIG5vdCBzdXBwb3J0IHJlbW90ZSBhc3NldCByZXNlcnZlcyB3aXRoIGRpZmZlcmVudCBmZWVzIHJlc2VydmVzLjxUb29NYW55UmVzZXJ2ZXMAFwRJAVRvbyBtYW55IGFzc2V0cyB3aXRoIGRpZmZlcmVudCByZXNlcnZlIGxvY2F0aW9ucyBoYXZlIGJlZW4gYXR0ZW1wdGVkIGZvciB0cmFuc2Zlci5gTG9jYWxFeGVjdXRpb25JbmNvbXBsZXRlABgEfExvY2FsIFhDTSBleGVjdXRpb24gaW5jb21wbGV0ZS4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuOQ0IUHBhbGxldF9tZXNzYWdlX3F1ZXVlJEJvb2tTdGF0ZQQ0TWVzc2FnZU9yaWdpbgFJBwAYARRiZWdpbhABJFBhZ2VJbmRleAABDGVuZBABJFBhZ2VJbmRleAABFGNvdW50EAEkUGFnZUluZGV4AAFAcmVhZHlfbmVpZ2hib3Vycz0NAYRPcHRpb248TmVpZ2hib3VyczxNZXNzYWdlT3JpZ2luPj4AATRtZXNzYWdlX2NvdW50LAEMdTY0AAEQc2l6ZSwBDHU2NAAAPQ0EGE9wdGlvbgQEVAFBDQEIEE5vbmUAAAAQU29tZQQAQQ0AAAEAAEENCFBwYWxsZXRfbWVzc2FnZV9xdWV1ZShOZWlnaGJvdXJzBDRNZXNzYWdlT3JpZ2luAUkHAAgBEHByZXZJBwE0TWVzc2FnZU9yaWdpbgABEG5leHRJBwE0TWVzc2FnZU9yaWdpbgAARQ0AAAQISQcQAEkNCFBwYWxsZXRfbWVzc2FnZV9xdWV1ZRBQYWdlCBBTaXplARAgSGVhcFNpemUAABgBJHJlbWFpbmluZxABEFNpemUAAThyZW1haW5pbmdfc2l6ZRABEFNpemUAASxmaXJzdF9pbmRleBABEFNpemUAARRmaXJzdBABEFNpemUAARBsYXN0EAEQU2l6ZQABEGhlYXBNDQGcQm91bmRlZFZlYzx1OCwgSW50b1UzMjxIZWFwU2l6ZSwgU2l6ZT4+AABNDQxMYm91bmRlZF9jb2xsZWN0aW9ucyxib3VuZGVkX3ZlYyhCb3VuZGVkVmVjCARUAQgEUwAABAA0ARhWZWM8VD4AAFENDFBwYWxsZXRfbWVzc2FnZV9xdWV1ZRhwYWxsZXQURXJyb3IEBFQAASQsTm90UmVhcGFibGUAAAhJAVBhZ2UgaXMgbm90IHJlYXBhYmxlIGJlY2F1c2UgaXQgaGFzIGl0ZW1zIHJlbWFpbmluZyB0byBiZSBwcm9jZXNzZWQgYW5kIGlzIG5vdCBvbGQcZW5vdWdoLhhOb1BhZ2UAAQSEUGFnZSB0byBiZSByZWFwZWQgZG9lcyBub3QgZXhpc3QuJE5vTWVzc2FnZQACBKhUaGUgcmVmZXJlbmNlZCBtZXNzYWdlIGNvdWxkIG5vdCBiZSBmb3VuZC5AQWxyZWFkeVByb2Nlc3NlZAADBAEBVGhlIG1lc3NhZ2Ugd2FzIGFscmVhZHkgcHJvY2Vzc2VkIGFuZCBjYW5ub3QgYmUgcHJvY2Vzc2VkIGFnYWluLhhRdWV1ZWQABASsVGhlIG1lc3NhZ2UgaXMgcXVldWVkIGZvciBmdXR1cmUgZXhlY3V0aW9uLkhJbnN1ZmZpY2llbnRXZWlnaHQABQQZAVRoZXJlIGlzIHRlbXBvcmFyaWx5IG5vdCBlbm91Z2ggd2VpZ2h0IHRvIGNvbnRpbnVlIHNlcnZpY2luZyBtZXNzYWdlcy5gVGVtcG9yYXJpbHlVbnByb2Nlc3NhYmxlAAYQqFRoaXMgbWVzc2FnZSBpcyB0ZW1wb3JhcmlseSB1bnByb2Nlc3NhYmxlLgBZAVN1Y2ggZXJyb3JzIGFyZSBleHBlY3RlZCwgYnV0IG5vdCBndWFyYW50ZWVkLCB0byByZXNvbHZlIHRoZW1zZWx2ZXMgZXZlbnR1YWxseSB0aHJvdWdoJHJldHJ5aW5nLixRdWV1ZVBhdXNlZAAHDOxUaGUgcXVldWUgaXMgcGF1c2VkIGFuZCBubyBtZXNzYWdlIGNhbiBiZSBleGVjdXRlZCBmcm9tIGl0LgAdAVRoaXMgY2FuIGNoYW5nZSBhdCBhbnkgdGltZSBhbmQgbWF5IHJlc29sdmUgaW4gdGhlIGZ1dHVyZSBieSByZS10cnlpbmcuTFJlY3Vyc2l2ZURpc2FsbG93ZWQACAQxAUFub3RoZXIgY2FsbCBpcyBpbiBwcm9ncmVzcyBhbmQgbmVlZHMgdG8gZmluaXNoIGJlZm9yZSB0aGlzIGNhbGwgY2FuIGhhcHBlbi4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuVQ0MRHBhbGxldF9hc3NldF9yYXRlGHBhbGxldBRFcnJvcgQEVAABCEBVbmtub3duQXNzZXRLaW5kAAAEeFRoZSBnaXZlbiBhc3NldCBJRCBpcyB1bmtub3duLjRBbHJlYWR5RXhpc3RzAAEEUQFUaGUgZ2l2ZW4gYXNzZXQgSUQgYWxyZWFkeSBoYXMgYW4gYXNzaWduZWQgY29udmVyc2lvbiByYXRlIGFuZCBjYW5ub3QgYmUgcmUtY3JlYXRlZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuWQ0MTGJvdW5kZWRfY29sbGVjdGlvbnMsYm91bmRlZF92ZWMoQm91bmRlZFZlYwgEVAFNAgRTAAAEAF0NARhWZWM8VD4AAF0NAAACTQIAYQ0MMHBhbGxldF9iZWVmeRhwYWxsZXQURXJyb3IEBFQAARBgSW52YWxpZEtleU93bmVyc2hpcFByb29mAAAEMQFBIGtleSBvd25lcnNoaXAgcHJvb2YgcHJvdmlkZWQgYXMgcGFydCBvZiBhbiBlcXVpdm9jYXRpb24gcmVwb3J0IGlzIGludmFsaWQuYEludmFsaWRFcXVpdm9jYXRpb25Qcm9vZgABBDEBQW4gZXF1aXZvY2F0aW9uIHByb29mIHByb3ZpZGVkIGFzIHBhcnQgb2YgYW4gZXF1aXZvY2F0aW9uIHJlcG9ydCBpcyBpbnZhbGlkLlhEdXBsaWNhdGVPZmZlbmNlUmVwb3J0AAIEFQFBIGdpdmVuIGVxdWl2b2NhdGlvbiByZXBvcnQgaXMgdmFsaWQgYnV0IGFscmVhZHkgcHJldmlvdXNseSByZXBvcnRlZC5QSW52YWxpZENvbmZpZ3VyYXRpb24AAwSMU3VibWl0dGVkIGNvbmZpZ3VyYXRpb24gaXMgaW52YWxpZC4EgFRoZSBgRXJyb3JgIGVudW0gb2YgdGhpcyBwYWxsZXQuZQ0MSHNwX2NvbnNlbnN1c19iZWVmeQxtbXJEQmVlZnlBdXRob3JpdHlTZXQEWEF1dGhvcml0eVNldENvbW1pdG1lbnQBMAAMAQhpZCwBVGNyYXRlOjpWYWxpZGF0b3JTZXRJZAABDGxlbhABDHUzMgABRGtleXNldF9jb21taXRtZW50MAFYQXV0aG9yaXR5U2V0Q29tbWl0bWVudAAAaQ0AAAQobQ1xDXUNeQ19DYUNiQ2NDZENlQ0AbQ0QMGZyYW1lX3N5c3RlbShleHRlbnNpb25zVGNoZWNrX25vbl96ZXJvX3NlbmRlckhDaGVja05vblplcm9TZW5kZXIEBFQAAAAAcQ0QMGZyYW1lX3N5c3RlbShleHRlbnNpb25zSGNoZWNrX3NwZWNfdmVyc2lvbkBDaGVja1NwZWNWZXJzaW9uBARUAAAAAHUNEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uc0BjaGVja190eF92ZXJzaW9uOENoZWNrVHhWZXJzaW9uBARUAAAAAHkNEDBmcmFtZV9zeXN0ZW0oZXh0ZW5zaW9uczRjaGVja19nZW5lc2lzMENoZWNrR2VuZXNpcwQEVAAAAAB9DRAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnM8Y2hlY2tfbW9ydGFsaXR5OENoZWNrTW9ydGFsaXR5BARUAAAEAIENAQxFcmEAAIENEChzcF9ydW50aW1lHGdlbmVyaWMMZXJhDEVyYQABAQQgSW1tb3J0YWwAAAAcTW9ydGFsMQQACAAAAQAcTW9ydGFsMgQACAAAAgAcTW9ydGFsMwQACAAAAwAcTW9ydGFsNAQACAAABAAcTW9ydGFsNQQACAAABQAcTW9ydGFsNgQACAAABgAcTW9ydGFsNwQACAAABwAcTW9ydGFsOAQACAAACAAcTW9ydGFsOQQACAAACQAgTW9ydGFsMTAEAAgAAAoAIE1vcnRhbDExBAAIAAALACBNb3J0YWwxMgQACAAADAAgTW9ydGFsMTMEAAgAAA0AIE1vcnRhbDE0BAAIAAAOACBNb3J0YWwxNQQACAAADwAgTW9ydGFsMTYEAAgAABAAIE1vcnRhbDE3BAAIAAARACBNb3J0YWwxOAQACAAAEgAgTW9ydGFsMTkEAAgAABMAIE1vcnRhbDIwBAAIAAAUACBNb3J0YWwyMQQACAAAFQAgTW9ydGFsMjIEAAgAABYAIE1vcnRhbDIzBAAIAAAXACBNb3J0YWwyNAQACAAAGAAgTW9ydGFsMjUEAAgAABkAIE1vcnRhbDI2BAAIAAAaACBNb3J0YWwyNwQACAAAGwAgTW9ydGFsMjgEAAgAABwAIE1vcnRhbDI5BAAIAAAdACBNb3J0YWwzMAQACAAAHgAgTW9ydGFsMzEEAAgAAB8AIE1vcnRhbDMyBAAIAAAgACBNb3J0YWwzMwQACAAAIQAgTW9ydGFsMzQEAAgAACIAIE1vcnRhbDM1BAAIAAAjACBNb3J0YWwzNgQACAAAJAAgTW9ydGFsMzcEAAgAACUAIE1vcnRhbDM4BAAIAAAmACBNb3J0YWwzOQQACAAAJwAgTW9ydGFsNDAEAAgAACgAIE1vcnRhbDQxBAAIAAApACBNb3J0YWw0MgQACAAAKgAgTW9ydGFsNDMEAAgAACsAIE1vcnRhbDQ0BAAIAAAsACBNb3J0YWw0NQQACAAALQAgTW9ydGFsNDYEAAgAAC4AIE1vcnRhbDQ3BAAIAAAvACBNb3J0YWw0OAQACAAAMAAgTW9ydGFsNDkEAAgAADEAIE1vcnRhbDUwBAAIAAAyACBNb3J0YWw1MQQACAAAMwAgTW9ydGFsNTIEAAgAADQAIE1vcnRhbDUzBAAIAAA1ACBNb3J0YWw1NAQACAAANgAgTW9ydGFsNTUEAAgAADcAIE1vcnRhbDU2BAAIAAA4ACBNb3J0YWw1NwQACAAAOQAgTW9ydGFsNTgEAAgAADoAIE1vcnRhbDU5BAAIAAA7ACBNb3J0YWw2MAQACAAAPAAgTW9ydGFsNjEEAAgAAD0AIE1vcnRhbDYyBAAIAAA+ACBNb3J0YWw2MwQACAAAPwAgTW9ydGFsNjQEAAgAAEAAIE1vcnRhbDY1BAAIAABBACBNb3J0YWw2NgQACAAAQgAgTW9ydGFsNjcEAAgAAEMAIE1vcnRhbDY4BAAIAABEACBNb3J0YWw2OQQACAAARQAgTW9ydGFsNzAEAAgAAEYAIE1vcnRhbDcxBAAIAABHACBNb3J0YWw3MgQACAAASAAgTW9ydGFsNzMEAAgAAEkAIE1vcnRhbDc0BAAIAABKACBNb3J0YWw3NQQACAAASwAgTW9ydGFsNzYEAAgAAEwAIE1vcnRhbDc3BAAIAABNACBNb3J0YWw3OAQACAAATgAgTW9ydGFsNzkEAAgAAE8AIE1vcnRhbDgwBAAIAABQACBNb3J0YWw4MQQACAAAUQAgTW9ydGFsODIEAAgAAFIAIE1vcnRhbDgzBAAIAABTACBNb3J0YWw4NAQACAAAVAAgTW9ydGFsODUEAAgAAFUAIE1vcnRhbDg2BAAIAABWACBNb3J0YWw4NwQACAAAVwAgTW9ydGFsODgEAAgAAFgAIE1vcnRhbDg5BAAIAABZACBNb3J0YWw5MAQACAAAWgAgTW9ydGFsOTEEAAgAAFsAIE1vcnRhbDkyBAAIAABcACBNb3J0YWw5MwQACAAAXQAgTW9ydGFsOTQEAAgAAF4AIE1vcnRhbDk1BAAIAABfACBNb3J0YWw5NgQACAAAYAAgTW9ydGFsOTcEAAgAAGEAIE1vcnRhbDk4BAAIAABiACBNb3J0YWw5OQQACAAAYwAkTW9ydGFsMTAwBAAIAABkACRNb3J0YWwxMDEEAAgAAGUAJE1vcnRhbDEwMgQACAAAZgAkTW9ydGFsMTAzBAAIAABnACRNb3J0YWwxMDQEAAgAAGgAJE1vcnRhbDEwNQQACAAAaQAkTW9ydGFsMTA2BAAIAABqACRNb3J0YWwxMDcEAAgAAGsAJE1vcnRhbDEwOAQACAAAbAAkTW9ydGFsMTA5BAAIAABtACRNb3J0YWwxMTAEAAgAAG4AJE1vcnRhbDExMQQACAAAbwAkTW9ydGFsMTEyBAAIAABwACRNb3J0YWwxMTMEAAgAAHEAJE1vcnRhbDExNAQACAAAcgAkTW9ydGFsMTE1BAAIAABzACRNb3J0YWwxMTYEAAgAAHQAJE1vcnRhbDExNwQACAAAdQAkTW9ydGFsMTE4BAAIAAB2ACRNb3J0YWwxMTkEAAgAAHcAJE1vcnRhbDEyMAQACAAAeAAkTW9ydGFsMTIxBAAIAAB5ACRNb3J0YWwxMjIEAAgAAHoAJE1vcnRhbDEyMwQACAAAewAkTW9ydGFsMTI0BAAIAAB8ACRNb3J0YWwxMjUEAAgAAH0AJE1vcnRhbDEyNgQACAAAfgAkTW9ydGFsMTI3BAAIAAB/ACRNb3J0YWwxMjgEAAgAAIAAJE1vcnRhbDEyOQQACAAAgQAkTW9ydGFsMTMwBAAIAACCACRNb3J0YWwxMzEEAAgAAIMAJE1vcnRhbDEzMgQACAAAhAAkTW9ydGFsMTMzBAAIAACFACRNb3J0YWwxMzQEAAgAAIYAJE1vcnRhbDEzNQQACAAAhwAkTW9ydGFsMTM2BAAIAACIACRNb3J0YWwxMzcEAAgAAIkAJE1vcnRhbDEzOAQACAAAigAkTW9ydGFsMTM5BAAIAACLACRNb3J0YWwxNDAEAAgAAIwAJE1vcnRhbDE0MQQACAAAjQAkTW9ydGFsMTQyBAAIAACOACRNb3J0YWwxNDMEAAgAAI8AJE1vcnRhbDE0NAQACAAAkAAkTW9ydGFsMTQ1BAAIAACRACRNb3J0YWwxNDYEAAgAAJIAJE1vcnRhbDE0NwQACAAAkwAkTW9ydGFsMTQ4BAAIAACUACRNb3J0YWwxNDkEAAgAAJUAJE1vcnRhbDE1MAQACAAAlgAkTW9ydGFsMTUxBAAIAACXACRNb3J0YWwxNTIEAAgAAJgAJE1vcnRhbDE1MwQACAAAmQAkTW9ydGFsMTU0BAAIAACaACRNb3J0YWwxNTUEAAgAAJsAJE1vcnRhbDE1NgQACAAAnAAkTW9ydGFsMTU3BAAIAACdACRNb3J0YWwxNTgEAAgAAJ4AJE1vcnRhbDE1OQQACAAAnwAkTW9ydGFsMTYwBAAIAACgACRNb3J0YWwxNjEEAAgAAKEAJE1vcnRhbDE2MgQACAAAogAkTW9ydGFsMTYzBAAIAACjACRNb3J0YWwxNjQEAAgAAKQAJE1vcnRhbDE2NQQACAAApQAkTW9ydGFsMTY2BAAIAACmACRNb3J0YWwxNjcEAAgAAKcAJE1vcnRhbDE2OAQACAAAqAAkTW9ydGFsMTY5BAAIAACpACRNb3J0YWwxNzAEAAgAAKoAJE1vcnRhbDE3MQQACAAAqwAkTW9ydGFsMTcyBAAIAACsACRNb3J0YWwxNzMEAAgAAK0AJE1vcnRhbDE3NAQACAAArgAkTW9ydGFsMTc1BAAIAACvACRNb3J0YWwxNzYEAAgAALAAJE1vcnRhbDE3NwQACAAAsQAkTW9ydGFsMTc4BAAIAACyACRNb3J0YWwxNzkEAAgAALMAJE1vcnRhbDE4MAQACAAAtAAkTW9ydGFsMTgxBAAIAAC1ACRNb3J0YWwxODIEAAgAALYAJE1vcnRhbDE4MwQACAAAtwAkTW9ydGFsMTg0BAAIAAC4ACRNb3J0YWwxODUEAAgAALkAJE1vcnRhbDE4NgQACAAAugAkTW9ydGFsMTg3BAAIAAC7ACRNb3J0YWwxODgEAAgAALwAJE1vcnRhbDE4OQQACAAAvQAkTW9ydGFsMTkwBAAIAAC+ACRNb3J0YWwxOTEEAAgAAL8AJE1vcnRhbDE5MgQACAAAwAAkTW9ydGFsMTkzBAAIAADBACRNb3J0YWwxOTQEAAgAAMIAJE1vcnRhbDE5NQQACAAAwwAkTW9ydGFsMTk2BAAIAADEACRNb3J0YWwxOTcEAAgAAMUAJE1vcnRhbDE5OAQACAAAxgAkTW9ydGFsMTk5BAAIAADHACRNb3J0YWwyMDAEAAgAAMgAJE1vcnRhbDIwMQQACAAAyQAkTW9ydGFsMjAyBAAIAADKACRNb3J0YWwyMDMEAAgAAMsAJE1vcnRhbDIwNAQACAAAzAAkTW9ydGFsMjA1BAAIAADNACRNb3J0YWwyMDYEAAgAAM4AJE1vcnRhbDIwNwQACAAAzwAkTW9ydGFsMjA4BAAIAADQACRNb3J0YWwyMDkEAAgAANEAJE1vcnRhbDIxMAQACAAA0gAkTW9ydGFsMjExBAAIAADTACRNb3J0YWwyMTIEAAgAANQAJE1vcnRhbDIxMwQACAAA1QAkTW9ydGFsMjE0BAAIAADWACRNb3J0YWwyMTUEAAgAANcAJE1vcnRhbDIxNgQACAAA2AAkTW9ydGFsMjE3BAAIAADZACRNb3J0YWwyMTgEAAgAANoAJE1vcnRhbDIxOQQACAAA2wAkTW9ydGFsMjIwBAAIAADcACRNb3J0YWwyMjEEAAgAAN0AJE1vcnRhbDIyMgQACAAA3gAkTW9ydGFsMjIzBAAIAADfACRNb3J0YWwyMjQEAAgAAOAAJE1vcnRhbDIyNQQACAAA4QAkTW9ydGFsMjI2BAAIAADiACRNb3J0YWwyMjcEAAgAAOMAJE1vcnRhbDIyOAQACAAA5AAkTW9ydGFsMjI5BAAIAADlACRNb3J0YWwyMzAEAAgAAOYAJE1vcnRhbDIzMQQACAAA5wAkTW9ydGFsMjMyBAAIAADoACRNb3J0YWwyMzMEAAgAAOkAJE1vcnRhbDIzNAQACAAA6gAkTW9ydGFsMjM1BAAIAADrACRNb3J0YWwyMzYEAAgAAOwAJE1vcnRhbDIzNwQACAAA7QAkTW9ydGFsMjM4BAAIAADuACRNb3J0YWwyMzkEAAgAAO8AJE1vcnRhbDI0MAQACAAA8AAkTW9ydGFsMjQxBAAIAADxACRNb3J0YWwyNDIEAAgAAPIAJE1vcnRhbDI0MwQACAAA8wAkTW9ydGFsMjQ0BAAIAAD0ACRNb3J0YWwyNDUEAAgAAPUAJE1vcnRhbDI0NgQACAAA9gAkTW9ydGFsMjQ3BAAIAAD3ACRNb3J0YWwyNDgEAAgAAPgAJE1vcnRhbDI0OQQACAAA+QAkTW9ydGFsMjUwBAAIAAD6ACRNb3J0YWwyNTEEAAgAAPsAJE1vcnRhbDI1MgQACAAA/AAkTW9ydGFsMjUzBAAIAAD9ACRNb3J0YWwyNTQEAAgAAP4AJE1vcnRhbDI1NQQACAAA/wAAhQ0QMGZyYW1lX3N5c3RlbShleHRlbnNpb25zLGNoZWNrX25vbmNlKENoZWNrTm9uY2UEBFQAAAQAFQEBIFQ6Ok5vbmNlAACJDRAwZnJhbWVfc3lzdGVtKGV4dGVuc2lvbnMwY2hlY2tfd2VpZ2h0LENoZWNrV2VpZ2h0BARUAAAAAI0NCGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudGBDaGFyZ2VUcmFuc2FjdGlvblBheW1lbnQEBFQAAAQA9AEwQmFsYW5jZU9mPFQ+AACRDQxccG9sa2Fkb3RfcnVudGltZV9jb21tb24YY2xhaW1zSFByZXZhbGlkYXRlQXR0ZXN0cwQEVAAAAACVDQh0ZnJhbWVfbWV0YWRhdGFfaGFzaF9leHRlbnNpb25EQ2hlY2tNZXRhZGF0YUhhc2gEBFQAAAQBEG1vZGWZDQEQTW9kZQAAmQ0IdGZyYW1lX21ldGFkYXRhX2hhc2hfZXh0ZW5zaW9uEE1vZGUAAQggRGlzYWJsZWQAAAAcRW5hYmxlZAABAACdDQhAcG9sa2Fkb3RfcnVudGltZRxSdW50aW1lAAAAAKENEChzcF9ydW50aW1lHGdlbmVyaWMUYmxvY2sUQmxvY2sIGEhlYWRlcgHFASRFeHRyaW5zaWMBpQ0ACAEYaGVhZGVyxQEBGEhlYWRlcgABKGV4dHJpbnNpY3OpDQE4VmVjPEV4dHJpbnNpYz4AAKUNEChzcF9ydW50aW1lHGdlbmVyaWNMdW5jaGVja2VkX2V4dHJpbnNpY0hVbmNoZWNrZWRFeHRyaW5zaWMQHEFkZHJlc3MB6QEQQ2FsbAGZASRTaWduYXR1cmUBoQMURXh0cmEBaQ0ABAA0AAAAqQ0AAAKlDQCtDQgcc3BfY29yZThPcGFxdWVNZXRhZGF0YQAABAA0ARxWZWM8dTg+AACxDQQYT3B0aW9uBARUAa0NAQgQTm9uZQAAABBTb21lBACtDQAAAQAAtQ0EGFJlc3VsdAgEVAGIBEUBuQ0BCAhPawQAiAAAAAAMRXJyBAC5DQAAAQAAuQ0MKHNwX3J1bnRpbWVQdHJhbnNhY3Rpb25fdmFsaWRpdHlgVHJhbnNhY3Rpb25WYWxpZGl0eUVycm9yAAEIHEludmFsaWQEAL0NAUhJbnZhbGlkVHJhbnNhY3Rpb24AAAAcVW5rbm93bgQAwQ0BSFVua25vd25UcmFuc2FjdGlvbgABAAC9DQwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUhJbnZhbGlkVHJhbnNhY3Rpb24AASwQQ2FsbAAAABxQYXltZW50AAEAGEZ1dHVyZQACABRTdGFsZQADACBCYWRQcm9vZgAEAERBbmNpZW50QmlydGhCbG9jawAFAERFeGhhdXN0c1Jlc291cmNlcwAGABhDdXN0b20EAAgBCHU4AAcAMEJhZE1hbmRhdG9yeQAIAExNYW5kYXRvcnlWYWxpZGF0aW9uAAkAJEJhZFNpZ25lcgAKAADBDQwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUhVbmtub3duVHJhbnNhY3Rpb24AAQwwQ2Fubm90TG9va3VwAAAATE5vVW5zaWduZWRWYWxpZGF0b3IAAQAYQ3VzdG9tBAAIAQh1OAACAADFDQgwc3BfaW5oZXJlbnRzMEluaGVyZW50RGF0YQAABAEQZGF0YckNAZRCVHJlZU1hcDxJbmhlcmVudElkZW50aWZpZXIsIFZlYzx1OD4+AADJDQQgQlRyZWVNYXAIBEsBMQMEVgE0AAQAzQ0AAADNDQAAAtENANENAAAECDEDNADVDQgwc3BfaW5oZXJlbnRzUENoZWNrSW5oZXJlbnRzUmVzdWx0AAAMARBva2F5eAEQYm9vbAABLGZhdGFsX2Vycm9yeAEQYm9vbAABGGVycm9yc8UNATBJbmhlcmVudERhdGEAANkNDChzcF9ydW50aW1lUHRyYW5zYWN0aW9uX3ZhbGlkaXR5RFRyYW5zYWN0aW9uU291cmNlAAEMHEluQmxvY2sAAAAUTG9jYWwAAQAgRXh0ZXJuYWwAAgAA3Q0EGFJlc3VsdAgEVAHhDQRFAbkNAQgIT2sEAOENAAAAAAxFcnIEALkNAAABAADhDQwoc3BfcnVudGltZVB0cmFuc2FjdGlvbl92YWxpZGl0eUBWYWxpZFRyYW5zYWN0aW9uAAAUASBwcmlvcml0eSwBTFRyYW5zYWN0aW9uUHJpb3JpdHkAASByZXF1aXJlc6kBAUxWZWM8VHJhbnNhY3Rpb25UYWc+AAEgcHJvdmlkZXOpAQFMVmVjPFRyYW5zYWN0aW9uVGFnPgABJGxvbmdldml0eSwBUFRyYW5zYWN0aW9uTG9uZ2V2aXR5AAEkcHJvcGFnYXRleAEQYm9vbAAA5Q0AAAQI6QvpDQDpDQxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NkRHcm91cFJvdGF0aW9uSW5mbwQETgEQAAwBTHNlc3Npb25fc3RhcnRfYmxvY2sQAQROAAFgZ3JvdXBfcm90YXRpb25fZnJlcXVlbmN5EAEETgABDG5vdxABBE4AAO0NAAAC8Q0A8Q0MTHBvbGthZG90X3ByaW1pdGl2ZXMIdjYkQ29yZVN0YXRlCARIATAETgEQAQwgT2NjdXBpZWQEAPUNAUhPY2N1cGllZENvcmU8SCwgTj4AAAAkU2NoZWR1bGVkBAD9DQE0U2NoZWR1bGVkQ29yZQABABBGcmVlAAIAAPUNDExwb2xrYWRvdF9wcmltaXRpdmVzCHY2ME9jY3VwaWVkQ29yZQgESAEwBE4BEAAgAVBuZXh0X3VwX29uX2F2YWlsYWJsZfkNAVRPcHRpb248U2NoZWR1bGVkQ29yZT4AAThvY2N1cGllZF9zaW5jZRABBE4AASx0aW1lX291dF9hdBABBE4AAUxuZXh0X3VwX29uX3RpbWVfb3V0+Q0BVE9wdGlvbjxTY2hlZHVsZWRDb3JlPgABMGF2YWlsYWJpbGl0eT0FAXxCaXRWZWM8dTgsIGJpdHZlYzo6b3JkZXI6OkxzYjA+AAFEZ3JvdXBfcmVzcG9uc2libGXlBwEoR3JvdXBJbmRleAABOGNhbmRpZGF0ZV9oYXNomQUBNENhbmRpZGF0ZUhhc2gAAVBjYW5kaWRhdGVfZGVzY3JpcHRvclkFAVhDYW5kaWRhdGVEZXNjcmlwdG9yPEg+AAD5DQQYT3B0aW9uBARUAf0NAQgQTm9uZQAAABBTb21lBAD9DQAAAQAA/Q0MTHBvbGthZG90X3ByaW1pdGl2ZXMIdjY0U2NoZWR1bGVkQ29yZQAACAEccGFyYV9pZLkCAQhJZAABIGNvbGxhdG9yAQ4BSE9wdGlvbjxDb2xsYXRvcklkPgAAAQ4EGE9wdGlvbgQEVAFdBQEIEE5vbmUAAAAQU29tZQQAXQUAAAEAAAUODExwb2xrYWRvdF9wcmltaXRpdmVzCHY2WE9jY3VwaWVkQ29yZUFzc3VtcHRpb24AAQwgSW5jbHVkZWQAAAAgVGltZWRPdXQAAQAQRnJlZQACAAAJDgQYT3B0aW9uBARUAQ0OAQgQTm9uZQAAABBTb21lBAANDgAAAQAADQ4MTHBvbGthZG90X3ByaW1pdGl2ZXMIdjZcUGVyc2lzdGVkVmFsaWRhdGlvbkRhdGEIBEgBMAROARAAEAEscGFyZW50X2hlYWSFBQEgSGVhZERhdGEAAUxyZWxheV9wYXJlbnRfbnVtYmVyEAEETgABZHJlbGF5X3BhcmVudF9zdG9yYWdlX3Jvb3QwAQRIAAEwbWF4X3Bvdl9zaXplEAEMdTMyAAARDgQYT3B0aW9uBARUARUOAQgQTm9uZQAAABBTb21lBAAVDgAAAQAAFQ4AAAQIDQ5lBQAZDgQYT3B0aW9uBARUAVUFAQgQTm9uZQAAABBTb21lBABVBQAAAQAAHQ4AAAIhDgAhDgxMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NjhDYW5kaWRhdGVFdmVudAQESAEwAQw8Q2FuZGlkYXRlQmFja2VkEADdBwFMQ2FuZGlkYXRlUmVjZWlwdDxIPgAAhQUBIEhlYWREYXRhAADhBwEkQ29yZUluZGV4AADlBwEoR3JvdXBJbmRleAAAAERDYW5kaWRhdGVJbmNsdWRlZBAA3QcBTENhbmRpZGF0ZVJlY2VpcHQ8SD4AAIUFASBIZWFkRGF0YQAA4QcBJENvcmVJbmRleAAA5QcBKEdyb3VwSW5kZXgAAQBEQ2FuZGlkYXRlVGltZWRPdXQMAN0HAUxDYW5kaWRhdGVSZWNlaXB0PEg+AACFBQEgSGVhZERhdGEAAOEHASRDb3JlSW5kZXgAAgAAJQ4EIEJUcmVlTWFwCARLAbkCBFYBaQwABAApDgAAACkOAAACLQ4ALQ4AAAQIuQJpDAAxDgQYT3B0aW9uBARUAdELAQgQTm9uZQAAABBTb21lBADRCwAAAQAANQ4EGE9wdGlvbgQEVAGBDAEIEE5vbmUAAAAQU29tZQQAgQwAAAEAADkOBBhPcHRpb24EBFQBZQUBCBBOb25lAAAAEFNvbWUEAGUFAAABAAA9DgAAAkEOAEEOAAAEDBCZBZEMAEUOBBhPcHRpb24EBFQBCQUBCBBOb25lAAAAEFNvbWUEAAkFAAABAABJDgAAAk0OAE0OAAAEDBCZBZ0MAFEOBBhPcHRpb24EBFQBVQ4BCBBOb25lAAAAEFNvbWUEAFUOAAABAABVDhBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NiBzbGFzaGluZ1xPcGFxdWVLZXlPd25lcnNoaXBQcm9vZgAABAA0ARxWZWM8dTg+AABZDgQYT3B0aW9uBARUAYwBCBBOb25lAAAAEFNvbWUEAIwAAAEAAF0OBBhPcHRpb24EBFQBYQ4BCBBOb25lAAAAEFNvbWUEAGEOAAABAABhDhBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NjRhc3luY19iYWNraW5nMEJhY2tpbmdTdGF0ZQgESAEwBE4BEAAIASxjb25zdHJhaW50c2UOAThDb25zdHJhaW50czxOPgABUHBlbmRpbmdfYXZhaWxhYmlsaXR5hQ4BnFZlYzxDYW5kaWRhdGVQZW5kaW5nQXZhaWxhYmlsaXR5PEgsIE4+PgAAZQ4QTHBvbGthZG90X3ByaW1pdGl2ZXMIdjY0YXN5bmNfYmFja2luZyxDb25zdHJhaW50cwQETgEQADgBXG1pbl9yZWxheV9wYXJlbnRfbnVtYmVyEAEETgABMG1heF9wb3Zfc2l6ZRABDHUzMgABNG1heF9jb2RlX3NpemUQAQx1MzIAATR1bXBfcmVtYWluaW5nEAEMdTMyAAFMdW1wX3JlbWFpbmluZ19ieXRlcxABDHUzMgABZG1heF91bXBfbnVtX3Blcl9jYW5kaWRhdGUQAQx1MzIAAVhkbXBfcmVtYWluaW5nX21lc3NhZ2VzCQIBGFZlYzxOPgABMGhybXBfaW5ib3VuZGkOAWRJbmJvdW5kSHJtcExpbWl0YXRpb25zPE4+AAFEaHJtcF9jaGFubmVsc19vdXRtDgGkVmVjPChJZCwgT3V0Ym91bmRIcm1wQ2hhbm5lbExpbWl0YXRpb25zKT4AAWhtYXhfaHJtcF9udW1fcGVyX2NhbmRpZGF0ZRABDHUzMgABPHJlcXVpcmVkX3BhcmVudIUFASBIZWFkRGF0YQABUHZhbGlkYXRpb25fY29kZV9oYXNoZQUBSFZhbGlkYXRpb25Db2RlSGFzaAABTHVwZ3JhZGVfcmVzdHJpY3Rpb255DgFoT3B0aW9uPFVwZ3JhZGVSZXN0cmljdGlvbj4AAVhmdXR1cmVfdmFsaWRhdGlvbl9jb2RlfQ4BfE9wdGlvbjwoTiwgVmFsaWRhdGlvbkNvZGVIYXNoKT4AAGkOEExwb2xrYWRvdF9wcmltaXRpdmVzCHY2NGFzeW5jX2JhY2tpbmdYSW5ib3VuZEhybXBMaW1pdGF0aW9ucwQETgEQAAQBQHZhbGlkX3dhdGVybWFya3MJAgEYVmVjPE4+AABtDgAAAnEOAHEOAAAECLkCdQ4AdQ4QTHBvbGthZG90X3ByaW1pdGl2ZXMIdjY0YXN5bmNfYmFja2luZ3hPdXRib3VuZEhybXBDaGFubmVsTGltaXRhdGlvbnMAAAgBPGJ5dGVzX3JlbWFpbmluZxABDHUzMgABSG1lc3NhZ2VzX3JlbWFpbmluZxABDHUzMgAAeQ4EGE9wdGlvbgQEVAFBDAEIEE5vbmUAAAAQU29tZQQAQQwAAAEAAH0OBBhPcHRpb24EBFQBgQ4BCBBOb25lAAAAEFNvbWUEAIEOAAABAACBDgAABAgQZQUAhQ4AAAKJDgCJDhBMcG9sa2Fkb3RfcHJpbWl0aXZlcwh2NjRhc3luY19iYWNraW5ncENhbmRpZGF0ZVBlbmRpbmdBdmFpbGFiaWxpdHkIBEgBMAROARAAFAE4Y2FuZGlkYXRlX2hhc2iZBQE0Q2FuZGlkYXRlSGFzaAABKGRlc2NyaXB0b3JZBQFYQ2FuZGlkYXRlRGVzY3JpcHRvcjxIPgABLGNvbW1pdG1lbnRzaQUBUENhbmRpZGF0ZUNvbW1pdG1lbnRzAAFMcmVsYXlfcGFyZW50X251bWJlchABBE4AATBtYXhfcG92X3NpemUQAQx1MzIAAI0OBBhPcHRpb24EBFQBkQ4BCBBOb25lAAAAEFNvbWUEAJEOAAABAACRDghIc3BfY29uc2Vuc3VzX2JlZWZ5MFZhbGlkYXRvclNldAQsQXV0aG9yaXR5SWQBTQIACAEodmFsaWRhdG9yc10NAUBWZWM8QXV0aG9yaXR5SWQ+AAEIaWQsAThWYWxpZGF0b3JTZXRJZAAAlQ4ISHNwX2NvbnNlbnN1c19iZWVmeVxPcGFxdWVLZXlPd25lcnNoaXBQcm9vZgAABAA0ARxWZWM8dTg+AACZDgQYT3B0aW9uBARUAZUOAQgQTm9uZQAAABBTb21lBACVDgAAAQAAnQ4EGFJlc3VsdAgEVAEwBEUBoQ4BCAhPawQAMAAAAAAMRXJyBAChDgAAAQAAoQ4IRHNwX21tcl9wcmltaXRpdmVzFEVycm9yAAEoQEludmFsaWROdW1lcmljT3AAAAAQUHVzaAABABxHZXRSb290AAIAGENvbW1pdAADADRHZW5lcmF0ZVByb29mAAQAGFZlcmlmeQAFADBMZWFmTm90Rm91bmQABgBEUGFsbGV0Tm90SW5jbHVkZWQABwBASW52YWxpZExlYWZJbmRleAAIAFRJbnZhbGlkQmVzdEtub3duQmxvY2sACQAApQ4EGFJlc3VsdAgEVAEsBEUBoQ4BCAhPawQALAAAAAAMRXJyBAChDgAAAQAAqQ4EGFJlc3VsdAgEVAGtDgRFAaEOAQgIT2sEAK0OAAAAAAxFcnIEAKEOAAABAACtDgAABAixDrkOALEOAAACtQ4AtQ4IRHNwX21tcl9wcmltaXRpdmVzTEVuY29kYWJsZU9wYXF1ZUxlYWYAAAQANAEcVmVjPHU4PgAAuQ4IRHNwX21tcl9wcmltaXRpdmVzFFByb29mBBBIYXNoATAADAEwbGVhZl9pbmRpY2VzPQsBOFZlYzxMZWFmSW5kZXg+AAEobGVhZl9jb3VudCwBJE5vZGVJbmRleAABFGl0ZW1zuQEBJFZlYzxIYXNoPgAAvQ4EGFJlc3VsdAgEVAGMBEUBoQ4BCAhPawQAjAAAAAAMRXJyBAChDgAAAQAAwQ4IUHNwX2NvbnNlbnN1c19ncmFuZHBhXE9wYXF1ZUtleU93bmVyc2hpcFByb29mAAAEADQBHFZlYzx1OD4AAMUOBBhPcHRpb24EBFQBwQ4BCBBOb25lAAAAEFNvbWUEAMEOAAABAADJDghEc3BfY29uc2Vuc3VzX2JhYmVEQmFiZUNvbmZpZ3VyYXRpb24AABgBNHNsb3RfZHVyYXRpb24sAQx1NjQAATBlcG9jaF9sZW5ndGgsAQx1NjQAAQRj2QEBKCh1NjQsIHU2NCkAASxhdXRob3JpdGllc7EIAZxWZWM8KEF1dGhvcml0eUlkLCBCYWJlQXV0aG9yaXR5V2VpZ2h0KT4AAShyYW5kb21uZXNzBAEoUmFuZG9tbmVzcwABNGFsbG93ZWRfc2xvdHPdAQEwQWxsb3dlZFNsb3RzAADNDghEc3BfY29uc2Vuc3VzX2JhYmUURXBvY2gAABgBLGVwb2NoX2luZGV4LAEMdTY0AAEoc3RhcnRfc2xvdM0BARBTbG90AAEgZHVyYXRpb24sAQx1NjQAASxhdXRob3JpdGllc7EIAZxWZWM8KEF1dGhvcml0eUlkLCBCYWJlQXV0aG9yaXR5V2VpZ2h0KT4AAShyYW5kb21uZXNzBAEoUmFuZG9tbmVzcwABGGNvbmZpZ9UIAVhCYWJlRXBvY2hDb25maWd1cmF0aW9uAADRDgQYT3B0aW9uBARUAdUOAQgQTm9uZQAAABBTb21lBADVDgAAAQAA1Q4IRHNwX2NvbnNlbnN1c19iYWJlXE9wYXF1ZUtleU93bmVyc2hpcFByb29mAAAEADQBHFZlYzx1OD4AANkOBBhPcHRpb24EBFQB3Q4BCBBOb25lAAAAEFNvbWUEAN0OAAABAADdDgAAAuEOAOEOAAAECDStCQDlDgxocGFsbGV0X3RyYW5zYWN0aW9uX3BheW1lbnQUdHlwZXNMUnVudGltZURpc3BhdGNoSW5mbwgcQmFsYW5jZQEYGFdlaWdodAEkAAwBGHdlaWdodCQBGFdlaWdodAABFGNsYXNzXAE0RGlzcGF0Y2hDbGFzcwABLHBhcnRpYWxfZmVlGAEcQmFsYW5jZQAA6Q4MaHBhbGxldF90cmFuc2FjdGlvbl9wYXltZW50FHR5cGVzKEZlZURldGFpbHMEHEJhbGFuY2UBGAAIATRpbmNsdXNpb25fZmVl7Q4BdE9wdGlvbjxJbmNsdXNpb25GZWU8QmFsYW5jZT4+AAEMdGlwGAEcQmFsYW5jZQAA7Q4EGE9wdGlvbgQEVAHxDgEIEE5vbmUAAAAQU29tZQQA8Q4AAAEAAPEODGhwYWxsZXRfdHJhbnNhY3Rpb25fcGF5bWVudBR0eXBlczBJbmNsdXNpb25GZWUEHEJhbGFuY2UBGAAMASBiYXNlX2ZlZRgBHEJhbGFuY2UAARxsZW5fZmVlGAEcQmFsYW5jZQABTGFkanVzdGVkX3dlaWdodF9mZWUYARxCYWxhbmNlAAD1DgQYUmVzdWx0CARUAYwERQE9CAEICE9rBACMAAAAAAxFcnIEAD0IAAABAAD5DghAcG9sa2Fkb3RfcnVudGltZTBSdW50aW1lRXJyb3IAAaQYU3lzdGVtBABtCAFwZnJhbWVfc3lzdGVtOjpFcnJvcjxSdW50aW1lPgAAACRTY2hlZHVsZXIEAIEIAYBwYWxsZXRfc2NoZWR1bGVyOjpFcnJvcjxSdW50aW1lPgABACBQcmVpbWFnZQQApQgBfHBhbGxldF9wcmVpbWFnZTo6RXJyb3I8UnVudGltZT4ACgAQQmFiZQQA5QgBbHBhbGxldF9iYWJlOjpFcnJvcjxSdW50aW1lPgACABxJbmRpY2VzBADtCAF4cGFsbGV0X2luZGljZXM6OkVycm9yPFJ1bnRpbWU+AAQAIEJhbGFuY2VzBAA5CQF8cGFsbGV0X2JhbGFuY2VzOjpFcnJvcjxSdW50aW1lPgAFABxTdGFraW5nBACVCQF4cGFsbGV0X3N0YWtpbmc6OkVycm9yPFJ1bnRpbWU+AAcAHFNlc3Npb24EALEJAXhwYWxsZXRfc2Vzc2lvbjo6RXJyb3I8UnVudGltZT4ACQAcR3JhbmRwYQQAwQkBeHBhbGxldF9ncmFuZHBhOjpFcnJvcjxSdW50aW1lPgALACBUcmVhc3VyeQQA5QkBfHBhbGxldF90cmVhc3VyeTo6RXJyb3I8UnVudGltZT4AEwBAQ29udmljdGlvblZvdGluZwQAGQoBoHBhbGxldF9jb252aWN0aW9uX3ZvdGluZzo6RXJyb3I8UnVudGltZT4AFAAkUmVmZXJlbmRhBABhCgGAcGFsbGV0X3JlZmVyZW5kYTo6RXJyb3I8UnVudGltZT4AFQAkV2hpdGVsaXN0BABlCgGAcGFsbGV0X3doaXRlbGlzdDo6RXJyb3I8UnVudGltZT4AFwAYQ2xhaW1zBABpCgFYY2xhaW1zOjpFcnJvcjxSdW50aW1lPgAYABxWZXN0aW5nBAB5CgF4cGFsbGV0X3Zlc3Rpbmc6OkVycm9yPFJ1bnRpbWU+ABkAHFV0aWxpdHkEAH0KAXhwYWxsZXRfdXRpbGl0eTo6RXJyb3I8UnVudGltZT4AGgAgSWRlbnRpdHkEALkKAXxwYWxsZXRfaWRlbnRpdHk6OkVycm9yPFJ1bnRpbWU+ABwAFFByb3h5BADdCgFwcGFsbGV0X3Byb3h5OjpFcnJvcjxSdW50aW1lPgAdACBNdWx0aXNpZwQA7QoBfHBhbGxldF9tdWx0aXNpZzo6RXJyb3I8UnVudGltZT4AHgAgQm91bnRpZXMEAP0KAXxwYWxsZXRfYm91bnRpZXM6OkVycm9yPFJ1bnRpbWU+ACIANENoaWxkQm91bnRpZXMEAAkLAZRwYWxsZXRfY2hpbGRfYm91bnRpZXM6OkVycm9yPFJ1bnRpbWU+ACYAaEVsZWN0aW9uUHJvdmlkZXJNdWx0aVBoYXNlBAAxCwHQcGFsbGV0X2VsZWN0aW9uX3Byb3ZpZGVyX211bHRpX3BoYXNlOjpFcnJvcjxSdW50aW1lPgAkACRWb3Rlckxpc3QEAEELAfRwYWxsZXRfYmFnc19saXN0OjpFcnJvcjxSdW50aW1lLCBwYWxsZXRfYmFnc19saXN0OjpJbnN0YW5jZTE+ACUAPE5vbWluYXRpb25Qb29scwQAiQsBnHBhbGxldF9ub21pbmF0aW9uX3Bvb2xzOjpFcnJvcjxSdW50aW1lPgAnACxGYXN0VW5zdGFrZQQAnQsBjHBhbGxldF9mYXN0X3Vuc3Rha2U6OkVycm9yPFJ1bnRpbWU+ACgANENvbmZpZ3VyYXRpb24EAK0LAaBwYXJhY2hhaW5zX2NvbmZpZ3VyYXRpb246OkVycm9yPFJ1bnRpbWU+ADMANFBhcmFJbmNsdXNpb24EAM0LAZBwYXJhY2hhaW5zX2luY2x1c2lvbjo6RXJyb3I8UnVudGltZT4ANQAwUGFyYUluaGVyZW50BADlCwGkcGFyYWNoYWluc19wYXJhc19pbmhlcmVudDo6RXJyb3I8UnVudGltZT4ANgAUUGFyYXMEAEkMAYBwYXJhY2hhaW5zX3BhcmFzOjpFcnJvcjxSdW50aW1lPgA4ABBIcm1wBAB5DAF8cGFyYWNoYWluc19ocm1wOjpFcnJvcjxSdW50aW1lPgA8ADRQYXJhc0Rpc3B1dGVzBACZDAGMcGFyYWNoYWluc19kaXNwdXRlczo6RXJyb3I8UnVudGltZT4APgA0UGFyYXNTbGFzaGluZwQArQwBjHBhcmFjaGFpbnNfc2xhc2hpbmc6OkVycm9yPFJ1bnRpbWU+AD8AJFJlZ2lzdHJhcgQAuQwBfHBhcmFzX3JlZ2lzdHJhcjo6RXJyb3I8UnVudGltZT4ARgAUU2xvdHMEAMEMAVRzbG90czo6RXJyb3I8UnVudGltZT4ARwAgQXVjdGlvbnMEANUMAWBhdWN0aW9uczo6RXJyb3I8UnVudGltZT4ASAAkQ3Jvd2Rsb2FuBADhDAFkY3Jvd2Rsb2FuOjpFcnJvcjxSdW50aW1lPgBJAEhTdGF0ZVRyaWVNaWdyYXRpb24EABUIAaxwYWxsZXRfc3RhdGVfdHJpZV9taWdyYXRpb246OkVycm9yPFJ1bnRpbWU+AGIAJFhjbVBhbGxldAQANQ0BaHBhbGxldF94Y206OkVycm9yPFJ1bnRpbWU+AGMAME1lc3NhZ2VRdWV1ZQQAUQ0BkHBhbGxldF9tZXNzYWdlX3F1ZXVlOjpFcnJvcjxSdW50aW1lPgBkACRBc3NldFJhdGUEAFUNAYRwYWxsZXRfYXNzZXRfcmF0ZTo6RXJyb3I8UnVudGltZT4AZQAUQmVlZnkEAGENAXBwYWxsZXRfYmVlZnk6OkVycm9yPFJ1bnRpbWU+AMgAAOgYU3lzdGVtARhTeXN0ZW1EHEFjY291bnQBAQQCAAxBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACABOggVGhlIGZ1bGwgYWNjb3VudCBpbmZvcm1hdGlvbiBmb3IgYSBwYXJ0aWN1bGFyIGFjY291bnQgSUQuOEV4dHJpbnNpY0NvdW50AAAQBAAEuCBUb3RhbCBleHRyaW5zaWNzIGNvdW50IGZvciB0aGUgY3VycmVudCBibG9jay4sQmxvY2tXZWlnaHQBACAYAAAAAAAABIggVGhlIGN1cnJlbnQgd2VpZ2h0IGZvciB0aGUgYmxvY2suQEFsbEV4dHJpbnNpY3NMZW4AABAEAARBASBUb3RhbCBsZW5ndGggKGluIGJ5dGVzKSBmb3IgYWxsIGV4dHJpbnNpY3MgcHV0IHRvZ2V0aGVyLCBmb3IgdGhlIGN1cnJlbnQgYmxvY2suJEJsb2NrSGFzaAEBBAUQMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASYIE1hcCBvZiBibG9jayBudW1iZXJzIHRvIGJsb2NrIGhhc2hlcy40RXh0cmluc2ljRGF0YQEBBAUQNAQABD0BIEV4dHJpbnNpY3MgZGF0YSBmb3IgdGhlIGN1cnJlbnQgYmxvY2sgKG1hcHMgYW4gZXh0cmluc2ljJ3MgaW5kZXggdG8gaXRzIGRhdGEpLhhOdW1iZXIBABAQAAAAAAQJASBUaGUgY3VycmVudCBibG9jayBudW1iZXIgYmVpbmcgcHJvY2Vzc2VkLiBTZXQgYnkgYGV4ZWN1dGVfYmxvY2tgLihQYXJlbnRIYXNoAQAwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAgSGFzaCBvZiB0aGUgcHJldmlvdXMgYmxvY2suGERpZ2VzdAEAOAQABPAgRGlnZXN0IG9mIHRoZSBjdXJyZW50IGJsb2NrLCBhbHNvIHBhcnQgb2YgdGhlIGJsb2NrIGhlYWRlci4YRXZlbnRzAQBIBAAcoCBFdmVudHMgZGVwb3NpdGVkIGZvciB0aGUgY3VycmVudCBibG9jay4AHQEgTk9URTogVGhlIGl0ZW0gaXMgdW5ib3VuZCBhbmQgc2hvdWxkIHRoZXJlZm9yZSBuZXZlciBiZSByZWFkIG9uIGNoYWluLtAgSXQgY291bGQgb3RoZXJ3aXNlIGluZmxhdGUgdGhlIFBvViBzaXplIG9mIGEgYmxvY2suAC0BIEV2ZW50cyBoYXZlIGEgbGFyZ2UgaW4tbWVtb3J5IHNpemUuIEJveCB0aGUgZXZlbnRzIHRvIG5vdCBnbyBvdXQtb2YtbWVtb3J5/CBqdXN0IGluIGNhc2Ugc29tZW9uZSBzdGlsbCByZWFkcyB0aGVtIGZyb20gd2l0aGluIHRoZSBydW50aW1lLihFdmVudENvdW50AQAQEAAAAAAEuCBUaGUgbnVtYmVyIG9mIGV2ZW50cyBpbiB0aGUgYEV2ZW50czxUPmAgbGlzdC4sRXZlbnRUb3BpY3MBAQQCMDUIBAAoJQEgTWFwcGluZyBiZXR3ZWVuIGEgdG9waWMgKHJlcHJlc2VudGVkIGJ5IFQ6Okhhc2gpIGFuZCBhIHZlY3RvciBvZiBpbmRleGVzlCBvZiBldmVudHMgaW4gdGhlIGA8RXZlbnRzPFQ+PmAgbGlzdC4AUQEgQWxsIHRvcGljIHZlY3RvcnMgaGF2ZSBkZXRlcm1pbmlzdGljIHN0b3JhZ2UgbG9jYXRpb25zIGRlcGVuZGluZyBvbiB0aGUgdG9waWMuIFRoaXNFASBhbGxvd3MgbGlnaHQtY2xpZW50cyB0byBsZXZlcmFnZSB0aGUgY2hhbmdlcyB0cmllIHN0b3JhZ2UgdHJhY2tpbmcgbWVjaGFuaXNtIGFuZOQgaW4gY2FzZSBvZiBjaGFuZ2VzIGZldGNoIHRoZSBsaXN0IG9mIGV2ZW50cyBvZiBpbnRlcmVzdC4AWQEgVGhlIHZhbHVlIGhhcyB0aGUgdHlwZSBgKEJsb2NrTnVtYmVyRm9yPFQ+LCBFdmVudEluZGV4KWAgYmVjYXVzZSBpZiB3ZSB1c2VkIG9ubHkganVzdE0BIHRoZSBgRXZlbnRJbmRleGAgdGhlbiBpbiBjYXNlIGlmIHRoZSB0b3BpYyBoYXMgdGhlIHNhbWUgY29udGVudHMgb24gdGhlIG5leHQgYmxvY2sBASBubyBub3RpZmljYXRpb24gd2lsbCBiZSB0cmlnZ2VyZWQgdGh1cyB0aGUgZXZlbnQgbWlnaHQgYmUgbG9zdC5ITGFzdFJ1bnRpbWVVcGdyYWRlAAA5CAQABFUBIFN0b3JlcyB0aGUgYHNwZWNfdmVyc2lvbmAgYW5kIGBzcGVjX25hbWVgIG9mIHdoZW4gdGhlIGxhc3QgcnVudGltZSB1cGdyYWRlIGhhcHBlbmVkLlRVcGdyYWRlZFRvVTMyUmVmQ291bnQBAHgEAARNASBUcnVlIGlmIHdlIGhhdmUgdXBncmFkZWQgc28gdGhhdCBgdHlwZSBSZWZDb3VudGAgaXMgYHUzMmAuIEZhbHNlIChkZWZhdWx0KSBpZiBub3QuYFVwZ3JhZGVkVG9UcmlwbGVSZWZDb3VudAEAeAQACF0BIFRydWUgaWYgd2UgaGF2ZSB1cGdyYWRlZCBzbyB0aGF0IEFjY291bnRJbmZvIGNvbnRhaW5zIHRocmVlIHR5cGVzIG9mIGBSZWZDb3VudGAuIEZhbHNlSCAoZGVmYXVsdCkgaWYgbm90LjhFeGVjdXRpb25QaGFzZQAAMQgEAASIIFRoZSBleGVjdXRpb24gcGhhc2Ugb2YgdGhlIGJsb2NrLkRBdXRob3JpemVkVXBncmFkZQAAQQgEAAS4IGBTb21lYCBpZiBhIGNvZGUgdXBncmFkZSBoYXMgYmVlbiBhdXRob3JpemVkLgGdAQFUGDBCbG9ja1dlaWdodHNFCAECB7C96TYDAAsAIEqp0QET//////////8iLQ0eAAELuIRcj1gBE6NwPQrXo3C9AQsAmPc+XQET/////////78BAAAiLQ0eAAELuAyv+cwBE6NwPQrXo3D9AQsAIEqp0QET//////////8BBwCIUmp0EwAAAAAAAABAIi0NHgAAAAAE0CBCbG9jayAmIGV4dHJpbnNpY3Mgd2VpZ2h0czogYmFzZSB2YWx1ZXMgYW5kIGxpbWl0cy4sQmxvY2tMZW5ndGhRCDAAADwAAABQAAAAUAAEqCBUaGUgbWF4aW11bSBsZW5ndGggb2YgYSBibG9jayAoaW4gYnl0ZXMpLjhCbG9ja0hhc2hDb3VudBAQABAAAARVASBNYXhpbXVtIG51bWJlciBvZiBibG9jayBudW1iZXIgdG8gYmxvY2sgaGFzaCBtYXBwaW5ncyB0byBrZWVwIChvbGRlc3QgcHJ1bmVkIGZpcnN0KS4gRGJXZWlnaHRZCEA4yjgBAAAAAJiq+QQAAAAABAkBIFRoZSB3ZWlnaHQgb2YgcnVudGltZSBkYXRhYmFzZSBvcGVyYXRpb25zIHRoZSBydW50aW1lIGNhbiBpbnZva2UuHFZlcnNpb25dCD0EIHBvbGthZG90PHBhcml0eS1wb2xrYWRvdAAAAAAXSg8AAAAAAEzfastomQdgmwQAAAA345f8fJH15AIAAABA/jrUAfiVmgYAAAAXprwNAGKuswEAAAAY71ijtnuncAEAAADSvJiX7tCPFQMAAAD3iyeL5T9FTAIAAACvLAKXoj5tPQoAAABJ6q8bVIoMsAMAAACR1d8YsNLPWAIAAAAqXpJGVTmeYAEAAADtmcWssl7t9QMAAADLyiXjnxQjhwIAAABoetRK038DwgEAAACrPAVyKR/riwEAAAC8nYmQT1uSPwEAAAA3yLsTUKmiqAQAAADz/xTVq1JwWQMAAAD7xXe510fv1gEAAAAaAAAAAQSEIEdldCB0aGUgY2hhaW4ncyBjdXJyZW50IHZlcnNpb24uKFNTNThQcmVmaXiRAQgAABSoIFRoZSBkZXNpZ25hdGVkIFNTNTggcHJlZml4IG9mIHRoaXMgY2hhaW4uADkBIFRoaXMgcmVwbGFjZXMgdGhlICJzczU4Rm9ybWF0IiBwcm9wZXJ0eSBkZWNsYXJlZCBpbiB0aGUgY2hhaW4gc3BlYy4gUmVhc29uIGlzMQEgdGhhdCB0aGUgcnVudGltZSBzaG91bGQga25vdyBhYm91dCB0aGUgcHJlZml4IGluIG9yZGVyIHRvIG1ha2UgdXNlIG9mIGl0IGFzcCBhbiBpZGVudGlmaWVyIG9mIHRoZSBjaGFpbi4BbQgAACRTY2hlZHVsZXIBJFNjaGVkdWxlcgw8SW5jb21wbGV0ZVNpbmNlAAAQBAAAGEFnZW5kYQEBBAUQcQgEAARNASBJdGVtcyB0byBiZSBleGVjdXRlZCwgaW5kZXhlZCBieSB0aGUgYmxvY2sgbnVtYmVyIHRoYXQgdGhleSBzaG91bGQgYmUgZXhlY3V0ZWQgb24uGExvb2t1cAABBAUEgAQAEPggTG9va3VwIGZyb20gYSBuYW1lIHRvIHRoZSBibG9jayBudW1iZXIgYW5kIGluZGV4IG9mIHRoZSB0YXNrLgBZASBGb3IgdjMgLT4gdjQgdGhlIHByZXZpb3VzbHkgdW5ib3VuZGVkIGlkZW50aXRpZXMgYXJlIEJsYWtlMi0yNTYgaGFzaGVkIHRvIGZvcm0gdGhlIHY0MCBpZGVudGl0aWVzLgGtAQF8CDRNYXhpbXVtV2VpZ2h0JEALAIBuh3QBE8zMzMzMzMzMBCkBIFRoZSBtYXhpbXVtIHdlaWdodCB0aGF0IG1heSBiZSBzY2hlZHVsZWQgcGVyIGJsb2NrIGZvciBhbnkgZGlzcGF0Y2hhYmxlcy5QTWF4U2NoZWR1bGVkUGVyQmxvY2sQEDIAAAAUHQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIHNjaGVkdWxlZCBjYWxscyBpbiB0aGUgcXVldWUgZm9yIGEgc2luZ2xlIGJsb2NrLgAYIE5PVEU6UQEgKyBEZXBlbmRlbnQgcGFsbGV0cycgYmVuY2htYXJrcyBtaWdodCByZXF1aXJlIGEgaGlnaGVyIGxpbWl0IGZvciB0aGUgc2V0dGluZy4gU2V0IGHEIGhpZ2hlciBsaW1pdCB1bmRlciBgcnVudGltZS1iZW5jaG1hcmtzYCBmZWF0dXJlLgGBCAEAIFByZWltYWdlASBQcmVpbWFnZQwkU3RhdHVzRm9yAAEEBjCFCAQABJAgVGhlIHJlcXVlc3Qgc3RhdHVzIG9mIGEgZ2l2ZW4gaGFzaC5AUmVxdWVzdFN0YXR1c0ZvcgABBAYwjQgEAASQIFRoZSByZXF1ZXN0IHN0YXR1cyBvZiBhIGdpdmVuIGhhc2guLFByZWltYWdlRm9yAAEEBp0IoQgEAAABtQEBkAABpQgKABBCYWJlARBCYWJlRChFcG9jaEluZGV4AQAsIAAAAAAAAAAABFQgQ3VycmVudCBlcG9jaCBpbmRleC4sQXV0aG9yaXRpZXMBAKkIBAAEbCBDdXJyZW50IGVwb2NoIGF1dGhvcml0aWVzLixHZW5lc2lzU2xvdAEAzQEgAAAAAAAAAAAI+CBUaGUgc2xvdCBhdCB3aGljaCB0aGUgZmlyc3QgZXBvY2ggYWN0dWFsbHkgc3RhcnRlZC4gVGhpcyBpcyAwkCB1bnRpbCB0aGUgZmlyc3QgYmxvY2sgb2YgdGhlIGNoYWluLixDdXJyZW50U2xvdAEAzQEgAAAAAAAAAAAEVCBDdXJyZW50IHNsb3QgbnVtYmVyLihSYW5kb21uZXNzAQAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKLggVGhlIGVwb2NoIHJhbmRvbW5lc3MgZm9yIHRoZSAqY3VycmVudCogZXBvY2guACwgIyBTZWN1cml0eQAFASBUaGlzIE1VU1QgTk9UIGJlIHVzZWQgZm9yIGdhbWJsaW5nLCBhcyBpdCBjYW4gYmUgaW5mbHVlbmNlZCBieSBh+CBtYWxpY2lvdXMgdmFsaWRhdG9yIGluIHRoZSBzaG9ydCB0ZXJtLiBJdCBNQVkgYmUgdXNlZCBpbiBtYW55FQEgY3J5cHRvZ3JhcGhpYyBwcm90b2NvbHMsIGhvd2V2ZXIsIHNvIGxvbmcgYXMgb25lIHJlbWVtYmVycyB0aGF0IHRoaXMVASAobGlrZSBldmVyeXRoaW5nIGVsc2Ugb24tY2hhaW4pIGl0IGlzIHB1YmxpYy4gRm9yIGV4YW1wbGUsIGl0IGNhbiBiZQUBIHVzZWQgd2hlcmUgYSBudW1iZXIgaXMgbmVlZGVkIHRoYXQgY2Fubm90IGhhdmUgYmVlbiBjaG9zZW4gYnkgYW4NASBhZHZlcnNhcnksIGZvciBwdXJwb3NlcyBzdWNoIGFzIHB1YmxpYy1jb2luIHplcm8ta25vd2xlZGdlIHByb29mcy5gUGVuZGluZ0Vwb2NoQ29uZmlnQ2hhbmdlAADVAQQABGEBIFBlbmRpbmcgZXBvY2ggY29uZmlndXJhdGlvbiBjaGFuZ2UgdGhhdCB3aWxsIGJlIGFwcGxpZWQgd2hlbiB0aGUgbmV4dCBlcG9jaCBpcyBlbmFjdGVkLjhOZXh0UmFuZG9tbmVzcwEABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARcIE5leHQgZXBvY2ggcmFuZG9tbmVzcy48TmV4dEF1dGhvcml0aWVzAQCpCAQABGAgTmV4dCBlcG9jaCBhdXRob3JpdGllcy4wU2VnbWVudEluZGV4AQAQEAAAAAAkfCBSYW5kb21uZXNzIHVuZGVyIGNvbnN0cnVjdGlvbi4A+CBXZSBtYWtlIGEgdHJhZGUtb2ZmIGJldHdlZW4gc3RvcmFnZSBhY2Nlc3NlcyBhbmQgbGlzdCBsZW5ndGguAQEgV2Ugc3RvcmUgdGhlIHVuZGVyLWNvbnN0cnVjdGlvbiByYW5kb21uZXNzIGluIHNlZ21lbnRzIG9mIHVwIHRvlCBgVU5ERVJfQ09OU1RSVUNUSU9OX1NFR01FTlRfTEVOR1RIYC4A7CBPbmNlIGEgc2VnbWVudCByZWFjaGVzIHRoaXMgbGVuZ3RoLCB3ZSBiZWdpbiB0aGUgbmV4dCBvbmUuCQEgV2UgcmVzZXQgYWxsIHNlZ21lbnRzIGFuZCByZXR1cm4gdG8gYDBgIGF0IHRoZSBiZWdpbm5pbmcgb2YgZXZlcnkcIGVwb2NoLkRVbmRlckNvbnN0cnVjdGlvbgEBBAUQtQgEAAQVASBUV09YLU5PVEU6IGBTZWdtZW50SW5kZXhgIGlzIGFuIGluY3JlYXNpbmcgaW50ZWdlciwgc28gdGhpcyBpcyBva2F5LixJbml0aWFsaXplZAAAvQgEAAgBASBUZW1wb3JhcnkgdmFsdWUgKGNsZWFyZWQgYXQgYmxvY2sgZmluYWxpemF0aW9uKSB3aGljaCBpcyBgU29tZWAdASBpZiBwZXItYmxvY2sgaW5pdGlhbGl6YXRpb24gaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQgZm9yIGN1cnJlbnQgYmxvY2suTEF1dGhvclZyZlJhbmRvbW5lc3MBAIQEABAVASBUaGlzIGZpZWxkIHNob3VsZCBhbHdheXMgYmUgcG9wdWxhdGVkIGR1cmluZyBibG9jayBwcm9jZXNzaW5nIHVubGVzcxkBIHNlY29uZGFyeSBwbGFpbiBzbG90cyBhcmUgZW5hYmxlZCAod2hpY2ggZG9uJ3QgY29udGFpbiBhIFZSRiBvdXRwdXQpLgBJASBJdCBpcyBzZXQgaW4gYG9uX2ZpbmFsaXplYCwgYmVmb3JlIGl0IHdpbGwgY29udGFpbiB0aGUgdmFsdWUgZnJvbSB0aGUgbGFzdCBibG9jay4oRXBvY2hTdGFydAEAgCAAAAAAAAAAABRdASBUaGUgYmxvY2sgbnVtYmVycyB3aGVuIHRoZSBsYXN0IGFuZCBjdXJyZW50IGVwb2NoIGhhdmUgc3RhcnRlZCwgcmVzcGVjdGl2ZWx5IGBOLTFgIGFuZBQgYE5gLkkBIE5PVEU6IFdlIHRyYWNrIHRoaXMgaXMgaW4gb3JkZXIgdG8gYW5ub3RhdGUgdGhlIGJsb2NrIG51bWJlciB3aGVuIGEgZ2l2ZW4gcG9vbCBvZlkBIGVudHJvcHkgd2FzIGZpeGVkIChpLmUuIGl0IHdhcyBrbm93biB0byBjaGFpbiBvYnNlcnZlcnMpLiBTaW5jZSBlcG9jaHMgYXJlIGRlZmluZWQgaW5ZASBzbG90cywgd2hpY2ggbWF5IGJlIHNraXBwZWQsIHRoZSBibG9jayBudW1iZXJzIG1heSBub3QgbGluZSB1cCB3aXRoIHRoZSBzbG90IG51bWJlcnMuIExhdGVuZXNzAQAQEAAAAAAU2CBIb3cgbGF0ZSB0aGUgY3VycmVudCBibG9jayBpcyBjb21wYXJlZCB0byBpdHMgcGFyZW50LgAVASBUaGlzIGVudHJ5IGlzIHBvcHVsYXRlZCBhcyBwYXJ0IG9mIGJsb2NrIGV4ZWN1dGlvbiBhbmQgaXMgY2xlYW5lZCB1cBEBIG9uIGJsb2NrIGZpbmFsaXphdGlvbi4gUXVlcnlpbmcgdGhpcyBzdG9yYWdlIGVudHJ5IG91dHNpZGUgb2YgYmxvY2uwIGV4ZWN1dGlvbiBjb250ZXh0IHNob3VsZCBhbHdheXMgeWllbGQgemVyby4sRXBvY2hDb25maWcAANUIBAAIYQEgVGhlIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBjdXJyZW50IGVwb2NoLiBTaG91bGQgbmV2ZXIgYmUgYE5vbmVgIGFzIGl0IGlzIGluaXRpYWxpemVkIGluJCBnZW5lc2lzLjxOZXh0RXBvY2hDb25maWcAANUIBAAILQEgVGhlIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBuZXh0IGVwb2NoLCBgTm9uZWAgaWYgdGhlIGNvbmZpZyB3aWxsIG5vdCBjaGFuZ2XoICh5b3UgY2FuIGZhbGxiYWNrIHRvIGBFcG9jaENvbmZpZ2AgaW5zdGVhZCBpbiB0aGF0IGNhc2UpLjRTa2lwcGVkRXBvY2hzAQDZCAQAICkBIEEgbGlzdCBvZiB0aGUgbGFzdCAxMDAgc2tpcHBlZCBlcG9jaHMgYW5kIHRoZSBjb3JyZXNwb25kaW5nIHNlc3Npb24gaW5kZXhwIHdoZW4gdGhlIGVwb2NoIHdhcyBza2lwcGVkLgAxASBUaGlzIGlzIG9ubHkgdXNlZCBmb3IgdmFsaWRhdGluZyBlcXVpdm9jYXRpb24gcHJvb2ZzLiBBbiBlcXVpdm9jYXRpb24gcHJvb2Y1ASBtdXN0IGNvbnRhaW5zIGEga2V5LW93bmVyc2hpcCBwcm9vZiBmb3IgYSBnaXZlbiBzZXNzaW9uLCB0aGVyZWZvcmUgd2UgbmVlZCBhOQEgd2F5IHRvIHRpZSB0b2dldGhlciBzZXNzaW9ucyBhbmQgZXBvY2ggaW5kaWNlcywgaS5lLiB3ZSBuZWVkIHRvIHZhbGlkYXRlIHRoYXQpASBhIHZhbGlkYXRvciB3YXMgdGhlIG93bmVyIG9mIGEgZ2l2ZW4ga2V5IG9uIGEgZ2l2ZW4gc2Vzc2lvbiwgYW5kIHdoYXQgdGhlsCBhY3RpdmUgZXBvY2ggaW5kZXggd2FzIGR1cmluZyB0aGF0IHNlc3Npb24uAb0BABA0RXBvY2hEdXJhdGlvbiwgYAkAAAAAAAAM7CBUaGUgYW1vdW50IG9mIHRpbWUsIGluIHNsb3RzLCB0aGF0IGVhY2ggZXBvY2ggc2hvdWxkIGxhc3QuGQEgTk9URTogQ3VycmVudGx5IGl0IGlzIG5vdCBwb3NzaWJsZSB0byBjaGFuZ2UgdGhlIGVwb2NoIGR1cmF0aW9uIGFmdGVyIQEgdGhlIGNoYWluIGhhcyBzdGFydGVkLiBBdHRlbXB0aW5nIHRvIGRvIHNvIHdpbGwgYnJpY2sgYmxvY2sgcHJvZHVjdGlvbi5ERXhwZWN0ZWRCbG9ja1RpbWUsIHAXAAAAAAAAFAUBIFRoZSBleHBlY3RlZCBhdmVyYWdlIGJsb2NrIHRpbWUgYXQgd2hpY2ggQkFCRSBzaG91bGQgYmUgY3JlYXRpbmcRASBibG9ja3MuIFNpbmNlIEJBQkUgaXMgcHJvYmFiaWxpc3RpYyBpdCBpcyBub3QgdHJpdmlhbCB0byBmaWd1cmUgb3V0BQEgd2hhdCB0aGUgZXhwZWN0ZWQgYXZlcmFnZSBibG9jayB0aW1lIHNob3VsZCBiZSBiYXNlZCBvbiB0aGUgc2xvdAkBIGR1cmF0aW9uIGFuZCB0aGUgc2VjdXJpdHkgcGFyYW1ldGVyIGBjYCAod2hlcmUgYDEgLSBjYCByZXByZXNlbnRzoCB0aGUgcHJvYmFiaWxpdHkgb2YgYSBzbG90IGJlaW5nIGVtcHR5KS44TWF4QXV0aG9yaXRpZXMQEKCGAQAEiCBNYXggbnVtYmVyIG9mIGF1dGhvcml0aWVzIGFsbG93ZWQ0TWF4Tm9taW5hdG9ycxAQAAIAAATUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBub21pbmF0b3JzIGZvciBlYWNoIHZhbGlkYXRvci4B5QgCACRUaW1lc3RhbXABJFRpbWVzdGFtcAgMTm93AQAsIAAAAAAAAAAABKAgVGhlIGN1cnJlbnQgdGltZSBmb3IgdGhlIGN1cnJlbnQgYmxvY2suJERpZFVwZGF0ZQEAeAQAENggV2hldGhlciB0aGUgdGltZXN0YW1wIGhhcyBiZWVuIHVwZGF0ZWQgaW4gdGhpcyBibG9jay4AVQEgVGhpcyB2YWx1ZSBpcyB1cGRhdGVkIHRvIGB0cnVlYCB1cG9uIHN1Y2Nlc3NmdWwgc3VibWlzc2lvbiBvZiBhIHRpbWVzdGFtcCBieSBhIG5vZGUuRQEgSXQgaXMgdGhlbiBjaGVja2VkIGF0IHRoZSBlbmQgb2YgZWFjaCBibG9jayBleGVjdXRpb24gaW4gdGhlIGBvbl9maW5hbGl6ZWAgaG9vay4B4QEABDRNaW5pbXVtUGVyaW9kLCC4CwAAAAAAABiMIFRoZSBtaW5pbXVtIHBlcmlvZCBiZXR3ZWVuIGJsb2Nrcy4ATQEgQmUgYXdhcmUgdGhhdCB0aGlzIGlzIGRpZmZlcmVudCB0byB0aGUgKmV4cGVjdGVkKiBwZXJpb2QgdGhhdCB0aGUgYmxvY2sgcHJvZHVjdGlvbkkBIGFwcGFyYXR1cyBwcm92aWRlcy4gWW91ciBjaG9zZW4gY29uc2Vuc3VzIHN5c3RlbSB3aWxsIGdlbmVyYWxseSB3b3JrIHdpdGggdGhpcyB0b2EBIGRldGVybWluZSBhIHNlbnNpYmxlIGJsb2NrIHRpbWUuIEZvciBleGFtcGxlLCBpbiB0aGUgQXVyYSBwYWxsZXQgaXQgd2lsbCBiZSBkb3VibGUgdGhpc3AgcGVyaW9kIG9uIGRlZmF1bHQgc2V0dGluZ3MuAAMAHEluZGljZXMBHEluZGljZXMEIEFjY291bnRzAAEEAhDpCAQABIggVGhlIGxvb2t1cCBmcm9tIGluZGV4IHRvIGFjY291bnQuAeUBAZQEHERlcG9zaXQYQADodkgXAAAAAAAAAAAAAAAErCBUaGUgZGVwb3NpdCBuZWVkZWQgZm9yIHJlc2VydmluZyBhbiBpbmRleC4B7QgEACBCYWxhbmNlcwEgQmFsYW5jZXMcNFRvdGFsSXNzdWFuY2UBABhAAAAAAAAAAAAAAAAAAAAAAASYIFRoZSB0b3RhbCB1bml0cyBpc3N1ZWQgaW4gdGhlIHN5c3RlbS5ASW5hY3RpdmVJc3N1YW5jZQEAGEAAAAAAAAAAAAAAAAAAAAAABAkBIFRoZSB0b3RhbCB1bml0cyBvZiBvdXRzdGFuZGluZyBkZWFjdGl2YXRlZCBiYWxhbmNlIGluIHRoZSBzeXN0ZW0uHEFjY291bnQBAQQCABQBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBgCQEgVGhlIEJhbGFuY2VzIHBhbGxldCBleGFtcGxlIG9mIHN0b3JpbmcgdGhlIGJhbGFuY2Ugb2YgYW4gYWNjb3VudC4AKCAjIEV4YW1wbGUANCBgYGBub2NvbXBpbGWwICBpbXBsIHBhbGxldF9iYWxhbmNlczo6Q29uZmlnIGZvciBSdW50aW1lIHsZAiAgICB0eXBlIEFjY291bnRTdG9yZSA9IFN0b3JhZ2VNYXBTaGltPFNlbGY6OkFjY291bnQ8UnVudGltZT4sIGZyYW1lX3N5c3RlbTo6UHJvdmlkZXI8UnVudGltZT4sIEFjY291bnRJZCwgU2VsZjo6QWNjb3VudERhdGE8QmFsYW5jZT4+DCAgfRAgYGBgABUBIFlvdSBjYW4gYWxzbyBzdG9yZSB0aGUgYmFsYW5jZSBvZiBhbiBhY2NvdW50IGluIHRoZSBgU3lzdGVtYCBwYWxsZXQuACggIyBFeGFtcGxlADQgYGBgbm9jb21waWxlsCAgaW1wbCBwYWxsZXRfYmFsYW5jZXM6OkNvbmZpZyBmb3IgUnVudGltZSB7dCAgIHR5cGUgQWNjb3VudFN0b3JlID0gU3lzdGVtDCAgfRAgYGBgAFEBIEJ1dCB0aGlzIGNvbWVzIHdpdGggdHJhZGVvZmZzLCBzdG9yaW5nIGFjY291bnQgYmFsYW5jZXMgaW4gdGhlIHN5c3RlbSBwYWxsZXQgc3RvcmVzbQEgYGZyYW1lX3N5c3RlbWAgZGF0YSBhbG9uZ3NpZGUgdGhlIGFjY291bnQgZGF0YSBjb250cmFyeSB0byBzdG9yaW5nIGFjY291bnQgYmFsYW5jZXMgaW4gdGhlKQEgYEJhbGFuY2VzYCBwYWxsZXQsIHdoaWNoIHVzZXMgYSBgU3RvcmFnZU1hcGAgdG8gc3RvcmUgYmFsYW5jZXMgZGF0YSBvbmx5LkEBIE5PVEU6IFRoaXMgaXMgb25seSB1c2VkIGluIHRoZSBjYXNlIHRoYXQgdGhpcyBwYWxsZXQgaXMgdXNlZCB0byBzdG9yZSBiYWxhbmNlcy4UTG9ja3MBAQQCAPEIBAAIuCBBbnkgbGlxdWlkaXR5IGxvY2tzIG9uIHNvbWUgYWNjb3VudCBiYWxhbmNlcy4lASBOT1RFOiBTaG91bGQgb25seSBiZSBhY2Nlc3NlZCB3aGVuIHNldHRpbmcsIGNoYW5naW5nIGFuZCBmcmVlaW5nIGEgbG9jay4gUmVzZXJ2ZXMBAQQCAAEJBAAEpCBOYW1lZCByZXNlcnZlcyBvbiBzb21lIGFjY291bnQgYmFsYW5jZXMuFEhvbGRzAQEEAgANCQQABGwgSG9sZHMgb24gYWNjb3VudCBiYWxhbmNlcy4cRnJlZXplcwEBBAIAJQkEAASIIEZyZWV6ZSBsb2NrcyBvbiBhY2NvdW50IGJhbGFuY2VzLgHxAQGYEEhFeGlzdGVudGlhbERlcG9zaXQYQADkC1QCAAAAAAAAAAAAAAAgQQEgVGhlIG1pbmltdW0gYW1vdW50IHJlcXVpcmVkIHRvIGtlZXAgYW4gYWNjb3VudCBvcGVuLiBNVVNUIEJFIEdSRUFURVIgVEhBTiBaRVJPIQBZASBJZiB5b3UgKnJlYWxseSogbmVlZCBpdCB0byBiZSB6ZXJvLCB5b3UgY2FuIGVuYWJsZSB0aGUgZmVhdHVyZSBgaW5zZWN1cmVfemVyb19lZGAgZm9yYQEgdGhpcyBwYWxsZXQuIEhvd2V2ZXIsIHlvdSBkbyBzbyBhdCB5b3VyIG93biByaXNrOiB0aGlzIHdpbGwgb3BlbiB1cCBhIG1ham9yIERvUyB2ZWN0b3IuWQEgSW4gY2FzZSB5b3UgaGF2ZSBtdWx0aXBsZSBzb3VyY2VzIG9mIHByb3ZpZGVyIHJlZmVyZW5jZXMsIHlvdSBtYXkgYWxzbyBnZXQgdW5leHBlY3RlZIwgYmVoYXZpb3VyIGlmIHlvdSBzZXQgdGhpcyB0byB6ZXJvLgDwIEJvdHRvbSBsaW5lOiBEbyB5b3Vyc2VsZiBhIGZhdm91ciBhbmQgbWFrZSBpdCBhdCBsZWFzdCBvbmUhIE1heExvY2tzEBAyAAAACPQgVGhlIG1heGltdW0gbnVtYmVyIG9mIGxvY2tzIHRoYXQgc2hvdWxkIGV4aXN0IG9uIGFuIGFjY291bnQu3CBOb3Qgc3RyaWN0bHkgZW5mb3JjZWQsIGJ1dCB1c2VkIGZvciB3ZWlnaHQgZXN0aW1hdGlvbi4sTWF4UmVzZXJ2ZXMQEDIAAAAEDQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIG5hbWVkIHJlc2VydmVzIHRoYXQgY2FuIGV4aXN0IG9uIGFuIGFjY291bnQuKE1heEZyZWV6ZXMQEAgAAAAEYQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGluZGl2aWR1YWwgZnJlZXplIGxvY2tzIHRoYXQgY2FuIGV4aXN0IG9uIGFuIGFjY291bnQgYXQgYW55IHRpbWUuATkJBQBIVHJhbnNhY3Rpb25QYXltZW50AUhUcmFuc2FjdGlvblBheW1lbnQIRE5leHRGZWVNdWx0aXBsaWVyAQBVB0AAAGSns7bgDQAAAAAAAAAAADhTdG9yYWdlVmVyc2lvbgEAPQkEAAAAAaAEYE9wZXJhdGlvbmFsRmVlTXVsdGlwbGllcggEBVRZASBBIGZlZSBtdWx0aXBsaWVyIGZvciBgT3BlcmF0aW9uYWxgIGV4dHJpbnNpY3MgdG8gY29tcHV0ZSAidmlydHVhbCB0aXAiIHRvIGJvb3N0IHRoZWlyLCBgcHJpb3JpdHlgAFEBIFRoaXMgdmFsdWUgaXMgbXVsdGlwbGllZCBieSB0aGUgYGZpbmFsX2ZlZWAgdG8gb2J0YWluIGEgInZpcnR1YWwgdGlwIiB0aGF0IGlzIGxhdGVy9CBhZGRlZCB0byBhIHRpcCBjb21wb25lbnQgaW4gcmVndWxhciBgcHJpb3JpdHlgIGNhbGN1bGF0aW9ucy5NASBJdCBtZWFucyB0aGF0IGEgYE5vcm1hbGAgdHJhbnNhY3Rpb24gY2FuIGZyb250LXJ1biBhIHNpbWlsYXJseS1zaXplZCBgT3BlcmF0aW9uYWxgQQEgZXh0cmluc2ljICh3aXRoIG5vIHRpcCksIGJ5IGluY2x1ZGluZyBhIHRpcCB2YWx1ZSBncmVhdGVyIHRoYW4gdGhlIHZpcnR1YWwgdGlwLgA8IGBgYHJ1c3QsaWdub3JlQCAvLyBGb3IgYE5vcm1hbGCMIGxldCBwcmlvcml0eSA9IHByaW9yaXR5X2NhbGModGlwKTsAVCAvLyBGb3IgYE9wZXJhdGlvbmFsYBEBIGxldCB2aXJ0dWFsX3RpcCA9IChpbmNsdXNpb25fZmVlICsgdGlwKSAqIE9wZXJhdGlvbmFsRmVlTXVsdGlwbGllcjvEIGxldCBwcmlvcml0eSA9IHByaW9yaXR5X2NhbGModGlwICsgdmlydHVhbF90aXApOxAgYGBgAFEBIE5vdGUgdGhhdCBzaW5jZSB3ZSB1c2UgYGZpbmFsX2ZlZWAgdGhlIG11bHRpcGxpZXIgYXBwbGllcyBhbHNvIHRvIHRoZSByZWd1bGFyIGB0aXBgXQEgc2VudCB3aXRoIHRoZSB0cmFuc2FjdGlvbi4gU28sIG5vdCBvbmx5IGRvZXMgdGhlIHRyYW5zYWN0aW9uIGdldCBhIHByaW9yaXR5IGJ1bXAgYmFzZWRhASBvbiB0aGUgYGluY2x1c2lvbl9mZWVgLCBidXQgd2UgYWxzbyBhbXBsaWZ5IHRoZSBpbXBhY3Qgb2YgdGlwcyBhcHBsaWVkIHRvIGBPcGVyYXRpb25hbGA4IHRyYW5zYWN0aW9ucy4AIAAoQXV0aG9yc2hpcAEoQXV0aG9yc2hpcAQYQXV0aG9yAAAABAAEZCBBdXRob3Igb2YgY3VycmVudCBibG9jay4AAAAABgAcU3Rha2luZwEcU3Rha2luZ6A4VmFsaWRhdG9yQ291bnQBABAQAAAAAAScIFRoZSBpZGVhbCBudW1iZXIgb2YgYWN0aXZlIHZhbGlkYXRvcnMuVE1pbmltdW1WYWxpZGF0b3JDb3VudAEAEBAAAAAABEEBIE1pbmltdW0gbnVtYmVyIG9mIHN0YWtpbmcgcGFydGljaXBhbnRzIGJlZm9yZSBlbWVyZ2VuY3kgY29uZGl0aW9ucyBhcmUgaW1wb3NlZC40SW52dWxuZXJhYmxlcwEA9QEEAAxZASBBbnkgdmFsaWRhdG9ycyB0aGF0IG1heSBuZXZlciBiZSBzbGFzaGVkIG9yIGZvcmNpYmx5IGtpY2tlZC4gSXQncyBhIFZlYyBzaW5jZSB0aGV5J3JlTQEgZWFzeSB0byBpbml0aWFsaXplIGFuZCB0aGUgcGVyZm9ybWFuY2UgaGl0IGlzIG1pbmltYWwgKHdlIGV4cGVjdCBubyBtb3JlIHRoYW4gZm91cqwgaW52dWxuZXJhYmxlcykgYW5kIHJlc3RyaWN0ZWQgdG8gdGVzdG5ldHMuGEJvbmRlZAABBAUAAAQADAEBIE1hcCBmcm9tIGFsbCBsb2NrZWQgInN0YXNoIiBhY2NvdW50cyB0byB0aGUgY29udHJvbGxlciBhY2NvdW50LgDQIFRXT1gtTk9URTogU0FGRSBzaW5jZSBgQWNjb3VudElkYCBpcyBhIHNlY3VyZSBoYXNoLkBNaW5Ob21pbmF0b3JCb25kAQAYQAAAAAAAAAAAAAAAAAAAAAAEIQEgVGhlIG1pbmltdW0gYWN0aXZlIGJvbmQgdG8gYmVjb21lIGFuZCBtYWludGFpbiB0aGUgcm9sZSBvZiBhIG5vbWluYXRvci5ATWluVmFsaWRhdG9yQm9uZAEAGEAAAAAAAAAAAAAAAAAAAAAABCEBIFRoZSBtaW5pbXVtIGFjdGl2ZSBib25kIHRvIGJlY29tZSBhbmQgbWFpbnRhaW4gdGhlIHJvbGUgb2YgYSB2YWxpZGF0b3IuSE1pbmltdW1BY3RpdmVTdGFrZQEAGEAAAAAAAAAAAAAAAAAAAAAABBEBIFRoZSBtaW5pbXVtIGFjdGl2ZSBub21pbmF0b3Igc3Rha2Ugb2YgdGhlIGxhc3Qgc3VjY2Vzc2Z1bCBlbGVjdGlvbi40TWluQ29tbWlzc2lvbgEArBAAAAAADOggVGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbW1pc3Npb24gdGhhdCB2YWxpZGF0b3JzIGNhbiBzZXQuAIAgSWYgc2V0IHRvIGAwYCwgbm8gbGltaXQgZXhpc3RzLhhMZWRnZXIAAQQCAEEJBAAQRQEgTWFwIGZyb20gYWxsICh1bmxvY2tlZCkgImNvbnRyb2xsZXIiIGFjY291bnRzIHRvIHRoZSBpbmZvIHJlZ2FyZGluZyB0aGUgc3Rha2luZy4AdQEgTm90ZTogQWxsIHRoZSByZWFkcyBhbmQgbXV0YXRpb25zIHRvIHRoaXMgc3RvcmFnZSAqTVVTVCogYmUgZG9uZSB0aHJvdWdoIHRoZSBtZXRob2RzIGV4cG9zZWToIGJ5IFtgU3Rha2luZ0xlZGdlcmBdIHRvIGVuc3VyZSBkYXRhIGFuZCBsb2NrIGNvbnNpc3RlbmN5LhRQYXllZQABBAUAqAQADOQgV2hlcmUgdGhlIHJld2FyZCBwYXltZW50IHNob3VsZCBiZSBtYWRlLiBLZXllZCBieSBzdGFzaC4A0CBUV09YLU5PVEU6IFNBRkUgc2luY2UgYEFjY291bnRJZGAgaXMgYSBzZWN1cmUgaGFzaC4oVmFsaWRhdG9ycwEBBAUAsAgAAAxFASBUaGUgbWFwIGZyb20gKHdhbm5hYmUpIHZhbGlkYXRvciBzdGFzaCBrZXkgdG8gdGhlIHByZWZlcmVuY2VzIG9mIHRoYXQgdmFsaWRhdG9yLgDQIFRXT1gtTk9URTogU0FGRSBzaW5jZSBgQWNjb3VudElkYCBpcyBhIHNlY3VyZSBoYXNoLlBDb3VudGVyRm9yVmFsaWRhdG9ycwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwSE1heFZhbGlkYXRvcnNDb3VudAAAEAQADDEBIFRoZSBtYXhpbXVtIHZhbGlkYXRvciBjb3VudCBiZWZvcmUgd2Ugc3RvcCBhbGxvd2luZyBuZXcgdmFsaWRhdG9ycyB0byBqb2luLgDQIFdoZW4gdGhpcyB2YWx1ZSBpcyBub3Qgc2V0LCBubyBsaW1pdHMgYXJlIGVuZm9yY2VkLihOb21pbmF0b3JzAAEEBQBJCQQATHUBIFRoZSBtYXAgZnJvbSBub21pbmF0b3Igc3Rhc2gga2V5IHRvIHRoZWlyIG5vbWluYXRpb24gcHJlZmVyZW5jZXMsIG5hbWVseSB0aGUgdmFsaWRhdG9ycyB0aGF0WCB0aGV5IHdpc2ggdG8gc3VwcG9ydC4AOQEgTm90ZSB0aGF0IHRoZSBrZXlzIG9mIHRoaXMgc3RvcmFnZSBtYXAgbWlnaHQgYmVjb21lIG5vbi1kZWNvZGFibGUgaW4gY2FzZSB0aGUtASBhY2NvdW50J3MgW2BOb21pbmF0aW9uc1F1b3RhOjpNYXhOb21pbmF0aW9uc2BdIGNvbmZpZ3VyYXRpb24gaXMgZGVjcmVhc2VkLpAgSW4gdGhpcyByYXJlIGNhc2UsIHRoZXNlIG5vbWluYXRvcnNlASBhcmUgc3RpbGwgZXhpc3RlbnQgaW4gc3RvcmFnZSwgdGhlaXIga2V5IGlzIGNvcnJlY3QgYW5kIHJldHJpZXZhYmxlIChpLmUuIGBjb250YWluc19rZXlgcQEgaW5kaWNhdGVzIHRoYXQgdGhleSBleGlzdCksIGJ1dCB0aGVpciB2YWx1ZSBjYW5ub3QgYmUgZGVjb2RlZC4gVGhlcmVmb3JlLCB0aGUgbm9uLWRlY29kYWJsZW0BIG5vbWluYXRvcnMgd2lsbCBlZmZlY3RpdmVseSBub3QtZXhpc3QsIHVudGlsIHRoZXkgcmUtc3VibWl0IHRoZWlyIHByZWZlcmVuY2VzIHN1Y2ggdGhhdCBpdAEBIGlzIHdpdGhpbiB0aGUgYm91bmRzIG9mIHRoZSBuZXdseSBzZXQgYENvbmZpZzo6TWF4Tm9taW5hdGlvbnNgLgBhASBUaGlzIGltcGxpZXMgdGhhdCBgOjppdGVyX2tleXMoKS5jb3VudCgpYCBhbmQgYDo6aXRlcigpLmNvdW50KClgIG1pZ2h0IHJldHVybiBkaWZmZXJlbnRtASB2YWx1ZXMgZm9yIHRoaXMgbWFwLiBNb3Jlb3ZlciwgdGhlIG1haW4gYDo6Y291bnQoKWAgaXMgYWxpZ25lZCB3aXRoIHRoZSBmb3JtZXIsIG5hbWVseSB0aGVsIG51bWJlciBvZiBrZXlzIHRoYXQgZXhpc3QuAG0BIExhc3RseSwgaWYgYW55IG9mIHRoZSBub21pbmF0b3JzIGJlY29tZSBub24tZGVjb2RhYmxlLCB0aGV5IGNhbiBiZSBjaGlsbGVkIGltbWVkaWF0ZWx5IHZpYbggW2BDYWxsOjpjaGlsbF9vdGhlcmBdIGRpc3BhdGNoYWJsZSBieSBhbnlvbmUuANAgVFdPWC1OT1RFOiBTQUZFIHNpbmNlIGBBY2NvdW50SWRgIGlzIGEgc2VjdXJlIGhhc2guUENvdW50ZXJGb3JOb21pbmF0b3JzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXBITWF4Tm9taW5hdG9yc0NvdW50AAAQBAAMMQEgVGhlIG1heGltdW0gbm9taW5hdG9yIGNvdW50IGJlZm9yZSB3ZSBzdG9wIGFsbG93aW5nIG5ldyB2YWxpZGF0b3JzIHRvIGpvaW4uANAgV2hlbiB0aGlzIHZhbHVlIGlzIG5vdCBzZXQsIG5vIGxpbWl0cyBhcmUgZW5mb3JjZWQuKEN1cnJlbnRFcmEAABAEABBcIFRoZSBjdXJyZW50IGVyYSBpbmRleC4AZQEgVGhpcyBpcyB0aGUgbGF0ZXN0IHBsYW5uZWQgZXJhLCBkZXBlbmRpbmcgb24gaG93IHRoZSBTZXNzaW9uIHBhbGxldCBxdWV1ZXMgdGhlIHZhbGlkYXRvcoAgc2V0LCBpdCBtaWdodCBiZSBhY3RpdmUgb3Igbm90LiRBY3RpdmVFcmEAAFEJBAAQ2CBUaGUgYWN0aXZlIGVyYSBpbmZvcm1hdGlvbiwgaXQgaG9sZHMgaW5kZXggYW5kIHN0YXJ0LgBZASBUaGUgYWN0aXZlIGVyYSBpcyB0aGUgZXJhIGJlaW5nIGN1cnJlbnRseSByZXdhcmRlZC4gVmFsaWRhdG9yIHNldCBvZiB0aGlzIGVyYSBtdXN0IGJlrCBlcXVhbCB0byBbYFNlc3Npb25JbnRlcmZhY2U6OnZhbGlkYXRvcnNgXS5URXJhc1N0YXJ0U2Vzc2lvbkluZGV4AAEEBRAQBAAQVQEgVGhlIHNlc3Npb24gaW5kZXggYXQgd2hpY2ggdGhlIGVyYSBzdGFydCBmb3IgdGhlIGxhc3QgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuAGEBIE5vdGU6IFRoaXMgdHJhY2tzIHRoZSBzdGFydGluZyBzZXNzaW9uIChpLmUuIHNlc3Npb24gaW5kZXggd2hlbiBlcmEgc3RhcnQgYmVpbmcgYWN0aXZlKfAgZm9yIHRoZSBlcmFzIGluIGBbQ3VycmVudEVyYSAtIEhJU1RPUllfREVQVEgsIEN1cnJlbnRFcmFdYC4sRXJhc1N0YWtlcnMBAQgFBVkJ8AwAAAAgeCBFeHBvc3VyZSBvZiB2YWxpZGF0b3IgYXQgZXJhLgBhASBUaGlzIGlzIGtleWVkIGZpcnN0IGJ5IHRoZSBlcmEgaW5kZXggdG8gYWxsb3cgYnVsayBkZWxldGlvbiBhbmQgdGhlbiB0aGUgc3Rhc2ggYWNjb3VudC4AzCBJcyBpdCByZW1vdmVkIGFmdGVyIFtgQ29uZmlnOjpIaXN0b3J5RGVwdGhgXSBlcmFzLkEBIElmIHN0YWtlcnMgaGFzbid0IGJlZW4gc2V0IG9yIGhhcyBiZWVuIHJlbW92ZWQgdGhlbiBlbXB0eSBleHBvc3VyZSBpcyByZXR1cm5lZC4AKQEgTm90ZTogRGVwcmVjYXRlZCBzaW5jZSB2MTQuIFVzZSBgRXJhSW5mb2AgaW5zdGVhZCB0byB3b3JrIHdpdGggZXhwb3N1cmVzLkxFcmFzU3Rha2Vyc092ZXJ2aWV3AAEIBQVZCV0JBAAwuCBTdW1tYXJ5IG9mIHZhbGlkYXRvciBleHBvc3VyZSBhdCBhIGdpdmVuIGVyYS4AcQEgVGhpcyBjb250YWlucyB0aGUgdG90YWwgc3Rha2UgaW4gc3VwcG9ydCBvZiB0aGUgdmFsaWRhdG9yIGFuZCB0aGVpciBvd24gc3Rha2UuIEluIGFkZGl0aW9uLHUBIGl0IGNhbiBhbHNvIGJlIHVzZWQgdG8gZ2V0IHRoZSBudW1iZXIgb2Ygbm9taW5hdG9ycyBiYWNraW5nIHRoaXMgdmFsaWRhdG9yIGFuZCB0aGUgbnVtYmVyIG9maQEgZXhwb3N1cmUgcGFnZXMgdGhleSBhcmUgZGl2aWRlZCBpbnRvLiBUaGUgcGFnZSBjb3VudCBpcyB1c2VmdWwgdG8gZGV0ZXJtaW5lIHRoZSBudW1iZXIgb2asIHBhZ2VzIG9mIHJld2FyZHMgdGhhdCBuZWVkcyB0byBiZSBjbGFpbWVkLgBhASBUaGlzIGlzIGtleWVkIGZpcnN0IGJ5IHRoZSBlcmEgaW5kZXggdG8gYWxsb3cgYnVsayBkZWxldGlvbiBhbmQgdGhlbiB0aGUgc3Rhc2ggYWNjb3VudC6sIFNob3VsZCBvbmx5IGJlIGFjY2Vzc2VkIHRocm91Z2ggYEVyYUluZm9gLgDMIElzIGl0IHJlbW92ZWQgYWZ0ZXIgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuQQEgSWYgc3Rha2VycyBoYXNuJ3QgYmVlbiBzZXQgb3IgaGFzIGJlZW4gcmVtb3ZlZCB0aGVuIGVtcHR5IG92ZXJ2aWV3IGlzIHJldHVybmVkLkhFcmFzU3Rha2Vyc0NsaXBwZWQBAQgFBVkJ8AwAAABAmCBDbGlwcGVkIEV4cG9zdXJlIG9mIHZhbGlkYXRvciBhdCBlcmEuAGUBIE5vdGU6IFRoaXMgaXMgZGVwcmVjYXRlZCwgc2hvdWxkIGJlIHVzZWQgYXMgcmVhZC1vbmx5IGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIGZ1dHVyZS4xASBOZXcgYEV4cG9zdXJlYHMgYXJlIHN0b3JlZCBpbiBhIHBhZ2VkIG1hbm5lciBpbiBgRXJhc1N0YWtlcnNQYWdlZGAgaW5zdGVhZC4AWQEgVGhpcyBpcyBzaW1pbGFyIHRvIFtgRXJhc1N0YWtlcnNgXSBidXQgbnVtYmVyIG9mIG5vbWluYXRvcnMgZXhwb3NlZCBpcyByZWR1Y2VkIHRvIHRoZaggYFQ6Ok1heEV4cG9zdXJlUGFnZVNpemVgIGJpZ2dlc3Qgc3Rha2Vycy4dASAoTm90ZTogdGhlIGZpZWxkIGB0b3RhbGAgYW5kIGBvd25gIG9mIHRoZSBleHBvc3VyZSByZW1haW5zIHVuY2hhbmdlZCku9CBUaGlzIGlzIHVzZWQgdG8gbGltaXQgdGhlIGkvbyBjb3N0IGZvciB0aGUgbm9taW5hdG9yIHBheW91dC4AXQEgVGhpcyBpcyBrZXllZCBmaXN0IGJ5IHRoZSBlcmEgaW5kZXggdG8gYWxsb3cgYnVsayBkZWxldGlvbiBhbmQgdGhlbiB0aGUgc3Rhc2ggYWNjb3VudC4AzCBJdCBpcyByZW1vdmVkIGFmdGVyIFtgQ29uZmlnOjpIaXN0b3J5RGVwdGhgXSBlcmFzLkEBIElmIHN0YWtlcnMgaGFzbid0IGJlZW4gc2V0IG9yIGhhcyBiZWVuIHJlbW92ZWQgdGhlbiBlbXB0eSBleHBvc3VyZSBpcyByZXR1cm5lZC4AKQEgTm90ZTogRGVwcmVjYXRlZCBzaW5jZSB2MTQuIFVzZSBgRXJhSW5mb2AgaW5zdGVhZCB0byB3b3JrIHdpdGggZXhwb3N1cmVzLkBFcmFzU3Rha2Vyc1BhZ2VkAAEMBQUFYQllCQQAGMAgUGFnaW5hdGVkIGV4cG9zdXJlIG9mIGEgdmFsaWRhdG9yIGF0IGdpdmVuIGVyYS4AcQEgVGhpcyBpcyBrZXllZCBmaXJzdCBieSB0aGUgZXJhIGluZGV4IHRvIGFsbG93IGJ1bGsgZGVsZXRpb24sIHRoZW4gc3Rhc2ggYWNjb3VudCBhbmQgZmluYWxsedQgdGhlIHBhZ2UuIFNob3VsZCBvbmx5IGJlIGFjY2Vzc2VkIHRocm91Z2ggYEVyYUluZm9gLgDUIFRoaXMgaXMgY2xlYXJlZCBhZnRlciBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy44Q2xhaW1lZFJld2FyZHMBAQgFBVkJCQIEABjcIEhpc3Rvcnkgb2YgY2xhaW1lZCBwYWdlZCByZXdhcmRzIGJ5IGVyYSBhbmQgdmFsaWRhdG9yLgBpASBUaGlzIGlzIGtleWVkIGJ5IGVyYSBhbmQgdmFsaWRhdG9yIHN0YXNoIHdoaWNoIG1hcHMgdG8gdGhlIHNldCBvZiBwYWdlIGluZGV4ZXMgd2hpY2ggaGF2ZTggYmVlbiBjbGFpbWVkLgDMIEl0IGlzIHJlbW92ZWQgYWZ0ZXIgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuSEVyYXNWYWxpZGF0b3JQcmVmcwEBCAUFWQmwCAAAFBEBIFNpbWlsYXIgdG8gYEVyYXNTdGFrZXJzYCwgdGhpcyBob2xkcyB0aGUgcHJlZmVyZW5jZXMgb2YgdmFsaWRhdG9ycy4AYQEgVGhpcyBpcyBrZXllZCBmaXJzdCBieSB0aGUgZXJhIGluZGV4IHRvIGFsbG93IGJ1bGsgZGVsZXRpb24gYW5kIHRoZW4gdGhlIHN0YXNoIGFjY291bnQuAMwgSXMgaXQgcmVtb3ZlZCBhZnRlciBbYENvbmZpZzo6SGlzdG9yeURlcHRoYF0gZXJhcy5MRXJhc1ZhbGlkYXRvclJld2FyZAABBAUQGAQADC0BIFRoZSB0b3RhbCB2YWxpZGF0b3IgZXJhIHBheW91dCBmb3IgdGhlIGxhc3QgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuACEBIEVyYXMgdGhhdCBoYXZlbid0IGZpbmlzaGVkIHlldCBvciBoYXMgYmVlbiByZW1vdmVkIGRvZXNuJ3QgaGF2ZSByZXdhcmQuQEVyYXNSZXdhcmRQb2ludHMBAQQFEGkJFAAAAAAACNAgUmV3YXJkcyBmb3IgdGhlIGxhc3QgW2BDb25maWc6Okhpc3RvcnlEZXB0aGBdIGVyYXMuJQEgSWYgcmV3YXJkIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gMCByZXdhcmQgaXMgcmV0dXJuZWQuOEVyYXNUb3RhbFN0YWtlAQEEBRAYQAAAAAAAAAAAAAAAAAAAAAAIEQEgVGhlIHRvdGFsIGFtb3VudCBzdGFrZWQgZm9yIHRoZSBsYXN0IFtgQ29uZmlnOjpIaXN0b3J5RGVwdGhgXSBlcmFzLh0BIElmIHRvdGFsIGhhc24ndCBiZWVuIHNldCBvciBoYXMgYmVlbiByZW1vdmVkIHRoZW4gMCBzdGFrZSBpcyByZXR1cm5lZC4gRm9yY2VFcmEBALgEAARUIE1vZGUgb2YgZXJhIGZvcmNpbmcuTFNsYXNoUmV3YXJkRnJhY3Rpb24BAKwQAAAAAAz4IFRoZSBwZXJjZW50YWdlIG9mIHRoZSBzbGFzaCB0aGF0IGlzIGRpc3RyaWJ1dGVkIHRvIHJlcG9ydGVycy4A5CBUaGUgcmVzdCBvZiB0aGUgc2xhc2hlZCB2YWx1ZSBpcyBoYW5kbGVkIGJ5IHRoZSBgU2xhc2hgLkxDYW5jZWxlZFNsYXNoUGF5b3V0AQAYQAAAAAAAAAAAAAAAAAAAAAAIFQEgVGhlIGFtb3VudCBvZiBjdXJyZW5jeSBnaXZlbiB0byByZXBvcnRlcnMgb2YgYSBzbGFzaCBldmVudCB3aGljaCB3YXPsIGNhbmNlbGVkIGJ5IGV4dHJhb3JkaW5hcnkgY2lyY3Vtc3RhbmNlcyAoZS5nLiBnb3Zlcm5hbmNlKS5AVW5hcHBsaWVkU2xhc2hlcwEBBAUQeQkEAATEIEFsbCB1bmFwcGxpZWQgc2xhc2hlcyB0aGF0IGFyZSBxdWV1ZWQgZm9yIGxhdGVyLihCb25kZWRFcmFzAQA1CAQAECUBIEEgbWFwcGluZyBmcm9tIHN0aWxsLWJvbmRlZCBlcmFzIHRvIHRoZSBmaXJzdCBzZXNzaW9uIGluZGV4IG9mIHRoYXQgZXJhLgDIIE11c3QgY29udGFpbnMgaW5mb3JtYXRpb24gZm9yIGVyYXMgZm9yIHRoZSByYW5nZTq8IGBbYWN0aXZlX2VyYSAtIGJvdW5kaW5nX2R1cmF0aW9uOyBhY3RpdmVfZXJhXWBMVmFsaWRhdG9yU2xhc2hJbkVyYQABCAUFWQmBCQQACEUBIEFsbCBzbGFzaGluZyBldmVudHMgb24gdmFsaWRhdG9ycywgbWFwcGVkIGJ5IGVyYSB0byB0aGUgaGlnaGVzdCBzbGFzaCBwcm9wb3J0aW9ucCBhbmQgc2xhc2ggdmFsdWUgb2YgdGhlIGVyYS5MTm9taW5hdG9yU2xhc2hJbkVyYQABCAUFWQkYBAAEYQEgQWxsIHNsYXNoaW5nIGV2ZW50cyBvbiBub21pbmF0b3JzLCBtYXBwZWQgYnkgZXJhIHRvIHRoZSBoaWdoZXN0IHNsYXNoIHZhbHVlIG9mIHRoZSBlcmEuNFNsYXNoaW5nU3BhbnMAAQQFAIUJBAAEjCBTbGFzaGluZyBzcGFucyBmb3Igc3Rhc2ggYWNjb3VudHMuJFNwYW5TbGFzaAEBBAV1CYkJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACD0BIFJlY29yZHMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG1heGltdW0gc2xhc2ggb2YgYSBzdGFzaCB3aXRoaW4gYSBzbGFzaGluZyBzcGFuLLggYXMgd2VsbCBhcyBob3cgbXVjaCByZXdhcmQgaGFzIGJlZW4gcGFpZCBvdXQuVEN1cnJlbnRQbGFubmVkU2Vzc2lvbgEAEBAAAAAADOggVGhlIGxhc3QgcGxhbm5lZCBzZXNzaW9uIHNjaGVkdWxlZCBieSB0aGUgc2Vzc2lvbiBwYWxsZXQuAHEBIFRoaXMgaXMgYmFzaWNhbGx5IGluIHN5bmMgd2l0aCB0aGUgY2FsbCB0byBbYHBhbGxldF9zZXNzaW9uOjpTZXNzaW9uTWFuYWdlcjo6bmV3X3Nlc3Npb25gXS5MT2ZmZW5kaW5nVmFsaWRhdG9ycwEAjQkEACRpASBJbmRpY2VzIG9mIHZhbGlkYXRvcnMgdGhhdCBoYXZlIG9mZmVuZGVkIGluIHRoZSBhY3RpdmUgZXJhIGFuZCB3aGV0aGVyIHRoZXkgYXJlIGN1cnJlbnRseSggZGlzYWJsZWQuAGkBIFRoaXMgdmFsdWUgc2hvdWxkIGJlIGEgc3VwZXJzZXQgb2YgZGlzYWJsZWQgdmFsaWRhdG9ycyBzaW5jZSBub3QgYWxsIG9mZmVuY2VzIGxlYWQgdG8gdGhlcQEgdmFsaWRhdG9yIGJlaW5nIGRpc2FibGVkIChpZiB0aGVyZSB3YXMgbm8gc2xhc2gpLiBUaGlzIGlzIG5lZWRlZCB0byB0cmFjayB0aGUgcGVyY2VudGFnZSBvZkkBIHZhbGlkYXRvcnMgdGhhdCBoYXZlIG9mZmVuZGVkIGluIHRoZSBjdXJyZW50IGVyYSwgZW5zdXJpbmcgYSBuZXcgZXJhIGlzIGZvcmNlZCBpZnUBIGBPZmZlbmRpbmdWYWxpZGF0b3JzVGhyZXNob2xkYCBpcyByZWFjaGVkLiBUaGUgdmVjIGlzIGFsd2F5cyBrZXB0IHNvcnRlZCBzbyB0aGF0IHdlIGNhbiBmaW5kcQEgd2hldGhlciBhIGdpdmVuIHZhbGlkYXRvciBoYXMgcHJldmlvdXNseSBvZmZlbmRlZCB1c2luZyBiaW5hcnkgc2VhcmNoLiBJdCBnZXRzIGNsZWFyZWQgd2hlbjggdGhlIGVyYSBlbmRzLjhDaGlsbFRocmVzaG9sZAAABQIEAAxRASBUaGUgdGhyZXNob2xkIGZvciB3aGVuIHVzZXJzIGNhbiBzdGFydCBjYWxsaW5nIGBjaGlsbF9vdGhlcmAgZm9yIG90aGVyIHZhbGlkYXRvcnMgL1kBIG5vbWluYXRvcnMuIFRoZSB0aHJlc2hvbGQgaXMgY29tcGFyZWQgdG8gdGhlIGFjdHVhbCBudW1iZXIgb2YgdmFsaWRhdG9ycyAvIG5vbWluYXRvcnMpASAoYENvdW50Rm9yKmApIGluIHRoZSBzeXN0ZW0gY29tcGFyZWQgdG8gdGhlIGNvbmZpZ3VyZWQgbWF4IChgTWF4KkNvdW50YCkuAf0BAaQYMEhpc3RvcnlEZXB0aBAQVAAAAFCMIE51bWJlciBvZiBlcmFzIHRvIGtlZXAgaW4gaGlzdG9yeS4A6CBGb2xsb3dpbmcgaW5mb3JtYXRpb24gaXMga2VwdCBmb3IgZXJhcyBpbiBgW2N1cnJlbnRfZXJhIC0JASBIaXN0b3J5RGVwdGgsIGN1cnJlbnRfZXJhXWA6IGBFcmFzU3Rha2Vyc2AsIGBFcmFzU3Rha2Vyc0NsaXBwZWRgLAUBIGBFcmFzVmFsaWRhdG9yUHJlZnNgLCBgRXJhc1ZhbGlkYXRvclJld2FyZGAsIGBFcmFzUmV3YXJkUG9pbnRzYCxFASBgRXJhc1RvdGFsU3Rha2VgLCBgRXJhc1N0YXJ0U2Vzc2lvbkluZGV4YCwgYENsYWltZWRSZXdhcmRzYCwgYEVyYXNTdGFrZXJzUGFnZWRgLFwgYEVyYXNTdGFrZXJzT3ZlcnZpZXdgLgDkIE11c3QgYmUgbW9yZSB0aGFuIHRoZSBudW1iZXIgb2YgZXJhcyBkZWxheWVkIGJ5IHNlc3Npb24u+CBJLmUuIGFjdGl2ZSBlcmEgbXVzdCBhbHdheXMgYmUgaW4gaGlzdG9yeS4gSS5lLiBgYWN0aXZlX2VyYSA+xCBjdXJyZW50X2VyYSAtIGhpc3RvcnlfZGVwdGhgIG11c3QgYmUgZ3VhcmFudGVlZC4AEQEgSWYgbWlncmF0aW5nIGFuIGV4aXN0aW5nIHBhbGxldCBmcm9tIHN0b3JhZ2UgdmFsdWUgdG8gY29uZmlnIHZhbHVlLOwgdGhpcyBzaG91bGQgYmUgc2V0IHRvIHNhbWUgdmFsdWUgb3IgZ3JlYXRlciBhcyBpbiBzdG9yYWdlLgAVASBOb3RlOiBgSGlzdG9yeURlcHRoYCBpcyB1c2VkIGFzIHRoZSB1cHBlciBib3VuZCBmb3IgdGhlIGBCb3VuZGVkVmVjYC0BIGl0ZW0gYFN0YWtpbmdMZWRnZXIubGVnYWN5X2NsYWltZWRfcmV3YXJkc2AuIFNldHRpbmcgdGhpcyB2YWx1ZSBsb3dlciB0aGFu2CB0aGUgZXhpc3RpbmcgdmFsdWUgY2FuIGxlYWQgdG8gaW5jb25zaXN0ZW5jaWVzIGluIHRoZRUBIGBTdGFraW5nTGVkZ2VyYCBhbmQgd2lsbCBuZWVkIHRvIGJlIGhhbmRsZWQgcHJvcGVybHkgaW4gYSBtaWdyYXRpb24u8CBUaGUgdGVzdCBgcmVkdWNpbmdfaGlzdG9yeV9kZXB0aF9hYnJ1cHRgIHNob3dzIHRoaXMgZWZmZWN0LjhTZXNzaW9uc1BlckVyYRAQBgAAAARwIE51bWJlciBvZiBzZXNzaW9ucyBwZXIgZXJhLjxCb25kaW5nRHVyYXRpb24QEBwAAAAE5CBOdW1iZXIgb2YgZXJhcyB0aGF0IHN0YWtlZCBmdW5kcyBtdXN0IHJlbWFpbiBib25kZWQgZm9yLkhTbGFzaERlZmVyRHVyYXRpb24QEBsAAAAQAQEgTnVtYmVyIG9mIGVyYXMgdGhhdCBzbGFzaGVzIGFyZSBkZWZlcnJlZCBieSwgYWZ0ZXIgY29tcHV0YXRpb24uAA0BIFRoaXMgc2hvdWxkIGJlIGxlc3MgdGhhbiB0aGUgYm9uZGluZyBkdXJhdGlvbi4gU2V0IHRvIDAgaWYgc2xhc2hlcxUBIHNob3VsZCBiZSBhcHBsaWVkIGltbWVkaWF0ZWx5LCB3aXRob3V0IG9wcG9ydHVuaXR5IGZvciBpbnRlcnZlbnRpb24uTE1heEV4cG9zdXJlUGFnZVNpemUQEAACAAAssCBUaGUgbWF4aW11bSBzaXplIG9mIGVhY2ggYFQ6OkV4cG9zdXJlUGFnZWAuACkBIEFuIGBFeHBvc3VyZVBhZ2VgIGlzIHdlYWtseSBib3VuZGVkIHRvIGEgbWF4aW11bSBvZiBgTWF4RXhwb3N1cmVQYWdlU2l6ZWAwIG5vbWluYXRvcnMuACEBIEZvciBvbGRlciBub24tcGFnZWQgZXhwb3N1cmUsIGEgcmV3YXJkIHBheW91dCB3YXMgcmVzdHJpY3RlZCB0byB0aGUgdG9wIQEgYE1heEV4cG9zdXJlUGFnZVNpemVgIG5vbWluYXRvcnMuIFRoaXMgaXMgdG8gbGltaXQgdGhlIGkvbyBjb3N0IGZvciB0aGVIIG5vbWluYXRvciBwYXlvdXQuAFkBIE5vdGU6IGBNYXhFeHBvc3VyZVBhZ2VTaXplYCBpcyB1c2VkIHRvIGJvdW5kIGBDbGFpbWVkUmV3YXJkc2AgYW5kIGlzIHVuc2FmZSB0byByZWR1Y2WQIHdpdGhvdXQgaGFuZGxpbmcgaXQgaW4gYSBtaWdyYXRpb24uSE1heFVubG9ja2luZ0NodW5rcxAQIAAAACgFASBUaGUgbWF4aW11bSBudW1iZXIgb2YgYHVubG9ja2luZ2AgY2h1bmtzIGEgW2BTdGFraW5nTGVkZ2VyYF0gY2FuCQEgaGF2ZS4gRWZmZWN0aXZlbHkgZGV0ZXJtaW5lcyBob3cgbWFueSB1bmlxdWUgZXJhcyBhIHN0YWtlciBtYXkgYmU4IHVuYm9uZGluZyBpbi4A+CBOb3RlOiBgTWF4VW5sb2NraW5nQ2h1bmtzYCBpcyB1c2VkIGFzIHRoZSB1cHBlciBib3VuZCBmb3IgdGhlAQEgYEJvdW5kZWRWZWNgIGl0ZW0gYFN0YWtpbmdMZWRnZXIudW5sb2NraW5nYC4gU2V0dGluZyB0aGlzIHZhbHVlBQEgbG93ZXIgdGhhbiB0aGUgZXhpc3RpbmcgdmFsdWUgY2FuIGxlYWQgdG8gaW5jb25zaXN0ZW5jaWVzIGluIHRoZQkBIGBTdGFraW5nTGVkZ2VyYCBhbmQgd2lsbCBuZWVkIHRvIGJlIGhhbmRsZWQgcHJvcGVybHkgaW4gYSBydW50aW1lBQEgbWlncmF0aW9uLiBUaGUgdGVzdCBgcmVkdWNpbmdfbWF4X3VubG9ja2luZ19jaHVua3NfYWJydXB0YCBzaG93czQgdGhpcyBlZmZlY3QuAZUJBwAgT2ZmZW5jZXMBIE9mZmVuY2VzCBxSZXBvcnRzAAEEBTCZCQQABEkBIFRoZSBwcmltYXJ5IHN0cnVjdHVyZSB0aGF0IGhvbGRzIGFsbCBvZmZlbmNlIHJlY29yZHMga2V5ZWQgYnkgcmVwb3J0IGlkZW50aWZpZXJzLlhDb25jdXJyZW50UmVwb3J0c0luZGV4AQEIBQWdCbkBBAAEKQEgQSB2ZWN0b3Igb2YgcmVwb3J0cyBvZiB0aGUgc2FtZSBraW5kIHRoYXQgaGFwcGVuZWQgYXQgdGhlIHNhbWUgdGltZSBzbG90LgABvAAACAAoSGlzdG9yaWNhbAEoSGlzdG9yaWNhbAhISGlzdG9yaWNhbFNlc3Npb25zAAEEBRCdCAQABF0BIE1hcHBpbmcgZnJvbSBoaXN0b3JpY2FsIHNlc3Npb24gaW5kaWNlcyB0byBzZXNzaW9uLWRhdGEgcm9vdCBoYXNoIGFuZCB2YWxpZGF0b3IgY291bnQuLFN0b3JlZFJhbmdlAACABAAE5CBUaGUgcmFuZ2Ugb2YgaGlzdG9yaWNhbCBzZXNzaW9ucyB3ZSBzdG9yZS4gW2ZpcnN0LCBsYXN0KQAAAAAhABxTZXNzaW9uARxTZXNzaW9uHChWYWxpZGF0b3JzAQD1AQQABHwgVGhlIGN1cnJlbnQgc2V0IG9mIHZhbGlkYXRvcnMuMEN1cnJlbnRJbmRleAEAEBAAAAAABHggQ3VycmVudCBpbmRleCBvZiB0aGUgc2Vzc2lvbi40UXVldWVkQ2hhbmdlZAEAeAQACDkBIFRydWUgaWYgdGhlIHVuZGVybHlpbmcgZWNvbm9taWMgaWRlbnRpdGllcyBvciB3ZWlnaHRpbmcgYmVoaW5kIHRoZSB2YWxpZGF0b3JzpCBoYXMgY2hhbmdlZCBpbiB0aGUgcXVldWVkIHZhbGlkYXRvciBzZXQuKFF1ZXVlZEtleXMBAKEJBAAIPQEgVGhlIHF1ZXVlZCBrZXlzIGZvciB0aGUgbmV4dCBzZXNzaW9uLiBXaGVuIHRoZSBuZXh0IHNlc3Npb24gYmVnaW5zLCB0aGVzZSBrZXlz4CB3aWxsIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB2YWxpZGF0b3IncyBzZXNzaW9uIGtleXMuSERpc2FibGVkVmFsaWRhdG9ycwEACQIEABSAIEluZGljZXMgb2YgZGlzYWJsZWQgdmFsaWRhdG9ycy4APQEgVGhlIHZlYyBpcyBhbHdheXMga2VwdCBzb3J0ZWQgc28gdGhhdCB3ZSBjYW4gZmluZCB3aGV0aGVyIGEgZ2l2ZW4gdmFsaWRhdG9yIGlzPQEgZGlzYWJsZWQgdXNpbmcgYmluYXJ5IHNlYXJjaC4gSXQgZ2V0cyBjbGVhcmVkIHdoZW4gYG9uX3Nlc3Npb25fZW5kaW5nYCByZXR1cm5zZCBhIG5ldyBzZXQgb2YgaWRlbnRpdGllcy4gTmV4dEtleXMAAQQFAD0CBAAEnCBUaGUgbmV4dCBzZXNzaW9uIGtleXMgZm9yIGEgdmFsaWRhdG9yLiBLZXlPd25lcgABBAWpCQAEAAQJASBUaGUgb3duZXIgb2YgYSBrZXkuIFRoZSBrZXkgaXMgdGhlIGBLZXlUeXBlSWRgICsgdGhlIGVuY29kZWQga2V5LgE5AgHEAAGxCQkAHEdyYW5kcGEBHEdyYW5kcGEcFFN0YXRlAQC1CQQABJAgU3RhdGUgb2YgdGhlIGN1cnJlbnQgYXV0aG9yaXR5IHNldC40UGVuZGluZ0NoYW5nZQAAuQkEAATEIFBlbmRpbmcgY2hhbmdlOiAoc2lnbmFsZWQgYXQsIHNjaGVkdWxlZCBjaGFuZ2UpLihOZXh0Rm9yY2VkAAAQBAAEvCBuZXh0IGJsb2NrIG51bWJlciB3aGVyZSB3ZSBjYW4gZm9yY2UgYSBjaGFuZ2UuHFN0YWxsZWQAAIAEAASQIGB0cnVlYCBpZiB3ZSBhcmUgY3VycmVudGx5IHN0YWxsZWQuMEN1cnJlbnRTZXRJZAEALCAAAAAAAAAAAAhdASBUaGUgbnVtYmVyIG9mIGNoYW5nZXMgKGJvdGggaW4gdGVybXMgb2Yga2V5cyBhbmQgdW5kZXJseWluZyBlY29ub21pYyByZXNwb25zaWJpbGl0aWVzKcQgaW4gdGhlICJzZXQiIG9mIEdyYW5kcGEgdmFsaWRhdG9ycyBmcm9tIGdlbmVzaXMuMFNldElkU2Vzc2lvbgABBAUsEAQAKFkBIEEgbWFwcGluZyBmcm9tIGdyYW5kcGEgc2V0IElEIHRvIHRoZSBpbmRleCBvZiB0aGUgKm1vc3QgcmVjZW50KiBzZXNzaW9uIGZvciB3aGljaCBpdHNoIG1lbWJlcnMgd2VyZSByZXNwb25zaWJsZS4ARQEgVGhpcyBpcyBvbmx5IHVzZWQgZm9yIHZhbGlkYXRpbmcgZXF1aXZvY2F0aW9uIHByb29mcy4gQW4gZXF1aXZvY2F0aW9uIHByb29mIG11c3RNASBjb250YWlucyBhIGtleS1vd25lcnNoaXAgcHJvb2YgZm9yIGEgZ2l2ZW4gc2Vzc2lvbiwgdGhlcmVmb3JlIHdlIG5lZWQgYSB3YXkgdG8gdGllRQEgdG9nZXRoZXIgc2Vzc2lvbnMgYW5kIEdSQU5EUEEgc2V0IGlkcywgaS5lLiB3ZSBuZWVkIHRvIHZhbGlkYXRlIHRoYXQgYSB2YWxpZGF0b3JBASB3YXMgdGhlIG93bmVyIG9mIGEgZ2l2ZW4ga2V5IG9uIGEgZ2l2ZW4gc2Vzc2lvbiwgYW5kIHdoYXQgdGhlIGFjdGl2ZSBzZXQgSUQgd2FzVCBkdXJpbmcgdGhhdCBzZXNzaW9uLgC4IFRXT1gtTk9URTogYFNldElkYCBpcyBub3QgdW5kZXIgdXNlciBjb250cm9sLixBdXRob3JpdGllcwEAvQkEAASEIFRoZSBjdXJyZW50IGxpc3Qgb2YgYXV0aG9yaXRpZXMuAVkCAcgMOE1heEF1dGhvcml0aWVzEBCghgEABFwgTWF4IEF1dGhvcml0aWVzIGluIHVzZTRNYXhOb21pbmF0b3JzEBAAAgAABNQgVGhlIG1heGltdW0gbnVtYmVyIG9mIG5vbWluYXRvcnMgZm9yIGVhY2ggdmFsaWRhdG9yLlhNYXhTZXRJZFNlc3Npb25FbnRyaWVzLCCoAAAAAAAAABg5ASBUaGUgbWF4aW11bSBudW1iZXIgb2YgZW50cmllcyB0byBrZWVwIGluIHRoZSBzZXQgaWQgdG8gc2Vzc2lvbiBpbmRleCBtYXBwaW5nLgAxASBTaW5jZSB0aGUgYFNldElkU2Vzc2lvbmAgbWFwIGlzIG9ubHkgdXNlZCBmb3IgdmFsaWRhdGluZyBlcXVpdm9jYXRpb25zIHRoaXMpASB2YWx1ZSBzaG91bGQgcmVsYXRlIHRvIHRoZSBib25kaW5nIGR1cmF0aW9uIG9mIHdoYXRldmVyIHN0YWtpbmcgc3lzdGVtIGlzNQEgYmVpbmcgdXNlZCAoaWYgYW55KS4gSWYgZXF1aXZvY2F0aW9uIGhhbmRsaW5nIGlzIG5vdCBlbmFibGVkIHRoZW4gdGhpcyB2YWx1ZTQgY2FuIGJlIHplcm8uAcEJCwBIQXV0aG9yaXR5RGlzY292ZXJ5AUhBdXRob3JpdHlEaXNjb3ZlcnkIEEtleXMBAMUJBAAEjCBLZXlzIG9mIHRoZSBjdXJyZW50IGF1dGhvcml0eSBzZXQuIE5leHRLZXlzAQDFCQQABIAgS2V5cyBvZiB0aGUgbmV4dCBhdXRob3JpdHkgc2V0LgAAAAANACBUcmVhc3VyeQEgVHJlYXN1cnkYNFByb3Bvc2FsQ291bnQBABAQAAAAAASkIE51bWJlciBvZiBwcm9wb3NhbHMgdGhhdCBoYXZlIGJlZW4gbWFkZS4kUHJvcG9zYWxzAAEEBRDNCQQABHwgUHJvcG9zYWxzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuLERlYWN0aXZhdGVkAQAYQAAAAAAAAAAAAAAAAAAAAAAE8CBUaGUgYW1vdW50IHdoaWNoIGhhcyBiZWVuIHJlcG9ydGVkIGFzIGluYWN0aXZlIHRvIEN1cnJlbmN5LiRBcHByb3ZhbHMBANEJBAAE+CBQcm9wb3NhbCBpbmRpY2VzIHRoYXQgaGF2ZSBiZWVuIGFwcHJvdmVkIGJ1dCBub3QgeWV0IGF3YXJkZWQuKFNwZW5kQ291bnQBABAQAAAAAASkIFRoZSBjb3VudCBvZiBzcGVuZHMgdGhhdCBoYXZlIGJlZW4gbWFkZS4YU3BlbmRzAAEEBRDVCQQABNAgU3BlbmRzIHRoYXQgaGF2ZSBiZWVuIGFwcHJvdmVkIGFuZCBiZWluZyBwcm9jZXNzZWQuAYkCAQEBIDBQcm9wb3NhbEJvbmTdCRBQwwAACFUBIEZyYWN0aW9uIG9mIGEgcHJvcG9zYWwncyB2YWx1ZSB0aGF0IHNob3VsZCBiZSBib25kZWQgaW4gb3JkZXIgdG8gcGxhY2UgdGhlIHByb3Bvc2FsLhEBIEFuIGFjY2VwdGVkIHByb3Bvc2FsIGdldHMgdGhlc2UgYmFjay4gQSByZWplY3RlZCBwcm9wb3NhbCBkb2VzIG5vdC5MUHJvcG9zYWxCb25kTWluaW11bRhAABCl1OgAAAAAAAAAAAAAAARJASBNaW5pbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC5MUHJvcG9zYWxCb25kTWF4aW11bSUCRAEAUDknjAQAAAAAAAAAAAAABEkBIE1heGltdW0gYW1vdW50IG9mIGZ1bmRzIHRoYXQgc2hvdWxkIGJlIHBsYWNlZCBpbiBhIGRlcG9zaXQgZm9yIG1ha2luZyBhIHByb3Bvc2FsLixTcGVuZFBlcmlvZBAQAEYFAASIIFBlcmlvZCBiZXR3ZWVuIHN1Y2Nlc3NpdmUgc3BlbmRzLhBCdXJu3QkQECcAAAQRASBQZXJjZW50YWdlIG9mIHNwYXJlIGZ1bmRzIChpZiBhbnkpIHRoYXQgYXJlIGJ1cm50IHBlciBzcGVuZCBwZXJpb2QuIFBhbGxldElk4QkgcHkvdHJzcnkEGQEgVGhlIHRyZWFzdXJ5J3MgcGFsbGV0IGlkLCB1c2VkIGZvciBkZXJpdmluZyBpdHMgc292ZXJlaWduIGFjY291bnQgSUQuME1heEFwcHJvdmFscxAQZAAAAAwVASBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXBwcm92YWxzIHRoYXQgY2FuIHdhaXQgaW4gdGhlIHNwZW5kaW5nIHF1ZXVlLgBNASBOT1RFOiBUaGlzIHBhcmFtZXRlciBpcyBhbHNvIHVzZWQgd2l0aGluIHRoZSBCb3VudGllcyBQYWxsZXQgZXh0ZW5zaW9uIGlmIGVuYWJsZWQuMFBheW91dFBlcmlvZBAQgJcGAAQZASBUaGUgcGVyaW9kIGR1cmluZyB3aGljaCBhbiBhcHByb3ZlZCB0cmVhc3VyeSBzcGVuZCBoYXMgdG8gYmUgY2xhaW1lZC4B5QkTAEBDb252aWN0aW9uVm90aW5nAUBDb252aWN0aW9uVm90aW5nCCRWb3RpbmdGb3IBAQgFBekJ7QnYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACHUBIEFsbCB2b3RpbmcgZm9yIGEgcGFydGljdWxhciB2b3RlciBpbiBhIHBhcnRpY3VsYXIgdm90aW5nIGNsYXNzLiBXZSBzdG9yZSB0aGUgYmFsYW5jZSBmb3IgdGhlnCBudW1iZXIgb2Ygdm90ZXMgdGhhdCB3ZSBoYXZlIHJlY29yZGVkLjRDbGFzc0xvY2tzRm9yAQEEBQANCgQADGkBIFRoZSB2b3RpbmcgY2xhc3NlcyB3aGljaCBoYXZlIGEgbm9uLXplcm8gbG9jayByZXF1aXJlbWVudCBhbmQgdGhlIGxvY2sgYW1vdW50cyB3aGljaCB0aGV5bQEgcmVxdWlyZS4gVGhlIGFjdHVhbCBhbW91bnQgbG9ja2VkIG9uIGJlaGFsZiBvZiB0aGlzIHBhbGxldCBzaG91bGQgYWx3YXlzIGJlIHRoZSBtYXhpbXVtIG9mLCB0aGlzIGxpc3QuAZECAYkBCCBNYXhWb3RlcxAQAAIAABDwIFRoZSBtYXhpbXVtIG51bWJlciBvZiBjb25jdXJyZW50IHZvdGVzIGFuIGFjY291bnQgbWF5IGhhdmUuAFUBIEFsc28gdXNlZCB0byBjb21wdXRlIHdlaWdodCwgYW4gb3Zlcmx5IGxhcmdlIHZhbHVlIGNhbiBsZWFkIHRvIGV4dHJpbnNpY3Mgd2l0aCBsYXJnZcAgd2VpZ2h0IGVzdGltYXRpb246IHNlZSBgZGVsZWdhdGVgIGZvciBpbnN0YW5jZS5EVm90ZUxvY2tpbmdQZXJpb2QQEMCJAQAQkCBUaGUgbWluaW11bSBwZXJpb2Qgb2Ygdm90ZSBsb2NraW5nLgBlASBJdCBzaG91bGQgYmUgbm8gc2hvcnRlciB0aGFuIGVuYWN0bWVudCBwZXJpb2QgdG8gZW5zdXJlIHRoYXQgaW4gdGhlIGNhc2Ugb2YgYW4gYXBwcm92YWwsSQEgdGhvc2Ugc3VjY2Vzc2Z1bCB2b3RlcnMgYXJlIGxvY2tlZCBpbnRvIHRoZSBjb25zZXF1ZW5jZXMgdGhhdCB0aGVpciB2b3RlcyBlbnRhaWwuARkKFAAkUmVmZXJlbmRhASRSZWZlcmVuZGEUPFJlZmVyZW5kdW1Db3VudAEAEBAAAAAABDEBIFRoZSBuZXh0IGZyZWUgcmVmZXJlbmR1bSBpbmRleCwgYWthIHRoZSBudW1iZXIgb2YgcmVmZXJlbmRhIHN0YXJ0ZWQgc28gZmFyLkRSZWZlcmVuZHVtSW5mb0ZvcgABBAIQHQoEAAS0IEluZm9ybWF0aW9uIGNvbmNlcm5pbmcgYW55IGdpdmVuIHJlZmVyZW5kdW0uKFRyYWNrUXVldWUBAQQFkQE9CgQAEF0BIFRoZSBzb3J0ZWQgbGlzdCBvZiByZWZlcmVuZGEgcmVhZHkgdG8gYmUgZGVjaWRlZCBidXQgbm90IHlldCBiZWluZyBkZWNpZGVkLCBvcmRlcmVkIGJ5fCBjb252aWN0aW9uLXdlaWdodGVkIGFwcHJvdmFscy4AQQEgVGhpcyBzaG91bGQgYmUgZW1wdHkgaWYgYERlY2lkaW5nQ291bnRgIGlzIGxlc3MgdGhhbiBgVHJhY2tJbmZvOjptYXhfZGVjaWRpbmdgLjREZWNpZGluZ0NvdW50AQEEBZEBEBAAAAAABMQgVGhlIG51bWJlciBvZiByZWZlcmVuZGEgYmVpbmcgZGVjaWRlZCBjdXJyZW50bHkuKE1ldGFkYXRhT2YAAQQCEDAEABgFASBUaGUgbWV0YWRhdGEgaXMgYSBnZW5lcmFsIGluZm9ybWF0aW9uIGNvbmNlcm5pbmcgdGhlIHJlZmVyZW5kdW0uSQEgVGhlIGBIYXNoYCByZWZlcnMgdG8gdGhlIHByZWltYWdlIG9mIHRoZSBgUHJlaW1hZ2VzYCBwcm92aWRlciB3aGljaCBjYW4gYmUgYSBKU09OiCBkdW1wIG9yIElQRlMgaGFzaCBvZiBhIEpTT04gZmlsZS4AdQEgQ29uc2lkZXIgYSBnYXJiYWdlIGNvbGxlY3Rpb24gZm9yIGEgbWV0YWRhdGEgb2YgZmluaXNoZWQgcmVmZXJlbmR1bXMgdG8gYHVucmVxdWVzdGAgKHJlbW92ZSlEIGxhcmdlIHByZWltYWdlcy4BpQIBjQEURFN1Ym1pc3Npb25EZXBvc2l0GEAA5AtUAgAAAAAAAAAAAAAABDUBIFRoZSBtaW5pbXVtIGFtb3VudCB0byBiZSB1c2VkIGFzIGEgZGVwb3NpdCBmb3IgYSBwdWJsaWMgcmVmZXJlbmR1bSBwcm9wb3NhbC4kTWF4UXVldWVkEBBkAAAABOQgTWF4aW11bSBzaXplIG9mIHRoZSByZWZlcmVuZHVtIHF1ZXVlIGZvciBhIHNpbmdsZSB0cmFjay5EVW5kZWNpZGluZ1RpbWVvdXQQEIATAwAIVQEgVGhlIG51bWJlciBvZiBibG9ja3MgYWZ0ZXIgc3VibWlzc2lvbiB0aGF0IGEgcmVmZXJlbmR1bSBtdXN0IGJlZ2luIGJlaW5nIGRlY2lkZWQgYnku5CBPbmNlIHRoaXMgcGFzc2VzLCB0aGVuIGFueW9uZSBtYXkgY2FuY2VsIHRoZSByZWZlcmVuZHVtLjRBbGFybUludGVydmFsEBABAAAADF0BIFF1YW50aXphdGlvbiBsZXZlbCBmb3IgdGhlIHJlZmVyZW5kdW0gd2FrZXVwIHNjaGVkdWxlci4gQSBoaWdoZXIgbnVtYmVyIHdpbGwgcmVzdWx0IGluXQEgZmV3ZXIgc3RvcmFnZSByZWFkcy93cml0ZXMgbmVlZGVkIGZvciBzbWFsbGVyIHZvdGVycywgYnV0IGFsc28gcmVzdWx0IGluIGRlbGF5cyB0byB0aGVVASBhdXRvbWF0aWMgcmVmZXJlbmR1bSBzdGF0dXMgY2hhbmdlcy4gRXhwbGljaXQgc2VydmljaW5nIGluc3RydWN0aW9ucyBhcmUgdW5hZmZlY3RlZC4YVHJhY2tzSQoZF0AAABByb290AQAAAACAxqR+jQMAAAAAAAAAAACwBAAAACcGAEA4AABAOAAAApDXPg0AAAAAV0PeEwAAAABUQ94TAAAAAAAAypo7AAAAAABlzR0BAEh3aGl0ZWxpc3RlZF9jYWxsZXJkAAAAAEB6EPNaAAAAAAAAAAAAACwBAAAAJwYAZAAAAGQAAAAC7JclEAAAAAB7VzwXAAAAAEI5LxIAAAAAAg4AhAAAAAAA1uYfAQAAAAA5YnkCAAAAAAIAPHdpc2hfZm9yX2NoYW5nZQoAAAAAgPQg5rUAAAAAAAAAAAAAsAQAAAAnBgBAOAAAZAAAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAAAAMqaOwAAAAAAZc0dCgA0c3Rha2luZ19hZG1pbgoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////CwAkdHJlYXN1cmVyCgAAAACgck4YCQAAAAAAAAAAAACwBAAAACcGAMCJAQBAOAAAApDXPg0AAAAAV0PeEwAAAABUQ94TAAAAAAAAypo7AAAAAABlzR0MACxsZWFzZV9hZG1pbgoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////DQBAZmVsbG93c2hpcF9hZG1pbgoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAADJQzAkAGXNHQDKmjsCXW94AAAAAADoLu0AAAAAAIxoif//////DgA0Z2VuZXJhbF9hZG1pbgoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAACWaL0AgAAAACjKWsFAAAAAC5rSv3/////DwA0YXVjdGlvbl9hZG1pbgoAAAAAID2IeS0AAAAAAAAAAAAAsAQAAAAnBgAIBwAAZAAAAAKQ1z4NAAAAAFdD3hMAAAAAVEPeEwAAAAACWaL0AgAAAACjKWsFAAAAAC5rSv3/////FABQcmVmZXJlbmR1bV9jYW5jZWxsZXLoAwAAAEB6EPNaAAAAAAAAAAAAALAEAADAiQEACAcAAGQAAAAAyUMwJABlzR0Aypo7Al1veAAAAAAA6C7tAAAAAACMaIn//////xUARHJlZmVyZW5kdW1fa2lsbGVy6AMAAABAY1K/xgEAAAAAAAAAAACwBAAAACcGAAgHAABkAAAAAMlDMCQAZc0dAMqaOwJdb3gAAAAAAOgu7QAAAAAAjGiJ//////8eADBzbWFsbF90aXBwZXLIAAAAAOQLVAIAAAAAAAAAAAAAAAoAAADAiQEAZAAAAAoAAAAASZFJFQBlzR0Aypo7Avm6GAAAAAAAKk0xAAAAAABrWef//////x8AKGJpZ190aXBwZXJkAAAAAOh2SBcAAAAAAAAAAAAAAGQAAADAiQEAWAIAAGQAAAAASZFJFQBlzR0Aypo7AmlPPwAAAAAANZZ9AAAAAADlNMH//////yAANHNtYWxsX3NwZW5kZXIyAAAAABCl1OgAAAAAAAAAAAAAAGAJAAAAJwYAgHAAAEA4AAAAyUMwJABlzR0Aypo7Al1veAAAAAAA6C7tAAAAAACMaIn//////yEAOG1lZGl1bV9zcGVuZGVyMgAAAAAgSqnRAQAAAAAAAAAAAABgCQAAACcGAADhAABAOAAAAFsB9jAAZc0dAMqaOwIRYdsAAAAAAL/RqgEAAAAAIJcq//////8iACxiaWdfc3BlbmRlcjIAAAAAQJRSowMAAAAAAAAAAAAAYAkAAAAnBgDAiQEAQDgAAAAAypo7AGXNHQDKmjsCQTywAQAAAAB1XTQDAAAAAEXRZf7/////BOAgSW5mb3JtYXRpb24gY29uY2VybmluZyB0aGUgZGlmZmVyZW50IHJlZmVyZW5kdW0gdHJhY2tzLgFhChUAHE9yaWdpbnMAAAAAABYAJFdoaXRlbGlzdAEkV2hpdGVsaXN0BDxXaGl0ZWxpc3RlZENhbGwAAQQFMIwEAAABzQIBiQcAAWUKFwAYQ2xhaW1zARhDbGFpbXMUGENsYWltcwABBAbdAhgEAAAUVG90YWwBABhAAAAAAAAAAAAAAAAAAAAAAAAcVmVzdGluZwABBAbdAuUCBAAQeCBWZXN0aW5nIHNjaGVkdWxlIGZvciBhIGNsYWltLg0BIEZpcnN0IGJhbGFuY2UgaXMgdGhlIHRvdGFsIGFtb3VudCB0aGF0IHNob3VsZCBiZSBoZWxkIGZvciB2ZXN0aW5nLuQgU2Vjb25kIGJhbGFuY2UgaXMgaG93IG11Y2ggc2hvdWxkIGJlIHVubG9ja2VkIHBlciBibG9jay7MIFRoZSBibG9jayBudW1iZXIgaXMgd2hlbiB0aGUgdmVzdGluZyBzaG91bGQgc3RhcnQuHFNpZ25pbmcAAQQG3QLtAgQABMAgVGhlIHN0YXRlbWVudCBraW5kIHRoYXQgbXVzdCBiZSBzaWduZWQsIGlmIGFueS4kUHJlY2xhaW1zAAEEBgDdAgQABC0BIFByZS1jbGFpbWVkIEV0aGVyZXVtIGFjY291bnRzLCBieSB0aGUgQWNjb3VudCBJRCB0aGF0IHRoZXkgYXJlIGNsYWltZWQgdG8uAdECAZ0HBBhQcmVmaXg0iIRQYXkgRE9UcyB0byB0aGUgUG9sa2Fkb3QgYWNjb3VudDoAAWkKGAAcVmVzdGluZwEcVmVzdGluZwgcVmVzdGluZwABBAIAbQoEAATYIEluZm9ybWF0aW9uIHJlZ2FyZGluZyB0aGUgdmVzdGluZyBvZiBhIGdpdmVuIGFjY291bnQuOFN0b3JhZ2VWZXJzaW9uAQB1CgQADHwgU3RvcmFnZSB2ZXJzaW9uIG9mIHRoZSBwYWxsZXQuADEBIE5ldyBuZXR3b3JrcyBzdGFydCB3aXRoIGxhdGVzdCB2ZXJzaW9uLCBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBnZW5lc2lzIGJ1aWxkLgHxAgGhBwhETWluVmVzdGVkVHJhbnNmZXIYQADkC1QCAAAAAAAAAAAAAAAE6CBUaGUgbWluaW11bSBhbW91bnQgdHJhbnNmZXJyZWQgdG8gY2FsbCBgdmVzdGVkX3RyYW5zZmVyYC5MTWF4VmVzdGluZ1NjaGVkdWxlcxAQHAAAAAABeQoZABxVdGlsaXR5AAH5AgGlBwRMYmF0Y2hlZF9jYWxsc19saW1pdBAQqioAAASoIFRoZSBsaW1pdCBvbiB0aGUgbnVtYmVyIG9mIGJhdGNoZWQgY2FsbHMuAX0KGgAgSWRlbnRpdHkBIElkZW50aXR5HChJZGVudGl0eU9mAAEEBQCBCgQAEGkBIEluZm9ybWF0aW9uIHRoYXQgaXMgcGVydGluZW50IHRvIGlkZW50aWZ5IHRoZSBlbnRpdHkgYmVoaW5kIGFuIGFjY291bnQuIEZpcnN0IGl0ZW0gaXMgdGhl4CByZWdpc3RyYXRpb24sIHNlY29uZCBpcyB0aGUgYWNjb3VudCdzIHByaW1hcnkgdXNlcm5hbWUuAMAgVFdPWC1OT1RFOiBPSyDigJUgYEFjY291bnRJZGAgaXMgYSBzZWN1cmUgaGFzaC4cU3VwZXJPZgABBAIAlQMEAAhhASBUaGUgc3VwZXItaWRlbnRpdHkgb2YgYW4gYWx0ZXJuYXRpdmUgInN1YiIgaWRlbnRpdHkgdG9nZXRoZXIgd2l0aCBpdHMgbmFtZSwgd2l0aGluIHRoYXRRASBjb250ZXh0LiBJZiB0aGUgYWNjb3VudCBpcyBub3Qgc29tZSBvdGhlciBhY2NvdW50J3Mgc3ViLWlkZW50aXR5LCB0aGVuIGp1c3QgYE5vbmVgLhhTdWJzT2YBAQQFAJkKRAAAAAAAAAAAAAAAAAAAAAAAFLggQWx0ZXJuYXRpdmUgInN1YiIgaWRlbnRpdGllcyBvZiB0aGlzIGFjY291bnQuAB0BIFRoZSBmaXJzdCBpdGVtIGlzIHRoZSBkZXBvc2l0LCB0aGUgc2Vjb25kIGlzIGEgdmVjdG9yIG9mIHRoZSBhY2NvdW50cy4AwCBUV09YLU5PVEU6IE9LIOKAlSBgQWNjb3VudElkYCBpcyBhIHNlY3VyZSBoYXNoLihSZWdpc3RyYXJzAQChCgQAEE0BIFRoZSBzZXQgb2YgcmVnaXN0cmFycy4gTm90IGV4cGVjdGVkIHRvIGdldCB2ZXJ5IGJpZyBhcyBjYW4gb25seSBiZSBhZGRlZCB0aHJvdWdoIGGoIHNwZWNpYWwgb3JpZ2luIChsaWtlbHkgYSBjb3VuY2lsIG1vdGlvbikuACkBIFRoZSBpbmRleCBpbnRvIHRoaXMgY2FuIGJlIGNhc3QgdG8gYFJlZ2lzdHJhckluZGV4YCB0byBnZXQgYSB2YWxpZCB2YWx1ZS5MVXNlcm5hbWVBdXRob3JpdGllcwABBAUAsQoEAAT0IEEgbWFwIG9mIHRoZSBhY2NvdW50cyB3aG8gYXJlIGF1dGhvcml6ZWQgdG8gZ3JhbnQgdXNlcm5hbWVzLkRBY2NvdW50T2ZVc2VybmFtZQABBAKtAwAEABRtASBSZXZlcnNlIGxvb2t1cCBmcm9tIGB1c2VybmFtZWAgdG8gdGhlIGBBY2NvdW50SWRgIHRoYXQgaGFzIHJlZ2lzdGVyZWQgaXQuIFRoZSB2YWx1ZSBzaG91bGRlASBiZSBhIGtleSBpbiB0aGUgYElkZW50aXR5T2ZgIG1hcCwgYnV0IGl0IG1heSBub3QgaWYgdGhlIHVzZXIgaGFzIGNsZWFyZWQgdGhlaXIgaWRlbnRpdHkuAGkBIE11bHRpcGxlIHVzZXJuYW1lcyBtYXkgbWFwIHRvIHRoZSBzYW1lIGBBY2NvdW50SWRgLCBidXQgYElkZW50aXR5T2ZgIHdpbGwgb25seSBtYXAgdG8gb25lSCBwcmltYXJ5IHVzZXJuYW1lLkBQZW5kaW5nVXNlcm5hbWVzAAEEAq0DdQkEABhtASBVc2VybmFtZXMgdGhhdCBhbiBhdXRob3JpdHkgaGFzIGdyYW50ZWQsIGJ1dCB0aGF0IHRoZSBhY2NvdW50IGNvbnRyb2xsZXIgaGFzIG5vdCBjb25maXJtZWRxASB0aGF0IHRoZXkgd2FudCBpdC4gVXNlZCBwcmltYXJpbHkgaW4gY2FzZXMgd2hlcmUgdGhlIGBBY2NvdW50SWRgIGNhbm5vdCBwcm92aWRlIGEgc2lnbmF0dXJlXQEgYmVjYXVzZSB0aGV5IGFyZSBhIHB1cmUgcHJveHksIG11bHRpc2lnLCBldGMuIEluIG9yZGVyIHRvIGNvbmZpcm0gaXQsIHRoZXkgc2hvdWxkIGNhbGxsIFtgQ2FsbDo6YWNjZXB0X3VzZXJuYW1lYF0uAB0BIEZpcnN0IHR1cGxlIGl0ZW0gaXMgdGhlIGFjY291bnQgYW5kIHNlY29uZCBpcyB0aGUgYWNjZXB0YW5jZSBkZWFkbGluZS4BAQMBqQcgMEJhc2ljRGVwb3NpdBhAAH21Ki8AAAAAAAAAAAAAAATYIFRoZSBhbW91bnQgaGVsZCBvbiBkZXBvc2l0IGZvciBhIHJlZ2lzdGVyZWQgaWRlbnRpdHkuLEJ5dGVEZXBvc2l0GECAlpgAAAAAAAAAAAAAAAAABB0BIFRoZSBhbW91bnQgaGVsZCBvbiBkZXBvc2l0IHBlciBlbmNvZGVkIGJ5dGUgZm9yIGEgcmVnaXN0ZXJlZCBpZGVudGl0eS5EU3ViQWNjb3VudERlcG9zaXQYQID4hLAuAAAAAAAAAAAAAAAMZQEgVGhlIGFtb3VudCBoZWxkIG9uIGRlcG9zaXQgZm9yIGEgcmVnaXN0ZXJlZCBzdWJhY2NvdW50LiBUaGlzIHNob3VsZCBhY2NvdW50IGZvciB0aGUgZmFjdGUBIHRoYXQgb25lIHN0b3JhZ2UgaXRlbSdzIHZhbHVlIHdpbGwgaW5jcmVhc2UgYnkgdGhlIHNpemUgb2YgYW4gYWNjb3VudCBJRCwgYW5kIHRoZXJlIHdpbGw1ASBiZSBhbm90aGVyIHRyaWUgaXRlbSB3aG9zZSB2YWx1ZSBpcyB0aGUgc2l6ZSBvZiBhbiBhY2NvdW50IElEIHBsdXMgMzIgYnl0ZXMuOE1heFN1YkFjY291bnRzEBBkAAAABA0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzdWItYWNjb3VudHMgYWxsb3dlZCBwZXIgaWRlbnRpZmllZCBhY2NvdW50LjRNYXhSZWdpc3RyYXJzEBAUAAAACFEBIE1heG1pbXVtIG51bWJlciBvZiByZWdpc3RyYXJzIGFsbG93ZWQgaW4gdGhlIHN5c3RlbS4gTmVlZGVkIHRvIGJvdW5kIHRoZSBjb21wbGV4aXR5fCBvZiwgZS5nLiwgdXBkYXRpbmcganVkZ2VtZW50cy5kUGVuZGluZ1VzZXJuYW1lRXhwaXJhdGlvbhAQwIkBAAQVASBUaGUgbnVtYmVyIG9mIGJsb2NrcyB3aXRoaW4gd2hpY2ggYSB1c2VybmFtZSBncmFudCBtdXN0IGJlIGFjY2VwdGVkLjxNYXhTdWZmaXhMZW5ndGgQEAcAAAAEgCBUaGUgbWF4aW11bSBsZW5ndGggb2YgYSBzdWZmaXguRE1heFVzZXJuYW1lTGVuZ3RoEBAgAAAABGEBIFRoZSBtYXhpbXVtIGxlbmd0aCBvZiBhIHVzZXJuYW1lLCBpbmNsdWRpbmcgaXRzIHN1ZmZpeCBhbmQgYW55IHN5c3RlbS1hZGRlZCBkZWxpbWl0ZXJzLgG5ChwAFFByb3h5ARRQcm94eQgcUHJveGllcwEBBAUAvQpEAAAAAAAAAAAAAAAAAAAAAAAIRQEgVGhlIHNldCBvZiBhY2NvdW50IHByb3hpZXMuIE1hcHMgdGhlIGFjY291bnQgd2hpY2ggaGFzIGRlbGVnYXRlZCB0byB0aGUgYWNjb3VudHMhASB3aGljaCBhcmUgYmVpbmcgZGVsZWdhdGVkIHRvLCB0b2dldGhlciB3aXRoIHRoZSBhbW91bnQgaGVsZCBvbiBkZXBvc2l0LjRBbm5vdW5jZW1lbnRzAQEEBQDNCkQAAAAAAAAAAAAAAAAAAAAAAASsIFRoZSBhbm5vdW5jZW1lbnRzIG1hZGUgYnkgdGhlIHByb3h5IChrZXkpLgGxAwGtBxhAUHJveHlEZXBvc2l0QmFzZRhAAISylS4AAAAAAAAAAAAAABARASBUaGUgYmFzZSBhbW91bnQgb2YgY3VycmVuY3kgbmVlZGVkIHRvIHJlc2VydmUgZm9yIGNyZWF0aW5nIGEgcHJveHkuAAEBIFRoaXMgaXMgaGVsZCBmb3IgYW4gYWRkaXRpb25hbCBzdG9yYWdlIGl0ZW0gd2hvc2UgdmFsdWUgc2l6ZSBpcyUBIGBzaXplb2YoQmFsYW5jZSlgIGJ5dGVzIGFuZCB3aG9zZSBrZXkgc2l6ZSBpcyBgc2l6ZW9mKEFjY291bnRJZClgIGJ5dGVzLkhQcm94eURlcG9zaXRGYWN0b3IYQIBmqxMAAAAAAAAAAAAAAAAUvCBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCBwZXIgcHJveHkgYWRkZWQuADUBIFRoaXMgaXMgaGVsZCBmb3IgYWRkaW5nIDMyIGJ5dGVzIHBsdXMgYW4gaW5zdGFuY2Ugb2YgYFByb3h5VHlwZWAgbW9yZSBpbnRvIGFhASBwcmUtZXhpc3Rpbmcgc3RvcmFnZSB2YWx1ZS4gVGh1cywgd2hlbiBjb25maWd1cmluZyBgUHJveHlEZXBvc2l0RmFjdG9yYCBvbmUgc2hvdWxkIHRha2X0IGludG8gYWNjb3VudCBgMzIgKyBwcm94eV90eXBlLmVuY29kZSgpLmxlbigpYCBieXRlcyBvZiBkYXRhLihNYXhQcm94aWVzEBAgAAAABPAgVGhlIG1heGltdW0gYW1vdW50IG9mIHByb3hpZXMgYWxsb3dlZCBmb3IgYSBzaW5nbGUgYWNjb3VudC4oTWF4UGVuZGluZxAQIAAAAARFASBUaGUgbWF4aW11bSBhbW91bnQgb2YgdGltZS1kZWxheWVkIGFubm91bmNlbWVudHMgdGhhdCBhcmUgYWxsb3dlZCB0byBiZSBwZW5kaW5nLlxBbm5vdW5jZW1lbnREZXBvc2l0QmFzZRhAAISylS4AAAAAAAAAAAAAABAxASBUaGUgYmFzZSBhbW91bnQgb2YgY3VycmVuY3kgbmVlZGVkIHRvIHJlc2VydmUgZm9yIGNyZWF0aW5nIGFuIGFubm91bmNlbWVudC4ASQEgVGhpcyBpcyBoZWxkIHdoZW4gYSBuZXcgc3RvcmFnZSBpdGVtIGhvbGRpbmcgYSBgQmFsYW5jZWAgaXMgY3JlYXRlZCAodHlwaWNhbGx5IDE2ICBieXRlcykuZEFubm91bmNlbWVudERlcG9zaXRGYWN0b3IYQADNVicAAAAAAAAAAAAAAAAQ1CBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCBwZXIgYW5ub3VuY2VtZW50IG1hZGUuAFkBIFRoaXMgaXMgaGVsZCBmb3IgYWRkaW5nIGFuIGBBY2NvdW50SWRgLCBgSGFzaGAgYW5kIGBCbG9ja051bWJlcmAgKHR5cGljYWxseSA2OCBieXRlcymMIGludG8gYSBwcmUtZXhpc3Rpbmcgc3RvcmFnZSB2YWx1ZS4B3QodACBNdWx0aXNpZwEgTXVsdGlzaWcEJE11bHRpc2lncwABCAUC4QrlCgQABJQgVGhlIHNldCBvZiBvcGVuIG11bHRpc2lnIG9wZXJhdGlvbnMuAb0DAbEHDCxEZXBvc2l0QmFzZRhAAIxhxS4AAAAAAAAAAAAAABhZASBUaGUgYmFzZSBhbW91bnQgb2YgY3VycmVuY3kgbmVlZGVkIHRvIHJlc2VydmUgZm9yIGNyZWF0aW5nIGEgbXVsdGlzaWcgZXhlY3V0aW9uIG9yIHRvhCBzdG9yZSBhIGRpc3BhdGNoIGNhbGwgZm9yIGxhdGVyLgABASBUaGlzIGlzIGhlbGQgZm9yIGFuIGFkZGl0aW9uYWwgc3RvcmFnZSBpdGVtIHdob3NlIHZhbHVlIHNpemUgaXMxASBgNCArIHNpemVvZigoQmxvY2tOdW1iZXIsIEJhbGFuY2UsIEFjY291bnRJZCkpYCBieXRlcyBhbmQgd2hvc2Uga2V5IHNpemUgaXOAIGAzMiArIHNpemVvZihBY2NvdW50SWQpYCBieXRlcy40RGVwb3NpdEZhY3RvchhAANASEwAAAAAAAAAAAAAAAAxVASBUaGUgYW1vdW50IG9mIGN1cnJlbmN5IG5lZWRlZCBwZXIgdW5pdCB0aHJlc2hvbGQgd2hlbiBjcmVhdGluZyBhIG11bHRpc2lnIGV4ZWN1dGlvbi4AJQEgVGhpcyBpcyBoZWxkIGZvciBhZGRpbmcgMzIgYnl0ZXMgbW9yZSBpbnRvIGEgcHJlLWV4aXN0aW5nIHN0b3JhZ2UgdmFsdWUuOE1heFNpZ25hdG9yaWVzEBBkAAAABOwgVGhlIG1heGltdW0gYW1vdW50IG9mIHNpZ25hdG9yaWVzIGFsbG93ZWQgaW4gdGhlIG11bHRpc2lnLgHtCh4AIEJvdW50aWVzASBCb3VudGllcxAsQm91bnR5Q291bnQBABAQAAAAAATAIE51bWJlciBvZiBib3VudHkgcHJvcG9zYWxzIHRoYXQgaGF2ZSBiZWVuIG1hZGUuIEJvdW50aWVzAAEEBRDxCgQABHggQm91bnRpZXMgdGhhdCBoYXZlIGJlZW4gbWFkZS5IQm91bnR5RGVzY3JpcHRpb25zAAEEBRD5CgQABIAgVGhlIGRlc2NyaXB0aW9uIG9mIGVhY2ggYm91bnR5LjxCb3VudHlBcHByb3ZhbHMBANEJBAAE7CBCb3VudHkgaW5kaWNlcyB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBidXQgbm90IHlldCBmdW5kZWQuAckDAbUHJERCb3VudHlEZXBvc2l0QmFzZRhAAOQLVAIAAAAAAAAAAAAAAAToIFRoZSBhbW91bnQgaGVsZCBvbiBkZXBvc2l0IGZvciBwbGFjaW5nIGEgYm91bnR5IHByb3Bvc2FsLmBCb3VudHlEZXBvc2l0UGF5b3V0RGVsYXkQEADCAQAEWQEgVGhlIGRlbGF5IHBlcmlvZCBmb3Igd2hpY2ggYSBib3VudHkgYmVuZWZpY2lhcnkgbmVlZCB0byB3YWl0IGJlZm9yZSBjbGFpbSB0aGUgcGF5b3V0LkhCb3VudHlVcGRhdGVQZXJpb2QQEIDGEwAEbCBCb3VudHkgZHVyYXRpb24gaW4gYmxvY2tzLmBDdXJhdG9yRGVwb3NpdE11bHRpcGxpZXLdCRAgoQcAEBkBIFRoZSBjdXJhdG9yIGRlcG9zaXQgaXMgY2FsY3VsYXRlZCBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIGN1cmF0b3IgZmVlLgA5ASBUaGlzIGRlcG9zaXQgaGFzIG9wdGlvbmFsIHVwcGVyIGFuZCBsb3dlciBib3VuZHMgd2l0aCBgQ3VyYXRvckRlcG9zaXRNYXhgIGFuZFQgYEN1cmF0b3JEZXBvc2l0TWluYC5EQ3VyYXRvckRlcG9zaXRNYXglAkQBACBKqdEBAAAAAAAAAAAAAARJASBNYXhpbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC5EQ3VyYXRvckRlcG9zaXRNaW4lAkQBAOh2SBcAAAAAAAAAAAAAAARJASBNaW5pbXVtIGFtb3VudCBvZiBmdW5kcyB0aGF0IHNob3VsZCBiZSBwbGFjZWQgaW4gYSBkZXBvc2l0IGZvciBtYWtpbmcgYSBwcm9wb3NhbC5IQm91bnR5VmFsdWVNaW5pbXVtGEAA6HZIFwAAAAAAAAAAAAAABHAgTWluaW11bSB2YWx1ZSBmb3IgYSBib3VudHkuSERhdGFEZXBvc2l0UGVyQnl0ZRhAAOH1BQAAAAAAAAAAAAAAAARhASBUaGUgYW1vdW50IGhlbGQgb24gZGVwb3NpdCBwZXIgYnl0ZSB3aXRoaW4gdGhlIHRpcCByZXBvcnQgcmVhc29uIG9yIGJvdW50eSBkZXNjcmlwdGlvbi5MTWF4aW11bVJlYXNvbkxlbmd0aBAQAEAAAAyIIE1heGltdW0gYWNjZXB0YWJsZSByZWFzb24gbGVuZ3RoLgBlASBCZW5jaG1hcmtzIGRlcGVuZCBvbiB0aGlzIHZhbHVlLCBiZSBzdXJlIHRvIHVwZGF0ZSB3ZWlnaHRzIGZpbGUgd2hlbiBjaGFuZ2luZyB0aGlzIHZhbHVlAf0KIgA0Q2hpbGRCb3VudGllcwE0Q2hpbGRCb3VudGllcxRAQ2hpbGRCb3VudHlDb3VudAEAEBAAAAAABIAgTnVtYmVyIG9mIHRvdGFsIGNoaWxkIGJvdW50aWVzLkxQYXJlbnRDaGlsZEJvdW50aWVzAQEEBRAQEAAAAAAIsCBOdW1iZXIgb2YgY2hpbGQgYm91bnRpZXMgcGVyIHBhcmVudCBib3VudHku4CBNYXAgb2YgcGFyZW50IGJvdW50eSBpbmRleCB0byBudW1iZXIgb2YgY2hpbGQgYm91bnRpZXMuNENoaWxkQm91bnRpZXMAAQgFBYABCwQABJQgQ2hpbGQgYm91bnRpZXMgdGhhdCBoYXZlIGJlZW4gYWRkZWQuXENoaWxkQm91bnR5RGVzY3JpcHRpb25zAAEEBRD5CgQABJggVGhlIGRlc2NyaXB0aW9uIG9mIGVhY2ggY2hpbGQtYm91bnR5LkxDaGlsZHJlbkN1cmF0b3JGZWVzAQEEBRAYQAAAAAAAAAAAAAAAAAAAAAAEAQEgVGhlIGN1bXVsYXRpdmUgY2hpbGQtYm91bnR5IGN1cmF0b3IgZmVlIGZvciBlYWNoIHBhcmVudCBib3VudHkuAc0DAbkHCGRNYXhBY3RpdmVDaGlsZEJvdW50eUNvdW50EBBkAAAABB0BIE1heGltdW0gbnVtYmVyIG9mIGNoaWxkIGJvdW50aWVzIHRoYXQgY2FuIGJlIGFkZGVkIHRvIGEgcGFyZW50IGJvdW50eS5cQ2hpbGRCb3VudHlWYWx1ZU1pbmltdW0YQADkC1QCAAAAAAAAAAAAAAAEiCBNaW5pbXVtIHZhbHVlIGZvciBhIGNoaWxkLWJvdW50eS4BCQsmAGhFbGVjdGlvblByb3ZpZGVyTXVsdGlQaGFzZQFoRWxlY3Rpb25Qcm92aWRlck11bHRpUGhhc2UoFFJvdW5kAQAQEAEAAAAYrCBJbnRlcm5hbCBjb3VudGVyIGZvciB0aGUgbnVtYmVyIG9mIHJvdW5kcy4AVQEgVGhpcyBpcyB1c2VmdWwgZm9yIGRlLWR1cGxpY2F0aW9uIG9mIHRyYW5zYWN0aW9ucyBzdWJtaXR0ZWQgdG8gdGhlIHBvb2wsIGFuZCBnZW5lcmFsbCBkaWFnbm9zdGljcyBvZiB0aGUgcGFsbGV0LgBNASBUaGlzIGlzIG1lcmVseSBpbmNyZW1lbnRlZCBvbmNlIHBlciBldmVyeSB0aW1lIHRoYXQgYW4gdXBzdHJlYW0gYGVsZWN0YCBpcyBjYWxsZWQuMEN1cnJlbnRQaGFzZQEAxQcEAAQ8IEN1cnJlbnQgcGhhc2UuOFF1ZXVlZFNvbHV0aW9uAAANCwQADD0BIEN1cnJlbnQgYmVzdCBzb2x1dGlvbiwgc2lnbmVkIG9yIHVuc2lnbmVkLCBxdWV1ZWQgdG8gYmUgcmV0dXJuZWQgdXBvbiBgZWxlY3RgLgBgIEFsd2F5cyBzb3J0ZWQgYnkgc2NvcmUuIFNuYXBzaG90AAAVCwQAEHAgU25hcHNob3QgZGF0YSBvZiB0aGUgcm91bmQuAF0BIFRoaXMgaXMgY3JlYXRlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBzaWduZWQgcGhhc2UgYW5kIGNsZWFyZWQgdXBvbiBjYWxsaW5nIGBlbGVjdGAuKQEgTm90ZTogVGhpcyBzdG9yYWdlIHR5cGUgbXVzdCBvbmx5IGJlIG11dGF0ZWQgdGhyb3VnaCBbYFNuYXBzaG90V3JhcHBlcmBdLjhEZXNpcmVkVGFyZ2V0cwAAEAQAEMwgRGVzaXJlZCBudW1iZXIgb2YgdGFyZ2V0cyB0byBlbGVjdCBmb3IgdGhpcyByb3VuZC4AqCBPbmx5IGV4aXN0cyB3aGVuIFtgU25hcHNob3RgXSBpcyBwcmVzZW50LikBIE5vdGU6IFRoaXMgc3RvcmFnZSB0eXBlIG11c3Qgb25seSBiZSBtdXRhdGVkIHRocm91Z2ggW2BTbmFwc2hvdFdyYXBwZXJgXS5AU25hcHNob3RNZXRhZGF0YQAAqQQEABCYIFRoZSBtZXRhZGF0YSBvZiB0aGUgW2BSb3VuZFNuYXBzaG90YF0AqCBPbmx5IGV4aXN0cyB3aGVuIFtgU25hcHNob3RgXSBpcyBwcmVzZW50LikBIE5vdGU6IFRoaXMgc3RvcmFnZSB0eXBlIG11c3Qgb25seSBiZSBtdXRhdGVkIHRocm91Z2ggW2BTbmFwc2hvdFdyYXBwZXJgXS5kU2lnbmVkU3VibWlzc2lvbk5leHRJbmRleAEAEBAAAAAAJAEBIFRoZSBuZXh0IGluZGV4IHRvIGJlIGFzc2lnbmVkIHRvIGFuIGluY29taW5nIHNpZ25lZCBzdWJtaXNzaW9uLgB1ASBFdmVyeSBhY2NlcHRlZCBzdWJtaXNzaW9uIGlzIGFzc2lnbmVkIGEgdW5pcXVlIGluZGV4OyB0aGF0IGluZGV4IGlzIGJvdW5kIHRvIHRoYXQgcGFydGljdWxhcmUBIHN1Ym1pc3Npb24gZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgZWxlY3Rpb24uIE9uIGVsZWN0aW9uIGZpbmFsaXphdGlvbiwgdGhlIG5leHQgaW5kZXggaXMwIHJlc2V0IHRvIDAuAGkBIFdlIGNhbid0IGp1c3QgdXNlIGBTaWduZWRTdWJtaXNzaW9uSW5kaWNlcy5sZW4oKWAsIGJlY2F1c2UgdGhhdCdzIGEgYm91bmRlZCBzZXQ7IHBhc3QgaXRzWQEgY2FwYWNpdHksIGl0IHdpbGwgc2ltcGx5IHNhdHVyYXRlLiBXZSBjYW4ndCBqdXN0IGl0ZXJhdGUgb3ZlciBgU2lnbmVkU3VibWlzc2lvbnNNYXBgLPQgYmVjYXVzZSBpdGVyYXRpb24gaXMgc2xvdy4gSW5zdGVhZCwgd2Ugc3RvcmUgdGhlIHZhbHVlIGhlcmUuXFNpZ25lZFN1Ym1pc3Npb25JbmRpY2VzAQAhCwQAGG0BIEEgc29ydGVkLCBib3VuZGVkIHZlY3RvciBvZiBgKHNjb3JlLCBibG9ja19udW1iZXIsIGluZGV4KWAsIHdoZXJlIGVhY2ggYGluZGV4YCBwb2ludHMgdG8gYXggdmFsdWUgaW4gYFNpZ25lZFN1Ym1pc3Npb25zYC4AcQEgV2UgbmV2ZXIgbmVlZCB0byBwcm9jZXNzIG1vcmUgdGhhbiBhIHNpbmdsZSBzaWduZWQgc3VibWlzc2lvbiBhdCBhIHRpbWUuIFNpZ25lZCBzdWJtaXNzaW9uc3UBIGNhbiBiZSBxdWl0ZSBsYXJnZSwgc28gd2UncmUgd2lsbGluZyB0byBwYXkgdGhlIGNvc3Qgb2YgbXVsdGlwbGUgZGF0YWJhc2UgYWNjZXNzZXMgdG8gYWNjZXNzIQEgdGhlbSBvbmUgYXQgYSB0aW1lIGluc3RlYWQgb2YgcmVhZGluZyBhbmQgZGVjb2RpbmcgYWxsIG9mIHRoZW0gYXQgb25jZS5QU2lnbmVkU3VibWlzc2lvbnNNYXAAAQQFEC0LBAAcdCBVbmNoZWNrZWQsIHNpZ25lZCBzb2x1dGlvbnMuAGkBIFRvZ2V0aGVyIHdpdGggYFN1Ym1pc3Npb25JbmRpY2VzYCwgdGhpcyBzdG9yZXMgYSBib3VuZGVkIHNldCBvZiBgU2lnbmVkU3VibWlzc2lvbnNgIHdoaWxl7CBhbGxvd2luZyB1cyB0byBrZWVwIG9ubHkgYSBzaW5nbGUgb25lIGluIG1lbW9yeSBhdCBhIHRpbWUuAGkBIFR3b3ggbm90ZTogdGhlIGtleSBvZiB0aGUgbWFwIGlzIGFuIGF1dG8taW5jcmVtZW50aW5nIGluZGV4IHdoaWNoIHVzZXJzIGNhbm5vdCBpbnNwZWN0IG9y9CBhZmZlY3Q7IHdlIHNob3VsZG4ndCBuZWVkIGEgY3J5cHRvZ3JhcGhpY2FsbHkgc2VjdXJlIGhhc2hlci5UTWluaW11bVVudHJ1c3RlZFNjb3JlAAClBAQAEF0BIFRoZSBtaW5pbXVtIHNjb3JlIHRoYXQgZWFjaCAndW50cnVzdGVkJyBzb2x1dGlvbiBtdXN0IGF0dGFpbiBpbiBvcmRlciB0byBiZSBjb25zaWRlcmVkKCBmZWFzaWJsZS4AuCBDYW4gYmUgc2V0IHZpYSBgc2V0X21pbmltdW1fdW50cnVzdGVkX3Njb3JlYC4B0QMBvQdANFVuc2lnbmVkUGhhc2UQEFgCAAAEgCBEdXJhdGlvbiBvZiB0aGUgdW5zaWduZWQgcGhhc2UuLFNpZ25lZFBoYXNlEBBYAgAABHggRHVyYXRpb24gb2YgdGhlIHNpZ25lZCBwaGFzZS5UQmV0dGVyU2lnbmVkVGhyZXNob2xkrBAAAAAACE0BIFRoZSBtaW5pbXVtIGFtb3VudCBvZiBpbXByb3ZlbWVudCB0byB0aGUgc29sdXRpb24gc2NvcmUgdGhhdCBkZWZpbmVzIGEgc29sdXRpb24gYXN4ICJiZXR0ZXIiIGluIHRoZSBTaWduZWQgcGhhc2UuOE9mZmNoYWluUmVwZWF0EBASAAAAELQgVGhlIHJlcGVhdCB0aHJlc2hvbGQgb2YgdGhlIG9mZmNoYWluIHdvcmtlci4AYQEgRm9yIGV4YW1wbGUsIGlmIGl0IGlzIDUsIHRoYXQgbWVhbnMgdGhhdCBhdCBsZWFzdCA1IGJsb2NrcyB3aWxsIGVsYXBzZSBiZXR3ZWVuIGF0dGVtcHRzhCB0byBzdWJtaXQgdGhlIHdvcmtlcidzIHNvbHV0aW9uLjxNaW5lclR4UHJpb3JpdHksIGVmZmZmZmbmBCUBIFRoZSBwcmlvcml0eSBvZiB0aGUgdW5zaWduZWQgdHJhbnNhY3Rpb24gc3VibWl0dGVkIGluIHRoZSB1bnNpZ25lZC1waGFzZVBTaWduZWRNYXhTdWJtaXNzaW9ucxAQEAAAABzkIE1heGltdW0gbnVtYmVyIG9mIHNpZ25lZCBzdWJtaXNzaW9ucyB0aGF0IGNhbiBiZSBxdWV1ZWQuAFUBIEl0IGlzIGJlc3QgdG8gYXZvaWQgYWRqdXN0aW5nIHRoaXMgZHVyaW5nIGFuIGVsZWN0aW9uLCBhcyBpdCBpbXBhY3RzIGRvd25zdHJlYW0gZGF0YWUBIHN0cnVjdHVyZXMuIEluIHBhcnRpY3VsYXIsIGBTaWduZWRTdWJtaXNzaW9uSW5kaWNlczxUPmAgaXMgYm91bmRlZCBvbiB0aGlzIHZhbHVlLiBJZiB5b3X0IHVwZGF0ZSB0aGlzIHZhbHVlIGR1cmluZyBhbiBlbGVjdGlvbiwgeW91IF9tdXN0XyBlbnN1cmUgdGhhdE0BIGBTaWduZWRTdWJtaXNzaW9uSW5kaWNlcy5sZW4oKWAgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSBuZXcgdmFsdWUuIE90aGVyd2lzZSzwIGF0dGVtcHRzIHRvIHN1Ym1pdCBuZXcgc29sdXRpb25zIG1heSBjYXVzZSBhIHJ1bnRpbWUgcGFuaWMuPFNpZ25lZE1heFdlaWdodCRACwjHclhVAROjcD0K16NwvRSUIE1heGltdW0gd2VpZ2h0IG9mIGEgc2lnbmVkIHNvbHV0aW9uLgBdASBJZiBbYENvbmZpZzo6TWluZXJDb25maWdgXSBpcyBiZWluZyBpbXBsZW1lbnRlZCB0byBzdWJtaXQgc2lnbmVkIHNvbHV0aW9ucyAob3V0c2lkZSBvZj0BIHRoaXMgcGFsbGV0KSwgdGhlbiBbYE1pbmVyQ29uZmlnOjpzb2x1dGlvbl93ZWlnaHRgXSBpcyB1c2VkIHRvIGNvbXBhcmUgYWdhaW5zdDAgdGhpcyB2YWx1ZS5AU2lnbmVkTWF4UmVmdW5kcxAQBAAAAAQZASBUaGUgbWF4aW11bSBhbW91bnQgb2YgdW5jaGVja2VkIHNvbHV0aW9ucyB0byByZWZ1bmQgdGhlIGNhbGwgZmVlIGZvci5AU2lnbmVkUmV3YXJkQmFzZRhAAOQLVAIAAAAAAAAAAAAAAASIIEJhc2UgcmV3YXJkIGZvciBhIHNpZ25lZCBzb2x1dGlvbkRTaWduZWREZXBvc2l0Qnl0ZRhAeH0BAAAAAAAAAAAAAAAAAASgIFBlci1ieXRlIGRlcG9zaXQgZm9yIGEgc2lnbmVkIHNvbHV0aW9uLkxTaWduZWREZXBvc2l0V2VpZ2h0GEAAAAAAAAAAAAAAAAAAAAAABKggUGVyLXdlaWdodCBkZXBvc2l0IGZvciBhIHNpZ25lZCBzb2x1dGlvbi4oTWF4V2lubmVycxAQsAQAABA1ASBUaGUgbWF4aW11bSBudW1iZXIgb2Ygd2lubmVycyB0aGF0IGNhbiBiZSBlbGVjdGVkIGJ5IHRoaXMgYEVsZWN0aW9uUHJvdmlkZXJgQCBpbXBsZW1lbnRhdGlvbi4AUQEgTm90ZTogVGhpcyBtdXN0IGFsd2F5cyBiZSBncmVhdGVyIG9yIGVxdWFsIHRvIGBUOjpEYXRhUHJvdmlkZXI6OmRlc2lyZWRfdGFyZ2V0cygpYC44TWluZXJNYXhMZW5ndGgQEAAANgAAOE1pbmVyTWF4V2VpZ2h0JEALCMdyWFUBE6NwPQrXo3C9AFRNaW5lck1heFZvdGVzUGVyVm90ZXIQEBAAAAAAPE1pbmVyTWF4V2lubmVycxAQsAQAAAABMQskACRWb3Rlckxpc3QBJFZvdGVyTGlzdAwkTGlzdE5vZGVzAAEEBQA1CwQADIAgQSBzaW5nbGUgbm9kZSwgd2l0aGluIHNvbWUgYmFnLgAFASBOb2RlcyBzdG9yZSBsaW5rcyBmb3J3YXJkIGFuZCBiYWNrIHdpdGhpbiB0aGVpciByZXNwZWN0aXZlIGJhZ3MuTENvdW50ZXJGb3JMaXN0Tm9kZXMBABAQAAAAAASsQ291bnRlciBmb3IgdGhlIHJlbGF0ZWQgY291bnRlZCBzdG9yYWdlIG1hcCBMaXN0QmFncwABBAUsOQsEAAxkIEEgYmFnIHN0b3JlZCBpbiBzdG9yYWdlLgAZASBTdG9yZXMgYSBgQmFnYCBzdHJ1Y3QsIHdoaWNoIHN0b3JlcyBoZWFkIGFuZCB0YWlsIHBvaW50ZXJzIHRvIGl0c2VsZi4BxQQBzQcENEJhZ1RocmVzaG9sZHM9CwkZIQMA5AtUAgAAAPOegJcCAAAAqLGX4gIAAACUSS42AwAAACecOpMDAAAAA7zO+gMAAABCwBtuBAAAABtHde4EAAAAOF5VfQUAAABG3GAcBgAAAIk4bM0GAAAAtu6AkgcAAAD+fuNtCAAAAOgbGmIJAAAAsBn0cQoAAAAQNZKgCwAAAM/Jb/EMAAAAQRRtaA4AAADnm9oJEAAAAM7ohdoRAAAAKKnH3xMAAAC7cJMfFgAAAI5AiaAYAAAAgQoJahsAAAA2akiEHgAAAFvTavghAAAAgHyc0CUAAADJVTAYKgAAAL1jwdsuAAAAceBXKTQAAABokJIQOgAAAO3E1KJAAAAAaZN580cAAACP2AwYUAAAAEuviihZAAAAahamP2MAAAAJlRd7bgAAAHjF9Pt6AAAAYsgR54gAAABRv21lmAAAAASOq6SpAAAAVEaY17wAAACRysA20gAAABdfGAHqAAAAvRWyfAQBAABDNY/3IQEAALj8hMhCAQAAmWc8UGcBAAAH5E76jwEAALNBgz69AQAAAn8uou8BAACYg7y5JwIAABZNZSpmAgAAtJUTrKsCAAAtjoIL+QIAAKHmmCxPAwAAphYIDa8DAADMnTfHGQQAAKDVhJWQBAAAQufg1RQFAAACjNcNqAUAAA91Cu9LBgAA6o0uXAIHAADDy5luzQcAALHlcXyvCAAAqiuOH6sJAAC1wSA9wwoAACbQPQ77CwAAcMdZKVYNAADrrdqM2A4AAPeX26qGEAAAz/BEdmUSAAAfJmBxehQAAAmmEb7LFgAAHfvoL2AZAACUOjxgPxwAAIr+icRxHwAAztljxwAjAAADqSrk9iYAAP5y7sVfKwAANsnMaUgwAADa4zJFvzUAAAYqdHDUOwAAfJcy1plCAACEoyRoI0oAAFca1FmHUgAA5/ECYt5bAAANuHYDRGYAAK4EAd7WcQAAfZ6zCLl+AAAeBEp2EI0AADod8GQHnQAA4E+v2syuAABWefAvlcIAAJXDqqma2AAAlnwFJR7xAAAXembWZwwBACjLHx7IKgEA+igvdZhMAQDVfch0PHIBAH3Es/sinAEANlzedMfKAQCeuOFCs/4BAAwxrlR/OAIAX+EB6NV4AgBjc9p+dMACAFHRpg0uEAMAx+mkaO1oAwBhwJH3t8sDAL8nobewOQQAexSZlBu0BACFI+0iYTwFAGml1MUS1AUA7IyTTe98BgD1qpAb6DgHAIy+XdsmCggAApeM4RPzCAD64xRDXfYJAN3xLbr+FgsALrrcb0pYDAAMVRjE8r0NAPC7VDEVTA8ASY6Ga0YHEQCywVPen/QSACeKL7LOGRUAsjmfhCR9FwDhmecEqiUaALoT9aszGx0AJkeFzHhmIACIv4A/LREkAByYI/gdJigAzMQi1FCxLADwiIIFKMAxADZ8bX6JYTcAbpMp0wqmPQCMvGwTIqBEAABw8ypcZEwAtDuEaZkJVQCAtKvkUKleAKDNqXnbX2kATMJ/TMdMdQDQrA66NJOCAEg+DM89WpEAaMaOdGnNoQAoHm+lKx20AJipIyZ0f8gA8Jp0Y00w3wCAzfxLjXL4AJAUYC2akBQB8LQT2UXdMwEglzWWwbRWAVDc+66tfX0B4BGYuUeqqAEwx+4Wu7nYASBuSIaXOQ4CoPpLHXLHSQLAEXFwtRKMAoCKFkOm3tUCwPgjsaIEKAOAr1lwonaDA8BvLYf/QekDQJN/rI+SWgQAkQlxF7bYBEAP31shIGUFAEnBSURuAQYAjrym5WyvBgBZVoaFHHEHgGiqNKS3SAiAoeKeUrk4CQC9q+iA5EMKACpytCBMbQuA8cATM1y4DACgPMvc4ygOgLhimp4gww8A3laT0sqLEQBdf0yTI4gTABqH3zUEvhUAp85LhO8zGAABEPvqJPEaAIAq5dG1/R0AIqE0YJ1iIQBEIWvw2iklAAJh8YKPXikAZiDPhR4NLgCEEBlSUkMzAKDBj8qEEDkAJq0Uk8yFPwDQzSRmL7ZGAJzhmhzatk4AWMzCDF+fVwAgCnV4+4lhADC7u9bkk2wAYMun3J7deAC4O8BCW4uGALiGI2FkxZUA+PFf3JO4pgAgapHA1pa5ANjv4o/Al84AaCmb9S755f//////////rNAgVGhlIGxpc3Qgb2YgdGhyZXNob2xkcyBzZXBhcmF0aW5nIHRoZSB2YXJpb3VzIGJhZ3MuAEkBIElkcyBhcmUgc2VwYXJhdGVkIGludG8gdW5zb3J0ZWQgYmFncyBhY2NvcmRpbmcgdG8gdGhlaXIgc2NvcmUuIFRoaXMgc3BlY2lmaWVzIHRoZWEBIHRocmVzaG9sZHMgc2VwYXJhdGluZyB0aGUgYmFncy4gQW4gaWQncyBiYWcgaXMgdGhlIGxhcmdlc3QgYmFnIGZvciB3aGljaCB0aGUgaWQncyBzY29yZbggaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGl0cyB1cHBlciB0aHJlc2hvbGQuAGUBIFdoZW4gaWRzIGFyZSBpdGVyYXRlZCwgaGlnaGVyIGJhZ3MgYXJlIGl0ZXJhdGVkIGNvbXBsZXRlbHkgYmVmb3JlIGxvd2VyIGJhZ3MuIFRoaXMgbWVhbnNZASB0aGF0IGl0ZXJhdGlvbiBpcyBfc2VtaS1zb3J0ZWRfOiBpZHMgb2YgaGlnaGVyIHNjb3JlIHRlbmQgdG8gY29tZSBiZWZvcmUgaWRzIG9mIGxvd2VyLQEgc2NvcmUsIGJ1dCBwZWVyIGlkcyB3aXRoaW4gYSBwYXJ0aWN1bGFyIGJhZyBhcmUgc29ydGVkIGluIGluc2VydGlvbiBvcmRlci4AaCAjIEV4cHJlc3NpbmcgdGhlIGNvbnN0YW50AE0BIFRoaXMgY29uc3RhbnQgbXVzdCBiZSBzb3J0ZWQgaW4gc3RyaWN0bHkgaW5jcmVhc2luZyBvcmRlci4gRHVwbGljYXRlIGl0ZW1zIGFyZSBub3QsIHBlcm1pdHRlZC4AQQEgVGhlcmUgaXMgYW4gaW1wbGllZCB1cHBlciBsaW1pdCBvZiBgU2NvcmU6Ok1BWGA7IHRoYXQgdmFsdWUgZG9lcyBub3QgbmVlZCB0byBiZSEBIHNwZWNpZmllZCB3aXRoaW4gdGhlIGJhZy4gRm9yIGFueSB0d28gdGhyZXNob2xkIGxpc3RzLCBpZiBvbmUgZW5kcyB3aXRoMQEgYFNjb3JlOjpNQVhgLCB0aGUgb3RoZXIgb25lIGRvZXMgbm90LCBhbmQgdGhleSBhcmUgb3RoZXJ3aXNlIGVxdWFsLCB0aGUgdHdvfCBsaXN0cyB3aWxsIGJlaGF2ZSBpZGVudGljYWxseS4AOCAjIENhbGN1bGF0aW9uAFUBIEl0IGlzIHJlY29tbWVuZGVkIHRvIGdlbmVyYXRlIHRoZSBzZXQgb2YgdGhyZXNob2xkcyBpbiBhIGdlb21ldHJpYyBzZXJpZXMsIHN1Y2ggdGhhdEEBIHRoZXJlIGV4aXN0cyBzb21lIGNvbnN0YW50IHJhdGlvIHN1Y2ggdGhhdCBgdGhyZXNob2xkW2sgKyAxXSA9PSAodGhyZXNob2xkW2tdICrQIGNvbnN0YW50X3JhdGlvKS5tYXgodGhyZXNob2xkW2tdICsgMSlgIGZvciBhbGwgYGtgLgBZASBUaGUgaGVscGVycyBpbiB0aGUgYC91dGlscy9mcmFtZS9nZW5lcmF0ZS1iYWdzYCBtb2R1bGUgY2FuIHNpbXBsaWZ5IHRoaXMgY2FsY3VsYXRpb24uACwgIyBFeGFtcGxlcwBRASAtIElmIGBCYWdUaHJlc2hvbGRzOjpnZXQoKS5pc19lbXB0eSgpYCwgdGhlbiBhbGwgaWRzIGFyZSBwdXQgaW50byB0aGUgc2FtZSBiYWcsIGFuZLAgICBpdGVyYXRpb24gaXMgc3RyaWN0bHkgaW4gaW5zZXJ0aW9uIG9yZGVyLmEBIC0gSWYgYEJhZ1RocmVzaG9sZHM6OmdldCgpLmxlbigpID09IDY0YCwgYW5kIHRoZSB0aHJlc2hvbGRzIGFyZSBkZXRlcm1pbmVkIGFjY29yZGluZyB0bxEBICAgdGhlIHByb2NlZHVyZSBnaXZlbiBhYm92ZSwgdGhlbiB0aGUgY29uc3RhbnQgcmF0aW8gaXMgZXF1YWwgdG8gMi5lASAtIElmIGBCYWdUaHJlc2hvbGRzOjpnZXQoKS5sZW4oKSA9PSAyMDBgLCBhbmQgdGhlIHRocmVzaG9sZHMgYXJlIGRldGVybWluZWQgYWNjb3JkaW5nIHRvWQEgICB0aGUgcHJvY2VkdXJlIGdpdmVuIGFib3ZlLCB0aGVuIHRoZSBjb25zdGFudCByYXRpbyBpcyBhcHByb3hpbWF0ZWx5IGVxdWFsIHRvIDEuMjQ4LmEBIC0gSWYgdGhlIHRocmVzaG9sZCBsaXN0IGJlZ2lucyBgWzEsIDIsIDMsIC4uLl1gLCB0aGVuIGFuIGlkIHdpdGggc2NvcmUgMCBvciAxIHdpbGwgZmFsbPAgICBpbnRvIGJhZyAwLCBhbiBpZCB3aXRoIHNjb3JlIDIgd2lsbCBmYWxsIGludG8gYmFnIDEsIGV0Yy4AMCAjIE1pZ3JhdGlvbgBhASBJbiB0aGUgZXZlbnQgdGhhdCB0aGlzIGxpc3QgZXZlciBjaGFuZ2VzLCBhIGNvcHkgb2YgdGhlIG9sZCBiYWdzIGxpc3QgbXVzdCBiZSByZXRhaW5lZC5dASBXaXRoIHRoYXQgYExpc3Q6Om1pZ3JhdGVgIGNhbiBiZSBjYWxsZWQsIHdoaWNoIHdpbGwgcGVyZm9ybSB0aGUgYXBwcm9wcmlhdGUgbWlncmF0aW9uLgFBCyUAPE5vbWluYXRpb25Qb29scwE8Tm9taW5hdGlvblBvb2xzVEBUb3RhbFZhbHVlTG9ja2VkAQAYQAAAAAAAAAAAAAAAAAAAAAAUjCBUaGUgc3VtIG9mIGZ1bmRzIGFjcm9zcyBhbGwgcG9vbHMuAHEBIFRoaXMgbWlnaHQgYmUgbG93ZXIgYnV0IG5ldmVyIGhpZ2hlciB0aGFuIHRoZSBzdW0gb2YgYHRvdGFsX2JhbGFuY2VgIG9mIGFsbCBbYFBvb2xNZW1iZXJzYF1ZASBiZWNhdXNlIGNhbGxpbmcgYHBvb2xfd2l0aGRyYXdfdW5ib25kZWRgIG1pZ2h0IGRlY3JlYXNlIHRoZSB0b3RhbCBzdGFrZSBvZiB0aGUgcG9vbCdzKQEgYGJvbmRlZF9hY2NvdW50YCB3aXRob3V0IGFkanVzdGluZyB0aGUgcGFsbGV0LWludGVybmFsIGBVbmJvbmRpbmdQb29sYCdzLixNaW5Kb2luQm9uZAEAGEAAAAAAAAAAAAAAAAAAAAAABJwgTWluaW11bSBhbW91bnQgdG8gYm9uZCB0byBqb2luIGEgcG9vbC40TWluQ3JlYXRlQm9uZAEAGEAAAAAAAAAAAAAAAAAAAAAAHKAgTWluaW11bSBib25kIHJlcXVpcmVkIHRvIGNyZWF0ZSBhIHBvb2wuAGUBIFRoaXMgaXMgdGhlIGFtb3VudCB0aGF0IHRoZSBkZXBvc2l0b3IgbXVzdCBwdXQgYXMgdGhlaXIgaW5pdGlhbCBzdGFrZSBpbiB0aGUgcG9vbCwgYXMgYW6IIGluZGljYXRpb24gb2YgInNraW4gaW4gdGhlIGdhbWUiLgBpASBUaGlzIGlzIHRoZSB2YWx1ZSB0aGF0IHdpbGwgYWx3YXlzIGV4aXN0IGluIHRoZSBzdGFraW5nIGxlZGdlciBvZiB0aGUgcG9vbCBib25kZWQgYWNjb3VudIAgd2hpbGUgYWxsIG90aGVyIGFjY291bnRzIGxlYXZlLiBNYXhQb29scwAAEAQACGkBIE1heGltdW0gbnVtYmVyIG9mIG5vbWluYXRpb24gcG9vbHMgdGhhdCBjYW4gZXhpc3QuIElmIGBOb25lYCwgdGhlbiBhbiB1bmJvdW5kZWQgbnVtYmVyIG9mRCBwb29scyBjYW4gZXhpc3QuOE1heFBvb2xNZW1iZXJzAAAQBAAISQEgTWF4aW11bSBudW1iZXIgb2YgbWVtYmVycyB0aGF0IGNhbiBleGlzdCBpbiB0aGUgc3lzdGVtLiBJZiBgTm9uZWAsIHRoZW4gdGhlIGNvdW50uCBtZW1iZXJzIGFyZSBub3QgYm91bmQgb24gYSBzeXN0ZW0gd2lkZSBiYXNpcy5UTWF4UG9vbE1lbWJlcnNQZXJQb29sAAAQBAAIQQEgTWF4aW11bSBudW1iZXIgb2YgbWVtYmVycyB0aGF0IG1heSBiZWxvbmcgdG8gcG9vbC4gSWYgYE5vbmVgLCB0aGVuIHRoZSBjb3VudCBvZqggbWVtYmVycyBpcyBub3QgYm91bmQgb24gYSBwZXIgcG9vbCBiYXNpcy5MR2xvYmFsTWF4Q29tbWlzc2lvbgAArAQADGkBIFRoZSBtYXhpbXVtIGNvbW1pc3Npb24gdGhhdCBjYW4gYmUgY2hhcmdlZCBieSBhIHBvb2wuIFVzZWQgb24gY29tbWlzc2lvbiBwYXlvdXRzIHRvIGJvdW5kJQEgcG9vbCBjb21taXNzaW9ucyB0aGF0IGFyZSA+IGBHbG9iYWxNYXhDb21taXNzaW9uYCwgbmVjZXNzYXJ5IGlmIGEgZnV0dXJlDQEgYEdsb2JhbE1heENvbW1pc3Npb25gIGlzIGxvd2VyIHRoYW4gc29tZSBjdXJyZW50IHBvb2wgY29tbWlzc2lvbnMuLFBvb2xNZW1iZXJzAAEEBQBJCwQADEAgQWN0aXZlIG1lbWJlcnMuANAgVFdPWC1OT1RFOiBTQUZFIHNpbmNlIGBBY2NvdW50SWRgIGlzIGEgc2VjdXJlIGhhc2guVENvdW50ZXJGb3JQb29sTWVtYmVycwEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwLEJvbmRlZFBvb2xzAAEEBRBVCwQABGggU3RvcmFnZSBmb3IgYm9uZGVkIHBvb2xzLlRDb3VudGVyRm9yQm9uZGVkUG9vbHMBABAQAAAAAASsQ291bnRlciBmb3IgdGhlIHJlbGF0ZWQgY291bnRlZCBzdG9yYWdlIG1hcCxSZXdhcmRQb29scwABBAUQaQsEAAh1ASBSZXdhcmQgcG9vbHMuIFRoaXMgaXMgd2hlcmUgdGhlcmUgcmV3YXJkcyBmb3IgZWFjaCBwb29sIGFjY3VtdWxhdGUuIFdoZW4gYSBtZW1iZXJzIHBheW91dCBpc1kBIGNsYWltZWQsIHRoZSBiYWxhbmNlIGNvbWVzIG91dCBmbyB0aGUgcmV3YXJkIHBvb2wuIEtleWVkIGJ5IHRoZSBib25kZWQgcG9vbHMgYWNjb3VudC5UQ291bnRlckZvclJld2FyZFBvb2xzAQAQEAAAAAAErENvdW50ZXIgZm9yIHRoZSByZWxhdGVkIGNvdW50ZWQgc3RvcmFnZSBtYXA8U3ViUG9vbHNTdG9yYWdlAAEEBRBtCwQACBkBIEdyb3VwcyBvZiB1bmJvbmRpbmcgcG9vbHMuIEVhY2ggZ3JvdXAgb2YgdW5ib25kaW5nIHBvb2xzIGJlbG9uZ3MgdG8gYSkBIGJvbmRlZCBwb29sLCBoZW5jZSB0aGUgbmFtZSBzdWItcG9vbHMuIEtleWVkIGJ5IHRoZSBib25kZWQgcG9vbHMgYWNjb3VudC5kQ291bnRlckZvclN1YlBvb2xzU3RvcmFnZQEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwIE1ldGFkYXRhAQEEBRCFCwQABFwgTWV0YWRhdGEgZm9yIHRoZSBwb29sLkhDb3VudGVyRm9yTWV0YWRhdGEBABAQAAAAAASsQ291bnRlciBmb3IgdGhlIHJlbGF0ZWQgY291bnRlZCBzdG9yYWdlIG1hcChMYXN0UG9vbElkAQAQEAAAAAAE0CBFdmVyIGluY3JlYXNpbmcgbnVtYmVyIG9mIGFsbCBwb29scyBjcmVhdGVkIHNvIGZhci5MUmV2ZXJzZVBvb2xJZExvb2t1cAABBAUAEAQAENwgQSByZXZlcnNlIGxvb2t1cCBmcm9tIHRoZSBwb29sJ3MgYWNjb3VudCBpZCB0byBpdHMgaWQuAFUBIFRoaXMgaXMgb25seSB1c2VkIGZvciBzbGFzaGluZy4gSW4gYWxsIG90aGVyIGluc3RhbmNlcywgdGhlIHBvb2wgaWQgaXMgdXNlZCwgYW5kIHRoZcAgYWNjb3VudHMgYXJlIGRldGVybWluaXN0aWNhbGx5IGRlcml2ZWQgZnJvbSBpdC50Q291bnRlckZvclJldmVyc2VQb29sSWRMb29rdXABABAQAAAAAASsQ291bnRlciBmb3IgdGhlIHJlbGF0ZWQgY291bnRlZCBzdG9yYWdlIG1hcEBDbGFpbVBlcm1pc3Npb25zAQEEBQDlBAQABAEBIE1hcCBmcm9tIGEgcG9vbCBtZW1iZXIgYWNjb3VudCB0byB0aGVpciBvcHRlZCBjbGFpbSBwZXJtaXNzaW9uLgHJBAHRBwwgUGFsbGV0SWThCSBweS9ub3BscwSEIFRoZSBub21pbmF0aW9uIHBvb2wncyBwYWxsZXQgaWQuSE1heFBvaW50c1RvQmFsYW5jZQgECjAdASBUaGUgbWF4aW11bSBwb29sIHBvaW50cy10by1iYWxhbmNlIHJhdGlvIHRoYXQgYW4gYG9wZW5gIHBvb2wgY2FuIGhhdmUuAFUBIFRoaXMgaXMgaW1wb3J0YW50IGluIHRoZSBldmVudCBzbGFzaGluZyB0YWtlcyBwbGFjZSBhbmQgdGhlIHBvb2wncyBwb2ludHMtdG8tYmFsYW5jZXwgcmF0aW8gYmVjb21lcyBkaXNwcm9wb3J0aW9uYWwuAGUBIE1vcmVvdmVyLCB0aGlzIHJlbGF0ZXMgdG8gdGhlIGBSZXdhcmRDb3VudGVyYCB0eXBlIGFzIHdlbGwsIGFzIHRoZSBhcml0aG1ldGljIG9wZXJhdGlvbnNVASBhcmUgYSBmdW5jdGlvbiBvZiBudW1iZXIgb2YgcG9pbnRzLCBhbmQgYnkgc2V0dGluZyB0aGlzIHZhbHVlIHRvIGUuZy4gMTAsIHlvdSBlbnN1cmVlASB0aGF0IHRoZSB0b3RhbCBudW1iZXIgb2YgcG9pbnRzIGluIHRoZSBzeXN0ZW0gYXJlIGF0IG1vc3QgMTAgdGltZXMgdGhlIHRvdGFsX2lzc3VhbmNlIG9mnCB0aGUgY2hhaW4sIGluIHRoZSBhYnNvbHV0ZSB3b3JzZSBjYXNlLgBJASBGb3IgYSB2YWx1ZSBvZiAxMCwgdGhlIHRocmVzaG9sZCB3b3VsZCBiZSBhIHBvb2wgcG9pbnRzLXRvLWJhbGFuY2UgcmF0aW8gb2YgMTA6MS4xASBTdWNoIGEgc2NlbmFyaW8gd291bGQgYWxzbyBiZSB0aGUgZXF1aXZhbGVudCBvZiB0aGUgcG9vbCBiZWluZyA5MCUgc2xhc2hlZC4wTWF4VW5ib25kaW5nEBAgAAAABD0BIFRoZSBtYXhpbXVtIG51bWJlciBvZiBzaW11bHRhbmVvdXMgdW5ib25kaW5nIGNodW5rcyB0aGF0IGNhbiBleGlzdCBwZXIgbWVtYmVyLgGJCycALEZhc3RVbnN0YWtlASxGYXN0VW5zdGFrZRAQSGVhZAAAkQsEAAzAIFRoZSBjdXJyZW50ICJoZWFkIG9mIHRoZSBxdWV1ZSIgYmVpbmcgdW5zdGFrZWQuACkBIFRoZSBoZWFkIGluIGl0c2VsZiBjYW4gYmUgYSBiYXRjaCBvZiB1cCB0byBbYENvbmZpZzo6QmF0Y2hTaXplYF0gc3Rha2Vycy4UUXVldWUAAQQFABgEAAzAIFRoZSBtYXAgb2YgYWxsIGFjY291bnRzIHdpc2hpbmcgdG8gYmUgdW5zdGFrZWQuADkBIEtlZXBzIHRyYWNrIG9mIGBBY2NvdW50SWRgIHdpc2hpbmcgdG8gdW5zdGFrZSBhbmQgaXQncyBjb3JyZXNwb25kaW5nIGRlcG9zaXQuPENvdW50ZXJGb3JRdWV1ZQEAEBAAAAAABKxDb3VudGVyIGZvciB0aGUgcmVsYXRlZCBjb3VudGVkIHN0b3JhZ2UgbWFwTEVyYXNUb0NoZWNrUGVyQmxvY2sBABAQAAAAACCMIE51bWJlciBvZiBlcmFzIHRvIGNoZWNrIHBlciBibG9jay4ANQEgSWYgc2V0IHRvIDAsIHRoaXMgcGFsbGV0IGRvZXMgYWJzb2x1dGVseSBub3RoaW5nLiBDYW5ub3QgYmUgc2V0IHRvIG1vcmUgdGhhbpAgW2BDb25maWc6Ok1heEVyYXNUb0NoZWNrUGVyQmxvY2tgXS4AZQEgQmFzZWQgb24gdGhlIGFtb3VudCBvZiB3ZWlnaHQgYXZhaWxhYmxlIGF0IFtgUGFsbGV0Ojpvbl9pZGxlYF0sIHVwIHRvIHRoaXMgbWFueSBlcmFzIGFyZV0BIGNoZWNrZWQuIFRoZSBjaGVja2luZyBpcyByZXByZXNlbnRlZCBieSB1cGRhdGluZyBbYFVuc3Rha2VSZXF1ZXN0OjpjaGVja2VkYF0sIHdoaWNoIGlzUCBzdG9yZWQgaW4gW2BIZWFkYF0uAf0EAdUHBBxEZXBvc2l0GEAA5AtUAgAAAAAAAAAAAAAACGUBIERlcG9zaXQgdG8gdGFrZSBmb3IgdW5zdGFraW5nLCB0byBtYWtlIHN1cmUgd2UncmUgYWJsZSB0byBzbGFzaCB0aGUgaXQgaW4gb3JkZXIgdG8gY292ZXLAIHRoZSBjb3N0cyBvZiByZXNvdXJjZXMgb24gdW5zdWNjZXNzZnVsIHVuc3Rha2UuAZ0LKABAUGFyYWNoYWluc09yaWdpbgAAAAAAMhB5ASBUaGVyZSBpcyBubyB3YXkgdG8gcmVnaXN0ZXIgYW4gb3JpZ2luIHR5cGUgaW4gYGNvbnN0cnVjdF9ydW50aW1lYCB3aXRob3V0IGEgcGFsbGV0IHRoZSBvcmlnaW4wIGJlbG9uZ3MgdG8uAHUBIFRoaXMgbW9kdWxlIGZ1bGZpbGxzIG9ubHkgdGhlIHNpbmdsZSBwdXJwb3NlIG9mIGhvdXNpbmcgdGhlIGBPcmlnaW5gIGluIGBjb25zdHJ1Y3RfcnVudGltZWAuNENvbmZpZ3VyYXRpb24BNENvbmZpZ3VyYXRpb24MMEFjdGl2ZUNvbmZpZwEAoQtBAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAnAACAsuYOgMPJAYCWmAAAAAAAAAAAAAAAAAAFAAAAAQAAAAEAAAABAAAAAAAGAAAAZAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAACAAAAAAEAAAAEyCBUaGUgYWN0aXZlIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBjdXJyZW50IHNlc3Npb24uOFBlbmRpbmdDb25maWdzAQClCwQAHHwgUGVuZGluZyBjb25maWd1cmF0aW9uIGNoYW5nZXMuAFkBIFRoaXMgaXMgYSBsaXN0IG9mIGNvbmZpZ3VyYXRpb24gY2hhbmdlcywgZWFjaCB3aXRoIGEgc2Vzc2lvbiBpbmRleCBhdCB3aGljaCBpdCBzaG91bGQwIGJlIGFwcGxpZWQuAGEBIFRoZSBsaXN0IGlzIHNvcnRlZCBhc2NlbmRpbmcgYnkgc2Vzc2lvbiBpbmRleC4gQWxzbywgdGhpcyBsaXN0IGNhbiBvbmx5IGNvbnRhaW4gYXQgbW9zdPwgMiBpdGVtczogZm9yIHRoZSBuZXh0IHNlc3Npb24gYW5kIGZvciB0aGUgYHNjaGVkdWxlZF9zZXNzaW9uYC5YQnlwYXNzQ29uc2lzdGVuY3lDaGVjawEAeAQACGEBIElmIHRoaXMgaXMgc2V0LCB0aGVuIHRoZSBjb25maWd1cmF0aW9uIHNldHRlcnMgd2lsbCBieXBhc3MgdGhlIGNvbnNpc3RlbmN5IGNoZWNrcy4gVGhpc7QgaXMgbWVhbnQgdG8gYmUgdXNlZCBvbmx5IGFzIHRoZSBsYXN0IHJlc29ydC4BAQUAAAGtCzMALFBhcmFzU2hhcmVkASxQYXJhc1NoYXJlZBBMQ3VycmVudFNlc3Npb25JbmRleAEAEBAAAAAABGwgVGhlIGN1cnJlbnQgc2Vzc2lvbiBpbmRleC5YQWN0aXZlVmFsaWRhdG9ySW5kaWNlcwEAsQsEAAgJASBBbGwgdGhlIHZhbGlkYXRvcnMgYWN0aXZlbHkgcGFydGljaXBhdGluZyBpbiBwYXJhY2hhaW4gY29uc2Vuc3VzLrAgSW5kaWNlcyBhcmUgaW50byB0aGUgYnJvYWRlciB2YWxpZGF0b3Igc2V0LkxBY3RpdmVWYWxpZGF0b3JLZXlzAQC1CwQACFUBIFRoZSBwYXJhY2hhaW4gYXR0ZXN0YXRpb24ga2V5cyBvZiB0aGUgdmFsaWRhdG9ycyBhY3RpdmVseSBwYXJ0aWNpcGF0aW5nIGluIHBhcmFjaGFpbh0BIGNvbnNlbnN1cy4gVGhpcyBzaG91bGQgYmUgdGhlIHNhbWUgbGVuZ3RoIGFzIGBBY3RpdmVWYWxpZGF0b3JJbmRpY2VzYC5MQWxsb3dlZFJlbGF5UGFyZW50cwEAuQsUAAAAAAAEbCBBbGwgYWxsb3dlZCByZWxheS1wYXJlbnRzLgEhBQAAADQANFBhcmFJbmNsdXNpb24BNFBhcmFJbmNsdXNpb24MVEF2YWlsYWJpbGl0eUJpdGZpZWxkcwABBAVFBcULBAAEZQEgVGhlIGxhdGVzdCBiaXRmaWVsZCBmb3IgZWFjaCB2YWxpZGF0b3IsIHJlZmVycmVkIHRvIGJ5IHRoZWlyIGluZGV4IGluIHRoZSB2YWxpZGF0b3Igc2V0LkxQZW5kaW5nQXZhaWxhYmlsaXR5AAEEBbkCyQsEAAS0IENhbmRpZGF0ZXMgcGVuZGluZyBhdmFpbGFiaWxpdHkgYnkgYFBhcmFJZGAueFBlbmRpbmdBdmFpbGFiaWxpdHlDb21taXRtZW50cwABBAW5AmkFBAAEBQEgVGhlIGNvbW1pdG1lbnRzIG9mIGNhbmRpZGF0ZXMgcGVuZGluZyBhdmFpbGFiaWxpdHksIGJ5IGBQYXJhSWRgLgElBQHZBwABzQs1ADBQYXJhSW5oZXJlbnQBMFBhcmFJbmhlcmVudAggSW5jbHVkZWQAAIwEABjsIFdoZXRoZXIgdGhlIHBhcmFzIGluaGVyZW50IHdhcyBpbmNsdWRlZCB3aXRoaW4gdGhpcyBibG9jay4AaQEgVGhlIGBPcHRpb248KCk+YCBpcyBlZmZlY3RpdmVseSBhIGBib29sYCwgYnV0IGl0IG5ldmVyIGhpdHMgc3RvcmFnZSBpbiB0aGUgYE5vbmVgIHZhcmlhbnS8IGR1ZSB0byB0aGUgZ3VhcmFudGVlcyBvZiBGUkFNRSdzIHN0b3JhZ2UgQVBJcy4ASQEgSWYgdGhpcyBpcyBgTm9uZWAgYXQgdGhlIGVuZCBvZiB0aGUgYmxvY2ssIHdlIHBhbmljIGFuZCByZW5kZXIgdGhlIGJsb2NrIGludmFsaWQuME9uQ2hhaW5Wb3RlcwAA0QsEAARFASBTY3JhcGVkIG9uIGNoYWluIGRhdGEgZm9yIGV4dHJhY3RpbmcgcmVzb2x2ZWQgZGlzcHV0ZXMgYXMgd2VsbCBhcyBiYWNraW5nIHZvdGVzLgEpBQAAAeULNgA0UGFyYVNjaGVkdWxlcgE0UGFyYVNjaGVkdWxlchA8VmFsaWRhdG9yR3JvdXBzAQDpCwQAHG0BIEFsbCB0aGUgdmFsaWRhdG9yIGdyb3Vwcy4gT25lIGZvciBlYWNoIGNvcmUuIEluZGljZXMgYXJlIGludG8gYEFjdGl2ZVZhbGlkYXRvcnNgIC0gbm90IHRoZW0BIGJyb2FkZXIgc2V0IG9mIFBvbGthZG90IHZhbGlkYXRvcnMsIGJ1dCBpbnN0ZWFkIGp1c3QgdGhlIHN1YnNldCB1c2VkIGZvciBwYXJhY2hhaW5zIGR1cmluZzggdGhpcyBzZXNzaW9uLgBJASBCb3VuZDogVGhlIG51bWJlciBvZiBjb3JlcyBpcyB0aGUgc3VtIG9mIHRoZSBudW1iZXJzIG9mIHBhcmFjaGFpbnMgYW5kIHBhcmF0aHJlYWRpASBtdWx0aXBsZXhlcnMuIFJlYXNvbmFibHksIDEwMC0xMDAwLiBUaGUgZG9taW5hbnQgZmFjdG9yIGlzIHRoZSBudW1iZXIgb2YgdmFsaWRhdG9yczogc2FmZVAgdXBwZXIgYm91bmQgYXQgMTBrLkRBdmFpbGFiaWxpdHlDb3JlcwEA7QsEACBZASBPbmUgZW50cnkgZm9yIGVhY2ggYXZhaWxhYmlsaXR5IGNvcmUuIEVudHJpZXMgYXJlIGBOb25lYCBpZiB0aGUgY29yZSBpcyBub3QgY3VycmVudGx5DQEgb2NjdXBpZWQuIENhbiBiZSB0ZW1wb3JhcmlseSBgU29tZWAgaWYgc2NoZWR1bGVkIGJ1dCBub3Qgb2NjdXBpZWQuQQEgVGhlIGkndGggcGFyYWNoYWluIGJlbG9uZ3MgdG8gdGhlIGkndGggY29yZSwgd2l0aCB0aGUgcmVtYWluaW5nIGNvcmVzIGFsbCBiZWluZ2QgcGFyYXRocmVhZC1tdWx0aXBsZXhlcnMuANggQm91bmRlZCBieSB0aGUgbWF4aW11bSBvZiBlaXRoZXIgb2YgdGhlc2UgdHdvIHZhbHVlczrkICAgKiBUaGUgbnVtYmVyIG9mIHBhcmFjaGFpbnMgYW5kIHBhcmF0aHJlYWQgbXVsdGlwbGV4ZXJzRQEgICAqIFRoZSBudW1iZXIgb2YgdmFsaWRhdG9ycyBkaXZpZGVkIGJ5IGBjb25maWd1cmF0aW9uLm1heF92YWxpZGF0b3JzX3Blcl9jb3JlYC5EU2Vzc2lvblN0YXJ0QmxvY2sBABAQAAAAABxpASBUaGUgYmxvY2sgbnVtYmVyIHdoZXJlIHRoZSBzZXNzaW9uIHN0YXJ0IG9jY3VycmVkLiBVc2VkIHRvIHRyYWNrIGhvdyBtYW55IGdyb3VwIHJvdGF0aW9uczwgaGF2ZSBvY2N1cnJlZC4AVQEgTm90ZSB0aGF0IGluIHRoZSBjb250ZXh0IG9mIHBhcmFjaGFpbnMgbW9kdWxlcyB0aGUgc2Vzc2lvbiBjaGFuZ2UgaXMgc2lnbmFsZWQgZHVyaW5nYQEgdGhlIGJsb2NrIGFuZCBlbmFjdGVkIGF0IHRoZSBlbmQgb2YgdGhlIGJsb2NrIChhdCB0aGUgZmluYWxpemF0aW9uIHN0YWdlLCB0byBiZSBleGFjdCkuWQEgVGh1cyBmb3IgYWxsIGludGVudHMgYW5kIHB1cnBvc2VzIHRoZSBlZmZlY3Qgb2YgdGhlIHNlc3Npb24gY2hhbmdlIGlzIG9ic2VydmVkIGF0IHRoZWUBIGJsb2NrIGZvbGxvd2luZyB0aGUgc2Vzc2lvbiBjaGFuZ2UsIGJsb2NrIG51bWJlciBvZiB3aGljaCB3ZSBzYXZlIGluIHRoaXMgc3RvcmFnZSB2YWx1ZS4oQ2xhaW1RdWV1ZQEA/QsEABRZASBPbmUgZW50cnkgZm9yIGVhY2ggYXZhaWxhYmlsaXR5IGNvcmUuIFRoZSBgVmVjRGVxdWVgIHJlcHJlc2VudHMgdGhlIGFzc2lnbm1lbnRzIHRvIGJlbQEgc2NoZWR1bGVkIG9uIHRoYXQgY29yZS4gYE5vbmVgIGlzIHVzZWQgdG8gc2lnbmFsIHRvIG5vdCBzY2hlZHVsZSB0aGUgbmV4dCBwYXJhIG9mIHRoZSBjb3JlVQEgYXMgdGhlcmUgaXMgb25lIGN1cnJlbnRseSBiZWluZyBzY2hlZHVsZWQuIE5vdCB1c2luZyBgTm9uZWAgaGVyZSB3b3VsZCBvdmVyd3JpdGUgdGhlcQEgYENvcmVTdGF0ZWAgaW4gdGhlIHJ1bnRpbWUgQVBJLiBUaGUgdmFsdWUgY29udGFpbmVkIGhlcmUgd2lsbCBub3QgYmUgdmFsaWQgYWZ0ZXIgdGhlIGVuZCBvZm0BIGEgYmxvY2suIFJ1bnRpbWUgQVBJcyBzaG91bGQgYmUgdXNlZCB0byBkZXRlcm1pbmUgc2NoZWR1bGVkIGNvcmVzLyBmb3IgdGhlIHVwY29taW5nIGJsb2NrLgAAAAA3ABRQYXJhcwEUUGFyYXNQQFB2ZkFjdGl2ZVZvdGVNYXAAAQQFZQUNDAQAELQgQWxsIGN1cnJlbnRseSBhY3RpdmUgUFZGIHByZS1jaGVja2luZyB2b3Rlcy4ALCBJbnZhcmlhbnQ6dQEgLSBUaGVyZSBhcmUgbm8gUFZGIHByZS1jaGVja2luZyB2b3RlcyB0aGF0IGV4aXN0cyBpbiBsaXN0IGJ1dCBub3QgaW4gdGhlIHNldCBhbmQgdmljZSB2ZXJzYS5EUHZmQWN0aXZlVm90ZUxpc3QBAB0MBAAENQEgVGhlIGxpc3Qgb2YgYWxsIGN1cnJlbnRseSBhY3RpdmUgUFZGIHZvdGVzLiBBdXhpbGlhcnkgdG8gYFB2ZkFjdGl2ZVZvdGVNYXBgLihQYXJhY2hhaW5zAQAhDAQAEGkBIEFsbCBsZWFzZSBob2xkaW5nIHBhcmFjaGFpbnMuIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGBQYXJhSWRgLiBPbiBkZW1hbmQgcGFyYWNoYWlucyBhcmUgbm90KCBpbmNsdWRlZC4A6CBDb25zaWRlciB1c2luZyB0aGUgW2BQYXJhY2hhaW5zQ2FjaGVgXSB0eXBlIG9mIG1vZGlmeWluZy44UGFyYUxpZmVjeWNsZXMAAQQFuQIlDAQABLwgVGhlIGN1cnJlbnQgbGlmZWN5Y2xlIG9mIGEgYWxsIGtub3duIFBhcmEgSURzLhRIZWFkcwABBAW5AoUFBAAEoCBUaGUgaGVhZC1kYXRhIG9mIGV2ZXJ5IHJlZ2lzdGVyZWQgcGFyYS5ETW9zdFJlY2VudENvbnRleHQAAQQFuQIQBAAEKQEgVGhlIGNvbnRleHQgKHJlbGF5LWNoYWluIGJsb2NrIG51bWJlcikgb2YgdGhlIG1vc3QgcmVjZW50IHBhcmFjaGFpbiBoZWFkLjxDdXJyZW50Q29kZUhhc2gAAQQFuQJlBQQADLQgVGhlIHZhbGlkYXRpb24gY29kZSBoYXNoIG9mIGV2ZXJ5IGxpdmUgcGFyYS4A5CBDb3JyZXNwb25kaW5nIGNvZGUgY2FuIGJlIHJldHJpZXZlZCB3aXRoIFtgQ29kZUJ5SGFzaGBdLjBQYXN0Q29kZUhhc2gAAQQFKQxlBQQAEGEBIEFjdHVhbCBwYXN0IGNvZGUgaGFzaCwgaW5kaWNhdGVkIGJ5IHRoZSBwYXJhIGlkIGFzIHdlbGwgYXMgdGhlIGJsb2NrIG51bWJlciBhdCB3aGljaCBpdEQgYmVjYW1lIG91dGRhdGVkLgDkIENvcnJlc3BvbmRpbmcgY29kZSBjYW4gYmUgcmV0cmlldmVkIHdpdGggW2BDb2RlQnlIYXNoYF0uMFBhc3RDb2RlTWV0YQEBBAW5Ai0MCAAADEkBIFBhc3QgY29kZSBvZiBwYXJhY2hhaW5zLiBUaGUgcGFyYWNoYWlucyB0aGVtc2VsdmVzIG1heSBub3QgYmUgcmVnaXN0ZXJlZCBhbnltb3JlLEkBIGJ1dCB3ZSBhbHNvIGtlZXAgdGhlaXIgY29kZSBvbi1jaGFpbiBmb3IgdGhlIHNhbWUgYW1vdW50IG9mIHRpbWUgYXMgb3V0ZGF0ZWQgY29kZbAgdG8ga2VlcCBpdCBhdmFpbGFibGUgZm9yIGFwcHJvdmFsIGNoZWNrZXJzLjxQYXN0Q29kZVBydW5pbmcBADkMBAAYaQEgV2hpY2ggcGFyYXMgaGF2ZSBwYXN0IGNvZGUgdGhhdCBuZWVkcyBwcnVuaW5nIGFuZCB0aGUgcmVsYXktY2hhaW4gYmxvY2sgYXQgd2hpY2ggdGhlIGNvZGVpASB3YXMgcmVwbGFjZWQuIE5vdGUgdGhhdCB0aGlzIGlzIHRoZSBhY3R1YWwgaGVpZ2h0IG9mIHRoZSBpbmNsdWRlZCBibG9jaywgbm90IHRoZSBleHBlY3RlZD0BIGhlaWdodCBhdCB3aGljaCB0aGUgY29kZSB1cGdyYWRlIHdvdWxkIGJlIGFwcGxpZWQsIGFsdGhvdWdoIHRoZXkgbWF5IGJlIGVxdWFsLm0BIFRoaXMgaXMgdG8gZW5zdXJlIHRoZSBlbnRpcmUgYWNjZXB0YW5jZSBwZXJpb2QgaXMgY292ZXJlZCwgbm90IGFuIG9mZnNldCBhY2NlcHRhbmNlIHBlcmlvZG0BIHN0YXJ0aW5nIGZyb20gdGhlIHRpbWUgYXQgd2hpY2ggdGhlIHBhcmFjaGFpbiBwZXJjZWl2ZXMgYSBjb2RlIHVwZ3JhZGUgYXMgaGF2aW5nIG9jY3VycmVkLlUBIE11bHRpcGxlIGVudHJpZXMgZm9yIGEgc2luZ2xlIHBhcmEgYXJlIHBlcm1pdHRlZC4gT3JkZXJlZCBhc2NlbmRpbmcgYnkgYmxvY2sgbnVtYmVyLkhGdXR1cmVDb2RlVXBncmFkZXMAAQQFuQIQBAAMKQEgVGhlIGJsb2NrIG51bWJlciBhdCB3aGljaCB0aGUgcGxhbm5lZCBjb2RlIGNoYW5nZSBpcyBleHBlY3RlZCBmb3IgYSBwYXJhLmUBIFRoZSBjaGFuZ2Ugd2lsbCBiZSBhcHBsaWVkIGFmdGVyIHRoZSBmaXJzdCBwYXJhYmxvY2sgZm9yIHRoaXMgSUQgaW5jbHVkZWQgd2hpY2ggZXhlY3V0ZXMZASBpbiB0aGUgY29udGV4dCBvZiBhIHJlbGF5IGNoYWluIGJsb2NrIHdpdGggYSBudW1iZXIgPj0gYGV4cGVjdGVkX2F0YC44RnV0dXJlQ29kZUhhc2gAAQQFuQJlBQQADJwgVGhlIGFjdHVhbCBmdXR1cmUgY29kZSBoYXNoIG9mIGEgcGFyYS4A5CBDb3JyZXNwb25kaW5nIGNvZGUgY2FuIGJlIHJldHJpZXZlZCB3aXRoIFtgQ29kZUJ5SGFzaGBdLlBVcGdyYWRlR29BaGVhZFNpZ25hbAABBAW5Aj0MBAAodQEgVGhpcyBpcyB1c2VkIGJ5IHRoZSByZWxheS1jaGFpbiB0byBjb21tdW5pY2F0ZSB0byBhIHBhcmFjaGFpbiBhIGdvLWFoZWFkIHdpdGggaW4gdGhlIHVwZ3JhZGUsIHByb2NlZHVyZS4AdQEgVGhpcyB2YWx1ZSBpcyBhYnNlbnQgd2hlbiB0aGVyZSBhcmUgbm8gdXBncmFkZXMgc2NoZWR1bGVkIG9yIGR1cmluZyB0aGUgdGltZSB0aGUgcmVsYXkgY2hhaW5VASBwZXJmb3JtcyB0aGUgY2hlY2tzLiBJdCBpcyBzZXQgYXQgdGhlIGZpcnN0IHJlbGF5LWNoYWluIGJsb2NrIHdoZW4gdGhlIGNvcnJlc3BvbmRpbmd1ASBwYXJhY2hhaW4gY2FuIHN3aXRjaCBpdHMgdXBncmFkZSBmdW5jdGlvbi4gQXMgc29vbiBhcyB0aGUgcGFyYWNoYWluJ3MgYmxvY2sgaXMgaW5jbHVkZWQsIHRoZXAgdmFsdWUgZ2V0cyByZXNldCB0byBgTm9uZWAuAGUBIE5PVEUgdGhhdCB0aGlzIGZpZWxkIGlzIHVzZWQgYnkgcGFyYWNoYWlucyB2aWEgbWVya2xlIHN0b3JhZ2UgcHJvb2ZzLCB0aGVyZWZvcmUgY2hhbmdpbmfEIHRoZSBmb3JtYXQgd2lsbCByZXF1aXJlIG1pZ3JhdGlvbiBvZiBwYXJhY2hhaW5zLmBVcGdyYWRlUmVzdHJpY3Rpb25TaWduYWwAAQQFuQJBDAQAJGkBIFRoaXMgaXMgdXNlZCBieSB0aGUgcmVsYXktY2hhaW4gdG8gY29tbXVuaWNhdGUgdGhhdCB0aGVyZSBhcmUgcmVzdHJpY3Rpb25zIGZvciBwZXJmb3JtaW5nfCBhbiB1cGdyYWRlIGZvciB0aGlzIHBhcmFjaGFpbi4AWQEgVGhpcyBtYXkgYmUgYSBiZWNhdXNlIHRoZSBwYXJhY2hhaW4gd2FpdHMgZm9yIHRoZSB1cGdyYWRlIGNvb2xkb3duIHRvIGV4cGlyZS4gQW5vdGhlcm0BIHBvdGVudGlhbCB1c2UgY2FzZSBpcyB3aGVuIHdlIHdhbnQgdG8gcGVyZm9ybSBzb21lIG1haW50ZW5hbmNlIChzdWNoIGFzIHN0b3JhZ2UgbWlncmF0aW9uKeAgd2UgY291bGQgcmVzdHJpY3QgdXBncmFkZXMgdG8gbWFrZSB0aGUgcHJvY2VzcyBzaW1wbGVyLgBlASBOT1RFIHRoYXQgdGhpcyBmaWVsZCBpcyB1c2VkIGJ5IHBhcmFjaGFpbnMgdmlhIG1lcmtsZSBzdG9yYWdlIHByb29mcywgdGhlcmVmb3JlIGNoYW5naW5nxCB0aGUgZm9ybWF0IHdpbGwgcmVxdWlyZSBtaWdyYXRpb24gb2YgcGFyYWNoYWlucy5AVXBncmFkZUNvb2xkb3ducwEAOQwEAAxRASBUaGUgbGlzdCBvZiBwYXJhY2hhaW5zIHRoYXQgYXJlIGF3YWl0aW5nIGZvciB0aGVpciB1cGdyYWRlIHJlc3RyaWN0aW9uIHRvIGNvb2xkb3duLgCMIE9yZGVyZWQgYXNjZW5kaW5nIGJ5IGJsb2NrIG51bWJlci5AVXBjb21pbmdVcGdyYWRlcwEAOQwEABBZASBUaGUgbGlzdCBvZiB1cGNvbWluZyBjb2RlIHVwZ3JhZGVzLiBFYWNoIGl0ZW0gaXMgYSBwYWlyIG9mIHdoaWNoIHBhcmEgcGVyZm9ybXMgYSBjb2Rl6CB1cGdyYWRlIGFuZCBhdCB3aGljaCByZWxheS1jaGFpbiBibG9jayBpdCBpcyBleHBlY3RlZCBhdC4AjCBPcmRlcmVkIGFzY2VuZGluZyBieSBibG9jayBudW1iZXIuMEFjdGlvbnNRdWV1ZQEBBAUQIQwEAAQVASBUaGUgYWN0aW9ucyB0byBwZXJmb3JtIGR1cmluZyB0aGUgc3RhcnQgb2YgYSBzcGVjaWZpYyBzZXNzaW9uIGluZGV4LlBVcGNvbWluZ1BhcmFzR2VuZXNpcwABBAW5AkUMBAAQoCBVcGNvbWluZyBwYXJhcyBpbnN0YW50aWF0aW9uIGFyZ3VtZW50cy4AZQEgTk9URSB0aGF0IGFmdGVyIFBWRiBwcmUtY2hlY2tpbmcgaXMgZW5hYmxlZCB0aGUgcGFyYSBnZW5lc2lzIGFyZyB3aWxsIGhhdmUgaXQncyBjb2RlIHNldGEBIHRvIGVtcHR5LiBJbnN0ZWFkLCB0aGUgY29kZSB3aWxsIGJlIHNhdmVkIGludG8gdGhlIHN0b3JhZ2UgcmlnaHQgYXdheSB2aWEgYENvZGVCeUhhc2hgLjhDb2RlQnlIYXNoUmVmcwEBBAZlBRAQAAAAAAQpASBUaGUgbnVtYmVyIG9mIHJlZmVyZW5jZSBvbiB0aGUgdmFsaWRhdGlvbiBjb2RlIGluIFtgQ29kZUJ5SGFzaGBdIHN0b3JhZ2UuKENvZGVCeUhhc2gAAQQGZQWBBQQAEJAgVmFsaWRhdGlvbiBjb2RlIHN0b3JlZCBieSBpdHMgaGFzaC4AMQEgVGhpcyBzdG9yYWdlIGlzIGNvbnNpc3RlbnQgd2l0aCBbYEZ1dHVyZUNvZGVIYXNoYF0sIFtgQ3VycmVudENvZGVIYXNoYF0gYW5kSCBbYFBhc3RDb2RlSGFzaGBdLgG1BQHpBwRAVW5zaWduZWRQcmlvcml0eSwg//////////8AAUkMOAAsSW5pdGlhbGl6ZXIBLEluaXRpYWxpemVyCDhIYXNJbml0aWFsaXplZAAAjAQAICEBIFdoZXRoZXIgdGhlIHBhcmFjaGFpbnMgbW9kdWxlcyBoYXZlIGJlZW4gaW5pdGlhbGl6ZWQgd2l0aGluIHRoaXMgYmxvY2suACUBIFNlbWFudGljYWxseSBhIGBib29sYCwgYnV0IHRoaXMgZ3VhcmFudGVlcyBpdCBzaG91bGQgbmV2ZXIgaGl0IHRoZSB0cmllLGkBIGFzIHRoaXMgaXMgY2xlYXJlZCBpbiBgb25fZmluYWxpemVgIGFuZCBGcmFtZSBvcHRpbWl6ZXMgYE5vbmVgIHZhbHVlcyB0byBiZSBlbXB0eSB2YWx1ZXMuAHEBIEFzIGEgYGJvb2xgLCBgc2V0KGZhbHNlKWAgYW5kIGByZW1vdmUoKWAgYm90aCBsZWFkIHRvIHRoZSBuZXh0IGBnZXQoKWAgYmVpbmcgZmFsc2UsIGJ1dCBvbmV1ASBvZiB0aGVtIHdyaXRlcyB0byB0aGUgdHJpZSBhbmQgb25lIGRvZXMgbm90LiBUaGlzIGNvbmZ1c2lvbiBtYWtlcyBgT3B0aW9uPCgpPmAgbW9yZSBzdWl0YWJsZZAgZm9yIHRoZSBzZW1hbnRpY3Mgb2YgdGhpcyB2YXJpYWJsZS5YQnVmZmVyZWRTZXNzaW9uQ2hhbmdlcwEATQwEABxZASBCdWZmZXJlZCBzZXNzaW9uIGNoYW5nZXMgYWxvbmcgd2l0aCB0aGUgYmxvY2sgbnVtYmVyIGF0IHdoaWNoIHRoZXkgc2hvdWxkIGJlIGFwcGxpZWQuAF0BIFR5cGljYWxseSB0aGlzIHdpbGwgYmUgZW1wdHkgb3Igb25lIGVsZW1lbnQgbG9uZy4gQXBhcnQgZnJvbSB0aGF0IHRoaXMgaXRlbSBuZXZlciBoaXRzNCB0aGUgc3RvcmFnZS4AaQEgSG93ZXZlciB0aGlzIGlzIGEgYFZlY2AgcmVnYXJkbGVzcyB0byBoYW5kbGUgdmFyaW91cyBlZGdlIGNhc2VzIHRoYXQgbWF5IG9jY3VyIGF0IHJ1bnRpbWXAIHVwZ3JhZGUgYm91bmRhcmllcyBvciBpZiBnb3Zlcm5hbmNlIGludGVydmVuZXMuAb0FAAAAOQAMRG1wAQxEbXAMVERvd253YXJkTWVzc2FnZVF1ZXVlcwEBBAW5AlUMBAAE0CBUaGUgZG93bndhcmQgbWVzc2FnZXMgYWRkcmVzc2VkIGZvciBhIGNlcnRhaW4gcGFyYS5kRG93bndhcmRNZXNzYWdlUXVldWVIZWFkcwEBBAW5AjCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcJQEgQSBtYXBwaW5nIHRoYXQgc3RvcmVzIHRoZSBkb3dud2FyZCBtZXNzYWdlIHF1ZXVlIE1RQyBoZWFkIGZvciBlYWNoIHBhcmEuAJAgRWFjaCBsaW5rIGluIHRoaXMgY2hhaW4gaGFzIGEgZm9ybTp4IGAocHJldl9oZWFkLCBCLCBIKE0pKWAsIHdoZXJl6CAtIGBwcmV2X2hlYWRgOiBpcyB0aGUgcHJldmlvdXMgaGVhZCBoYXNoIG9yIHplcm8gaWYgbm9uZS4hASAtIGBCYDogaXMgdGhlIHJlbGF5LWNoYWluIGJsb2NrIG51bWJlciBpbiB3aGljaCBhIG1lc3NhZ2Ugd2FzIGFwcGVuZGVkLtQgLSBgSChNKWA6IGlzIHRoZSBoYXNoIG9mIHRoZSBtZXNzYWdlIGJlaW5nIGFwcGVuZGVkLkREZWxpdmVyeUZlZUZhY3RvcgEBBAW5AlUHQAAAZKeztuANAAAAAAAAAAAExCBUaGUgZmFjdG9yIHRvIG11bHRpcGx5IHRoZSBiYXNlIGRlbGl2ZXJ5IGZlZSBieS4AAAAAOgAQSHJtcAEQSHJtcDBcSHJtcE9wZW5DaGFubmVsUmVxdWVzdHMAAQQFxQVdDAQAGLwgVGhlIHNldCBvZiBwZW5kaW5nIEhSTVAgb3BlbiBjaGFubmVsIHJlcXVlc3RzLgDAIFRoZSBzZXQgaXMgYWNjb21wYW5pZWQgYnkgYSBsaXN0IGZvciBpdGVyYXRpb24uACwgSW52YXJpYW50Oj0BIC0gVGhlcmUgYXJlIG5vIGNoYW5uZWxzIHRoYXQgZXhpc3RzIGluIGxpc3QgYnV0IG5vdCBpbiB0aGUgc2V0IGFuZCB2aWNlIHZlcnNhLmxIcm1wT3BlbkNoYW5uZWxSZXF1ZXN0c0xpc3QBAGEMBAAAbEhybXBPcGVuQ2hhbm5lbFJlcXVlc3RDb3VudAEBBAW5AhAQAAAAAAxlASBUaGlzIG1hcHBpbmcgdHJhY2tzIGhvdyBtYW55IG9wZW4gY2hhbm5lbCByZXF1ZXN0cyBhcmUgaW5pdGlhdGVkIGJ5IGEgZ2l2ZW4gc2VuZGVyIHBhcmEuWQEgSW52YXJpYW50OiBgSHJtcE9wZW5DaGFubmVsUmVxdWVzdHNgIHNob3VsZCBjb250YWluIHRoZSBzYW1lIG51bWJlciBvZiBpdGVtcyB0aGF0IGhhcwUBIGAoWCwgXylgIGFzIHRoZSBudW1iZXIgb2YgYEhybXBPcGVuQ2hhbm5lbFJlcXVlc3RDb3VudGAgZm9yIGBYYC58SHJtcEFjY2VwdGVkQ2hhbm5lbFJlcXVlc3RDb3VudAEBBAW5AhAQAAAAAAxxASBUaGlzIG1hcHBpbmcgdHJhY2tzIGhvdyBtYW55IG9wZW4gY2hhbm5lbCByZXF1ZXN0cyB3ZXJlIGFjY2VwdGVkIGJ5IGEgZ2l2ZW4gcmVjaXBpZW50IHBhcmEubQEgSW52YXJpYW50OiBgSHJtcE9wZW5DaGFubmVsUmVxdWVzdHNgIHNob3VsZCBjb250YWluIHRoZSBzYW1lIG51bWJlciBvZiBpdGVtcyBgKF8sIFgpYCB3aXRoVQEgYGNvbmZpcm1lZGAgc2V0IHRvIHRydWUsIGFzIHRoZSBudW1iZXIgb2YgYEhybXBBY2NlcHRlZENoYW5uZWxSZXF1ZXN0Q291bnRgIGZvciBgWGAuYEhybXBDbG9zZUNoYW5uZWxSZXF1ZXN0cwABBAXFBYwEABxxASBBIHNldCBvZiBwZW5kaW5nIEhSTVAgY2xvc2UgY2hhbm5lbCByZXF1ZXN0cyB0aGF0IGFyZSBnb2luZyB0byBiZSBjbG9zZWQgZHVyaW5nIHRoZSBzZXNzaW9uIQEgY2hhbmdlLiBVc2VkIGZvciBjaGVja2luZyBpZiBhIGdpdmVuIGNoYW5uZWwgaXMgcmVnaXN0ZXJlZCBmb3IgY2xvc3VyZS4AwCBUaGUgc2V0IGlzIGFjY29tcGFuaWVkIGJ5IGEgbGlzdCBmb3IgaXRlcmF0aW9uLgAsIEludmFyaWFudDo9ASAtIFRoZXJlIGFyZSBubyBjaGFubmVscyB0aGF0IGV4aXN0cyBpbiBsaXN0IGJ1dCBub3QgaW4gdGhlIHNldCBhbmQgdmljZSB2ZXJzYS5wSHJtcENsb3NlQ2hhbm5lbFJlcXVlc3RzTGlzdAEAYQwEAAA4SHJtcFdhdGVybWFya3MAAQQFuQIQBAAQuCBUaGUgSFJNUCB3YXRlcm1hcmsgYXNzb2NpYXRlZCB3aXRoIGVhY2ggcGFyYS4sIEludmFyaWFudDpVASAtIGVhY2ggcGFyYSBgUGAgdXNlZCBoZXJlIGFzIGEga2V5IHNob3VsZCBzYXRpc2Z5IGBQYXJhczo6aXNfdmFsaWRfcGFyYShQKWAgd2l0aGluIGEsICAgc2Vzc2lvbi4wSHJtcENoYW5uZWxzAAEEBcUFZQwEAAy0IEhSTVAgY2hhbm5lbCBkYXRhIGFzc29jaWF0ZWQgd2l0aCBlYWNoIHBhcmEuLCBJbnZhcmlhbnQ6dQEgLSBlYWNoIHBhcnRpY2lwYW50IGluIHRoZSBjaGFubmVsIHNob3VsZCBzYXRpc2Z5IGBQYXJhczo6aXNfdmFsaWRfcGFyYShQKWAgd2l0aGluIGEgc2Vzc2lvbi5gSHJtcEluZ3Jlc3NDaGFubmVsc0luZGV4AQEEBbkCIQwEADRxASBJbmdyZXNzL2VncmVzcyBpbmRleGVzIGFsbG93IHRvIGZpbmQgYWxsIHRoZSBzZW5kZXJzIGFuZCByZWNlaXZlcnMgZ2l2ZW4gdGhlIG9wcG9zaXRlIHNpZGUuFCBJLmUuACEBIChhKSBpbmdyZXNzIGluZGV4IGFsbG93cyB0byBmaW5kIGFsbCB0aGUgc2VuZGVycyBmb3IgYSBnaXZlbiByZWNpcGllbnQuHQEgKGIpIGVncmVzcyBpbmRleCBhbGxvd3MgdG8gZmluZCBhbGwgdGhlIHJlY2lwaWVudHMgZm9yIGEgZ2l2ZW4gc2VuZGVyLgAwIEludmFyaWFudHM6UQEgLSBmb3IgZWFjaCBpbmdyZXNzIGluZGV4IGVudHJ5IGZvciBgUGAgZWFjaCBpdGVtIGBJYCBpbiB0aGUgaW5kZXggc2hvdWxkIHByZXNlbnQgaW54ICAgYEhybXBDaGFubmVsc2AgYXMgYChJLCBQKWAuTQEgLSBmb3IgZWFjaCBlZ3Jlc3MgaW5kZXggZW50cnkgZm9yIGBQYCBlYWNoIGl0ZW0gYEVgIGluIHRoZSBpbmRleCBzaG91bGQgcHJlc2VudCBpbnggICBgSHJtcENoYW5uZWxzYCBhcyBgKFAsIEUpYC4BASAtIHRoZXJlIHNob3VsZCBiZSBubyBvdGhlciBkYW5nbGluZyBjaGFubmVscyBpbiBgSHJtcENoYW5uZWxzYC5oIC0gdGhlIHZlY3RvcnMgYXJlIHNvcnRlZC5cSHJtcEVncmVzc0NoYW5uZWxzSW5kZXgBAQQFuQIhDAQAAExIcm1wQ2hhbm5lbENvbnRlbnRzAQEEBcUFaQwEAAisIFN0b3JhZ2UgZm9yIHRoZSBtZXNzYWdlcyBmb3IgZWFjaCBjaGFubmVsLmUBIEludmFyaWFudDogY2Fubm90IGJlIG5vbi1lbXB0eSBpZiB0aGUgY29ycmVzcG9uZGluZyBjaGFubmVsIGluIGBIcm1wQ2hhbm5lbHNgIGlzIGBOb25lYC5ISHJtcENoYW5uZWxEaWdlc3RzAQEEBbkCcQwEABhpASBNYWludGFpbnMgYSBtYXBwaW5nIHRoYXQgY2FuIGJlIHVzZWQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbjogV2hhdCBwYXJhcyBzZW50IGEgbWVzc2FnZSBhdOQgdGhlIGdpdmVuIGJsb2NrIG51bWJlciBmb3IgYSBnaXZlbiByZWNlaXZlci4gSW52YXJpYW50czqoIC0gVGhlIGlubmVyIGBWZWM8UGFyYUlkPmAgaXMgbmV2ZXIgZW1wdHku6CAtIFRoZSBpbm5lciBgVmVjPFBhcmFJZD5gIGNhbm5vdCBzdG9yZSB0d28gc2FtZSBgUGFyYUlkYC5tASAtIFRoZSBvdXRlciB2ZWN0b3IgaXMgc29ydGVkIGFzY2VuZGluZyBieSBibG9jayBudW1iZXIgYW5kIGNhbm5vdCBzdG9yZSB0d28gaXRlbXMgd2l0aCB0aGVUICAgc2FtZSBibG9jayBudW1iZXIuAcEFAe0HAAF5DDwAPFBhcmFTZXNzaW9uSW5mbwE8UGFyYVNlc3Npb25JbmZvFFBBc3NpZ25tZW50S2V5c1Vuc2FmZQEAfQwEAAykIEFzc2lnbm1lbnQga2V5cyBmb3IgdGhlIGN1cnJlbnQgc2Vzc2lvbi5tASBOb3RlIHRoYXQgdGhpcyBBUEkgaXMgcHJpdmF0ZSBkdWUgdG8gaXQgYmVpbmcgcHJvbmUgdG8gJ29mZi1ieS1vbmUnIGF0IHNlc3Npb24gYm91bmRhcmllcy6sIFdoZW4gaW4gZG91YnQsIHVzZSBgU2Vzc2lvbnNgIEFQSSBpbnN0ZWFkLlRFYXJsaWVzdFN0b3JlZFNlc3Npb24BABAQAAAAAAQBASBUaGUgZWFybGllc3Qgc2Vzc2lvbiBmb3Igd2hpY2ggcHJldmlvdXMgc2Vzc2lvbiBpbmZvIGlzIHN0b3JlZC4gU2Vzc2lvbnMAAQQGEIEMBAAMpCBTZXNzaW9uIGluZm9ybWF0aW9uIGluIGEgcm9sbGluZyB3aW5kb3cuNQEgU2hvdWxkIGhhdmUgYW4gZW50cnkgaW4gcmFuZ2UgYEVhcmxpZXN0U3RvcmVkU2Vzc2lvbi4uPUN1cnJlbnRTZXNzaW9uSW5kZXhgLnUBIERvZXMgbm90IGhhdmUgYW55IGVudHJpZXMgYmVmb3JlIHRoZSBzZXNzaW9uIGluZGV4IGluIHRoZSBmaXJzdCBzZXNzaW9uIGNoYW5nZSBub3RpZmljYXRpb24uLEFjY291bnRLZXlzAAEEBhD1AQQABHEBIFRoZSB2YWxpZGF0b3IgYWNjb3VudCBrZXlzIG9mIHRoZSB2YWxpZGF0b3JzIGFjdGl2ZWx5IHBhcnRpY2lwYXRpbmcgaW4gcGFyYWNoYWluIGNvbnNlbnN1cy5UU2Vzc2lvbkV4ZWN1dG9yUGFyYW1zAAEEBhAJBQQABMQgRXhlY3V0b3IgcGFyYW1ldGVyIHNldCBmb3IgYSBnaXZlbiBzZXNzaW9uIGluZGV4AAAAAD0ANFBhcmFzRGlzcHV0ZXMBNFBhcmFzRGlzcHV0ZXMURExhc3RQcnVuZWRTZXNzaW9uAAAQBAAIAQEgVGhlIGxhc3QgcHJ1bmVkIHNlc3Npb24sIGlmIGFueS4gQWxsIGRhdGEgc3RvcmVkIGJ5IHRoaXMgbW9kdWxlVCByZWZlcmVuY2VzIHNlc3Npb25zLiBEaXNwdXRlcwABCAUCjQyRDAQABAUBIEFsbCBvbmdvaW5nIG9yIGNvbmNsdWRlZCBkaXNwdXRlcyBmb3IgdGhlIGxhc3Qgc2V2ZXJhbCBzZXNzaW9ucy5EQmFja2Vyc09uRGlzcHV0ZXMAAQgFAo0MlQwEAAicIEJhY2tpbmcgdm90ZXMgc3RvcmVkIGZvciBlYWNoIGRpc3B1dGUujCBUaGlzIHN0b3JhZ2UgaXMgdXNlZCBmb3Igc2xhc2hpbmcuIEluY2x1ZGVkAAEIBQKNDBAEAAhFASBBbGwgaW5jbHVkZWQgYmxvY2tzIG9uIHRoZSBjaGFpbiwgYXMgd2VsbCBhcyB0aGUgYmxvY2sgbnVtYmVyIGluIHRoaXMgY2hhaW4gdGhhdFkBIHNob3VsZCBiZSByZXZlcnRlZCBiYWNrIHRvIGlmIHRoZSBjYW5kaWRhdGUgaXMgZGlzcHV0ZWQgYW5kIGRldGVybWluZWQgdG8gYmUgaW52YWxpZC4YRnJvemVuAQCNAgQAEBEBIFdoZXRoZXIgdGhlIGNoYWluIGlzIGZyb3plbi4gU3RhcnRzIGFzIGBOb25lYC4gV2hlbiB0aGlzIGlzIGBTb21lYCw1ASB0aGUgY2hhaW4gd2lsbCBub3QgYWNjZXB0IGFueSBuZXcgcGFyYWNoYWluIGJsb2NrcyBmb3IgYmFja2luZyBvciBpbmNsdXNpb24sCQEgYW5kIGl0cyB2YWx1ZSBpbmRpY2F0ZXMgdGhlIGxhc3QgdmFsaWQgYmxvY2sgbnVtYmVyIGluIHRoZSBjaGFpbi74IEl0IGNhbiBvbmx5IGJlIHNldCBiYWNrIHRvIGBOb25lYCBieSBnb3Zlcm5hbmNlIGludGVydmVudGlvbi4ByQUB8QcAAZkMPgA0UGFyYXNTbGFzaGluZwE0UGFyYXNTbGFzaGluZwhAVW5hcHBsaWVkU2xhc2hlcwABCAUCjQydDAQABJAgVmFsaWRhdG9ycyBwZW5kaW5nIGRpc3B1dGUgc2xhc2hlcy5IVmFsaWRhdG9yU2V0Q291bnRzAAEEBRAQBAAEhCBgVmFsaWRhdG9yU2V0Q291bnRgIHBlciBzZXNzaW9uLgHNBQAAAa0MPwBYUGFyYUFzc2lnbm1lbnRQcm92aWRlcgAAAAAAQAAkUmVnaXN0cmFyASRSZWdpc3RyYXIMLFBlbmRpbmdTd2FwAAEEBbkCuQIEAARkIFBlbmRpbmcgc3dhcCBvcGVyYXRpb25zLhRQYXJhcwABBAW5ArEMBAAQBQEgQW1vdW50IGhlbGQgb24gZGVwb3NpdCBmb3IgZWFjaCBwYXJhIGFuZCB0aGUgb3JpZ2luYWwgZGVwb3NpdG9yLgBxASBUaGUgZ2l2ZW4gYWNjb3VudCBJRCBpcyByZXNwb25zaWJsZSBmb3IgcmVnaXN0ZXJpbmcgdGhlIGNvZGUgYW5kIGluaXRpYWwgaGVhZCBkYXRhLCBidXQgbWF5VQEgb25seSBkbyBzbyBpZiBpdCBpc24ndCB5ZXQgcmVnaXN0ZXJlZC4gKEFmdGVyIHRoYXQsIGl0J3MgdXAgdG8gZ292ZXJuYW5jZSB0byBkbyBzby4pOE5leHRGcmVlUGFyYUlkAQC5AhAAAAAABGAgVGhlIG5leHQgZnJlZSBgUGFyYUlkYC4B3QUB/QcILFBhcmFEZXBvc2l0GEAAEKXU6AAAAAAAAAAAAAAACNQgVGhlIGRlcG9zaXQgdG8gYmUgcGFpZCB0byBydW4gYSBvbi1kZW1hbmQgcGFyYWNoYWluLj0BIFRoaXMgc2hvdWxkIGluY2x1ZGUgdGhlIGNvc3QgZm9yIHN0b3JpbmcgdGhlIGdlbmVzaXMgaGVhZCBhbmQgdmFsaWRhdGlvbiBjb2RlLkhEYXRhRGVwb3NpdFBlckJ5dGUYQICWmAAAAAAAAAAAAAAAAAAExCBUaGUgZGVwb3NpdCB0byBiZSBwYWlkIHBlciBieXRlIHN0b3JlZCBvbiBjaGFpbi4BuQxGABRTbG90cwEUU2xvdHMEGExlYXNlcwEBBAW5Ar0MBABAFQEgQW1vdW50cyBoZWxkIG9uIGRlcG9zaXQgZm9yIGVhY2ggKHBvc3NpYmx5IGZ1dHVyZSkgbGVhc2VkIHBhcmFjaGFpbi4AYQEgVGhlIGFjdHVhbCBhbW91bnQgbG9ja2VkIG9uIGl0cyBiZWhhbGYgYnkgYW55IGFjY291bnQgYXQgYW55IHRpbWUgaXMgdGhlIG1heGltdW0gb2YgdGhlKQEgc2Vjb25kIHZhbHVlcyBvZiB0aGUgaXRlbXMgaW4gdGhpcyBsaXN0IHdob3NlIGZpcnN0IHZhbHVlIGlzIHRoZSBhY2NvdW50LgBhASBUaGUgZmlyc3QgaXRlbSBpbiB0aGUgbGlzdCBpcyB0aGUgYW1vdW50IGxvY2tlZCBmb3IgdGhlIGN1cnJlbnQgTGVhc2UgUGVyaW9kLiBGb2xsb3dpbmewIGl0ZW1zIGFyZSBmb3IgdGhlIHN1YnNlcXVlbnQgbGVhc2UgcGVyaW9kcy4AYQEgVGhlIGRlZmF1bHQgdmFsdWUgKGFuIGVtcHR5IGxpc3QpIGltcGxpZXMgdGhhdCB0aGUgcGFyYWNoYWluIG5vIGxvbmdlciBleGlzdHMgKG9yIG5ldmVytCBleGlzdGVkKSBhcyBmYXIgYXMgdGhpcyBwYWxsZXQgaXMgY29uY2VybmVkLgBRASBJZiBhIHBhcmFjaGFpbiBkb2Vzbid0IGV4aXN0ICp5ZXQqIGJ1dCBpcyBzY2hlZHVsZWQgdG8gZXhpc3QgaW4gdGhlIGZ1dHVyZSwgdGhlbiBpdGEBIHdpbGwgYmUgbGVmdC1wYWRkZWQgd2l0aCBvbmUgb3IgbW9yZSBgTm9uZWBzIHRvIGRlbm90ZSB0aGUgZmFjdCB0aGF0IG5vdGhpbmcgaXMgaGVsZCBvbl0BIGRlcG9zaXQgZm9yIHRoZSBub24tZXhpc3RlbnQgY2hhaW4gY3VycmVudGx5LCBidXQgaXMgaGVsZCBhdCBzb21lIHBvaW50IGluIHRoZSBmdXR1cmUuANwgSXQgaXMgaWxsZWdhbCBmb3IgYSBgTm9uZWAgdmFsdWUgdG8gdHJhaWwgaW4gdGhlIGxpc3QuAeEFAQEICCxMZWFzZVBlcmlvZBAQAHUSAATcIFRoZSBudW1iZXIgb2YgYmxvY2tzIG92ZXIgd2hpY2ggYSBzaW5nbGUgcGVyaW9kIGxhc3RzLixMZWFzZU9mZnNldBAQABAOAATUIFRoZSBudW1iZXIgb2YgYmxvY2tzIHRvIG9mZnNldCBlYWNoIGxlYXNlIHBlcmlvZCBieS4BwQxHACBBdWN0aW9ucwEgQXVjdGlvbnMQOEF1Y3Rpb25Db3VudGVyAQAQEAAAAAAEjCBOdW1iZXIgb2YgYXVjdGlvbnMgc3RhcnRlZCBzbyBmYXIuLEF1Y3Rpb25JbmZvAACABAAU+CBJbmZvcm1hdGlvbiByZWxhdGluZyB0byB0aGUgY3VycmVudCBhdWN0aW9uLCBpZiB0aGVyZSBpcyBvbmUuAEUBIFRoZSBmaXJzdCBpdGVtIGluIHRoZSB0dXBsZSBpcyB0aGUgbGVhc2UgcGVyaW9kIGluZGV4IHRoYXQgdGhlIGZpcnN0IG9mIHRoZSBmb3VyUQEgY29udGlndW91cyBsZWFzZSBwZXJpb2RzIG9uIGF1Y3Rpb24gaXMgZm9yLiBUaGUgc2Vjb25kIGlzIHRoZSBibG9jayBudW1iZXIgd2hlbiB0aGVdASBhdWN0aW9uIHdpbGwgImJlZ2luIHRvIGVuZCIsIGkuZS4gdGhlIGZpcnN0IGJsb2NrIG9mIHRoZSBFbmRpbmcgUGVyaW9kIG9mIHRoZSBhdWN0aW9uLjxSZXNlcnZlZEFtb3VudHMAAQQFxQwYBAAIMQEgQW1vdW50cyBjdXJyZW50bHkgcmVzZXJ2ZWQgaW4gdGhlIGFjY291bnRzIG9mIHRoZSBiaWRkZXJzIGN1cnJlbnRseSB3aW5uaW5nOCAoc3ViLSlyYW5nZXMuHFdpbm5pbmcAAQQFEMkMBAAMYQEgVGhlIHdpbm5pbmcgYmlkcyBmb3IgZWFjaCBvZiB0aGUgMTAgcmFuZ2VzIGF0IGVhY2ggc2FtcGxlIGluIHRoZSBmaW5hbCBFbmRpbmcgUGVyaW9kIG9mSQEgdGhlIGN1cnJlbnQgYXVjdGlvbi4gVGhlIG1hcCdzIGtleSBpcyB0aGUgMC1iYXNlZCBpbmRleCBpbnRvIHRoZSBTYW1wbGUgU2l6ZS4gVGhlHQEgZmlyc3Qgc2FtcGxlIG9mIHRoZSBlbmRpbmcgcGVyaW9kIGlzIDA7IHRoZSBsYXN0IGlzIGBTYW1wbGUgU2l6ZSAtIDFgLgHlBQEFCBAwRW5kaW5nUGVyaW9kEBBAGQEABB0BIFRoZSBudW1iZXIgb2YgYmxvY2tzIG92ZXIgd2hpY2ggYW4gYXVjdGlvbiBtYXkgYmUgcmV0cm9hY3RpdmVseSBlbmRlZC4wU2FtcGxlTGVuZ3RoEBAUAAAADPAgVGhlIGxlbmd0aCBvZiBlYWNoIHNhbXBsZSB0byB0YWtlIGR1cmluZyB0aGUgZW5kaW5nIHBlcmlvZC4A1CBgRW5kaW5nUGVyaW9kYCAvIGBTYW1wbGVMZW5ndGhgID0gVG90YWwgIyBvZiBTYW1wbGVzOFNsb3RSYW5nZUNvdW50EBAkAAAAAExMZWFzZVBlcmlvZHNQZXJTbG90EBAIAAAAAAHVDEgAJENyb3dkbG9hbgEkQ3Jvd2Rsb2FuEBRGdW5kcwABBAW5AtkMBAAEaCBJbmZvIG9uIGFsbCBvZiB0aGUgZnVuZHMuIE5ld1JhaXNlAQAhDAQACFUBIFRoZSBmdW5kcyB0aGF0IGhhdmUgaGFkIGFkZGl0aW9uYWwgY29udHJpYnV0aW9ucyBkdXJpbmcgdGhlIGxhc3QgYmxvY2suIFRoaXMgaXMgdXNlZBUBIGluIG9yZGVyIHRvIGRldGVybWluZSB3aGljaCBmdW5kcyBzaG91bGQgc3VibWl0IG5ldyBvciB1cGRhdGVkIGJpZHMuMEVuZGluZ3NDb3VudAEAEBAAAAAABCkBIFRoZSBudW1iZXIgb2YgYXVjdGlvbnMgdGhhdCBoYXZlIGVudGVyZWQgaW50byB0aGVpciBlbmRpbmcgcGVyaW9kIHNvIGZhci40TmV4dEZ1bmRJbmRleAEAEBAAAAAABKggVHJhY2tlciBmb3IgdGhlIG5leHQgYXZhaWxhYmxlIGZ1bmQgaW5kZXgB7QUBCQgMIFBhbGxldElk4QkgcHkvY2Z1bmQIDQEgYFBhbGxldElkYCBmb3IgdGhlIGNyb3dkbG9hbiBwYWxsZXQuIEFuIGFwcHJvcHJpYXRlIHZhbHVlIGNvdWxkIGJlZCBgUGFsbGV0SWQoKmIicHkvY2Z1bmQiKWA8TWluQ29udHJpYnV0aW9uGEAAdDukCwAAAAAAAAAAAAAACGEBIFRoZSBtaW5pbXVtIGFtb3VudCB0aGF0IG1heSBiZSBjb250cmlidXRlZCBpbnRvIGEgY3Jvd2Rsb2FuLiBTaG91bGQgYWxtb3N0IGNlcnRhaW5seSBiZXwgYXQgbGVhc3QgYEV4aXN0ZW50aWFsRGVwb3NpdGAuPFJlbW92ZUtleXNMaW1pdBAQ6AMAAATkIE1heCBudW1iZXIgb2Ygc3RvcmFnZSBrZXlzIHRvIHJlbW92ZSBwZXIgZXh0cmluc2ljIGNhbGwuAeEMSQBIU3RhdGVUcmllTWlncmF0aW9uAUhTdGF0ZVRyaWVNaWdyYXRpb24MQE1pZ3JhdGlvblByb2Nlc3MBAAUGOAAAAAAAAAAAAAAAAAAAEFAgTWlncmF0aW9uIHByb2dyZXNzLgBdASBUaGlzIHN0b3JlcyB0aGUgc25hcHNob3Qgb2YgdGhlIGxhc3QgbWlncmF0ZWQga2V5cy4gSXQgY2FuIGJlIHNldCBpbnRvIG1vdGlvbiBhbmQgbW92ZdQgZm9yd2FyZCBieSBhbnkgb2YgdGhlIG1lYW5zIHByb3ZpZGVkIGJ5IHRoaXMgcGFsbGV0LihBdXRvTGltaXRzAQD9BQQADNQgVGhlIGxpbWl0cyB0aGF0IGFyZSBpbXBvc2VkIG9uIGF1dG9tYXRpYyBtaWdyYXRpb25zLgDUIElmIHNldCB0byBOb25lLCB0aGVuIG5vIGF1dG9tYXRpYyBtaWdyYXRpb24gaGFwcGVucy5gU2lnbmVkTWlncmF0aW9uTWF4TGltaXRzAAABBgQADOAgVGhlIG1heGltdW0gbGltaXRzIHRoYXQgdGhlIHNpZ25lZCBtaWdyYXRpb24gY291bGQgdXNlLgC0IElmIG5vdCBzZXQsIG5vIHNpZ25lZCBzdWJtaXNzaW9uIGlzIGFsbG93ZWQuAfkFAQ0IBCRNYXhLZXlMZW4QEAACAABUtCBNYXhpbWFsIG51bWJlciBvZiBieXRlcyB0aGF0IGEga2V5IGNhbiBoYXZlLgCwIEZSQU1FIGl0c2VsZiBkb2VzIG5vdCBsaW1pdCB0aGUga2V5IGxlbmd0aC4BASBUaGUgY29uY3JldGUgdmFsdWUgbXVzdCB0aGVyZWZvcmUgZGVwZW5kIG9uIHlvdXIgc3RvcmFnZSB1c2FnZS5ZASBBIFtgZnJhbWVfc3VwcG9ydDo6c3RvcmFnZTo6U3RvcmFnZU5NYXBgXSBmb3IgZXhhbXBsZSBjYW4gaGF2ZSBhbiBhcmJpdHJhcnkgbnVtYmVyIG9mRQEga2V5cyB3aGljaCBhcmUgdGhlbiBoYXNoZWQgYW5kIGNvbmNhdGVuYXRlZCwgcmVzdWx0aW5nIGluIGFyYml0cmFyaWx5IGxvbmcga2V5cy4AQQEgVXNlIHRoZSAqc3RhdGUgbWlncmF0aW9uIFJQQyogdG8gcmV0cmlldmUgdGhlIGxlbmd0aCBvZiB0aGUgbG9uZ2VzdCBrZXkgaW4geW91cgEBIHN0b3JhZ2U6IDxodHRwczovL2dpdGh1Yi5jb20vcGFyaXR5dGVjaC9zdWJzdHJhdGUvaXNzdWVzLzExNjQyPgApASBUaGUgbWlncmF0aW9uIHdpbGwgaGFsdCB3aXRoIGEgYEhhbHRlZGAgZXZlbnQgaWYgdGhpcyB2YWx1ZSBpcyB0b28gc21hbGwuSQEgU2luY2UgdGhlcmUgaXMgbm8gcmVhbCBwZW5hbHR5IGZyb20gb3Zlci1lc3RpbWF0aW5nLCBpdCBpcyBhZHZpc2VkIHRvIHVzZSBhIGxhcmdlgCB2YWx1ZS4gVGhlIGRlZmF1bHQgaXMgNTEyIGJ5dGUuAIAgU29tZSBrZXkgbGVuZ3RocyBmb3IgcmVmZXJlbmNlOtAgLSBbYGZyYW1lX3N1cHBvcnQ6OnN0b3JhZ2U6OlN0b3JhZ2VWYWx1ZWBdOiAzMiBieXRlyCAtIFtgZnJhbWVfc3VwcG9ydDo6c3RvcmFnZTo6U3RvcmFnZU1hcGBdOiA2NCBieXRl4CAtIFtgZnJhbWVfc3VwcG9ydDo6c3RvcmFnZTo6U3RvcmFnZURvdWJsZU1hcGBdOiA5NiBieXRlAEggRm9yIG1vcmUgaW5mbyBzZWVJASA8aHR0cHM6Ly93d3cuc2hhd250YWJyaXppLmNvbS9ibG9nL3N1YnN0cmF0ZS9xdWVyeWluZy1zdWJzdHJhdGUtc3RvcmFnZS12aWEtcnBjLz4BFQhiACRYY21QYWxsZXQBJFhjbVBhbGxldDAwUXVlcnlDb3VudGVyAQAsIAAAAAAAAAAABIggVGhlIGxhdGVzdCBhdmFpbGFibGUgcXVlcnkgaW5kZXguHFF1ZXJpZXMAAQQCLOUMBAAEVCBUaGUgb25nb2luZyBxdWVyaWVzLihBc3NldFRyYXBzAQEEBjAQEAAAAAAQaCBUaGUgZXhpc3RpbmcgYXNzZXQgdHJhcHMuAGEBIEtleSBpcyB0aGUgYmxha2UyIDI1NiBoYXNoIG9mIChvcmlnaW4sIHZlcnNpb25lZCBgQXNzZXRzYCkgcGFpci4gVmFsdWUgaXMgdGhlIG51bWJlciBvZh0BIHRpbWVzIHRoaXMgcGFpciBoYXMgYmVlbiB0cmFwcGVkICh1c3VhbGx5IGp1c3QgMSBpZiBpdCBleGlzdHMgYXQgYWxsKS44U2FmZVhjbVZlcnNpb24AABAEAAhhASBEZWZhdWx0IHZlcnNpb24gdG8gZW5jb2RlIFhDTSB3aGVuIGxhdGVzdCB2ZXJzaW9uIG9mIGRlc3RpbmF0aW9uIGlzIHVua25vd24uIElmIGBOb25lYCw9ASB0aGVuIHRoZSBkZXN0aW5hdGlvbnMgd2hvc2UgWENNIHZlcnNpb24gaXMgdW5rbm93biBhcmUgY29uc2lkZXJlZCB1bnJlYWNoYWJsZS5AU3VwcG9ydGVkVmVyc2lvbgABCAUC+QwQBAAE8CBUaGUgTGF0ZXN0IHZlcnNpb25zIHRoYXQgd2Uga25vdyB2YXJpb3VzIGxvY2F0aW9ucyBzdXBwb3J0LkBWZXJzaW9uTm90aWZpZXJzAAEIBQL5DCwEAAQFASBBbGwgbG9jYXRpb25zIHRoYXQgd2UgaGF2ZSByZXF1ZXN0ZWQgdmVyc2lvbiBub3RpZmljYXRpb25zIGZyb20uUFZlcnNpb25Ob3RpZnlUYXJnZXRzAAEIBQL5DP0MBAAIcQEgVGhlIHRhcmdldCBsb2NhdGlvbnMgdGhhdCBhcmUgc3Vic2NyaWJlZCB0byBvdXIgdmVyc2lvbiBjaGFuZ2VzLCBhcyB3ZWxsIGFzIHRoZSBtb3N0IHJlY2VudJQgb2Ygb3VyIHZlcnNpb25zIHdlIGluZm9ybWVkIHRoZW0gb2YuVFZlcnNpb25EaXNjb3ZlcnlRdWV1ZQEAAQ0EAAxlASBEZXN0aW5hdGlvbnMgd2hvc2UgbGF0ZXN0IFhDTSB2ZXJzaW9uIHdlIHdvdWxkIGxpa2UgdG8ga25vdy4gRHVwbGljYXRlcyBub3QgYWxsb3dlZCwgYW5kcQEgdGhlIGB1MzJgIGNvdW50ZXIgaXMgdGhlIG51bWJlciBvZiB0aW1lcyB0aGF0IGEgc2VuZCB0byB0aGUgZGVzdGluYXRpb24gaGFzIGJlZW4gYXR0ZW1wdGVkLIwgd2hpY2ggaXMgdXNlZCBhcyBhIHByaW9yaXRpemF0aW9uLkBDdXJyZW50TWlncmF0aW9uAAANDQQABJwgVGhlIGN1cnJlbnQgbWlncmF0aW9uJ3Mgc3RhZ2UsIGlmIGFueS5UUmVtb3RlTG9ja2VkRnVuZ2libGVzAAEMBQICFQ0ZDQQABPAgRnVuZ2libGUgYXNzZXRzIHdoaWNoIHdlIGtub3cgYXJlIGxvY2tlZCBvbiBhIHJlbW90ZSBjaGFpbi48TG9ja2VkRnVuZ2libGVzAAEEAgApDQQABOAgRnVuZ2libGUgYXNzZXRzIHdoaWNoIHdlIGtub3cgYXJlIGxvY2tlZCBvbiB0aGlzIGNoYWluLlRYY21FeGVjdXRpb25TdXNwZW5kZWQBAHgEAAS0IEdsb2JhbCBzdXNwZW5zaW9uIHN0YXRlIG9mIHRoZSBYQ00gZXhlY3V0b3IuAREGARkIAAE1DWMAME1lc3NhZ2VRdWV1ZQEwTWVzc2FnZVF1ZXVlDDBCb29rU3RhdGVGb3IBAQQFSQc5DXQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATMIFRoZSBpbmRleCBvZiB0aGUgZmlyc3QgYW5kIGxhc3QgKG5vbi1lbXB0eSkgcGFnZXMuLFNlcnZpY2VIZWFkAABJBwQABLwgVGhlIG9yaWdpbiBhdCB3aGljaCB3ZSBzaG91bGQgYmVnaW4gc2VydmljaW5nLhRQYWdlcwABCAUFRQ1JDQQABIggVGhlIG1hcCBvZiBwYWdlIGluZGljZXMgdG8gcGFnZXMuAUUHASEIDCBIZWFwU2l6ZRAQAAABABQ9ASBUaGUgc2l6ZSBvZiB0aGUgcGFnZTsgdGhpcyBpbXBsaWVzIHRoZSBtYXhpbXVtIG1lc3NhZ2Ugc2l6ZSB3aGljaCBjYW4gYmUgc2VudC4AWQEgQSBnb29kIHZhbHVlIGRlcGVuZHMgb24gdGhlIGV4cGVjdGVkIG1lc3NhZ2Ugc2l6ZXMsIHRoZWlyIHdlaWdodHMsIHRoZSB3ZWlnaHQgdGhhdCBpc10BIGF2YWlsYWJsZSBmb3IgcHJvY2Vzc2luZyB0aGVtIGFuZCB0aGUgbWF4aW1hbCBuZWVkZWQgbWVzc2FnZSBzaXplLiBUaGUgbWF4aW1hbCBtZXNzYWdlEQEgc2l6ZSBpcyBzbGlnaHRseSBsb3dlciB0aGFuIHRoaXMgYXMgZGVmaW5lZCBieSBbYE1heE1lc3NhZ2VMZW5PZmBdLiBNYXhTdGFsZRAQCAAAAAxdASBUaGUgbWF4aW11bSBudW1iZXIgb2Ygc3RhbGUgcGFnZXMgKGkuZS4gb2Ygb3ZlcndlaWdodCBtZXNzYWdlcykgYWxsb3dlZCBiZWZvcmUgY3VsbGluZ1EBIGNhbiBoYXBwZW4uIE9uY2UgdGhlcmUgYXJlIG1vcmUgc3RhbGUgcGFnZXMgdGhhbiB0aGlzLCB0aGVuIGhpc3RvcmljYWwgcGFnZXMgbWF5IGJl/CBkcm9wcGVkLCBldmVuIGlmIHRoZXkgY29udGFpbiB1bnByb2Nlc3NlZCBvdmVyd2VpZ2h0IG1lc3NhZ2VzLjRTZXJ2aWNlV2VpZ2h0lQdAAQcAoNshXRMzMzMzMzMzMxRBASBUaGUgYW1vdW50IG9mIHdlaWdodCAoaWYgYW55KSB3aGljaCBzaG91bGQgYmUgcHJvdmlkZWQgdG8gdGhlIG1lc3NhZ2UgcXVldWUgZm9yaCBzZXJ2aWNpbmcgZW5xdWV1ZWQgaXRlbXMuAPwgVGhpcyBtYXkgYmUgbGVnaXRpbWF0ZWx5IGBOb25lYCBpbiB0aGUgY2FzZSB0aGF0IHlvdSB3aWxsIGNhbGyoIGBTZXJ2aWNlUXVldWVzOjpzZXJ2aWNlX3F1ZXVlc2AgbWFudWFsbHkuAVENZAAkQXNzZXRSYXRlASRBc3NldFJhdGUEWENvbnZlcnNpb25SYXRlVG9OYXRpdmUAAQQCBQFVBwQADB0BIE1hcHMgYW4gYXNzZXQgdG8gaXRzIGZpeGVkIHBvaW50IHJlcHJlc2VudGF0aW9uIGluIHRoZSBuYXRpdmUgYmFsYW5jZS4ATQEgRS5nLiBgbmF0aXZlX2Ftb3VudCA9IGFzc2V0X2Ftb3VudCAqIENvbnZlcnNpb25SYXRlVG9OYXRpdmU6OjxUPjo6Z2V0KGFzc2V0X2tpbmQpYAFRBwEpCAABVQ1lABRCZWVmeQEUQmVlZnkULEF1dGhvcml0aWVzAQBZDQQABHAgVGhlIGN1cnJlbnQgYXV0aG9yaXRpZXMgc2V0OFZhbGlkYXRvclNldElkAQAsIAAAAAAAAAAABHQgVGhlIGN1cnJlbnQgdmFsaWRhdG9yIHNldCBpZDxOZXh0QXV0aG9yaXRpZXMBAFkNBAAE7CBBdXRob3JpdGllcyBzZXQgc2NoZWR1bGVkIHRvIGJlIHVzZWQgd2l0aCB0aGUgbmV4dCBzZXNzaW9uMFNldElkU2Vzc2lvbgABBAUsEAQAKFEBIEEgbWFwcGluZyBmcm9tIEJFRUZZIHNldCBJRCB0byB0aGUgaW5kZXggb2YgdGhlICptb3N0IHJlY2VudCogc2Vzc2lvbiBmb3Igd2hpY2ggaXRzaCBtZW1iZXJzIHdlcmUgcmVzcG9uc2libGUuAEUBIFRoaXMgaXMgb25seSB1c2VkIGZvciB2YWxpZGF0aW5nIGVxdWl2b2NhdGlvbiBwcm9vZnMuIEFuIGVxdWl2b2NhdGlvbiBwcm9vZiBtdXN0TQEgY29udGFpbnMgYSBrZXktb3duZXJzaGlwIHByb29mIGZvciBhIGdpdmVuIHNlc3Npb24sIHRoZXJlZm9yZSB3ZSBuZWVkIGEgd2F5IHRvIHRpZT0BIHRvZ2V0aGVyIHNlc3Npb25zIGFuZCBCRUVGWSBzZXQgaWRzLCBpLmUuIHdlIG5lZWQgdG8gdmFsaWRhdGUgdGhhdCBhIHZhbGlkYXRvckEBIHdhcyB0aGUgb3duZXIgb2YgYSBnaXZlbiBrZXkgb24gYSBnaXZlbiBzZXNzaW9uLCBhbmQgd2hhdCB0aGUgYWN0aXZlIHNldCBJRCB3YXNUIGR1cmluZyB0aGF0IHNlc3Npb24uANwgVFdPWC1OT1RFOiBgVmFsaWRhdG9yU2V0SWRgIGlzIG5vdCB1bmRlciB1c2VyIGNvbnRyb2wuMEdlbmVzaXNCbG9jawEAjQIEAAzcIEJsb2NrIG51bWJlciB3aGVyZSBCRUVGWSBjb25zZW5zdXMgaXMgZW5hYmxlZC9zdGFydGVkLmkBIEJ5IGNoYW5naW5nIHRoaXMgKHRocm91Z2ggcHJpdmlsZWdlZCBgc2V0X25ld19nZW5lc2lzKClgKSwgQkVFRlkgY29uc2Vuc3VzIGlzIGVmZmVjdGl2ZWx5rCByZXN0YXJ0ZWQgZnJvbSB0aGUgbmV3bHkgc2V0IGJsb2NrIG51bWJlci4BWQcADDhNYXhBdXRob3JpdGllcxAQoIYBAATUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhdXRob3JpdGllcyB0aGF0IGNhbiBiZSBhZGRlZC40TWF4Tm9taW5hdG9ycxAQAAIAAATUIFRoZSBtYXhpbXVtIG51bWJlciBvZiBub21pbmF0b3JzIGZvciBlYWNoIHZhbGlkYXRvci5YTWF4U2V0SWRTZXNzaW9uRW50cmllcywgqAAAAAAAAAAYOQEgVGhlIG1heGltdW0gbnVtYmVyIG9mIGVudHJpZXMgdG8ga2VlcCBpbiB0aGUgc2V0IGlkIHRvIHNlc3Npb24gaW5kZXggbWFwcGluZy4AMQEgU2luY2UgdGhlIGBTZXRJZFNlc3Npb25gIG1hcCBpcyBvbmx5IHVzZWQgZm9yIHZhbGlkYXRpbmcgZXF1aXZvY2F0aW9ucyB0aGlzKQEgdmFsdWUgc2hvdWxkIHJlbGF0ZSB0byB0aGUgYm9uZGluZyBkdXJhdGlvbiBvZiB3aGF0ZXZlciBzdGFraW5nIHN5c3RlbSBpczUBIGJlaW5nIHVzZWQgKGlmIGFueSkuIElmIGVxdWl2b2NhdGlvbiBoYW5kbGluZyBpcyBub3QgZW5hYmxlZCB0aGVuIHRoaXMgdmFsdWU0IGNhbiBiZSB6ZXJvLgFhDcgADE1tcgEMTW1yDCBSb290SGFzaAEAMIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARYIExhdGVzdCBNTVIgUm9vdCBoYXNoLjhOdW1iZXJPZkxlYXZlcwEALCAAAAAAAAAAAASwIEN1cnJlbnQgc2l6ZSBvZiB0aGUgTU1SIChudW1iZXIgb2YgbGVhdmVzKS4UTm9kZXMAAQQGLDAEABCAIEhhc2hlcyBvZiB0aGUgbm9kZXMgaW4gdGhlIE1NUi4ALQEgTm90ZSB0aGlzIGNvbGxlY3Rpb24gb25seSBjb250YWlucyBNTVIgcGVha3MsIHRoZSBpbm5lciBub2RlcyAoYW5kIGxlYXZlcym8IGFyZSBwcnVuZWQgYW5kIG9ubHkgc3RvcmVkIGluIHRoZSBPZmZjaGFpbiBEQi4AAAAAyQAwQmVlZnlNbXJMZWFmATBCZWVmeU1tckxlYWYIQEJlZWZ5QXV0aG9yaXRpZXMBAGUNsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKAgRGV0YWlscyBvZiBjdXJyZW50IEJFRUZZIGF1dGhvcml0eSBzZXQuUEJlZWZ5TmV4dEF1dGhvcml0aWVzAQBlDbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyUIERldGFpbHMgb2YgbmV4dCBCRUVGWSBhdXRob3JpdHkgc2V0LgBRASBUaGlzIHN0b3JhZ2UgZW50cnkgaXMgdXNlZCBhcyBjYWNoZSBmb3IgY2FsbHMgdG8gYHVwZGF0ZV9iZWVmeV9uZXh0X2F1dGhvcml0eV9zZXRgLgAAAADKAEBJZGVudGl0eU1pZ3JhdG9yAAF5BwEtCAAA+AAE6QGZAaEDaQ0oSENoZWNrTm9uWmVyb1NlbmRlcm0NjEBDaGVja1NwZWNWZXJzaW9ucQ0QOENoZWNrVHhWZXJzaW9udQ0QMENoZWNrR2VuZXNpc3kNMDhDaGVja01vcnRhbGl0eX0NMChDaGVja05vbmNlhQ2MLENoZWNrV2VpZ2h0iQ2MYENoYXJnZVRyYW5zYWN0aW9uUGF5bWVudI0NjEhQcmV2YWxpZGF0ZUF0dGVzdHORDYxEQ2hlY2tNZXRhZGF0YUhhc2iVDYSdDUwQQ29yZQwcdmVyc2lvbgBdCASQIFJldHVybnMgdGhlIHZlcnNpb24gb2YgdGhlIHJ1bnRpbWUuNGV4ZWN1dGVfYmxvY2sEFGJsb2NroQ2MBGQgRXhlY3V0ZSB0aGUgZ2l2ZW4gYmxvY2suQGluaXRpYWxpemVfYmxvY2sEGGhlYWRlcsUBjASoIEluaXRpYWxpemUgYSBibG9jayB3aXRoIHRoZSBnaXZlbiBoZWFkZXIuBCEBIFRoZSBgQ29yZWAgcnVudGltZSBhcGkgdGhhdCBldmVyeSBTdWJzdHJhdGUgcnVudGltZSBuZWVkcyB0byBpbXBsZW1lbnQuIE1ldGFkYXRhDCBtZXRhZGF0YQCtDQSMIFJldHVybnMgdGhlIG1ldGFkYXRhIG9mIGEgcnVudGltZS5MbWV0YWRhdGFfYXRfdmVyc2lvbgQcdmVyc2lvbhCxDRCkIFJldHVybnMgdGhlIG1ldGFkYXRhIGF0IGEgZ2l2ZW4gdmVyc2lvbi4ABQEgSWYgdGhlIGdpdmVuIGB2ZXJzaW9uYCBpc24ndCBzdXBwb3J0ZWQsIHRoaXMgd2lsbCByZXR1cm4gYE5vbmVgLnUBIFVzZSBbYFNlbGY6Om1ldGFkYXRhX3ZlcnNpb25zYF0gdG8gZmluZCBvdXQgYWJvdXQgc3VwcG9ydGVkIG1ldGFkYXRhIHZlcnNpb24gb2YgdGhlIHJ1bnRpbWUuRG1ldGFkYXRhX3ZlcnNpb25zAAkCDKQgUmV0dXJucyB0aGUgc3VwcG9ydGVkIG1ldGFkYXRhIHZlcnNpb25zLgDAIFRoaXMgY2FuIGJlIHVzZWQgdG8gY2FsbCBgbWV0YWRhdGFfYXRfdmVyc2lvbmAuBAEBIFRoZSBgTWV0YWRhdGFgIGFwaSB0cmFpdCB0aGF0IHJldHVybnMgbWV0YWRhdGEgZm9yIHRoZSBydW50aW1lLjBCbG9ja0J1aWxkZXIQPGFwcGx5X2V4dHJpbnNpYwQkZXh0cmluc2ljpQ21DRBsIEFwcGx5IHRoZSBnaXZlbiBleHRyaW5zaWMuADkBIFJldHVybnMgYW4gaW5jbHVzaW9uIG91dGNvbWUgd2hpY2ggc3BlY2lmaWVzIGlmIHRoaXMgZXh0cmluc2ljIGlzIGluY2x1ZGVkIGluTCB0aGlzIGJsb2NrIG9yIG5vdC44ZmluYWxpemVfYmxvY2sAxQEEaCBGaW5pc2ggdGhlIGN1cnJlbnQgYmxvY2suTGluaGVyZW50X2V4dHJpbnNpY3MEIGluaGVyZW50xQ2pDQQ9ASBHZW5lcmF0ZSBpbmhlcmVudCBleHRyaW5zaWNzLiBUaGUgaW5oZXJlbnQgZGF0YSB3aWxsIHZhcnkgZnJvbSBjaGFpbiB0byBjaGFpbi48Y2hlY2tfaW5oZXJlbnRzCBRibG9ja6ENEGRhdGHFDdUNBFUBIENoZWNrIHRoYXQgdGhlIGluaGVyZW50cyBhcmUgdmFsaWQuIFRoZSBpbmhlcmVudCBkYXRhIHdpbGwgdmFyeSBmcm9tIGNoYWluIHRvIGNoYWluLgRxASBUaGUgYEJsb2NrQnVpbGRlcmAgYXBpIHRyYWl0IHRoYXQgcHJvdmlkZXMgdGhlIHJlcXVpcmVkIGZ1bmN0aW9uYWxpdHkgZm9yIGJ1aWxkaW5nIGEgYmxvY2suSE5vbWluYXRpb25Qb29sc0FwaQw8cGVuZGluZ19yZXdhcmRzBAx3aG8AGAQ1ASBSZXR1cm5zIHRoZSBwZW5kaW5nIHJld2FyZHMgZm9yIHRoZSBtZW1iZXIgdGhhdCB0aGUgQWNjb3VudElkIHdhcyBnaXZlbiBmb3IuRHBvaW50c190b19iYWxhbmNlCBxwb29sX2lkEBhwb2ludHMYGAT0IFJldHVybnMgdGhlIGVxdWl2YWxlbnQgYmFsYW5jZSBvZiBgcG9pbnRzYCBmb3IgYSBnaXZlbiBwb29sLkRiYWxhbmNlX3RvX3BvaW50cwgccG9vbF9pZBAkbmV3X2Z1bmRzGBgE/CBSZXR1cm5zIHRoZSBlcXVpdmFsZW50IHBvaW50cyBvZiBgbmV3X2Z1bmRzYCBmb3IgYSBnaXZlbiBwb29sLgT4IFJ1bnRpbWUgYXBpIGZvciBhY2Nlc3NpbmcgaW5mb3JtYXRpb24gYWJvdXQgbm9taW5hdGlvbiBwb29scy4oU3Rha2luZ0FwaQxEbm9taW5hdGlvbnNfcXVvdGEEHGJhbGFuY2UYEAQRASBSZXR1cm5zIHRoZSBub21pbmF0aW9ucyBxdW90YSBmb3IgYSBub21pbmF0b3Igd2l0aCBhIGdpdmVuIGJhbGFuY2UuXGVyYXNfc3Rha2Vyc19wYWdlX2NvdW50CAxlcmEQHGFjY291bnQAEAQ5ASBSZXR1cm5zIHRoZSBwYWdlIGNvdW50IG9mIGV4cG9zdXJlcyBmb3IgYSB2YWxpZGF0b3IgYGFjY291bnRgIGluIGEgZ2l2ZW4gZXJhLjxwZW5kaW5nX3Jld2FyZHMIDGVyYRAcYWNjb3VudAB4BD0BIFJldHVybnMgdHJ1ZSBpZiB2YWxpZGF0b3IgYGFjY291bnRgIGhhcyBwYWdlcyB0byBiZSBjbGFpbWVkIGZvciB0aGUgZ2l2ZW4gZXJhLgBYVGFnZ2VkVHJhbnNhY3Rpb25RdWV1ZQRQdmFsaWRhdGVfdHJhbnNhY3Rpb24MGHNvdXJjZdkNCHR4pQ0oYmxvY2tfaGFzaDDdDSRoIFZhbGlkYXRlIHRoZSB0cmFuc2FjdGlvbi4AZQEgVGhpcyBtZXRob2QgaXMgaW52b2tlZCBieSB0aGUgdHJhbnNhY3Rpb24gcG9vbCB0byBsZWFybiBkZXRhaWxzIGFib3V0IGdpdmVuIHRyYW5zYWN0aW9uLkUBIFRoZSBpbXBsZW1lbnRhdGlvbiBzaG91bGQgbWFrZSBzdXJlIHRvIHZlcmlmeSB0aGUgY29ycmVjdG5lc3Mgb2YgdGhlIHRyYW5zYWN0aW9uTQEgYWdhaW5zdCBjdXJyZW50IHN0YXRlLiBUaGUgZ2l2ZW4gYGJsb2NrX2hhc2hgIGNvcnJlc3BvbmRzIHRvIHRoZSBoYXNoIG9mIHRoZSBibG9ja3wgdGhhdCBpcyB1c2VkIGFzIGN1cnJlbnQgc3RhdGUuAEUBIE5vdGUgdGhhdCB0aGlzIGNhbGwgbWF5IGJlIHBlcmZvcm1lZCBieSB0aGUgcG9vbCBtdWx0aXBsZSB0aW1lcyBhbmQgdHJhbnNhY3Rpb25zpCBtaWdodCBiZSB2ZXJpZmllZCBpbiBhbnkgcG9zc2libGUgb3JkZXIuBE0BIFRoZSBgVGFnZ2VkVHJhbnNhY3Rpb25RdWV1ZWAgYXBpIHRyYWl0IGZvciBpbnRlcmZlcmluZyB3aXRoIHRoZSB0cmFuc2FjdGlvbiBxdWV1ZS5ET2ZmY2hhaW5Xb3JrZXJBcGkEPG9mZmNoYWluX3dvcmtlcgQYaGVhZGVyxQGMBMggU3RhcnRzIHRoZSBvZmYtY2hhaW4gdGFzayBmb3IgZ2l2ZW4gYmxvY2sgaGVhZGVyLgRkIFRoZSBvZmZjaGFpbiB3b3JrZXIgYXBpLjRQYXJhY2hhaW5Ib3N0dCh2YWxpZGF0b3JzALULBHAgR2V0IHRoZSBjdXJyZW50IHZhbGlkYXRvcnMuQHZhbGlkYXRvcl9ncm91cHMA5Q0MZQEgUmV0dXJucyB0aGUgdmFsaWRhdG9yIGdyb3VwcyBhbmQgcm90YXRpb24gaW5mbyBsb2NhbGl6ZWQgYmFzZWQgb24gdGhlIGh5cG90aGV0aWNhbCBjaGlsZGEBICBvZiBhIGJsb2NrIHdob3NlIHN0YXRlICB0aGlzIGlzIGludm9rZWQgb24uIE5vdGUgdGhhdCBgbm93YCBpbiB0aGUgYEdyb3VwUm90YXRpb25JbmZvYNAgc2hvdWxkIGJlIHRoZSBzdWNjZXNzb3Igb2YgdGhlIG51bWJlciBvZiB0aGUgYmxvY2suSGF2YWlsYWJpbGl0eV9jb3JlcwDtDQg1ASBZaWVsZHMgaW5mb3JtYXRpb24gb24gYWxsIGF2YWlsYWJpbGl0eSBjb3JlcyBhcyByZWxldmFudCB0byB0aGUgY2hpbGQgYmxvY2suPQEgQ29yZXMgYXJlIGVpdGhlciBmcmVlIG9yIG9jY3VwaWVkLiBGcmVlIGNvcmVzIGNhbiBoYXZlIHBhcmFzIGFzc2lnbmVkIHRvIHRoZW0uZHBlcnNpc3RlZF92YWxpZGF0aW9uX2RhdGEIHHBhcmFfaWS5Aihhc3N1bXB0aW9uBQ4JDhRpASBZaWVsZHMgdGhlIHBlcnNpc3RlZCB2YWxpZGF0aW9uIGRhdGEgZm9yIHRoZSBnaXZlbiBgUGFyYUlkYCBhbG9uZyB3aXRoIGFuIGFzc3VtcHRpb24gdGhhdNggc2hvdWxkIGJlIHVzZWQgaWYgdGhlIHBhcmEgY3VycmVudGx5IG9jY3VwaWVzIGEgY29yZS4ARQEgUmV0dXJucyBgTm9uZWAgaWYgZWl0aGVyIHRoZSBwYXJhIGlzIG5vdCByZWdpc3RlcmVkIG9yIHRoZSBhc3N1bXB0aW9uIGlzIGBGcmVlZGCYIGFuZCB0aGUgcGFyYSBhbHJlYWR5IG9jY3VwaWVzIGEgY29yZS5cYXNzdW1lZF92YWxpZGF0aW9uX2RhdGEIHHBhcmFfaWS5ApxleHBlY3RlZF9wZXJzaXN0ZWRfdmFsaWRhdGlvbl9kYXRhX2hhc2gwEQ4MaQEgUmV0dXJucyB0aGUgcGVyc2lzdGVkIHZhbGlkYXRpb24gZGF0YSBmb3IgdGhlIGdpdmVuIGBQYXJhSWRgIGFsb25nIHdpdGggdGhlIGNvcnJlc3BvbmRpbmd1ASB2YWxpZGF0aW9uIGNvZGUgaGFzaC4gSW5zdGVhZCBvZiBhY2NlcHRpbmcgYXNzdW1wdGlvbiBhYm91dCB0aGUgcGFyYSwgbWF0Y2hlcyB0aGUgdmFsaWRhdGlvbikBIGRhdGEgaGFzaCBhZ2FpbnN0IGFuIGV4cGVjdGVkIG9uZSBhbmQgeWllbGRzIGBOb25lYCBpZiB0aGV5J3JlIG5vdCBlcXVhbC5gY2hlY2tfdmFsaWRhdGlvbl9vdXRwdXRzCBxwYXJhX2lkuQIcb3V0cHV0c2kFeAQVASBDaGVja3MgaWYgdGhlIGdpdmVuIHZhbGlkYXRpb24gb3V0cHV0cyBwYXNzIHRoZSBhY2NlcHRhbmNlIGNyaXRlcmlhLlxzZXNzaW9uX2luZGV4X2Zvcl9jaGlsZAAQDPAgUmV0dXJucyB0aGUgc2Vzc2lvbiBpbmRleCBleHBlY3RlZCBhdCBhIGNoaWxkIG9mIHRoZSBibG9jay4A0CBUaGlzIGNhbiBiZSB1c2VkIHRvIGluc3RhbnRpYXRlIGEgYFNpZ25pbmdDb250ZXh0YC48dmFsaWRhdGlvbl9jb2RlCBxwYXJhX2lkuQIoYXNzdW1wdGlvbgUOfQUQVQEgRmV0Y2ggdGhlIHZhbGlkYXRpb24gY29kZSB1c2VkIGJ5IGEgcGFyYSwgbWFraW5nIHRoZSBnaXZlbiBgT2NjdXBpZWRDb3JlQXNzdW1wdGlvbmAuAEUBIFJldHVybnMgYE5vbmVgIGlmIGVpdGhlciB0aGUgcGFyYSBpcyBub3QgcmVnaXN0ZXJlZCBvciB0aGUgYXNzdW1wdGlvbiBpcyBgRnJlZWRgmCBhbmQgdGhlIHBhcmEgYWxyZWFkeSBvY2N1cGllcyBhIGNvcmUueGNhbmRpZGF0ZV9wZW5kaW5nX2F2YWlsYWJpbGl0eQQccGFyYV9pZLkCGQ4IXQEgR2V0IHRoZSByZWNlaXB0IG9mIGEgY2FuZGlkYXRlIHBlbmRpbmcgYXZhaWxhYmlsaXR5LiBUaGlzIHJldHVybnMgYFNvbWVgIGZvciBhbnkgcGFyYXMlASBhc3NpZ25lZCB0byBvY2N1cGllZCBjb3JlcyBpbiBgYXZhaWxhYmlsaXR5X2NvcmVzYCBhbmQgYE5vbmVgIG90aGVyd2lzZS5AY2FuZGlkYXRlX2V2ZW50cwAdDgQtASBHZXQgYSB2ZWN0b3Igb2YgZXZlbnRzIGNvbmNlcm5pbmcgY2FuZGlkYXRlcyB0aGF0IG9jY3VycmVkIHdpdGhpbiBhIGJsb2NrLjBkbXFfY29udGVudHMEJHJlY2lwaWVudLkCVQwEPQEgR2V0IGFsbCB0aGUgcGVuZGluZyBpbmJvdW5kIG1lc3NhZ2VzIGluIHRoZSBkb3dud2FyZCBtZXNzYWdlIHF1ZXVlIGZvciBhIHBhcmEueGluYm91bmRfaHJtcF9jaGFubmVsc19jb250ZW50cwQkcmVjaXBpZW50uQIlDghlASBHZXQgdGhlIGNvbnRlbnRzIG9mIGFsbCBjaGFubmVscyBhZGRyZXNzZWQgdG8gdGhlIGdpdmVuIHJlY2lwaWVudC4gQ2hhbm5lbHMgdGhhdCBoYXZlIG5vkCBtZXNzYWdlcyBpbiB0aGVtIGFyZSBhbHNvIGluY2x1ZGVkLlx2YWxpZGF0aW9uX2NvZGVfYnlfaGFzaAQQaGFzaGUFfQUEnCBHZXQgdGhlIHZhbGlkYXRpb24gY29kZSBmcm9tIGl0cyBoYXNoLjhvbl9jaGFpbl92b3RlcwAxDgQxASBTY3JhcGUgZGlzcHV0ZSByZWxldmFudCBmcm9tIG9uLWNoYWluLCBiYWNraW5nIHZvdGVzIGFuZCByZXNvbHZlZCBkaXNwdXRlcy4wc2Vzc2lvbl9pbmZvBBRpbmRleBA1DgzcIEdldCB0aGUgc2Vzc2lvbiBpbmZvIGZvciB0aGUgZ2l2ZW4gc2Vzc2lvbiwgaWYgc3RvcmVkLgAZASBOT1RFOiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXZhaWxhYmxlIHNpbmNlIHBhcmFjaGFpbiBob3N0IHZlcnNpb24gMi5oc3VibWl0X3B2Zl9jaGVja19zdGF0ZW1lbnQIEHN0bXS5BSRzaWduYXR1cmVJBYwMAQEgU3VibWl0cyBhIFBWRiBwcmUtY2hlY2tpbmcgc3RhdGVtZW50IGludG8gdGhlIHRyYW5zYWN0aW9uIHBvb2wuABkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiAyLlRwdmZzX3JlcXVpcmVfcHJlY2hlY2sAHQwMXQEgUmV0dXJucyBjb2RlIGhhc2hlcyBvZiBQVkZzIHRoYXQgcmVxdWlyZSBwcmUtY2hlY2tpbmcgYnkgdmFsaWRhdG9ycyBpbiB0aGUgYWN0aXZlIHNldC4AGQEgTk9URTogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBwYXJhY2hhaW4gaG9zdCB2ZXJzaW9uIDIuUHZhbGlkYXRpb25fY29kZV9oYXNoCBxwYXJhX2lkuQIoYXNzdW1wdGlvbgUOOQ4MhQEgRmV0Y2ggdGhlIGhhc2ggb2YgdGhlIHZhbGlkYXRpb24gY29kZSB1c2VkIGJ5IGEgcGFyYSwgbWFraW5nIHRoZSBnaXZlbiBgT2NjdXBpZWRDb3JlQXNzdW1wdGlvbmAuABkBIE5PVEU6IFRoaXMgZnVuY3Rpb24gaXMgb25seSBhdmFpbGFibGUgc2luY2UgcGFyYWNoYWluIGhvc3QgdmVyc2lvbiAyLiBkaXNwdXRlcwA9DgR4IFJldHVybnMgYWxsIG9uY2hhaW4gZGlzcHV0ZXMuXHNlc3Npb25fZXhlY3V0b3JfcGFyYW1zBDRzZXNzaW9uX2luZGV4EEUOBLggUmV0dXJucyBleGVjdXRpb24gcGFyYW1ldGVycyBmb3IgdGhlIHNlc3Npb24uRHVuYXBwbGllZF9zbGFzaGVzAEkOCFkBIFJldHVybnMgYSBsaXN0IG9mIHZhbGlkYXRvcnMgdGhhdCBsb3N0IGEgcGFzdCBzZXNzaW9uIGRpc3B1dGUgYW5kIG5lZWQgdG8gYmUgc2xhc2hlZC4ZASBOT1RFOiBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgYXZhaWxhYmxlIHNpbmNlIHBhcmFjaGFpbiBob3N0IHZlcnNpb24gNS5Ma2V5X293bmVyc2hpcF9wcm9vZgQwdmFsaWRhdG9yX2lkQQJRDgjMIFJldHVybnMgYSBtZXJrbGUgcHJvb2Ygb2YgYSB2YWxpZGF0b3Igc2Vzc2lvbiBrZXkuGQEgTk9URTogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBwYXJhY2hhaW4gaG9zdCB2ZXJzaW9uIDUuaHN1Ym1pdF9yZXBvcnRfZGlzcHV0ZV9sb3N0CDRkaXNwdXRlX3Byb29m0QVMa2V5X293bmVyc2hpcF9wcm9vZlUOWQ4MKQEgU3VibWl0IGFuIHVuc2lnbmVkIGV4dHJpbnNpYyB0byBzbGFzaCB2YWxpZGF0b3JzIHdobyBsb3N0IGEgZGlzcHV0ZSBhYm91dHwgYSBjYW5kaWRhdGUgb2YgYSBwYXN0IHNlc3Npb24uGQEgTk9URTogVGhpcyBmdW5jdGlvbiBpcyBvbmx5IGF2YWlsYWJsZSBzaW5jZSBwYXJhY2hhaW4gaG9zdCB2ZXJzaW9uIDUuVG1pbmltdW1fYmFja2luZ192b3RlcwAQCA0BIEdldCB0aGUgbWluaW11bSBudW1iZXIgb2YgYmFja2luZyB2b3RlcyBmb3IgYSBwYXJhY2hhaW4gY2FuZGlkYXRlLvQgVGhpcyBpcyBhIHN0YWdpbmcgbWV0aG9kISBEbyBub3QgdXNlIG9uIHByb2R1Y3Rpb24gcnVudGltZXMhSHBhcmFfYmFja2luZ19zdGF0ZQQEX7kCXQ4E5CBSZXR1cm5zIHRoZSBzdGF0ZSBvZiBwYXJhY2hhaW4gYmFja2luZyBmb3IgYSBnaXZlbiBwYXJhLlBhc3luY19iYWNraW5nX3BhcmFtcwAFBQRhASBSZXR1cm5zIGNhbmRpZGF0ZSdzIGFjY2VwdGFuY2UgbGltaXRhdGlvbnMgZm9yIGFzeW5jaHJvbm91cyBiYWNraW5nIGZvciBhIHJlbGF5IHBhcmVudC5MZGlzYWJsZWRfdmFsaWRhdG9ycwCxCwT4IFJldHVybnMgYSBsaXN0IG9mIGFsbCBkaXNhYmxlZCB2YWxpZGF0b3JzIGF0IHRoZSBnaXZlbiBibG9jay40bm9kZV9mZWF0dXJlcwA9BQhMIEdldCBub2RlIGZlYXR1cmVzLvQgVGhpcyBpcyBhIHN0YWdpbmcgbWV0aG9kISBEbyBub3QgdXNlIG9uIHByb2R1Y3Rpb24gcnVudGltZXMhWGFwcHJvdmFsX3ZvdGluZ19wYXJhbXMAHQUEpCBBcHByb3ZhbCB2b3RpbmcgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzBNwgVGhlIEFQSSBmb3IgcXVlcnlpbmcgdGhlIHN0YXRlIG9mIHBhcmFjaGFpbnMgb24tY2hhaW4uIEJlZWZ5QXBpEDRiZWVmeV9nZW5lc2lzAI0CBAUBIFJldHVybiB0aGUgYmxvY2sgbnVtYmVyIHdoZXJlIEJFRUZZIGNvbnNlbnN1cyBpcyBlbmFibGVkL3N0YXJ0ZWQ0dmFsaWRhdG9yX3NldACNDgS4IFJldHVybiB0aGUgY3VycmVudCBhY3RpdmUgQkVFRlkgdmFsaWRhdG9yIHNldLRzdWJtaXRfcmVwb3J0X2VxdWl2b2NhdGlvbl91bnNpZ25lZF9leHRyaW5zaWMISGVxdWl2b2NhdGlvbl9wcm9vZl0HPGtleV9vd25lcl9wcm9vZpUOWQ4gEQEgU3VibWl0cyBhbiB1bnNpZ25lZCBleHRyaW5zaWMgdG8gcmVwb3J0IGFuIGVxdWl2b2NhdGlvbi4gVGhlIGNhbGxlcvggbXVzdCBwcm92aWRlIHRoZSBlcXVpdm9jYXRpb24gcHJvb2YgYW5kIGEga2V5IG93bmVyc2hpcCBwcm9vZvwgKHNob3VsZCBiZSBvYnRhaW5lZCB1c2luZyBgZ2VuZXJhdGVfa2V5X293bmVyc2hpcF9wcm9vZmApLiBUaGUFASBleHRyaW5zaWMgd2lsbCBiZSB1bnNpZ25lZCBhbmQgc2hvdWxkIG9ubHkgYmUgYWNjZXB0ZWQgZm9yIGxvY2FsFQEgYXV0aG9yc2hpcCAobm90IHRvIGJlIGJyb2FkY2FzdCB0byB0aGUgbmV0d29yaykuIFRoaXMgbWV0aG9kIHJldHVybnMJASBgTm9uZWAgd2hlbiBjcmVhdGlvbiBvZiB0aGUgZXh0cmluc2ljIGZhaWxzLCBlLmcuIGlmIGVxdWl2b2NhdGlvbgUBIHJlcG9ydGluZyBpcyBkaXNhYmxlZCBmb3IgdGhlIGdpdmVuIHJ1bnRpbWUgKGkuZS4gdGhpcyBtZXRob2QgaXMFASBoYXJkY29kZWQgdG8gcmV0dXJuIGBOb25lYCkuIE9ubHkgdXNlZnVsIGluIGFuIG9mZmNoYWluIGNvbnRleHQucGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2YIGHNldF9pZCwwYXV0aG9yaXR5X2lkTQKZDiwJASBHZW5lcmF0ZXMgYSBwcm9vZiBvZiBrZXkgb3duZXJzaGlwIGZvciB0aGUgZ2l2ZW4gYXV0aG9yaXR5IGluIHRoZfwgZ2l2ZW4gc2V0LiBBbiBleGFtcGxlIHVzYWdlIG9mIHRoaXMgbW9kdWxlIGlzIGNvdXBsZWQgd2l0aCB0aGUFASBzZXNzaW9uIGhpc3RvcmljYWwgbW9kdWxlIHRvIHByb3ZlIHRoYXQgYSBnaXZlbiBhdXRob3JpdHkga2V5IGlzDQEgdGllZCB0byBhIGdpdmVuIHN0YWtpbmcgaWRlbnRpdHkgZHVyaW5nIGEgc3BlY2lmaWMgc2Vzc2lvbi4gUHJvb2ZzEQEgb2Yga2V5IG93bmVyc2hpcCBhcmUgbmVjZXNzYXJ5IGZvciBzdWJtaXR0aW5nIGVxdWl2b2NhdGlvbiByZXBvcnRzLhEBIE5PVEU6IGV2ZW4gdGhvdWdoIHRoZSBBUEkgdGFrZXMgYSBgc2V0X2lkYCBhcyBwYXJhbWV0ZXIgdGhlIGN1cnJlbnQJASBpbXBsZW1lbnRhdGlvbnMgaWdub3JlcyB0aGlzIHBhcmFtZXRlciBhbmQgaW5zdGVhZCByZWxpZXMgb24gdGhpcw0BIG1ldGhvZCBiZWluZyBjYWxsZWQgYXQgdGhlIGNvcnJlY3QgYmxvY2sgaGVpZ2h0LCBpLmUuIGFueSBwb2ludCBhdBUBIHdoaWNoIHRoZSBnaXZlbiBzZXQgaWQgaXMgbGl2ZSBvbi1jaGFpbi4gRnV0dXJlIGltcGxlbWVudGF0aW9ucyB3aWxsDQEgaW5zdGVhZCB1c2UgaW5kZXhlZCBkYXRhIHRocm91Z2ggYW4gb2ZmY2hhaW4gd29ya2VyLCBub3QgcmVxdWlyaW5neCBvbGRlciBzdGF0ZXMgdG8gYmUgYXZhaWxhYmxlLgSAIEFQSSBuZWNlc3NhcnkgZm9yIEJFRUZZIHZvdGVycy4YTW1yQXBpFCBtbXJfcm9vdACdDgSMIFJldHVybiB0aGUgb24tY2hhaW4gTU1SIHJvb3QgaGFzaC44bW1yX2xlYWZfY291bnQApQ4EuCBSZXR1cm4gdGhlIG51bWJlciBvZiBNTVIgYmxvY2tzIGluIHRoZSBjaGFpbi44Z2VuZXJhdGVfcHJvb2YINGJsb2NrX251bWJlcnMJAlxiZXN0X2tub3duX2Jsb2NrX251bWJlco0CqQ4IaQEgR2VuZXJhdGUgTU1SIHByb29mIGZvciBhIHNlcmllcyBvZiBibG9jayBudW1iZXJzLiBJZiBgYmVzdF9rbm93bl9ibG9ja19udW1iZXIgPSBTb21lKG4pYCxFASB1c2UgaGlzdG9yaWNhbCBNTVIgc3RhdGUgYXQgZ2l2ZW4gYmxvY2sgaGVpZ2h0IGBuYC4gRWxzZSwgdXNlIGN1cnJlbnQgTU1SIHN0YXRlLjB2ZXJpZnlfcHJvb2YIGGxlYXZlc7EOFHByb29muQ69DhT0IFZlcmlmeSBNTVIgcHJvb2YgYWdhaW5zdCBvbi1jaGFpbiBNTVIgZm9yIGEgYmF0Y2ggb2YgbGVhdmVzLgBxASBOb3RlIHRoaXMgZnVuY3Rpb24gd2lsbCB1c2Ugb24tY2hhaW4gTU1SIHJvb3QgaGFzaCBhbmQgY2hlY2sgaWYgdGhlIHByb29mIG1hdGNoZXMgdGhlIGhhc2gubQEgTm90ZSwgdGhlIGxlYXZlcyBzaG91bGQgYmUgc29ydGVkIHN1Y2ggdGhhdCBjb3JyZXNwb25kaW5nIGxlYXZlcyBhbmQgbGVhZiBpbmRpY2VzIGhhdmUgdGhlhQEgc2FtZSBwb3NpdGlvbiBpbiBib3RoIHRoZSBgbGVhdmVzYCB2ZWN0b3IgYW5kIHRoZSBgbGVhZl9pbmRpY2VzYCB2ZWN0b3IgY29udGFpbmVkIGluIHRoZSBbUHJvb2ZdWHZlcmlmeV9wcm9vZl9zdGF0ZWxlc3MMEHJvb3QwGGxlYXZlc7EOFHByb29muQ69DhwBASBWZXJpZnkgTU1SIHByb29mIGFnYWluc3QgZ2l2ZW4gcm9vdCBoYXNoIGZvciBhIGJhdGNoIG9mIGxlYXZlcy4A/CBOb3RlIHRoaXMgZnVuY3Rpb24gZG9lcyBub3QgcmVxdWlyZSBhbnkgb24tY2hhaW4gc3RvcmFnZSAtIHRoZbwgcHJvb2YgaXMgdmVyaWZpZWQgYWdhaW5zdCBnaXZlbiBNTVIgcm9vdCBoYXNoLgBtASBOb3RlLCB0aGUgbGVhdmVzIHNob3VsZCBiZSBzb3J0ZWQgc3VjaCB0aGF0IGNvcnJlc3BvbmRpbmcgbGVhdmVzIGFuZCBsZWFmIGluZGljZXMgaGF2ZSB0aGWFASBzYW1lIHBvc2l0aW9uIGluIGJvdGggdGhlIGBsZWF2ZXNgIHZlY3RvciBhbmQgdGhlIGBsZWFmX2luZGljZXNgIHZlY3RvciBjb250YWluZWQgaW4gdGhlIFtQcm9vZl0EhCBBUEkgdG8gaW50ZXJhY3Qgd2l0aCBNTVIgcGFsbGV0LixCZWVmeU1tckFwaQhMYXV0aG9yaXR5X3NldF9wcm9vZgBlDQTcIFJldHVybiB0aGUgY3VycmVudGx5IGFjdGl2ZSBCRUVGWSBhdXRob3JpdHkgc2V0IHByb29mLmBuZXh0X2F1dGhvcml0eV9zZXRfcHJvb2YAZQ0EyCBSZXR1cm4gdGhlIG5leHQvcXVldWVkIEJFRUZZIGF1dGhvcml0eSBzZXQgcHJvb2YuBJAgQVBJIHVzZWZ1bCBmb3IgQkVFRlkgbGlnaHQgY2xpZW50cy4oR3JhbmRwYUFwaRBMZ3JhbmRwYV9hdXRob3JpdGllcwDMGD0BIEdldCB0aGUgY3VycmVudCBHUkFORFBBIGF1dGhvcml0aWVzIGFuZCB3ZWlnaHRzLiBUaGlzIHNob3VsZCBub3QgY2hhbmdlIGV4Y2VwdB0BIGZvciB3aGVuIGNoYW5nZXMgYXJlIHNjaGVkdWxlZCBhbmQgdGhlIGNvcnJlc3BvbmRpbmcgZGVsYXkgaGFzIHBhc3NlZC4ANQEgV2hlbiBjYWxsZWQgYXQgYmxvY2sgQiwgaXQgd2lsbCByZXR1cm4gdGhlIHNldCBvZiBhdXRob3JpdGllcyB0aGF0IHNob3VsZCBiZT0BIHVzZWQgdG8gZmluYWxpemUgZGVzY2VuZGFudHMgb2YgdGhpcyBibG9jayAoQisxLCBCKzIsIC4uLikuIFRoZSBibG9jayBCIGl0c2VsZsAgaXMgZmluYWxpemVkIGJ5IHRoZSBhdXRob3JpdGllcyBmcm9tIGJsb2NrIEItMS60c3VibWl0X3JlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWRfZXh0cmluc2ljCEhlcXVpdm9jYXRpb25fcHJvb2ZdAjxrZXlfb3duZXJfcHJvb2bBDlkOIBEBIFN1Ym1pdHMgYW4gdW5zaWduZWQgZXh0cmluc2ljIHRvIHJlcG9ydCBhbiBlcXVpdm9jYXRpb24uIFRoZSBjYWxsZXL4IG11c3QgcHJvdmlkZSB0aGUgZXF1aXZvY2F0aW9uIHByb29mIGFuZCBhIGtleSBvd25lcnNoaXAgcHJvb2b8IChzaG91bGQgYmUgb2J0YWluZWQgdXNpbmcgYGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2ZgKS4gVGhlBQEgZXh0cmluc2ljIHdpbGwgYmUgdW5zaWduZWQgYW5kIHNob3VsZCBvbmx5IGJlIGFjY2VwdGVkIGZvciBsb2NhbBUBIGF1dGhvcnNoaXAgKG5vdCB0byBiZSBicm9hZGNhc3QgdG8gdGhlIG5ldHdvcmspLiBUaGlzIG1ldGhvZCByZXR1cm5zCQEgYE5vbmVgIHdoZW4gY3JlYXRpb24gb2YgdGhlIGV4dHJpbnNpYyBmYWlscywgZS5nLiBpZiBlcXVpdm9jYXRpb24FASByZXBvcnRpbmcgaXMgZGlzYWJsZWQgZm9yIHRoZSBnaXZlbiBydW50aW1lIChpLmUuIHRoaXMgbWV0aG9kIGlzBQEgaGFyZGNvZGVkIHRvIHJldHVybiBgTm9uZWApLiBPbmx5IHVzZWZ1bCBpbiBhbiBvZmZjaGFpbiBjb250ZXh0LnBnZW5lcmF0ZV9rZXlfb3duZXJzaGlwX3Byb29mCBhzZXRfaWQsMGF1dGhvcml0eV9pZNTFDiwJASBHZW5lcmF0ZXMgYSBwcm9vZiBvZiBrZXkgb3duZXJzaGlwIGZvciB0aGUgZ2l2ZW4gYXV0aG9yaXR5IGluIHRoZfwgZ2l2ZW4gc2V0LiBBbiBleGFtcGxlIHVzYWdlIG9mIHRoaXMgbW9kdWxlIGlzIGNvdXBsZWQgd2l0aCB0aGUFASBzZXNzaW9uIGhpc3RvcmljYWwgbW9kdWxlIHRvIHByb3ZlIHRoYXQgYSBnaXZlbiBhdXRob3JpdHkga2V5IGlzDQEgdGllZCB0byBhIGdpdmVuIHN0YWtpbmcgaWRlbnRpdHkgZHVyaW5nIGEgc3BlY2lmaWMgc2Vzc2lvbi4gUHJvb2ZzEQEgb2Yga2V5IG93bmVyc2hpcCBhcmUgbmVjZXNzYXJ5IGZvciBzdWJtaXR0aW5nIGVxdWl2b2NhdGlvbiByZXBvcnRzLhEBIE5PVEU6IGV2ZW4gdGhvdWdoIHRoZSBBUEkgdGFrZXMgYSBgc2V0X2lkYCBhcyBwYXJhbWV0ZXIgdGhlIGN1cnJlbnT8IGltcGxlbWVudGF0aW9ucyBpZ25vcmUgdGhpcyBwYXJhbWV0ZXIgYW5kIGluc3RlYWQgcmVseSBvbiB0aGlzDQEgbWV0aG9kIGJlaW5nIGNhbGxlZCBhdCB0aGUgY29ycmVjdCBibG9jayBoZWlnaHQsIGkuZS4gYW55IHBvaW50IGF0FQEgd2hpY2ggdGhlIGdpdmVuIHNldCBpZCBpcyBsaXZlIG9uLWNoYWluLiBGdXR1cmUgaW1wbGVtZW50YXRpb25zIHdpbGwNASBpbnN0ZWFkIHVzZSBpbmRleGVkIGRhdGEgdGhyb3VnaCBhbiBvZmZjaGFpbiB3b3JrZXIsIG5vdCByZXF1aXJpbmd4IG9sZGVyIHN0YXRlcyB0byBiZSBhdmFpbGFibGUuOGN1cnJlbnRfc2V0X2lkACwEmCBHZXQgY3VycmVudCBHUkFORFBBIGF1dGhvcml0eSBzZXQgaWQuJAEBIEFQSXMgZm9yIGludGVncmF0aW5nIHRoZSBHUkFORFBBIGZpbmFsaXR5IGdhZGdldCBpbnRvIHJ1bnRpbWVzLsAgVGhpcyBzaG91bGQgYmUgaW1wbGVtZW50ZWQgb24gdGhlIHJ1bnRpbWUgc2lkZS4AFQEgVGhpcyBpcyBwcmltYXJpbHkgdXNlZCBmb3IgbmVnb3RpYXRpbmcgYXV0aG9yaXR5LXNldCBjaGFuZ2VzIGZvciB0aGUNASBnYWRnZXQuIEdSQU5EUEEgdXNlcyBhIHNpZ25hbGluZyBtb2RlbCBvZiBjaGFuZ2luZyBhdXRob3JpdHkgc2V0czoxASBjaGFuZ2VzIHNob3VsZCBiZSBzaWduYWxlZCB3aXRoIGEgZGVsYXkgb2YgTiBibG9ja3MsIGFuZCB0aGVuIGF1dG9tYXRpY2FsbHnkIGFwcGxpZWQgaW4gdGhlIHJ1bnRpbWUgYWZ0ZXIgdGhvc2UgTiBibG9ja3MgaGF2ZSBwYXNzZWQuAPwgVGhlIGNvbnNlbnN1cyBwcm90b2NvbCB3aWxsIGNvb3JkaW5hdGUgdGhlIGhhbmRvZmYgZXh0ZXJuYWxseS4cQmFiZUFwaRg0Y29uZmlndXJhdGlvbgDJDgSMIFJldHVybiB0aGUgY29uZmlndXJhdGlvbiBmb3IgQkFCRS5MY3VycmVudF9lcG9jaF9zdGFydADNAQTEIFJldHVybnMgdGhlIHNsb3QgdGhhdCBzdGFydGVkIHRoZSBjdXJyZW50IGVwb2NoLjRjdXJyZW50X2Vwb2NoAM0OBMQgUmV0dXJucyBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlIGN1cnJlbnQgZXBvY2guKG5leHRfZXBvY2gAzQ4IAQEgUmV0dXJucyBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdGhlIG5leHQgZXBvY2ggKHdoaWNoIHdhcyBhbHJlYWR5XCBwcmV2aW91c2x5IGFubm91bmNlZCkucGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2YIEHNsb3TNATBhdXRob3JpdHlfaWTJAdEOLAkBIEdlbmVyYXRlcyBhIHByb29mIG9mIGtleSBvd25lcnNoaXAgZm9yIHRoZSBnaXZlbiBhdXRob3JpdHkgaW4gdGhlDQEgY3VycmVudCBlcG9jaC4gQW4gZXhhbXBsZSB1c2FnZSBvZiB0aGlzIG1vZHVsZSBpcyBjb3VwbGVkIHdpdGggdGhlBQEgc2Vzc2lvbiBoaXN0b3JpY2FsIG1vZHVsZSB0byBwcm92ZSB0aGF0IGEgZ2l2ZW4gYXV0aG9yaXR5IGtleSBpcw0BIHRpZWQgdG8gYSBnaXZlbiBzdGFraW5nIGlkZW50aXR5IGR1cmluZyBhIHNwZWNpZmljIHNlc3Npb24uIFByb29mcxEBIG9mIGtleSBvd25lcnNoaXAgYXJlIG5lY2Vzc2FyeSBmb3Igc3VibWl0dGluZyBlcXVpdm9jYXRpb24gcmVwb3J0cy4JASBOT1RFOiBldmVuIHRob3VnaCB0aGUgQVBJIHRha2VzIGEgYHNsb3RgIGFzIHBhcmFtZXRlciB0aGUgY3VycmVudAkBIGltcGxlbWVudGF0aW9ucyBpZ25vcmVzIHRoaXMgcGFyYW1ldGVyIGFuZCBpbnN0ZWFkIHJlbGllcyBvbiB0aGlzDQEgbWV0aG9kIGJlaW5nIGNhbGxlZCBhdCB0aGUgY29ycmVjdCBibG9jayBoZWlnaHQsIGkuZS4gYW55IHBvaW50IGF08CB3aGljaCB0aGUgZXBvY2ggZm9yIHRoZSBnaXZlbiBzbG90IGlzIGxpdmUgb24tY2hhaW4uIEZ1dHVyZQkBIGltcGxlbWVudGF0aW9ucyB3aWxsIGluc3RlYWQgdXNlIGluZGV4ZWQgZGF0YSB0aHJvdWdoIGFuIG9mZmNoYWlu0CB3b3JrZXIsIG5vdCByZXF1aXJpbmcgb2xkZXIgc3RhdGVzIHRvIGJlIGF2YWlsYWJsZS60c3VibWl0X3JlcG9ydF9lcXVpdm9jYXRpb25fdW5zaWduZWRfZXh0cmluc2ljCEhlcXVpdm9jYXRpb25fcHJvb2bBATxrZXlfb3duZXJfcHJvb2bVDlkOIBEBIFN1Ym1pdHMgYW4gdW5zaWduZWQgZXh0cmluc2ljIHRvIHJlcG9ydCBhbiBlcXVpdm9jYXRpb24uIFRoZSBjYWxsZXL4IG11c3QgcHJvdmlkZSB0aGUgZXF1aXZvY2F0aW9uIHByb29mIGFuZCBhIGtleSBvd25lcnNoaXAgcHJvb2b8IChzaG91bGQgYmUgb2J0YWluZWQgdXNpbmcgYGdlbmVyYXRlX2tleV9vd25lcnNoaXBfcHJvb2ZgKS4gVGhlBQEgZXh0cmluc2ljIHdpbGwgYmUgdW5zaWduZWQgYW5kIHNob3VsZCBvbmx5IGJlIGFjY2VwdGVkIGZvciBsb2NhbBUBIGF1dGhvcnNoaXAgKG5vdCB0byBiZSBicm9hZGNhc3QgdG8gdGhlIG5ldHdvcmspLiBUaGlzIG1ldGhvZCByZXR1cm5zCQEgYE5vbmVgIHdoZW4gY3JlYXRpb24gb2YgdGhlIGV4dHJpbnNpYyBmYWlscywgZS5nLiBpZiBlcXVpdm9jYXRpb24FASByZXBvcnRpbmcgaXMgZGlzYWJsZWQgZm9yIHRoZSBnaXZlbiBydW50aW1lIChpLmUuIHRoaXMgbWV0aG9kIGlzBQEgaGFyZGNvZGVkIHRvIHJldHVybiBgTm9uZWApLiBPbmx5IHVzZWZ1bCBpbiBhbiBvZmZjaGFpbiBjb250ZXh0LgS4IEFQSSBuZWNlc3NhcnkgZm9yIGJsb2NrIGF1dGhvcnNoaXAgd2l0aCBCQUJFLlRBdXRob3JpdHlEaXNjb3ZlcnlBcGkELGF1dGhvcml0aWVzAMkJBBkBIFJldHJpZXZlIGF1dGhvcml0eSBpZGVudGlmaWVycyBvZiB0aGUgY3VycmVudCBhbmQgbmV4dCBhdXRob3JpdHkgc2V0LhB0IFRoZSBhdXRob3JpdHkgZGlzY292ZXJ5IGFwaS4AUQEgVGhpcyBhcGkgaXMgdXNlZCBieSB0aGUgYGNsaWVudC9hdXRob3JpdHktZGlzY292ZXJ5YCBtb2R1bGUgdG8gcmV0cmlldmUgaWRlbnRpZmllcnOcIG9mIHRoZSBjdXJyZW50IGFuZCBuZXh0IGF1dGhvcml0eSBzZXQuLFNlc3Npb25LZXlzCFRnZW5lcmF0ZV9zZXNzaW9uX2tleXMEEHNlZWQRDTQcFQEgR2VuZXJhdGUgYSBzZXQgb2Ygc2Vzc2lvbiBrZXlzIHdpdGggb3B0aW9uYWxseSB1c2luZyB0aGUgZ2l2ZW4gc2VlZC4JASBUaGUga2V5cyBzaG91bGQgYmUgc3RvcmVkIHdpdGhpbiB0aGUga2V5c3RvcmUgZXhwb3NlZCB2aWEgcnVudGltZTwgZXh0ZXJuYWxpdGllcy4AsCBUaGUgc2VlZCBuZWVkcyB0byBiZSBhIHZhbGlkIGB1dGY4YCBzdHJpbmcuANAgUmV0dXJucyB0aGUgY29uY2F0ZW5hdGVkIFNDQUxFIGVuY29kZWQgcHVibGljIGtleXMuTGRlY29kZV9zZXNzaW9uX2tleXMEHGVuY29kZWQ02Q4MmCBEZWNvZGUgdGhlIGdpdmVuIHB1YmxpYyBzZXNzaW9uIGtleXMuANwgUmV0dXJucyB0aGUgbGlzdCBvZiBwdWJsaWMgcmF3IHB1YmxpYyBrZXlzICsga2V5IHR5cGUuBGggU2Vzc2lvbiBrZXlzIHJ1bnRpbWUgYXBpLjxBY2NvdW50Tm9uY2VBcGkENGFjY291bnRfbm9uY2UEHGFjY291bnQAEATAIEdldCBjdXJyZW50IGFjY291bnQgbm9uY2Ugb2YgZ2l2ZW4gYEFjY291bnRJZGAuBIAgVGhlIEFQSSB0byBxdWVyeSBhY2NvdW50IG5vbmNlLlRUcmFuc2FjdGlvblBheW1lbnRBcGkQKHF1ZXJ5X2luZm8IDHV4dKUNDGxlbhDlDgBEcXVlcnlfZmVlX2RldGFpbHMIDHV4dKUNDGxlbhDpDgBMcXVlcnlfd2VpZ2h0X3RvX2ZlZQQYd2VpZ2h0JBgATHF1ZXJ5X2xlbmd0aF90b19mZWUEGGxlbmd0aBAYAABkVHJhbnNhY3Rpb25QYXltZW50Q2FsbEFwaRA8cXVlcnlfY2FsbF9pbmZvCBBjYWxsmQEMbGVuEOUOBEkBIFF1ZXJ5IGluZm9ybWF0aW9uIG9mIGEgZGlzcGF0Y2ggY2xhc3MsIHdlaWdodCwgYW5kIGZlZSBvZiBhIGdpdmVuIGVuY29kZWQgYENhbGxgLlhxdWVyeV9jYWxsX2ZlZV9kZXRhaWxzCBBjYWxsmQEMbGVuEOkOBLQgUXVlcnkgZmVlIGRldGFpbHMgb2YgYSBnaXZlbiBlbmNvZGVkIGBDYWxsYC5McXVlcnlfd2VpZ2h0X3RvX2ZlZQQYd2VpZ2h0JBgEAQEgUXVlcnkgdGhlIG91dHB1dCBvZiB0aGUgY3VycmVudCBgV2VpZ2h0VG9GZWVgIGdpdmVuIHNvbWUgaW5wdXQuTHF1ZXJ5X2xlbmd0aF90b19mZWUEGGxlbmd0aBAYBAEBIFF1ZXJ5IHRoZSBvdXRwdXQgb2YgdGhlIGN1cnJlbnQgYExlbmd0aFRvRmVlYCBnaXZlbiBzb21lIGlucHV0LgA4R2VuZXNpc0J1aWxkZXIIVGNyZWF0ZV9kZWZhdWx0X2NvbmZpZwA0EA0BIENyZWF0ZXMgdGhlIGRlZmF1bHQgYEdlbmVzaXNDb25maWdgIGFuZCByZXR1cm5zIGl0IGFzIGEgSlNPTiBibG9iLgCxASBUaGlzIGZ1bmN0aW9uIGluc3RhbnRpYXRlcyB0aGUgZGVmYXVsdCBgR2VuZXNpc0NvbmZpZ2Agc3RydWN0IGZvciB0aGUgcnVudGltZSBhbmQgc2VyaWFsaXplcyBpdCBpbnRvIGEgSlNPToEBIGJsb2IuIEl0IHJldHVybnMgYSBgVmVjPHU4PmAgY29udGFpbmluZyB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGUgZGVmYXVsdCBgR2VuZXNpc0NvbmZpZ2AuMGJ1aWxkX2NvbmZpZwQQanNvbjT1DhxtASBCdWlsZCBgR2VuZXNpc0NvbmZpZ2AgZnJvbSBhIEpTT04gYmxvYiBub3QgdXNpbmcgYW55IGRlZmF1bHRzIGFuZCBzdG9yZSBpdCBpbiB0aGUgc3RvcmFnZS4ArQEgVGhpcyBmdW5jdGlvbiBkZXNlcmlhbGl6ZXMgdGhlIGZ1bGwgYEdlbmVzaXNDb25maWdgIGZyb20gdGhlIGdpdmVuIEpTT04gYmxvYiBhbmQgcHV0cyBpdCBpbnRvIHRoZSBzdG9yYWdlLqUBIElmIHRoZSBwcm92aWRlZCBKU09OIGJsb2IgaXMgaW5jb3JyZWN0IG9yIGluY29tcGxldGUgb3IgdGhlIGRlc2VyaWFsaXphdGlvbiBmYWlscywgYW4gZXJyb3IgaXMgcmV0dXJuZWQuEQEgSXQgaXMgcmVjb21tZW5kZWQgdG8gbG9nIGFueSBlcnJvcnMgZW5jb3VudGVyZWQgZHVyaW5nIHRoZSBwcm9jZXNzLgCdASBQbGVhc2Ugbm90ZSB0aGF0IHByb3ZpZGVkIGpzb24gYmxvYiBtdXN0IGNvbnRhaW4gYWxsIGBHZW5lc2lzQ29uZmlnYCBmaWVsZHMsIG5vIGRlZmF1bHRzIHdpbGwgYmUgdXNlZC4EzCBBUEkgdG8gaW50ZXJhY3Qgd2l0aCBHZW5lc2lzQ29uZmlnIGZvciB0aGUgcnVudGltZZkBUPkOAA==",B=A;export{B as default};
