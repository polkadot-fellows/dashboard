var A="",G=A;export{G as default};
